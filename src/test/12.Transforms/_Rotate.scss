@include describe('12.Transforms') {
  @include describe('Rotate') {
    @include describe('Positive') {
      @include describe('Basic') {
        @include it('rotate-0') {
          @include assert {
            @include output {
              @include rotate-0;
              @include utils_reset-tw;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it('rotate-1') {
          @include assert {
            @include output {
              @include rotate-1;
              @include utils_reset-tw;
            }

            @include expect {
              transform: translate(0, 0) rotate(1deg) skewX(0deg) skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it('rotate-2') {
          @include assert {
            @include output {
              @include rotate-2;
              @include utils_reset-tw;
            }

            @include expect {
              transform: translate(0, 0) rotate(2deg) skewX(0deg) skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it('rotate-3') {
          @include assert {
            @include output {
              @include rotate-3;
              @include utils_reset-tw;
            }

            @include expect {
              transform: translate(0, 0) rotate(3deg) skewX(0deg) skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it('rotate-6') {
          @include assert {
            @include output {
              @include rotate-6;
              @include utils_reset-tw;
            }

            @include expect {
              transform: translate(0, 0) rotate(6deg) skewX(0deg) skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it('rotate-12') {
          @include assert {
            @include output {
              @include rotate-12;
              @include utils_reset-tw;
            }

            @include expect {
              transform: translate(0, 0) rotate(12deg) skewX(0deg) skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it('rotate-45') {
          @include assert {
            @include output {
              @include rotate-45;
              @include utils_reset-tw;
            }

            @include expect {
              transform: translate(0, 0) rotate(45deg) skewX(0deg) skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it('rotate-90') {
          @include assert {
            @include output {
              @include rotate-90;
              @include utils_reset-tw;
            }

            @include expect {
              transform: translate(0, 0) rotate(90deg) skewX(0deg) skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it('rotate-180') {
          @include assert {
            @include output {
              @include rotate-180;
              @include utils_reset-tw;
            }

            @include expect {
              transform: translate(0, 0) rotate(180deg) skewX(0deg) skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }
      }

      @include describe('Custom') {
        @include it('rotate-(17deg)') {
          @include assert {
            @include output {
              @include rotate-(17deg);
              @include utils_reset-tw;
            }

            @include expect {
              transform: translate(0, 0) rotate(17deg) skewX(0deg) skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }
      }
    }

    @include describe('Negative') {
      @include describe('Basic') {
        @include it('-rotate-0') {
          @include assert {
            @include output {
              @include \-rotate-0;
              @include utils_reset-tw;
            }

            @include expect {
              transform: translate(0, 0) rotate(-0deg) skewX(0deg) skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it('-rotate-1') {
          @include assert {
            @include output {
              @include \-rotate-1;
              @include utils_reset-tw;
            }

            @include expect {
              transform: translate(0, 0) rotate(-1deg) skewX(0deg) skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it('-rotate-2') {
          @include assert {
            @include output {
              @include \-rotate-2;
              @include utils_reset-tw;
            }

            @include expect {
              transform: translate(0, 0) rotate(-2deg) skewX(0deg) skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it('-rotate-3') {
          @include assert {
            @include output {
              @include \-rotate-3;
              @include utils_reset-tw;
            }

            @include expect {
              transform: translate(0, 0) rotate(-3deg) skewX(0deg) skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it('-rotate-6') {
          @include assert {
            @include output {
              @include \-rotate-6;
              @include utils_reset-tw;
            }

            @include expect {
              transform: translate(0, 0) rotate(-6deg) skewX(0deg) skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it('-rotate-12') {
          @include assert {
            @include output {
              @include \-rotate-12;
              @include utils_reset-tw;
            }

            @include expect {
              transform: translate(0, 0) rotate(-12deg) skewX(0deg) skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it('-rotate-45') {
          @include assert {
            @include output {
              @include \-rotate-45;
              @include utils_reset-tw;
            }

            @include expect {
              transform: translate(0, 0) rotate(-45deg) skewX(0deg) skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it('-rotate-90') {
          @include assert {
            @include output {
              @include \-rotate-90;
              @include utils_reset-tw;
            }

            @include expect {
              transform: translate(0, 0) rotate(-90deg) skewX(0deg) skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it('-rotate-180') {
          @include assert {
            @include output {
              @include \-rotate-180;
              @include utils_reset-tw;
            }

            @include expect {
              transform: translate(0, 0) rotate(-180deg) skewX(0deg) skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }
      }

      @include describe('Custom') {
        @include it('-rotate-(17deg)') {
          @include assert {
            @include output {
              @include \-rotate-(17deg);
              @include utils_reset-tw;
            }

            @include expect {
              transform: translate(0, 0) rotate(-17deg) skewX(0deg) skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }
      }
    }
  }
}
