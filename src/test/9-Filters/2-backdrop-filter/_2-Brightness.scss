@use "true" as *;
@use "../../style" as *;

@include describe("9-Filters") {
  @include describe("2-Backdrop Brightness") {
    @include describe("Basic") {
      @include it("backdrop-brightness-0") {
        @include assert {
          @include output {
            @include backdrop-brightness-0;
          }

          @include expect {
            --tw-backdrop-brightness: brightness(0%);
            backdrop-filter: var(--tw-backdrop-blur,)
              var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,)
              var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,)
              var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,)
              var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
          }
        }
      }

      @include it("backdrop-brightness-50") {
        @include assert {
          @include output {
            @include backdrop-brightness-50;
          }

          @include expect {
            --tw-backdrop-brightness: brightness(50%);
            backdrop-filter: var(--tw-backdrop-blur,)
              var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,)
              var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,)
              var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,)
              var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
          }
        }
      }

      @include it("backdrop-brightness-75") {
        @include assert {
          @include output {
            @include backdrop-brightness-75;
          }

          @include expect {
            --tw-backdrop-brightness: brightness(75%);
            backdrop-filter: var(--tw-backdrop-blur,)
              var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,)
              var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,)
              var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,)
              var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
          }
        }
      }

      @include it("backdrop-brightness-90") {
        @include assert {
          @include output {
            @include backdrop-brightness-90;
          }

          @include expect {
            --tw-backdrop-brightness: brightness(90%);
            backdrop-filter: var(--tw-backdrop-blur,)
              var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,)
              var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,)
              var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,)
              var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
          }
        }
      }

      @include it("backdrop-brightness-95") {
        @include assert {
          @include output {
            @include backdrop-brightness-95;
          }

          @include expect {
            --tw-backdrop-brightness: brightness(95%);
            backdrop-filter: var(--tw-backdrop-blur,)
              var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,)
              var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,)
              var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,)
              var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
          }
        }
      }

      @include it("backdrop-brightness-100") {
        @include assert {
          @include output {
            @include backdrop-brightness-100;
          }

          @include expect {
            --tw-backdrop-brightness: brightness(100%);
            backdrop-filter: var(--tw-backdrop-blur,)
              var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,)
              var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,)
              var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,)
              var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
          }
        }
      }

      @include it("backdrop-brightness-105") {
        @include assert {
          @include output {
            @include backdrop-brightness-105;
          }

          @include expect {
            --tw-backdrop-brightness: brightness(105%);
            backdrop-filter: var(--tw-backdrop-blur,)
              var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,)
              var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,)
              var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,)
              var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
          }
        }
      }

      @include it("backdrop-brightness-110") {
        @include assert {
          @include output {
            @include backdrop-brightness-110;
          }

          @include expect {
            --tw-backdrop-brightness: brightness(110%);
            backdrop-filter: var(--tw-backdrop-blur,)
              var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,)
              var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,)
              var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,)
              var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
          }
        }
      }

      @include it("backdrop-brightness-125") {
        @include assert {
          @include output {
            @include backdrop-brightness-125;
          }

          @include expect {
            --tw-backdrop-brightness: brightness(125%);
            backdrop-filter: var(--tw-backdrop-blur,)
              var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,)
              var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,)
              var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,)
              var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
          }
        }
      }

      @include it("backdrop-brightness-150") {
        @include assert {
          @include output {
            @include backdrop-brightness-150;
          }

          @include expect {
            --tw-backdrop-brightness: brightness(150%);
            backdrop-filter: var(--tw-backdrop-blur,)
              var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,)
              var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,)
              var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,)
              var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
          }
        }
      }

      @include it("backdrop-brightness-200") {
        @include assert {
          @include output {
            @include backdrop-brightness-200;
          }

          @include expect {
            --tw-backdrop-brightness: brightness(200%);
            backdrop-filter: var(--tw-backdrop-blur,)
              var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,)
              var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,)
              var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,)
              var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
          }
        }
      }
    }

    @include describe("Custom") {
      @include it("backdrop-brightness-(1.75)") {
        @include assert {
          @include output {
            @include backdrop-brightness-(1.75);
          }

          @include expect {
            --tw-backdrop-brightness: brightness(1.75);
            backdrop-filter: var(--tw-backdrop-blur,)
              var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,)
              var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,)
              var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,)
              var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
          }
        }
      }
    }
  }
}
