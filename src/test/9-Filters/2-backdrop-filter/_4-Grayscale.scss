@use "true" as *;
@use "../../style" as *;

@include describe("9-Filters") {
  @include describe("4-Backdrop Grayscale") {
    @include describe("Basic") {
      @include it("backdrop-grayscale-0") {
        @include assert {
          @include output {
            @include backdrop-grayscale-0;
          }

          @include expect {
            --tw-backdrop-grayscale: grayscale(0%);
            backdrop-filter: var(--tw-backdrop-blur,)
              var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,)
              var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,)
              var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,)
              var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
          }
        }
      }

      @include it("backdrop-grayscale") {
        @include assert {
          @include output {
            @include backdrop-grayscale;
          }

          @include expect {
            --tw-backdrop-grayscale: grayscale(100%);
            backdrop-filter: var(--tw-backdrop-blur,)
              var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,)
              var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,)
              var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,)
              var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
          }
        }
      }
    }

    @include describe("Custom") {
      @include it("backdrop-grayscale-(.5)") {
        @include assert {
          @include output {
            @include backdrop-grayscale-(0.5);
          }

          @include expect {
            --tw-backdrop-grayscale: grayscale(0.5);
            backdrop-filter: var(--tw-backdrop-blur,)
              var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,)
              var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,)
              var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,)
              var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
          }
        }
      }
    }
  }
}
