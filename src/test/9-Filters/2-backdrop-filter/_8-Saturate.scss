@use "true" as *;
@use "../../style" as *;

@include describe("9-Filters") {
  @include describe("8-Backdrop Saturate") {
    @include describe("Basic") {
      @include it("backdrop-saturate-0") {
        @include assert {
          @include output {
            @include backdrop-saturate-0;
          }

          @include expect {
            --tw-backdrop-saturate: saturate(0%);
            backdrop-filter: var(--tw-backdrop-blur,)
              var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,)
              var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,)
              var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,)
              var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
          }
        }
      }

      @include it("backdrop-saturate-50") {
        @include assert {
          @include output {
            @include backdrop-saturate-50;
          }

          @include expect {
            --tw-backdrop-saturate: saturate(50%);
            backdrop-filter: var(--tw-backdrop-blur,)
              var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,)
              var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,)
              var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,)
              var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
          }
        }
      }

      @include it("backdrop-saturate-100") {
        @include assert {
          @include output {
            @include backdrop-saturate-100;
          }

          @include expect {
            --tw-backdrop-saturate: saturate(100%);
            backdrop-filter: var(--tw-backdrop-blur,)
              var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,)
              var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,)
              var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,)
              var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
          }
        }
      }

      @include it("backdrop-saturate-150") {
        @include assert {
          @include output {
            @include backdrop-saturate-150;
          }

          @include expect {
            --tw-backdrop-saturate: saturate(150%);
            backdrop-filter: var(--tw-backdrop-blur,)
              var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,)
              var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,)
              var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,)
              var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
          }
        }
      }

      @include it("backdrop-saturate-200") {
        @include assert {
          @include output {
            @include backdrop-saturate-200;
          }

          @include expect {
            --tw-backdrop-saturate: saturate(200%);
            backdrop-filter: var(--tw-backdrop-blur,)
              var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,)
              var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,)
              var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,)
              var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
          }
        }
      }
    }

    @include describe("Custom") {
      @include it("backdrop-saturate-(.25)") {
        @include assert {
          @include output {
            @include backdrop-saturate-(0.25);
          }

          @include expect {
            --tw-backdrop-saturate: saturate(0.25);
            backdrop-filter: var(--tw-backdrop-blur,)
              var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,)
              var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,)
              var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,)
              var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
          }
        }
      }
    }
  }
}
