@use "true" as *;
@use "../../style" as *;

@include describe("9-Filters") {
  @include describe("2-Brightness") {
    @include describe("Basic") {
      @include it("brightness-0") {
        @include assert {
          @include output {
            @include brightness-0;
          }

          @include expect {
            --tw-brightness: brightness(0);
            filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,)
              var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,)
              var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
          }
        }
      }

      @include it("brightness-50") {
        @include assert {
          @include output {
            @include brightness-50;
          }

          @include expect {
            --tw-brightness: brightness(0.5);
            filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,)
              var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,)
              var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
          }
        }
      }

      @include it("brightness-75") {
        @include assert {
          @include output {
            @include brightness-75;
          }

          @include expect {
            --tw-brightness: brightness(0.75);
            filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,)
              var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,)
              var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
          }
        }
      }

      @include it("brightness-90") {
        @include assert {
          @include output {
            @include brightness-90;
          }

          @include expect {
            --tw-brightness: brightness(0.9);
            filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,)
              var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,)
              var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
          }
        }
      }

      @include it("brightness-95") {
        @include assert {
          @include output {
            @include brightness-95;
          }

          @include expect {
            --tw-brightness: brightness(0.95);
            filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,)
              var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,)
              var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
          }
        }
      }

      @include it("brightness-100") {
        @include assert {
          @include output {
            @include brightness-100;
          }

          @include expect {
            --tw-brightness: brightness(1);
            filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,)
              var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,)
              var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
          }
        }
      }

      @include it("brightness-105") {
        @include assert {
          @include output {
            @include brightness-105;
          }

          @include expect {
            --tw-brightness: brightness(1.05);
            filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,)
              var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,)
              var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
          }
        }
      }

      @include it("brightness-110") {
        @include assert {
          @include output {
            @include brightness-110;
          }

          @include expect {
            --tw-brightness: brightness(1.1);
            filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,)
              var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,)
              var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
          }
        }
      }

      @include it("brightness-125") {
        @include assert {
          @include output {
            @include brightness-125;
          }

          @include expect {
            --tw-brightness: brightness(1.25);
            filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,)
              var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,)
              var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
          }
        }
      }

      @include it("brightness-150") {
        @include assert {
          @include output {
            @include brightness-150;
          }

          @include expect {
            --tw-brightness: brightness(1.5);
            filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,)
              var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,)
              var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
          }
        }
      }

      @include it("brightness-200") {
        @include assert {
          @include output {
            @include brightness-200;
          }

          @include expect {
            --tw-brightness: brightness(2);
            filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,)
              var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,)
              var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
          }
        }
      }
    }

    @include describe("Custom") {
      @include it("brightness-(1.75)") {
        @include assert {
          @include output {
            @include brightness-(1.75);
          }

          @include expect {
            --tw-brightness: brightness(1.75);
            filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,)
              var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,)
              var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
          }
        }
      }
    }
  }
}
