@use "true" as *;
@use "../style" as *;

@include describe("3-Spacing") {
  @include describe("2-Margin") {
    @include describe("Positive") {
      @include describe("Basic") {
        @include it("m-0") {
          @include assert {
            @include output {
              @include m-0;
            }

            @include expect {
              margin: 0px;
            }
          }
        }

        @include it("mx-0") {
          @include assert {
            @include output {
              @include mx-0;
            }

            @include expect {
              margin-inline: 0px;
            }
          }
        }

        @include it("my-0") {
          @include assert {
            @include output {
              @include my-0;
            }

            @include expect {
              margin-block: 0px;
            }
          }
        }

        @include it("ms-0") {
          @include assert {
            @include output {
              @include ms-0;
            }

            @include expect {
              margin-inline-start: 0px;
            }
          }
        }

        @include it("me-0") {
          @include assert {
            @include output {
              @include me-0;
            }

            @include expect {
              margin-inline-end: 0px;
            }
          }
        }

        @include it("mt-0") {
          @include assert {
            @include output {
              @include mt-0;
            }

            @include expect {
              margin-top: 0px;
            }
          }
        }

        @include it("mr-0") {
          @include assert {
            @include output {
              @include mr-0;
            }

            @include expect {
              margin-right: 0px;
            }
          }
        }

        @include it("mb-0") {
          @include assert {
            @include output {
              @include mb-0;
            }

            @include expect {
              margin-bottom: 0px;
            }
          }
        }

        @include it("ml-0") {
          @include assert {
            @include output {
              @include ml-0;
            }

            @include expect {
              margin-left: 0px;
            }
          }
        }

        @include it("space-y-4") {
          @include assert {
            @include output {
              @include space-y-4;
            }

            @include expect {
              :where(& > :not(:last-child)) {
                --tw-space-y-reverse: 0;
                margin-block-start: calc(1rem * var(--tw-space-y-reverse));
                margin-block-end: calc(1rem * (1 - var(--tw-space-y-reverse)));
              }
            }
          }
        }

        @include it("space-x-4") {
          @include assert {
            @include output {
              @include space-x-4;
            }

            @include expect {
              :where(& > :not(:last-child)) {
                --tw-space-x-reverse: 0;
                margin-inline-start: calc(1rem * var(--tw-space-x-reverse));
                margin-inline-end: calc(1rem * (1 - var(--tw-space-x-reverse)));
              }
            }
          }
        }

        @include it("space-y-reverse") {
          @include assert {
            @include output {
              @include space-y-reverse;
            }

            @include expect {
              :where(& > :not(:last-child)) {
                --tw-space-y-reverse: 1 !important;
              }
            }
          }
        }

        @include it("space-x-reverse") {
          @include assert {
            @include output {
              @include space-x-reverse;
            }

            @include expect {
              :where(& > :not(:last-child)) {
                --tw-space-x-reverse: 1 !important;
              }
            }
          }
        }
      }

      @include describe("Custom") {
        @include it("m-(5px)") {
          @include assert {
            @include output {
              @include m-(5px);
            }

            @include expect {
              margin: 5px;
            }
          }
        }

        @include it("mx-(5px)") {
          @include assert {
            @include output {
              @include mx-(5px);
            }

            @include expect {
              margin-inline: 5px;
            }
          }
        }

        @include it("my-(5px)") {
          @include assert {
            @include output {
              @include my-(5px);
            }

            @include expect {
              margin-block: 5px;
            }
          }
        }

        @include it("ms-(5px)") {
          @include assert {
            @include output {
              @include ms-(5px);
            }

            @include expect {
              margin-inline-start: 5px;
            }
          }
        }

        @include it("me-(5px)") {
          @include assert {
            @include output {
              @include me-(5px);
            }

            @include expect {
              margin-inline-end: 5px;
            }
          }
        }

        @include it("mt-(5px)") {
          @include assert {
            @include output {
              @include mt-(5px);
            }

            @include expect {
              margin-top: 5px;
            }
          }
        }

        @include it("mr-(5px)") {
          @include assert {
            @include output {
              @include mr-(5px);
            }

            @include expect {
              margin-right: 5px;
            }
          }
        }

        @include it("mb-(5px)") {
          @include assert {
            @include output {
              @include mb-(5px);
            }

            @include expect {
              margin-bottom: 5px;
            }
          }
        }

        @include it("ml-(5px)") {
          @include assert {
            @include output {
              @include ml-(5px);
            }

            @include expect {
              margin-left: 5px;
            }
          }
        }

        @include it("space-y-(5px)") {
          @include assert {
            @include output {
              @include space-y-(5px);
            }

            @include expect {
              :where(& > :not(:last-child)) {
                --tw-space-y-reverse: 0;
                margin-block-start: calc(5px * var(--tw-space-y-reverse));
                margin-block-end: calc(5px * (1 - var(--tw-space-y-reverse)));
              }
            }
          }
        }

        @include it("space-x-(5px)") {
          @include assert {
            @include output {
              @include space-x-(5px);
            }

            @include expect {
              :where(& > :not(:last-child)) {
                --tw-space-x-reverse: 0;
                margin-inline-start: calc(5px * var(--tw-space-x-reverse));
                margin-inline-end: calc(5px * (1 - var(--tw-space-x-reverse)));
              }
            }
          }
        }
      }
    }

    @include describe("Negative") {
      @include describe("Basic") {
        @include it("-m-0") {
          @include assert {
            @include output {
              @include \-m-0;
            }

            @include expect {
              margin: 0px;
            }
          }
        }

        @include it("-mx-0") {
          @include assert {
            @include output {
              @include \-mx-0;
            }

            @include expect {
              margin-inline: 0px;
            }
          }
        }

        @include it("-my-0") {
          @include assert {
            @include output {
              @include \-my-0;
            }

            @include expect {
              margin-block: 0px;
            }
          }
        }

        @include it("-ms-0") {
          @include assert {
            @include output {
              @include \-ms-0;
            }

            @include expect {
              margin-inline-start: 0px;
            }
          }
        }

        @include it("-me-0") {
          @include assert {
            @include output {
              @include \-me-0;
            }

            @include expect {
              margin-inline-end: 0px;
            }
          }
        }

        @include it("-mt-0") {
          @include assert {
            @include output {
              @include \-mt-0;
            }

            @include expect {
              margin-top: 0px;
            }
          }
        }

        @include it("-mr-0") {
          @include assert {
            @include output {
              @include \-mr-0;
            }

            @include expect {
              margin-right: 0px;
            }
          }
        }

        @include it("-mb-0") {
          @include assert {
            @include output {
              @include \-mb-0;
            }

            @include expect {
              margin-bottom: 0px;
            }
          }
        }

        @include it("-ml-0") {
          @include assert {
            @include output {
              @include \-ml-0;
            }

            @include expect {
              margin-left: 0px;
            }
          }
        }

        @include it("-space-y-4") {
          @include assert {
            @include output {
              @include \-space-y-4;
            }

            @include expect {
              :where(& > :not(:last-child)) {
                --tw-space-y-reverse: 0;
                margin-block-start: calc(-1rem * var(--tw-space-y-reverse));
                margin-block-end: calc(-1rem * (1 - var(--tw-space-y-reverse)));
              }
            }
          }
        }

        @include it("-space-x-4") {
          @include assert {
            @include output {
              @include \-space-x-4;
            }

            @include expect {
              :where(& > :not(:last-child)) {
                --tw-space-x-reverse: 0;
                margin-inline-start: calc(-1rem * var(--tw-space-x-reverse));
                margin-inline-end: calc(
                  -1rem * (1 - var(--tw-space-x-reverse))
                );
              }
            }
          }
        }
      }

      @include describe("Custom") {
        @include it("-m-(5px)") {
          @include assert {
            @include output {
              @include \-m-(5px);
            }

            @include expect {
              margin: -5px;
            }
          }
        }

        @include it("-mx-(5px)") {
          @include assert {
            @include output {
              @include \-mx-(5px);
            }

            @include expect {
              margin-inline: -5px;
            }
          }
        }

        @include it("-my-(5px)") {
          @include assert {
            @include output {
              @include \-my-(5px);
            }

            @include expect {
              margin-block: -5px;
            }
          }
        }

        @include it("-ms-(5px)") {
          @include assert {
            @include output {
              @include \-ms-(5px);
            }

            @include expect {
              margin-inline-start: -5px;
            }
          }
        }

        @include it("-me-(5px)") {
          @include assert {
            @include output {
              @include \-me-(5px);
            }

            @include expect {
              margin-inline-end: -5px;
            }
          }
        }

        @include it("-mt-(5px)") {
          @include assert {
            @include output {
              @include \-mt-(5px);
            }

            @include expect {
              margin-top: -5px;
            }
          }
        }

        @include it("-mr-(5px)") {
          @include assert {
            @include output {
              @include \-mr-(5px);
            }

            @include expect {
              margin-right: -5px;
            }
          }
        }

        @include it("-mb-(5px)") {
          @include assert {
            @include output {
              @include \-mb-(5px);
            }

            @include expect {
              margin-bottom: -5px;
            }
          }
        }

        @include it("-ml-(5px)") {
          @include assert {
            @include output {
              @include \-ml-(5px);
            }

            @include expect {
              margin-left: -5px;
            }
          }
        }

        @include it("-space-y-(5px)") {
          @include assert {
            @include output {
              @include \-space-y-(5px);
            }

            @include expect {
              :where(& > :not(:last-child)) {
                --tw-space-y-reverse: 0;
                margin-block-start: calc(-5px * var(--tw-space-y-reverse));
                margin-block-end: calc(-5px * (1 - var(--tw-space-y-reverse)));
              }
            }
          }
        }

        @include it("-space-x-(5px)") {
          @include assert {
            @include output {
              @include \-space-x-(5px);
            }

            @include expect {
              :where(& > :not(:last-child)) {
                --tw-space-x-reverse: 0;
                margin-inline-start: calc(-5px * var(--tw-space-x-reverse));
                margin-inline-end: calc(-5px * (1 - var(--tw-space-x-reverse)));
              }
            }
          }
        }
      }
    }
  }
}
