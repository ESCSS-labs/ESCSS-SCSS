@use "true" as *;
@use "../style" as *;

@include describe("3-Spacing") {
  @include describe("3-Space Between") {
    @include describe("Positive") {
      @include describe("Basic") {
        @include it("space-y-4 ") {
          @include assert {
            @include output {
              @include space-y-4;
            }

            @include expect {
              :where(& > :not(:last-child)) {
                --tw-space-y-reverse: 0;
                margin-top: calc(1rem * (1 - var(--tw-space-y-reverse)));
                margin-bottom: calc(1rem * var(--tw-space-y-reverse));
              }
            }
          }
        }

        @include it("space-x-4 ") {
          @include assert {
            @include output {
              @include space-x-4;
            }

            @include expect {
              :where(& > :not(:last-child)) {
                --tw-space-x-reverse: 0;
                margin-left: calc(1rem * (1 - var(--tw-space-x-reverse)));
                margin-right: calc(1rem * var(--tw-space-x-reverse));
              }
            }
          }
        }

        @include it("space-y-reverse ") {
          @include assert {
            @include output {
              @include space-y-reverse;
            }

            @include expect {
              :where(& > :not(:last-child)) {
                --tw-space-y-reverse: 1 !important;
              }
            }
          }
        }

        @include it("space-x-reverse ") {
          @include assert {
            @include output {
              @include space-x-reverse;
            }

            @include expect {
              :where(& > :not(:last-child)) {
                --tw-space-x-reverse: 1 !important;
              }
            }
          }
        }
      }

      @include describe("Custom") {
        @include it("space-y-(5px) ") {
          @include assert {
            @include output {
              @include space-y-(5px);
            }

            @include expect {
              :where(& > :not(:last-child)) {
                --tw-space-y-reverse: 0;
                margin-top: calc(5px * (1 - var(--tw-space-y-reverse)));
                margin-bottom: calc(5px * var(--tw-space-y-reverse));
              }
            }
          }
        }

        @include it("space-x-(5px) ") {
          @include assert {
            @include output {
              @include space-x-(5px);
            }

            @include expect {
              :where(& > :not(:last-child)) {
                --tw-space-x-reverse: 0;
                margin-left: calc(5px * (1 - var(--tw-space-x-reverse)));
                margin-right: calc(5px * var(--tw-space-x-reverse));
              }
            }
          }
        }
      }
    }

    @include describe("Negative") {
      @include describe("Basic") {
        @include it("-space-y-4 ") {
          @include assert {
            @include output {
              @include \-space-y-4;
            }

            @include expect {
              :where(& > :not(:last-child)) {
                --tw-space-y-reverse: 0;
                margin-top: calc(-1rem * (1 - var(--tw-space-y-reverse)));
                margin-bottom: calc(-1rem * var(--tw-space-y-reverse));
              }
            }
          }
        }

        @include it("-space-x-4 ") {
          @include assert {
            @include output {
              @include \-space-x-4;
            }

            @include expect {
              :where(& > :not(:last-child)) {
                --tw-space-x-reverse: 0;
                margin-left: calc(-1rem * (1 - var(--tw-space-x-reverse)));
                margin-right: calc(-1rem * var(--tw-space-x-reverse));
              }
            }
          }
        }
      }

      @include describe("Custom") {
        @include it("-space-y-(5px) ") {
          @include assert {
            @include output {
              @include \-space-y-(5px);
            }

            @include expect {
              :where(& > :not(:last-child)) {
                --tw-space-y-reverse: 0;
                margin-top: calc(-5px * (1 - var(--tw-space-y-reverse)));
                margin-bottom: calc(-5px * var(--tw-space-y-reverse));
              }
            }
          }
        }

        @include it("-space-x-(5px) ") {
          @include assert {
            @include output {
              @include \-space-x-(5px);
            }

            @include expect {
              :where(& > :not(:last-child)) {
                --tw-space-x-reverse: 0;
                margin-left: calc(-5px * (1 - var(--tw-space-x-reverse)));
                margin-right: calc(-5px * var(--tw-space-x-reverse));
              }
            }
          }
        }
      }
    }
  }
}
