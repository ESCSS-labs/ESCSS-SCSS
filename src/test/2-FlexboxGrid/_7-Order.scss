@use "true" as *;
@use "../awaken" as *;

@include describe("2-Flexbox & Grid") {
  @include describe("7-Order") {
    @include describe("Positive") {
      @include describe("Basic") {
        @include it("order-1") {
          @include assert {
            @include output {
              @include order-1;
              
            }

            @include expect {
              order: 1;
            }
          }
        }

        @include it("order-2") {
          @include assert {
            @include output {
              @include order-2;
              
            }

            @include expect {
              order: 2;
            }
          }
        }

        @include it("order-3") {
          @include assert {
            @include output {
              @include order-3;
              
            }

            @include expect {
              order: 3;
            }
          }
        }

        @include it("order-4") {
          @include assert {
            @include output {
              @include order-4;
              
            }

            @include expect {
              order: 4;
            }
          }
        }

        @include it("order-5") {
          @include assert {
            @include output {
              @include order-5;
              
            }

            @include expect {
              order: 5;
            }
          }
        }

        @include it("order-6") {
          @include assert {
            @include output {
              @include order-6;
              
            }

            @include expect {
              order: 6;
            }
          }
        }

        @include it("order-7") {
          @include assert {
            @include output {
              @include order-7;
              
            }

            @include expect {
              order: 7;
            }
          }
        }

        @include it("order-8") {
          @include assert {
            @include output {
              @include order-8;
              
            }

            @include expect {
              order: 8;
            }
          }
        }

        @include it("order-9") {
          @include assert {
            @include output {
              @include order-9;
              
            }

            @include expect {
              order: 9;
            }
          }
        }

        @include it("order-10") {
          @include assert {
            @include output {
              @include order-10;
              
            }

            @include expect {
              order: 10;
            }
          }
        }

        @include it("order-11") {
          @include assert {
            @include output {
              @include order-11;
              
            }

            @include expect {
              order: 11;
            }
          }
        }

        @include it("order-12") {
          @include assert {
            @include output {
              @include order-12;
              
            }

            @include expect {
              order: 12;
            }
          }
        }

        @include it("order-first") {
          @include assert {
            @include output {
              @include order-first;
              
            }

            @include expect {
              order: calc(-infinity);
            }
          }
        }

        @include it("order-last") {
          @include assert {
            @include output {
              @include order-last;
              
            }

            @include expect {
              order: calc(infinity);
            }
          }
        }

        @include it("order-none") {
          @include assert {
            @include output {
              @include order-none;
              
            }

            @include expect {
              order: 0;
            }
          }
        }
      }
      @include it("order-(13)") {
        @include assert {
          @include output {
            @include order-(13);
            
          }

          @include expect {
            order: 13;
          }
        }
      }
    }

    @include describe("Negative") {
      @include describe("Basic") {
        @include it("-order-1") {
          @include assert {
            @include output {
              @include \-order-1;
              
            }

            @include expect {
              order: -1;
            }
          }
        }

        @include it("-order-2") {
          @include assert {
            @include output {
              @include \-order-2;
              
            }

            @include expect {
              order: -2;
            }
          }
        }

        @include it("-order-3") {
          @include assert {
            @include output {
              @include \-order-3;
              
            }

            @include expect {
              order: -3;
            }
          }
        }

        @include it("-order-4") {
          @include assert {
            @include output {
              @include \-order-4;
              
            }

            @include expect {
              order: -4;
            }
          }
        }

        @include it("-order-5") {
          @include assert {
            @include output {
              @include \-order-5;
              
            }

            @include expect {
              order: -5;
            }
          }
        }

        @include it("-order-6") {
          @include assert {
            @include output {
              @include \-order-6;
              
            }

            @include expect {
              order: -6;
            }
          }
        }

        @include it("-order-7") {
          @include assert {
            @include output {
              @include \-order-7;
              
            }

            @include expect {
              order: -7;
            }
          }
        }

        @include it("-order-8") {
          @include assert {
            @include output {
              @include \-order-8;
              
            }

            @include expect {
              order: -8;
            }
          }
        }

        @include it("-order-9") {
          @include assert {
            @include output {
              @include \-order-9;
              
            }

            @include expect {
              order: -9;
            }
          }
        }

        @include it("-order-10") {
          @include assert {
            @include output {
              @include \-order-10;
              
            }

            @include expect {
              order: -10;
            }
          }
        }

        @include it("-order-11") {
          @include assert {
            @include output {
              @include \-order-11;
              
            }

            @include expect {
              order: -11;
            }
          }
        }

        @include it("-order-12") {
          @include assert {
            @include output {
              @include \-order-12;
              
            }

            @include expect {
              order: -12;
            }
          }
        }

        @include it("-order-first") {
          @include assert {
            @include output {
              @include \-order-first;
              
            }

            @include expect {
              order: -calc(-infinity);
            }
          }
        }

        @include it("-order-last") {
          @include assert {
            @include output {
              @include \-order-last;
              
            }

            @include expect {
              order: -calc(infinity);
            }
          }
        }

        @include it("-order-none") {
          @include assert {
            @include output {
              @include \-order-none;
              
            }

            @include expect {
              order: 0;
            }
          }
        }
      }

      @include describe("Custom") {
        @include it("-order-(13)") {
          @include assert {
            @include output {
              @include \-order-(13);
              
            }

            @include expect {
              order: -13;
            }
          }
        }
      }
    }
  }
}
