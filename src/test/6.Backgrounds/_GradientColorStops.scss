@use 'sass:color';
@use 'true' as *;
@use '../awaken' as *;

@include describe('6.Backgrounds') {
  @include describe('Gradient Color Stops') {
    @include describe('Basic') {
      @include describe('group-from') {
        @include it('from-inherit') {
          @include assert {
            @include output {
              @include from-inherit;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: inherit !important;
            }
          }
        }

        @include it('from-current') {
          @include assert {
            @include output {
              @include from-current;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, currentColor, transparent);
            }
          }
        }

        @include it('from-transparent') {
          @include assert {
            @include output {
              @include from-transparent;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, transparent, transparent);
            }
          }
        }

        @include it('from-black') {
          @include assert {
            @include output {
              @include from-black;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, black, transparent);
            }
          }
        }

        @include it('from-white') {
          @include assert {
            @include output {
              @include from-white;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, white, transparent);
            }
          }
        }

        @include it('from-slate-50') {
          @include assert {
            @include output {
              @include from-slate-50;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #f8fafc, transparent);
            }
          }
        }

        @include it('from-slate-100') {
          @include assert {
            @include output {
              @include from-slate-100;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #f1f5f9, transparent);
            }
          }
        }

        @include it('from-slate-200') {
          @include assert {
            @include output {
              @include from-slate-200;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #e2e8f0, transparent);
            }
          }
        }

        @include it('from-slate-300') {
          @include assert {
            @include output {
              @include from-slate-300;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #cbd5e1, transparent);
            }
          }
        }

        @include it('from-slate-400') {
          @include assert {
            @include output {
              @include from-slate-400;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #94a3b8, transparent);
            }
          }
        }

        @include it('from-slate-500') {
          @include assert {
            @include output {
              @include from-slate-500;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #64748b, transparent);
            }
          }
        }

        @include it('from-slate-600') {
          @include assert {
            @include output {
              @include from-slate-600;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #475569, transparent);
            }
          }
        }

        @include it('from-slate-700') {
          @include assert {
            @include output {
              @include from-slate-700;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #334155, transparent);
            }
          }
        }

        @include it('from-slate-800') {
          @include assert {
            @include output {
              @include from-slate-800;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #1e293b, transparent);
            }
          }
        }

        @include it('from-slate-900') {
          @include assert {
            @include output {
              @include from-slate-900;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #0f172a, transparent);
            }
          }
        }

        @include it('from-slate-950') {
          @include assert {
            @include output {
              @include from-slate-950;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #020617, transparent);
            }
          }
        }

        @include it('from-gray-50') {
          @include assert {
            @include output {
              @include from-gray-50;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #f9fafb, transparent);
            }
          }
        }

        @include it('from-gray-100') {
          @include assert {
            @include output {
              @include from-gray-100;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #f3f4f6, transparent);
            }
          }
        }

        @include it('from-gray-200') {
          @include assert {
            @include output {
              @include from-gray-200;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #e5e7eb, transparent);
            }
          }
        }

        @include it('from-gray-300') {
          @include assert {
            @include output {
              @include from-gray-300;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #d1d5db, transparent);
            }
          }
        }

        @include it('from-gray-400') {
          @include assert {
            @include output {
              @include from-gray-400;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #9ca3af, transparent);
            }
          }
        }

        @include it('from-gray-500') {
          @include assert {
            @include output {
              @include from-gray-500;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #6b7280, transparent);
            }
          }
        }

        @include it('from-gray-600') {
          @include assert {
            @include output {
              @include from-gray-600;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #4b5563, transparent);
            }
          }
        }

        @include it('from-gray-700') {
          @include assert {
            @include output {
              @include from-gray-700;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #374151, transparent);
            }
          }
        }

        @include it('from-gray-800') {
          @include assert {
            @include output {
              @include from-gray-800;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #1f2937, transparent);
            }
          }
        }

        @include it('from-gray-900') {
          @include assert {
            @include output {
              @include from-gray-900;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #111827, transparent);
            }
          }
        }

        @include it('from-gray-950') {
          @include assert {
            @include output {
              @include from-gray-950;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #030712, transparent);
            }
          }
        }

        @include it('from-zinc-50') {
          @include assert {
            @include output {
              @include from-zinc-50;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fafafa, transparent);
            }
          }
        }

        @include it('from-zinc-100') {
          @include assert {
            @include output {
              @include from-zinc-100;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #f4f4f5, transparent);
            }
          }
        }

        @include it('from-zinc-200') {
          @include assert {
            @include output {
              @include from-zinc-200;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #e4e4e7, transparent);
            }
          }
        }

        @include it('from-zinc-300') {
          @include assert {
            @include output {
              @include from-zinc-300;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #d4d4d8, transparent);
            }
          }
        }

        @include it('from-zinc-400') {
          @include assert {
            @include output {
              @include from-zinc-400;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #a1a1aa, transparent);
            }
          }
        }

        @include it('from-zinc-500') {
          @include assert {
            @include output {
              @include from-zinc-500;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #71717a, transparent);
            }
          }
        }

        @include it('from-zinc-600') {
          @include assert {
            @include output {
              @include from-zinc-600;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #52525b, transparent);
            }
          }
        }

        @include it('from-zinc-700') {
          @include assert {
            @include output {
              @include from-zinc-700;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #3f3f46, transparent);
            }
          }
        }

        @include it('from-zinc-800') {
          @include assert {
            @include output {
              @include from-zinc-800;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #27272a, transparent);
            }
          }
        }

        @include it('from-zinc-900') {
          @include assert {
            @include output {
              @include from-zinc-900;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #18181b, transparent);
            }
          }
        }

        @include it('from-zinc-950') {
          @include assert {
            @include output {
              @include from-zinc-950;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #09090b, transparent);
            }
          }
        }

        @include it('from-neutral-50') {
          @include assert {
            @include output {
              @include from-neutral-50;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fafafa, transparent);
            }
          }
        }

        @include it('from-neutral-100') {
          @include assert {
            @include output {
              @include from-neutral-100;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, whitesmoke, transparent);
            }
          }
        }

        @include it('from-neutral-200') {
          @include assert {
            @include output {
              @include from-neutral-200;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #e5e5e5, transparent);
            }
          }
        }

        @include it('from-neutral-300') {
          @include assert {
            @include output {
              @include from-neutral-300;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #d4d4d4, transparent);
            }
          }
        }

        @include it('from-neutral-400') {
          @include assert {
            @include output {
              @include from-neutral-400;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #a3a3a3, transparent);
            }
          }
        }

        @include it('from-neutral-500') {
          @include assert {
            @include output {
              @include from-neutral-500;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #737373, transparent);
            }
          }
        }

        @include it('from-neutral-600') {
          @include assert {
            @include output {
              @include from-neutral-600;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #525252, transparent);
            }
          }
        }

        @include it('from-neutral-700') {
          @include assert {
            @include output {
              @include from-neutral-700;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #404040, transparent);
            }
          }
        }

        @include it('from-neutral-800') {
          @include assert {
            @include output {
              @include from-neutral-800;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #262626, transparent);
            }
          }
        }

        @include it('from-neutral-900') {
          @include assert {
            @include output {
              @include from-neutral-900;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #171717, transparent);
            }
          }
        }

        @include it('from-neutral-950') {
          @include assert {
            @include output {
              @include from-neutral-950;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #0a0a0a, transparent);
            }
          }
        }

        @include it('from-stone-50') {
          @include assert {
            @include output {
              @include from-stone-50;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fafaf9, transparent);
            }
          }
        }

        @include it('from-stone-100') {
          @include assert {
            @include output {
              @include from-stone-100;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #f5f5f4, transparent);
            }
          }
        }

        @include it('from-stone-200') {
          @include assert {
            @include output {
              @include from-stone-200;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #e7e5e4, transparent);
            }
          }
        }

        @include it('from-stone-300') {
          @include assert {
            @include output {
              @include from-stone-300;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #d6d3d1, transparent);
            }
          }
        }

        @include it('from-stone-400') {
          @include assert {
            @include output {
              @include from-stone-400;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #a8a29e, transparent);
            }
          }
        }

        @include it('from-stone-500') {
          @include assert {
            @include output {
              @include from-stone-500;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #78716c, transparent);
            }
          }
        }

        @include it('from-stone-600') {
          @include assert {
            @include output {
              @include from-stone-600;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #57534e, transparent);
            }
          }
        }

        @include it('from-stone-700') {
          @include assert {
            @include output {
              @include from-stone-700;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #44403c, transparent);
            }
          }
        }

        @include it('from-stone-800') {
          @include assert {
            @include output {
              @include from-stone-800;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #292524, transparent);
            }
          }
        }

        @include it('from-stone-900') {
          @include assert {
            @include output {
              @include from-stone-900;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #1c1917, transparent);
            }
          }
        }

        @include it('from-stone-950') {
          @include assert {
            @include output {
              @include from-stone-950;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #0c0a09, transparent);
            }
          }
        }

        @include it('from-red-50') {
          @include assert {
            @include output {
              @include from-red-50;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fef2f2, transparent);
            }
          }
        }

        @include it('from-red-100') {
          @include assert {
            @include output {
              @include from-red-100;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fee2e2, transparent);
            }
          }
        }

        @include it('from-red-200') {
          @include assert {
            @include output {
              @include from-red-200;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fecaca, transparent);
            }
          }
        }

        @include it('from-red-300') {
          @include assert {
            @include output {
              @include from-red-300;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fca5a5, transparent);
            }
          }
        }

        @include it('from-red-400') {
          @include assert {
            @include output {
              @include from-red-400;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #f87171, transparent);
            }
          }
        }

        @include it('from-red-500') {
          @include assert {
            @include output {
              @include from-red-500;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #ef4444, transparent);
            }
          }
        }

        @include it('from-red-600') {
          @include assert {
            @include output {
              @include from-red-600;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #dc2626, transparent);
            }
          }
        }

        @include it('from-red-700') {
          @include assert {
            @include output {
              @include from-red-700;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #b91c1c, transparent);
            }
          }
        }

        @include it('from-red-800') {
          @include assert {
            @include output {
              @include from-red-800;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #991b1b, transparent);
            }
          }
        }

        @include it('from-red-900') {
          @include assert {
            @include output {
              @include from-red-900;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #7f1d1d, transparent);
            }
          }
        }

        @include it('from-red-950') {
          @include assert {
            @include output {
              @include from-red-950;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #450a0a, transparent);
            }
          }
        }

        @include it('from-orange-50') {
          @include assert {
            @include output {
              @include from-orange-50;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff7ed, transparent);
            }
          }
        }

        @include it('from-orange-100') {
          @include assert {
            @include output {
              @include from-orange-100;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #ffedd5, transparent);
            }
          }
        }

        @include it('from-orange-200') {
          @include assert {
            @include output {
              @include from-orange-200;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fed7aa, transparent);
            }
          }
        }

        @include it('from-orange-300') {
          @include assert {
            @include output {
              @include from-orange-300;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fdba74, transparent);
            }
          }
        }

        @include it('from-orange-400') {
          @include assert {
            @include output {
              @include from-orange-400;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fb923c, transparent);
            }
          }
        }

        @include it('from-orange-500') {
          @include assert {
            @include output {
              @include from-orange-500;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #f97316, transparent);
            }
          }
        }

        @include it('from-orange-600') {
          @include assert {
            @include output {
              @include from-orange-600;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #ea580c, transparent);
            }
          }
        }

        @include it('from-orange-700') {
          @include assert {
            @include output {
              @include from-orange-700;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #c2410c, transparent);
            }
          }
        }

        @include it('from-orange-800') {
          @include assert {
            @include output {
              @include from-orange-800;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #9a3412, transparent);
            }
          }
        }

        @include it('from-orange-900') {
          @include assert {
            @include output {
              @include from-orange-900;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #7c2d12, transparent);
            }
          }
        }

        @include it('from-orange-950') {
          @include assert {
            @include output {
              @include from-orange-950;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #431407, transparent);
            }
          }
        }

        @include it('from-amber-50') {
          @include assert {
            @include output {
              @include from-amber-50;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fffbeb, transparent);
            }
          }
        }

        @include it('from-amber-100') {
          @include assert {
            @include output {
              @include from-amber-100;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fef3c7, transparent);
            }
          }
        }

        @include it('from-amber-200') {
          @include assert {
            @include output {
              @include from-amber-200;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fde68a, transparent);
            }
          }
        }

        @include it('from-amber-300') {
          @include assert {
            @include output {
              @include from-amber-300;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fcd34d, transparent);
            }
          }
        }

        @include it('from-amber-400') {
          @include assert {
            @include output {
              @include from-amber-400;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fbbf24, transparent);
            }
          }
        }

        @include it('from-amber-500') {
          @include assert {
            @include output {
              @include from-amber-500;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #f59e0b, transparent);
            }
          }
        }

        @include it('from-amber-600') {
          @include assert {
            @include output {
              @include from-amber-600;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #d97706, transparent);
            }
          }
        }

        @include it('from-amber-700') {
          @include assert {
            @include output {
              @include from-amber-700;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #b45309, transparent);
            }
          }
        }

        @include it('from-amber-800') {
          @include assert {
            @include output {
              @include from-amber-800;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #92400e, transparent);
            }
          }
        }

        @include it('from-amber-900') {
          @include assert {
            @include output {
              @include from-amber-900;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #78350f, transparent);
            }
          }
        }

        @include it('from-amber-950') {
          @include assert {
            @include output {
              @include from-amber-950;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #451a03, transparent);
            }
          }
        }

        @include it('from-yellow-50') {
          @include assert {
            @include output {
              @include from-yellow-50;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fefce8, transparent);
            }
          }
        }

        @include it('from-yellow-100') {
          @include assert {
            @include output {
              @include from-yellow-100;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fef9c3, transparent);
            }
          }
        }

        @include it('from-yellow-200') {
          @include assert {
            @include output {
              @include from-yellow-200;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fef08a, transparent);
            }
          }
        }

        @include it('from-yellow-300') {
          @include assert {
            @include output {
              @include from-yellow-300;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fde047, transparent);
            }
          }
        }

        @include it('from-yellow-400') {
          @include assert {
            @include output {
              @include from-yellow-400;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #facc15, transparent);
            }
          }
        }

        @include it('from-yellow-500') {
          @include assert {
            @include output {
              @include from-yellow-500;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #eab308, transparent);
            }
          }
        }

        @include it('from-yellow-600') {
          @include assert {
            @include output {
              @include from-yellow-600;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #ca8a04, transparent);
            }
          }
        }

        @include it('from-yellow-700') {
          @include assert {
            @include output {
              @include from-yellow-700;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #a16207, transparent);
            }
          }
        }

        @include it('from-yellow-800') {
          @include assert {
            @include output {
              @include from-yellow-800;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #854d0e, transparent);
            }
          }
        }

        @include it('from-yellow-900') {
          @include assert {
            @include output {
              @include from-yellow-900;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #713f12, transparent);
            }
          }
        }

        @include it('from-yellow-950') {
          @include assert {
            @include output {
              @include from-yellow-950;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #422006, transparent);
            }
          }
        }

        @include it('from-lime-50') {
          @include assert {
            @include output {
              @include from-lime-50;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #f7fee7, transparent);
            }
          }
        }

        @include it('from-lime-100') {
          @include assert {
            @include output {
              @include from-lime-100;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #ecfccb, transparent);
            }
          }
        }

        @include it('from-lime-200') {
          @include assert {
            @include output {
              @include from-lime-200;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #d9f99d, transparent);
            }
          }
        }

        @include it('from-lime-300') {
          @include assert {
            @include output {
              @include from-lime-300;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #bef264, transparent);
            }
          }
        }

        @include it('from-lime-400') {
          @include assert {
            @include output {
              @include from-lime-400;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #a3e635, transparent);
            }
          }
        }

        @include it('from-lime-500') {
          @include assert {
            @include output {
              @include from-lime-500;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #84cc16, transparent);
            }
          }
        }

        @include it('from-lime-600') {
          @include assert {
            @include output {
              @include from-lime-600;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #65a30d, transparent);
            }
          }
        }

        @include it('from-lime-700') {
          @include assert {
            @include output {
              @include from-lime-700;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #4d7c0f, transparent);
            }
          }
        }

        @include it('from-lime-800') {
          @include assert {
            @include output {
              @include from-lime-800;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #3f6212, transparent);
            }
          }
        }

        @include it('from-lime-900') {
          @include assert {
            @include output {
              @include from-lime-900;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #365314, transparent);
            }
          }
        }

        @include it('from-lime-950') {
          @include assert {
            @include output {
              @include from-lime-950;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #1a2e05, transparent);
            }
          }
        }

        @include it('from-green-50') {
          @include assert {
            @include output {
              @include from-green-50;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #f0fdf4, transparent);
            }
          }
        }

        @include it('from-green-100') {
          @include assert {
            @include output {
              @include from-green-100;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #dcfce7, transparent);
            }
          }
        }

        @include it('from-green-200') {
          @include assert {
            @include output {
              @include from-green-200;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #bbf7d0, transparent);
            }
          }
        }

        @include it('from-green-300') {
          @include assert {
            @include output {
              @include from-green-300;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #86efac, transparent);
            }
          }
        }

        @include it('from-green-400') {
          @include assert {
            @include output {
              @include from-green-400;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #4ade80, transparent);
            }
          }
        }

        @include it('from-green-500') {
          @include assert {
            @include output {
              @include from-green-500;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #22c55e, transparent);
            }
          }
        }

        @include it('from-green-600') {
          @include assert {
            @include output {
              @include from-green-600;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #16a34a, transparent);
            }
          }
        }

        @include it('from-green-700') {
          @include assert {
            @include output {
              @include from-green-700;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #15803d, transparent);
            }
          }
        }

        @include it('from-green-800') {
          @include assert {
            @include output {
              @include from-green-800;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #166534, transparent);
            }
          }
        }

        @include it('from-green-900') {
          @include assert {
            @include output {
              @include from-green-900;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #14532d, transparent);
            }
          }
        }

        @include it('from-green-950') {
          @include assert {
            @include output {
              @include from-green-950;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #052e16, transparent);
            }
          }
        }

        @include it('from-emerald-50') {
          @include assert {
            @include output {
              @include from-emerald-50;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #ecfdf5, transparent);
            }
          }
        }

        @include it('from-emerald-100') {
          @include assert {
            @include output {
              @include from-emerald-100;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #d1fae5, transparent);
            }
          }
        }

        @include it('from-emerald-200') {
          @include assert {
            @include output {
              @include from-emerald-200;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #a7f3d0, transparent);
            }
          }
        }

        @include it('from-emerald-300') {
          @include assert {
            @include output {
              @include from-emerald-300;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #6ee7b7, transparent);
            }
          }
        }

        @include it('from-emerald-400') {
          @include assert {
            @include output {
              @include from-emerald-400;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #34d399, transparent);
            }
          }
        }

        @include it('from-emerald-500') {
          @include assert {
            @include output {
              @include from-emerald-500;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #10b981, transparent);
            }
          }
        }

        @include it('from-emerald-600') {
          @include assert {
            @include output {
              @include from-emerald-600;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #059669, transparent);
            }
          }
        }

        @include it('from-emerald-700') {
          @include assert {
            @include output {
              @include from-emerald-700;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #047857, transparent);
            }
          }
        }

        @include it('from-emerald-800') {
          @include assert {
            @include output {
              @include from-emerald-800;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #065f46, transparent);
            }
          }
        }

        @include it('from-emerald-900') {
          @include assert {
            @include output {
              @include from-emerald-900;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #064e3b, transparent);
            }
          }
        }

        @include it('from-emerald-950') {
          @include assert {
            @include output {
              @include from-emerald-950;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #022c22, transparent);
            }
          }
        }

        @include it('from-teal-50') {
          @include assert {
            @include output {
              @include from-teal-50;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #f0fdfa, transparent);
            }
          }
        }

        @include it('from-teal-100') {
          @include assert {
            @include output {
              @include from-teal-100;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #ccfbf1, transparent);
            }
          }
        }

        @include it('from-teal-200') {
          @include assert {
            @include output {
              @include from-teal-200;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #99f6e4, transparent);
            }
          }
        }

        @include it('from-teal-300') {
          @include assert {
            @include output {
              @include from-teal-300;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #5eead4, transparent);
            }
          }
        }

        @include it('from-teal-400') {
          @include assert {
            @include output {
              @include from-teal-400;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #2dd4bf, transparent);
            }
          }
        }

        @include it('from-teal-500') {
          @include assert {
            @include output {
              @include from-teal-500;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #14b8a6, transparent);
            }
          }
        }

        @include it('from-teal-600') {
          @include assert {
            @include output {
              @include from-teal-600;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #0d9488, transparent);
            }
          }
        }

        @include it('from-teal-700') {
          @include assert {
            @include output {
              @include from-teal-700;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #0f766e, transparent);
            }
          }
        }

        @include it('from-teal-800') {
          @include assert {
            @include output {
              @include from-teal-800;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #115e59, transparent);
            }
          }
        }

        @include it('from-teal-900') {
          @include assert {
            @include output {
              @include from-teal-900;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #134e4a, transparent);
            }
          }
        }

        @include it('from-teal-950') {
          @include assert {
            @include output {
              @include from-teal-950;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #042f2e, transparent);
            }
          }
        }

        @include it('from-cyan-50') {
          @include assert {
            @include output {
              @include from-cyan-50;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #ecfeff, transparent);
            }
          }
        }

        @include it('from-cyan-100') {
          @include assert {
            @include output {
              @include from-cyan-100;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #cffafe, transparent);
            }
          }
        }

        @include it('from-cyan-200') {
          @include assert {
            @include output {
              @include from-cyan-200;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #a5f3fc, transparent);
            }
          }
        }

        @include it('from-cyan-300') {
          @include assert {
            @include output {
              @include from-cyan-300;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #67e8f9, transparent);
            }
          }
        }

        @include it('from-cyan-400') {
          @include assert {
            @include output {
              @include from-cyan-400;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #22d3ee, transparent);
            }
          }
        }

        @include it('from-cyan-500') {
          @include assert {
            @include output {
              @include from-cyan-500;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #06b6d4, transparent);
            }
          }
        }

        @include it('from-cyan-600') {
          @include assert {
            @include output {
              @include from-cyan-600;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #0891b2, transparent);
            }
          }
        }

        @include it('from-cyan-700') {
          @include assert {
            @include output {
              @include from-cyan-700;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #0e7490, transparent);
            }
          }
        }

        @include it('from-cyan-800') {
          @include assert {
            @include output {
              @include from-cyan-800;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #155e75, transparent);
            }
          }
        }

        @include it('from-cyan-900') {
          @include assert {
            @include output {
              @include from-cyan-900;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #164e63, transparent);
            }
          }
        }

        @include it('from-cyan-950') {
          @include assert {
            @include output {
              @include from-cyan-950;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #083344, transparent);
            }
          }
        }

        @include it('from-sky-50') {
          @include assert {
            @include output {
              @include from-sky-50;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #f0f9ff, transparent);
            }
          }
        }

        @include it('from-sky-100') {
          @include assert {
            @include output {
              @include from-sky-100;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #e0f2fe, transparent);
            }
          }
        }

        @include it('from-sky-200') {
          @include assert {
            @include output {
              @include from-sky-200;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #bae6fd, transparent);
            }
          }
        }

        @include it('from-sky-300') {
          @include assert {
            @include output {
              @include from-sky-300;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #7dd3fc, transparent);
            }
          }
        }

        @include it('from-sky-400') {
          @include assert {
            @include output {
              @include from-sky-400;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #38bdf8, transparent);
            }
          }
        }

        @include it('from-sky-500') {
          @include assert {
            @include output {
              @include from-sky-500;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #0ea5e9, transparent);
            }
          }
        }

        @include it('from-sky-600') {
          @include assert {
            @include output {
              @include from-sky-600;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #0284c7, transparent);
            }
          }
        }

        @include it('from-sky-700') {
          @include assert {
            @include output {
              @include from-sky-700;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #0369a1, transparent);
            }
          }
        }

        @include it('from-sky-800') {
          @include assert {
            @include output {
              @include from-sky-800;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #075985, transparent);
            }
          }
        }

        @include it('from-sky-900') {
          @include assert {
            @include output {
              @include from-sky-900;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #0c4a6e, transparent);
            }
          }
        }

        @include it('from-sky-950') {
          @include assert {
            @include output {
              @include from-sky-950;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #082f49, transparent);
            }
          }
        }

        @include it('from-blue-50') {
          @include assert {
            @include output {
              @include from-blue-50;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #eff6ff, transparent);
            }
          }
        }

        @include it('from-blue-100') {
          @include assert {
            @include output {
              @include from-blue-100;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #dbeafe, transparent);
            }
          }
        }

        @include it('from-blue-200') {
          @include assert {
            @include output {
              @include from-blue-200;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #bfdbfe, transparent);
            }
          }
        }

        @include it('from-blue-300') {
          @include assert {
            @include output {
              @include from-blue-300;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #93c5fd, transparent);
            }
          }
        }

        @include it('from-blue-400') {
          @include assert {
            @include output {
              @include from-blue-400;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #60a5fa, transparent);
            }
          }
        }

        @include it('from-blue-500') {
          @include assert {
            @include output {
              @include from-blue-500;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #3b82f6, transparent);
            }
          }
        }

        @include it('from-blue-600') {
          @include assert {
            @include output {
              @include from-blue-600;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #2563eb, transparent);
            }
          }
        }

        @include it('from-blue-700') {
          @include assert {
            @include output {
              @include from-blue-700;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #1d4ed8, transparent);
            }
          }
        }

        @include it('from-blue-800') {
          @include assert {
            @include output {
              @include from-blue-800;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #1e40af, transparent);
            }
          }
        }

        @include it('from-blue-900') {
          @include assert {
            @include output {
              @include from-blue-900;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #1e3a8a, transparent);
            }
          }
        }

        @include it('from-blue-950') {
          @include assert {
            @include output {
              @include from-blue-950;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #172554, transparent);
            }
          }
        }

        @include it('from-indigo-50') {
          @include assert {
            @include output {
              @include from-indigo-50;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #eef2ff, transparent);
            }
          }
        }

        @include it('from-indigo-100') {
          @include assert {
            @include output {
              @include from-indigo-100;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #e0e7ff, transparent);
            }
          }
        }

        @include it('from-indigo-200') {
          @include assert {
            @include output {
              @include from-indigo-200;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #c7d2fe, transparent);
            }
          }
        }

        @include it('from-indigo-300') {
          @include assert {
            @include output {
              @include from-indigo-300;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #a5b4fc, transparent);
            }
          }
        }

        @include it('from-indigo-400') {
          @include assert {
            @include output {
              @include from-indigo-400;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #818cf8, transparent);
            }
          }
        }

        @include it('from-indigo-500') {
          @include assert {
            @include output {
              @include from-indigo-500;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #6366f1, transparent);
            }
          }
        }

        @include it('from-indigo-600') {
          @include assert {
            @include output {
              @include from-indigo-600;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #4f46e5, transparent);
            }
          }
        }

        @include it('from-indigo-700') {
          @include assert {
            @include output {
              @include from-indigo-700;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #4338ca, transparent);
            }
          }
        }

        @include it('from-indigo-800') {
          @include assert {
            @include output {
              @include from-indigo-800;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #3730a3, transparent);
            }
          }
        }

        @include it('from-indigo-900') {
          @include assert {
            @include output {
              @include from-indigo-900;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #312e81, transparent);
            }
          }
        }

        @include it('from-indigo-950') {
          @include assert {
            @include output {
              @include from-indigo-950;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #1e1b4b, transparent);
            }
          }
        }

        @include it('from-violet-50') {
          @include assert {
            @include output {
              @include from-violet-50;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #f5f3ff, transparent);
            }
          }
        }

        @include it('from-violet-100') {
          @include assert {
            @include output {
              @include from-violet-100;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #ede9fe, transparent);
            }
          }
        }

        @include it('from-violet-200') {
          @include assert {
            @include output {
              @include from-violet-200;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #ddd6fe, transparent);
            }
          }
        }

        @include it('from-violet-300') {
          @include assert {
            @include output {
              @include from-violet-300;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #c4b5fd, transparent);
            }
          }
        }

        @include it('from-violet-400') {
          @include assert {
            @include output {
              @include from-violet-400;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #a78bfa, transparent);
            }
          }
        }

        @include it('from-violet-500') {
          @include assert {
            @include output {
              @include from-violet-500;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #8b5cf6, transparent);
            }
          }
        }

        @include it('from-violet-600') {
          @include assert {
            @include output {
              @include from-violet-600;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #7c3aed, transparent);
            }
          }
        }

        @include it('from-violet-700') {
          @include assert {
            @include output {
              @include from-violet-700;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #6d28d9, transparent);
            }
          }
        }

        @include it('from-violet-800') {
          @include assert {
            @include output {
              @include from-violet-800;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #5b21b6, transparent);
            }
          }
        }

        @include it('from-violet-900') {
          @include assert {
            @include output {
              @include from-violet-900;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #4c1d95, transparent);
            }
          }
        }

        @include it('from-violet-950') {
          @include assert {
            @include output {
              @include from-violet-950;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #2e1065, transparent);
            }
          }
        }

        @include it('from-purple-50') {
          @include assert {
            @include output {
              @include from-purple-50;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #faf5ff, transparent);
            }
          }
        }

        @include it('from-purple-100') {
          @include assert {
            @include output {
              @include from-purple-100;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #f3e8ff, transparent);
            }
          }
        }

        @include it('from-purple-200') {
          @include assert {
            @include output {
              @include from-purple-200;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #e9d5ff, transparent);
            }
          }
        }

        @include it('from-purple-300') {
          @include assert {
            @include output {
              @include from-purple-300;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #d8b4fe, transparent);
            }
          }
        }

        @include it('from-purple-400') {
          @include assert {
            @include output {
              @include from-purple-400;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #c084fc, transparent);
            }
          }
        }

        @include it('from-purple-500') {
          @include assert {
            @include output {
              @include from-purple-500;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #a855f7, transparent);
            }
          }
        }

        @include it('from-purple-600') {
          @include assert {
            @include output {
              @include from-purple-600;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #9333ea, transparent);
            }
          }
        }

        @include it('from-purple-700') {
          @include assert {
            @include output {
              @include from-purple-700;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #7e22ce, transparent);
            }
          }
        }

        @include it('from-purple-800') {
          @include assert {
            @include output {
              @include from-purple-800;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #6b21a8, transparent);
            }
          }
        }

        @include it('from-purple-900') {
          @include assert {
            @include output {
              @include from-purple-900;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #581c87, transparent);
            }
          }
        }

        @include it('from-purple-950') {
          @include assert {
            @include output {
              @include from-purple-950;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #3b0764, transparent);
            }
          }
        }

        @include it('from-fuchsia-50') {
          @include assert {
            @include output {
              @include from-fuchsia-50;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fdf4ff, transparent);
            }
          }
        }

        @include it('from-fuchsia-100') {
          @include assert {
            @include output {
              @include from-fuchsia-100;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fae8ff, transparent);
            }
          }
        }

        @include it('from-fuchsia-200') {
          @include assert {
            @include output {
              @include from-fuchsia-200;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #f5d0fe, transparent);
            }
          }
        }

        @include it('from-fuchsia-300') {
          @include assert {
            @include output {
              @include from-fuchsia-300;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #f0abfc, transparent);
            }
          }
        }

        @include it('from-fuchsia-400') {
          @include assert {
            @include output {
              @include from-fuchsia-400;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #e879f9, transparent);
            }
          }
        }

        @include it('from-fuchsia-500') {
          @include assert {
            @include output {
              @include from-fuchsia-500;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #d946ef, transparent);
            }
          }
        }

        @include it('from-fuchsia-600') {
          @include assert {
            @include output {
              @include from-fuchsia-600;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #c026d3, transparent);
            }
          }
        }

        @include it('from-fuchsia-700') {
          @include assert {
            @include output {
              @include from-fuchsia-700;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #a21caf, transparent);
            }
          }
        }

        @include it('from-fuchsia-800') {
          @include assert {
            @include output {
              @include from-fuchsia-800;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #86198f, transparent);
            }
          }
        }

        @include it('from-fuchsia-900') {
          @include assert {
            @include output {
              @include from-fuchsia-900;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #701a75, transparent);
            }
          }
        }

        @include it('from-fuchsia-950') {
          @include assert {
            @include output {
              @include from-fuchsia-950;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #4a044e, transparent);
            }
          }
        }

        @include it('from-pink-50') {
          @include assert {
            @include output {
              @include from-pink-50;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fdf2f8, transparent);
            }
          }
        }

        @include it('from-pink-100') {
          @include assert {
            @include output {
              @include from-pink-100;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fce7f3, transparent);
            }
          }
        }

        @include it('from-pink-200') {
          @include assert {
            @include output {
              @include from-pink-200;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fbcfe8, transparent);
            }
          }
        }

        @include it('from-pink-300') {
          @include assert {
            @include output {
              @include from-pink-300;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #f9a8d4, transparent);
            }
          }
        }

        @include it('from-pink-400') {
          @include assert {
            @include output {
              @include from-pink-400;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #f472b6, transparent);
            }
          }
        }

        @include it('from-pink-500') {
          @include assert {
            @include output {
              @include from-pink-500;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #ec4899, transparent);
            }
          }
        }

        @include it('from-pink-600') {
          @include assert {
            @include output {
              @include from-pink-600;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #db2777, transparent);
            }
          }
        }

        @include it('from-pink-700') {
          @include assert {
            @include output {
              @include from-pink-700;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #be185d, transparent);
            }
          }
        }

        @include it('from-pink-800') {
          @include assert {
            @include output {
              @include from-pink-800;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #9d174d, transparent);
            }
          }
        }

        @include it('from-pink-900') {
          @include assert {
            @include output {
              @include from-pink-900;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #831843, transparent);
            }
          }
        }

        @include it('from-pink-950') {
          @include assert {
            @include output {
              @include from-pink-950;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #500724, transparent);
            }
          }
        }

        @include it('from-rose-50') {
          @include assert {
            @include output {
              @include from-rose-50;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff1f2, transparent);
            }
          }
        }

        @include it('from-rose-100') {
          @include assert {
            @include output {
              @include from-rose-100;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #ffe4e6, transparent);
            }
          }
        }

        @include it('from-rose-200') {
          @include assert {
            @include output {
              @include from-rose-200;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fecdd3, transparent);
            }
          }
        }

        @include it('from-rose-300') {
          @include assert {
            @include output {
              @include from-rose-300;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fda4af, transparent);
            }
          }
        }

        @include it('from-rose-400') {
          @include assert {
            @include output {
              @include from-rose-400;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fb7185, transparent);
            }
          }
        }

        @include it('from-rose-500') {
          @include assert {
            @include output {
              @include from-rose-500;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #f43f5e, transparent);
            }
          }
        }

        @include it('from-rose-600') {
          @include assert {
            @include output {
              @include from-rose-600;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #e11d48, transparent);
            }
          }
        }

        @include it('from-rose-700') {
          @include assert {
            @include output {
              @include from-rose-700;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #be123c, transparent);
            }
          }
        }

        @include it('from-rose-800') {
          @include assert {
            @include output {
              @include from-rose-800;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #9f1239, transparent);
            }
          }
        }

        @include it('from-rose-900') {
          @include assert {
            @include output {
              @include from-rose-900;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #881337, transparent);
            }
          }
        }

        @include it('from-rose-950') {
          @include assert {
            @include output {
              @include from-rose-950;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #4c0519, transparent);
            }
          }
        }

        @include it('from-black(0.11)') {
          @include assert {
            @include output {
              @include from-black(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#000, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-white(0.11)') {
          @include assert {
            @include output {
              @include from-white(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#fff, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-slate-50(0.11)') {
          @include assert {
            @include output {
              @include from-slate-50(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#f8fafc, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-slate-100(0.11)') {
          @include assert {
            @include output {
              @include from-slate-100(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#f1f5f9, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-slate-200(0.11)') {
          @include assert {
            @include output {
              @include from-slate-200(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#e2e8f0, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-slate-300(0.11)') {
          @include assert {
            @include output {
              @include from-slate-300(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#cbd5e1, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-slate-400(0.11)') {
          @include assert {
            @include output {
              @include from-slate-400(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#94a3b8, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-slate-500(0.11)') {
          @include assert {
            @include output {
              @include from-slate-500(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#64748b, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-slate-600(0.11)') {
          @include assert {
            @include output {
              @include from-slate-600(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#475569, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-slate-700(0.11)') {
          @include assert {
            @include output {
              @include from-slate-700(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#334155, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-slate-800(0.11)') {
          @include assert {
            @include output {
              @include from-slate-800(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#1e293b, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-slate-900(0.11)') {
          @include assert {
            @include output {
              @include from-slate-900(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#0f172a, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-slate-950(0.11)') {
          @include assert {
            @include output {
              @include from-slate-950(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#020617, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-gray-50(0.11)') {
          @include assert {
            @include output {
              @include from-gray-50(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#f9fafb, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-gray-100(0.11)') {
          @include assert {
            @include output {
              @include from-gray-100(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#f3f4f6, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-gray-200(0.11)') {
          @include assert {
            @include output {
              @include from-gray-200(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#e5e7eb, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-gray-300(0.11)') {
          @include assert {
            @include output {
              @include from-gray-300(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#d1d5db, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-gray-400(0.11)') {
          @include assert {
            @include output {
              @include from-gray-400(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#9ca3af, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-gray-500(0.11)') {
          @include assert {
            @include output {
              @include from-gray-500(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#6b7280, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-gray-600(0.11)') {
          @include assert {
            @include output {
              @include from-gray-600(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#4b5563, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-gray-700(0.11)') {
          @include assert {
            @include output {
              @include from-gray-700(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#374151, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-gray-800(0.11)') {
          @include assert {
            @include output {
              @include from-gray-800(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#1f2937, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-gray-900(0.11)') {
          @include assert {
            @include output {
              @include from-gray-900(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#111827, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-gray-950(0.11)') {
          @include assert {
            @include output {
              @include from-gray-950(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#030712, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-zinc-50(0.11)') {
          @include assert {
            @include output {
              @include from-zinc-50(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#fafafa, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-zinc-100(0.11)') {
          @include assert {
            @include output {
              @include from-zinc-100(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#f4f4f5, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-zinc-200(0.11)') {
          @include assert {
            @include output {
              @include from-zinc-200(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#e4e4e7, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-zinc-300(0.11)') {
          @include assert {
            @include output {
              @include from-zinc-300(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#d4d4d8, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-zinc-400(0.11)') {
          @include assert {
            @include output {
              @include from-zinc-400(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#a1a1aa, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-zinc-500(0.11)') {
          @include assert {
            @include output {
              @include from-zinc-500(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#71717a, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-zinc-600(0.11)') {
          @include assert {
            @include output {
              @include from-zinc-600(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#52525b, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-zinc-700(0.11)') {
          @include assert {
            @include output {
              @include from-zinc-700(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#3f3f46, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-zinc-800(0.11)') {
          @include assert {
            @include output {
              @include from-zinc-800(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#27272a, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-zinc-900(0.11)') {
          @include assert {
            @include output {
              @include from-zinc-900(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#18181b, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-zinc-950(0.11)') {
          @include assert {
            @include output {
              @include from-zinc-950(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#09090b, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-neutral-50(0.11)') {
          @include assert {
            @include output {
              @include from-neutral-50(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#fafafa, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-neutral-100(0.11)') {
          @include assert {
            @include output {
              @include from-neutral-100(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#f5f5f5, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-neutral-200(0.11)') {
          @include assert {
            @include output {
              @include from-neutral-200(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#e5e5e5, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-neutral-300(0.11)') {
          @include assert {
            @include output {
              @include from-neutral-300(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#d4d4d4, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-neutral-400(0.11)') {
          @include assert {
            @include output {
              @include from-neutral-400(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#a3a3a3, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-neutral-500(0.11)') {
          @include assert {
            @include output {
              @include from-neutral-500(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#737373, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-neutral-600(0.11)') {
          @include assert {
            @include output {
              @include from-neutral-600(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#525252, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-neutral-700(0.11)') {
          @include assert {
            @include output {
              @include from-neutral-700(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#404040, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-neutral-800(0.11)') {
          @include assert {
            @include output {
              @include from-neutral-800(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#262626, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-neutral-900(0.11)') {
          @include assert {
            @include output {
              @include from-neutral-900(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#171717, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-neutral-950(0.11)') {
          @include assert {
            @include output {
              @include from-neutral-950(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#0a0a0a, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-stone-50(0.11)') {
          @include assert {
            @include output {
              @include from-stone-50(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#fafaf9, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-stone-100(0.11)') {
          @include assert {
            @include output {
              @include from-stone-100(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#f5f5f4, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-stone-200(0.11)') {
          @include assert {
            @include output {
              @include from-stone-200(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#e7e5e4, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-stone-300(0.11)') {
          @include assert {
            @include output {
              @include from-stone-300(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#d6d3d1, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-stone-400(0.11)') {
          @include assert {
            @include output {
              @include from-stone-400(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#a8a29e, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-stone-500(0.11)') {
          @include assert {
            @include output {
              @include from-stone-500(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#78716c, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-stone-600(0.11)') {
          @include assert {
            @include output {
              @include from-stone-600(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#57534e, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-stone-700(0.11)') {
          @include assert {
            @include output {
              @include from-stone-700(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#44403c, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-stone-800(0.11)') {
          @include assert {
            @include output {
              @include from-stone-800(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#292524, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-stone-900(0.11)') {
          @include assert {
            @include output {
              @include from-stone-900(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#1c1917, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-stone-950(0.11)') {
          @include assert {
            @include output {
              @include from-stone-950(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#0c0a09, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-red-50(0.11)') {
          @include assert {
            @include output {
              @include from-red-50(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#fef2f2, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-red-100(0.11)') {
          @include assert {
            @include output {
              @include from-red-100(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#fee2e2, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-red-200(0.11)') {
          @include assert {
            @include output {
              @include from-red-200(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#fecaca, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-red-300(0.11)') {
          @include assert {
            @include output {
              @include from-red-300(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#fca5a5, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-red-400(0.11)') {
          @include assert {
            @include output {
              @include from-red-400(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#f87171, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-red-500(0.11)') {
          @include assert {
            @include output {
              @include from-red-500(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#ef4444, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-red-600(0.11)') {
          @include assert {
            @include output {
              @include from-red-600(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#dc2626, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-red-700(0.11)') {
          @include assert {
            @include output {
              @include from-red-700(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#b91c1c, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-red-800(0.11)') {
          @include assert {
            @include output {
              @include from-red-800(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#991b1b, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-red-900(0.11)') {
          @include assert {
            @include output {
              @include from-red-900(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#7f1d1d, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-red-950(0.11)') {
          @include assert {
            @include output {
              @include from-red-950(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#450a0a, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-orange-50(0.11)') {
          @include assert {
            @include output {
              @include from-orange-50(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#fff7ed, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-orange-100(0.11)') {
          @include assert {
            @include output {
              @include from-orange-100(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#ffedd5, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-orange-200(0.11)') {
          @include assert {
            @include output {
              @include from-orange-200(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#fed7aa, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-orange-300(0.11)') {
          @include assert {
            @include output {
              @include from-orange-300(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#fdba74, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-orange-400(0.11)') {
          @include assert {
            @include output {
              @include from-orange-400(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#fb923c, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-orange-500(0.11)') {
          @include assert {
            @include output {
              @include from-orange-500(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#f97316, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-orange-600(0.11)') {
          @include assert {
            @include output {
              @include from-orange-600(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#ea580c, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-orange-700(0.11)') {
          @include assert {
            @include output {
              @include from-orange-700(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#c2410c, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-orange-800(0.11)') {
          @include assert {
            @include output {
              @include from-orange-800(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#9a3412, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-orange-900(0.11)') {
          @include assert {
            @include output {
              @include from-orange-900(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#7c2d12, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-orange-950(0.11)') {
          @include assert {
            @include output {
              @include from-orange-950(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#431407, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-amber-50(0.11)') {
          @include assert {
            @include output {
              @include from-amber-50(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#fffbeb, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-amber-100(0.11)') {
          @include assert {
            @include output {
              @include from-amber-100(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#fef3c7, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-amber-200(0.11)') {
          @include assert {
            @include output {
              @include from-amber-200(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#fde68a, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-amber-300(0.11)') {
          @include assert {
            @include output {
              @include from-amber-300(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#fcd34d, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-amber-400(0.11)') {
          @include assert {
            @include output {
              @include from-amber-400(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#fbbf24, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-amber-500(0.11)') {
          @include assert {
            @include output {
              @include from-amber-500(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#f59e0b, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-amber-600(0.11)') {
          @include assert {
            @include output {
              @include from-amber-600(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#d97706, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-amber-700(0.11)') {
          @include assert {
            @include output {
              @include from-amber-700(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#b45309, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-amber-800(0.11)') {
          @include assert {
            @include output {
              @include from-amber-800(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#92400e, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-amber-900(0.11)') {
          @include assert {
            @include output {
              @include from-amber-900(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#78350f, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-amber-950(0.11)') {
          @include assert {
            @include output {
              @include from-amber-950(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#451a03, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-yellow-50(0.11)') {
          @include assert {
            @include output {
              @include from-yellow-50(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#fefce8, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-yellow-100(0.11)') {
          @include assert {
            @include output {
              @include from-yellow-100(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#fef9c3, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-yellow-200(0.11)') {
          @include assert {
            @include output {
              @include from-yellow-200(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#fef08a, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-yellow-300(0.11)') {
          @include assert {
            @include output {
              @include from-yellow-300(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#fde047, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-yellow-400(0.11)') {
          @include assert {
            @include output {
              @include from-yellow-400(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#facc15, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-yellow-500(0.11)') {
          @include assert {
            @include output {
              @include from-yellow-500(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#eab308, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-yellow-600(0.11)') {
          @include assert {
            @include output {
              @include from-yellow-600(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#ca8a04, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-yellow-700(0.11)') {
          @include assert {
            @include output {
              @include from-yellow-700(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#a16207, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-yellow-800(0.11)') {
          @include assert {
            @include output {
              @include from-yellow-800(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#854d0e, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-yellow-900(0.11)') {
          @include assert {
            @include output {
              @include from-yellow-900(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#713f12, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-yellow-950(0.11)') {
          @include assert {
            @include output {
              @include from-yellow-950(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#422006, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-lime-50(0.11)') {
          @include assert {
            @include output {
              @include from-lime-50(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#f7fee7, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-lime-100(0.11)') {
          @include assert {
            @include output {
              @include from-lime-100(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#ecfccb, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-lime-200(0.11)') {
          @include assert {
            @include output {
              @include from-lime-200(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#d9f99d, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-lime-300(0.11)') {
          @include assert {
            @include output {
              @include from-lime-300(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#bef264, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-lime-400(0.11)') {
          @include assert {
            @include output {
              @include from-lime-400(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#a3e635, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-lime-500(0.11)') {
          @include assert {
            @include output {
              @include from-lime-500(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#84cc16, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-lime-600(0.11)') {
          @include assert {
            @include output {
              @include from-lime-600(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#65a30d, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-lime-700(0.11)') {
          @include assert {
            @include output {
              @include from-lime-700(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#4d7c0f, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-lime-800(0.11)') {
          @include assert {
            @include output {
              @include from-lime-800(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#3f6212, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-lime-900(0.11)') {
          @include assert {
            @include output {
              @include from-lime-900(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#365314, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-lime-950(0.11)') {
          @include assert {
            @include output {
              @include from-lime-950(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#1a2e05, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-green-50(0.11)') {
          @include assert {
            @include output {
              @include from-green-50(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#f0fdf4, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-green-100(0.11)') {
          @include assert {
            @include output {
              @include from-green-100(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#dcfce7, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-green-200(0.11)') {
          @include assert {
            @include output {
              @include from-green-200(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#bbf7d0, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-green-300(0.11)') {
          @include assert {
            @include output {
              @include from-green-300(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#86efac, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-green-400(0.11)') {
          @include assert {
            @include output {
              @include from-green-400(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#4ade80, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-green-500(0.11)') {
          @include assert {
            @include output {
              @include from-green-500(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#22c55e, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-green-600(0.11)') {
          @include assert {
            @include output {
              @include from-green-600(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#16a34a, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-green-700(0.11)') {
          @include assert {
            @include output {
              @include from-green-700(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#15803d, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-green-800(0.11)') {
          @include assert {
            @include output {
              @include from-green-800(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#166534, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-green-900(0.11)') {
          @include assert {
            @include output {
              @include from-green-900(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#14532d, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-green-950(0.11)') {
          @include assert {
            @include output {
              @include from-green-950(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#052e16, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-emerald-50(0.11)') {
          @include assert {
            @include output {
              @include from-emerald-50(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#ecfdf5, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-emerald-100(0.11)') {
          @include assert {
            @include output {
              @include from-emerald-100(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#d1fae5, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-emerald-200(0.11)') {
          @include assert {
            @include output {
              @include from-emerald-200(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#a7f3d0, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-emerald-300(0.11)') {
          @include assert {
            @include output {
              @include from-emerald-300(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#6ee7b7, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-emerald-400(0.11)') {
          @include assert {
            @include output {
              @include from-emerald-400(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#34d399, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-emerald-500(0.11)') {
          @include assert {
            @include output {
              @include from-emerald-500(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#10b981, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-emerald-600(0.11)') {
          @include assert {
            @include output {
              @include from-emerald-600(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#059669, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-emerald-700(0.11)') {
          @include assert {
            @include output {
              @include from-emerald-700(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#047857, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-emerald-800(0.11)') {
          @include assert {
            @include output {
              @include from-emerald-800(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#065f46, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-emerald-900(0.11)') {
          @include assert {
            @include output {
              @include from-emerald-900(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#064e3b, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-emerald-950(0.11)') {
          @include assert {
            @include output {
              @include from-emerald-950(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#022c22, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-teal-50(0.11)') {
          @include assert {
            @include output {
              @include from-teal-50(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#f0fdfa, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-teal-100(0.11)') {
          @include assert {
            @include output {
              @include from-teal-100(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#ccfbf1, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-teal-200(0.11)') {
          @include assert {
            @include output {
              @include from-teal-200(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#99f6e4, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-teal-300(0.11)') {
          @include assert {
            @include output {
              @include from-teal-300(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#5eead4, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-teal-400(0.11)') {
          @include assert {
            @include output {
              @include from-teal-400(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#2dd4bf, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-teal-500(0.11)') {
          @include assert {
            @include output {
              @include from-teal-500(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#14b8a6, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-teal-600(0.11)') {
          @include assert {
            @include output {
              @include from-teal-600(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#0d9488, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-teal-700(0.11)') {
          @include assert {
            @include output {
              @include from-teal-700(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#0f766e, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-teal-800(0.11)') {
          @include assert {
            @include output {
              @include from-teal-800(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#115e59, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-teal-900(0.11)') {
          @include assert {
            @include output {
              @include from-teal-900(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#134e4a, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-teal-950(0.11)') {
          @include assert {
            @include output {
              @include from-teal-950(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#042f2e, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-cyan-50(0.11)') {
          @include assert {
            @include output {
              @include from-cyan-50(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#ecfeff, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-cyan-100(0.11)') {
          @include assert {
            @include output {
              @include from-cyan-100(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#cffafe, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-cyan-200(0.11)') {
          @include assert {
            @include output {
              @include from-cyan-200(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#a5f3fc, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-cyan-300(0.11)') {
          @include assert {
            @include output {
              @include from-cyan-300(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#67e8f9, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-cyan-400(0.11)') {
          @include assert {
            @include output {
              @include from-cyan-400(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#22d3ee, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-cyan-500(0.11)') {
          @include assert {
            @include output {
              @include from-cyan-500(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#06b6d4, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-cyan-600(0.11)') {
          @include assert {
            @include output {
              @include from-cyan-600(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#0891b2, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-cyan-700(0.11)') {
          @include assert {
            @include output {
              @include from-cyan-700(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#0e7490, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-cyan-800(0.11)') {
          @include assert {
            @include output {
              @include from-cyan-800(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#155e75, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-cyan-900(0.11)') {
          @include assert {
            @include output {
              @include from-cyan-900(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#164e63, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-cyan-950(0.11)') {
          @include assert {
            @include output {
              @include from-cyan-950(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#083344, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-sky-50(0.11)') {
          @include assert {
            @include output {
              @include from-sky-50(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#f0f9ff, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-sky-100(0.11)') {
          @include assert {
            @include output {
              @include from-sky-100(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#e0f2fe, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-sky-200(0.11)') {
          @include assert {
            @include output {
              @include from-sky-200(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#bae6fd, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-sky-300(0.11)') {
          @include assert {
            @include output {
              @include from-sky-300(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#7dd3fc, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-sky-400(0.11)') {
          @include assert {
            @include output {
              @include from-sky-400(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#38bdf8, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-sky-500(0.11)') {
          @include assert {
            @include output {
              @include from-sky-500(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#0ea5e9, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-sky-600(0.11)') {
          @include assert {
            @include output {
              @include from-sky-600(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#0284c7, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-sky-700(0.11)') {
          @include assert {
            @include output {
              @include from-sky-700(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#0369a1, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-sky-800(0.11)') {
          @include assert {
            @include output {
              @include from-sky-800(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#075985, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-sky-900(0.11)') {
          @include assert {
            @include output {
              @include from-sky-900(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#0c4a6e, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-sky-950(0.11)') {
          @include assert {
            @include output {
              @include from-sky-950(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#082f49, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-blue-50(0.11)') {
          @include assert {
            @include output {
              @include from-blue-50(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#eff6ff, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-blue-100(0.11)') {
          @include assert {
            @include output {
              @include from-blue-100(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#dbeafe, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-blue-200(0.11)') {
          @include assert {
            @include output {
              @include from-blue-200(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#bfdbfe, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-blue-300(0.11)') {
          @include assert {
            @include output {
              @include from-blue-300(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#93c5fd, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-blue-400(0.11)') {
          @include assert {
            @include output {
              @include from-blue-400(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#60a5fa, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-blue-500(0.11)') {
          @include assert {
            @include output {
              @include from-blue-500(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#3b82f6, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-blue-600(0.11)') {
          @include assert {
            @include output {
              @include from-blue-600(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#2563eb, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-blue-700(0.11)') {
          @include assert {
            @include output {
              @include from-blue-700(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#1d4ed8, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-blue-800(0.11)') {
          @include assert {
            @include output {
              @include from-blue-800(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#1e40af, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-blue-900(0.11)') {
          @include assert {
            @include output {
              @include from-blue-900(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#1e3a8a, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-blue-950(0.11)') {
          @include assert {
            @include output {
              @include from-blue-950(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#172554, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-indigo-50(0.11)') {
          @include assert {
            @include output {
              @include from-indigo-50(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#eef2ff, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-indigo-100(0.11)') {
          @include assert {
            @include output {
              @include from-indigo-100(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#e0e7ff, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-indigo-200(0.11)') {
          @include assert {
            @include output {
              @include from-indigo-200(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#c7d2fe, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-indigo-300(0.11)') {
          @include assert {
            @include output {
              @include from-indigo-300(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#a5b4fc, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-indigo-400(0.11)') {
          @include assert {
            @include output {
              @include from-indigo-400(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#818cf8, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-indigo-500(0.11)') {
          @include assert {
            @include output {
              @include from-indigo-500(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#6366f1, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-indigo-600(0.11)') {
          @include assert {
            @include output {
              @include from-indigo-600(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#4f46e5, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-indigo-700(0.11)') {
          @include assert {
            @include output {
              @include from-indigo-700(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#4338ca, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-indigo-800(0.11)') {
          @include assert {
            @include output {
              @include from-indigo-800(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#3730a3, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-indigo-900(0.11)') {
          @include assert {
            @include output {
              @include from-indigo-900(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#312e81, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-indigo-950(0.11)') {
          @include assert {
            @include output {
              @include from-indigo-950(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#1e1b4b, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-violet-50(0.11)') {
          @include assert {
            @include output {
              @include from-violet-50(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#f5f3ff, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-violet-100(0.11)') {
          @include assert {
            @include output {
              @include from-violet-100(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#ede9fe, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-violet-200(0.11)') {
          @include assert {
            @include output {
              @include from-violet-200(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#ddd6fe, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-violet-300(0.11)') {
          @include assert {
            @include output {
              @include from-violet-300(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#c4b5fd, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-violet-400(0.11)') {
          @include assert {
            @include output {
              @include from-violet-400(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#a78bfa, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-violet-500(0.11)') {
          @include assert {
            @include output {
              @include from-violet-500(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#8b5cf6, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-violet-600(0.11)') {
          @include assert {
            @include output {
              @include from-violet-600(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#7c3aed, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-violet-700(0.11)') {
          @include assert {
            @include output {
              @include from-violet-700(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#6d28d9, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-violet-800(0.11)') {
          @include assert {
            @include output {
              @include from-violet-800(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#5b21b6, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-violet-900(0.11)') {
          @include assert {
            @include output {
              @include from-violet-900(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#4c1d95, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-violet-950(0.11)') {
          @include assert {
            @include output {
              @include from-violet-950(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#2e1065, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-purple-50(0.11)') {
          @include assert {
            @include output {
              @include from-purple-50(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#faf5ff, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-purple-100(0.11)') {
          @include assert {
            @include output {
              @include from-purple-100(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#f3e8ff, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-purple-200(0.11)') {
          @include assert {
            @include output {
              @include from-purple-200(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#e9d5ff, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-purple-300(0.11)') {
          @include assert {
            @include output {
              @include from-purple-300(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#d8b4fe, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-purple-400(0.11)') {
          @include assert {
            @include output {
              @include from-purple-400(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#c084fc, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-purple-500(0.11)') {
          @include assert {
            @include output {
              @include from-purple-500(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#a855f7, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-purple-600(0.11)') {
          @include assert {
            @include output {
              @include from-purple-600(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#9333ea, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-purple-700(0.11)') {
          @include assert {
            @include output {
              @include from-purple-700(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#7e22ce, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-purple-800(0.11)') {
          @include assert {
            @include output {
              @include from-purple-800(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#6b21a8, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-purple-900(0.11)') {
          @include assert {
            @include output {
              @include from-purple-900(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#581c87, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-purple-950(0.11)') {
          @include assert {
            @include output {
              @include from-purple-950(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#3b0764, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-fuchsia-50(0.11)') {
          @include assert {
            @include output {
              @include from-fuchsia-50(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#fdf4ff, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-fuchsia-100(0.11)') {
          @include assert {
            @include output {
              @include from-fuchsia-100(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#fae8ff, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-fuchsia-200(0.11)') {
          @include assert {
            @include output {
              @include from-fuchsia-200(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#f5d0fe, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-fuchsia-300(0.11)') {
          @include assert {
            @include output {
              @include from-fuchsia-300(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#f0abfc, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-fuchsia-400(0.11)') {
          @include assert {
            @include output {
              @include from-fuchsia-400(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#e879f9, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-fuchsia-500(0.11)') {
          @include assert {
            @include output {
              @include from-fuchsia-500(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#d946ef, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-fuchsia-600(0.11)') {
          @include assert {
            @include output {
              @include from-fuchsia-600(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#c026d3, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-fuchsia-700(0.11)') {
          @include assert {
            @include output {
              @include from-fuchsia-700(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#a21caf, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-fuchsia-800(0.11)') {
          @include assert {
            @include output {
              @include from-fuchsia-800(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#86198f, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-fuchsia-900(0.11)') {
          @include assert {
            @include output {
              @include from-fuchsia-900(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#701a75, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-fuchsia-950(0.11)') {
          @include assert {
            @include output {
              @include from-fuchsia-950(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#4a044e, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-pink-50(0.11)') {
          @include assert {
            @include output {
              @include from-pink-50(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#fdf2f8, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-pink-100(0.11)') {
          @include assert {
            @include output {
              @include from-pink-100(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#fce7f3, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-pink-200(0.11)') {
          @include assert {
            @include output {
              @include from-pink-200(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#fbcfe8, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-pink-300(0.11)') {
          @include assert {
            @include output {
              @include from-pink-300(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#f9a8d4, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-pink-400(0.11)') {
          @include assert {
            @include output {
              @include from-pink-400(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#f472b6, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-pink-500(0.11)') {
          @include assert {
            @include output {
              @include from-pink-500(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#ec4899, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-pink-600(0.11)') {
          @include assert {
            @include output {
              @include from-pink-600(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#db2777, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-pink-700(0.11)') {
          @include assert {
            @include output {
              @include from-pink-700(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#be185d, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-pink-800(0.11)') {
          @include assert {
            @include output {
              @include from-pink-800(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#9d174d, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-pink-900(0.11)') {
          @include assert {
            @include output {
              @include from-pink-900(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#831843, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-pink-950(0.11)') {
          @include assert {
            @include output {
              @include from-pink-950(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#500724, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-rose-50(0.11)') {
          @include assert {
            @include output {
              @include from-rose-50(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#fff1f2, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-rose-100(0.11)') {
          @include assert {
            @include output {
              @include from-rose-100(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#ffe4e6, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-rose-200(0.11)') {
          @include assert {
            @include output {
              @include from-rose-200(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#fecdd3, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-rose-300(0.11)') {
          @include assert {
            @include output {
              @include from-rose-300(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#fda4af, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-rose-400(0.11)') {
          @include assert {
            @include output {
              @include from-rose-400(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#fb7185, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-rose-500(0.11)') {
          @include assert {
            @include output {
              @include from-rose-500(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#f43f5e, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-rose-600(0.11)') {
          @include assert {
            @include output {
              @include from-rose-600(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#e11d48, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-rose-700(0.11)') {
          @include assert {
            @include output {
              @include from-rose-700(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#be123c, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-rose-800(0.11)') {
          @include assert {
            @include output {
              @include from-rose-800(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#9f1239, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-rose-900(0.11)') {
          @include assert {
            @include output {
              @include from-rose-900(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#881337, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-rose-950(0.11)') {
          @include assert {
            @include output {
              @include from-rose-950(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#4c0519, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('from-0\%') {
          @include assert {
            @include output {
              @include from-0\%;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff 0%, transparent);
            }
          }
        }

        @include it('from-5\%') {
          @include assert {
            @include output {
              @include from-5\%;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff 5%, transparent);
            }
          }
        }

        @include it('from-10\%') {
          @include assert {
            @include output {
              @include from-10\%;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff 10%, transparent);
            }
          }
        }

        @include it('from-15\%') {
          @include assert {
            @include output {
              @include from-15\%;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff 15%, transparent);
            }
          }
        }

        @include it('from-20\%') {
          @include assert {
            @include output {
              @include from-20\%;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff 20%, transparent);
            }
          }
        }

        @include it('from-25\%') {
          @include assert {
            @include output {
              @include from-25\%;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff 25%, transparent);
            }
          }
        }

        @include it('from-30\%') {
          @include assert {
            @include output {
              @include from-30\%;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff 30%, transparent);
            }
          }
        }

        @include it('from-35\%') {
          @include assert {
            @include output {
              @include from-35\%;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff 35%, transparent);
            }
          }
        }

        @include it('from-40\%') {
          @include assert {
            @include output {
              @include from-40\%;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff 40%, transparent);
            }
          }
        }

        @include it('from-45\%') {
          @include assert {
            @include output {
              @include from-45\%;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff 45%, transparent);
            }
          }
        }

        @include it('from-50\%') {
          @include assert {
            @include output {
              @include from-50\%;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff 50%, transparent);
            }
          }
        }

        @include it('from-55\%') {
          @include assert {
            @include output {
              @include from-55\%;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff 55%, transparent);
            }
          }
        }

        @include it('from-60\%') {
          @include assert {
            @include output {
              @include from-60\%;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff 60%, transparent);
            }
          }
        }

        @include it('from-65\%') {
          @include assert {
            @include output {
              @include from-65\%;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff 65%, transparent);
            }
          }
        }

        @include it('from-70\%') {
          @include assert {
            @include output {
              @include from-70\%;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff 70%, transparent);
            }
          }
        }

        @include it('from-75\%') {
          @include assert {
            @include output {
              @include from-75\%;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff 75%, transparent);
            }
          }
        }

        @include it('from-80\%') {
          @include assert {
            @include output {
              @include from-80\%;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff 80%, transparent);
            }
          }
        }

        @include it('from-85\%') {
          @include assert {
            @include output {
              @include from-85\%;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff 85%, transparent);
            }
          }
        }

        @include it('from-90\%') {
          @include assert {
            @include output {
              @include from-90\%;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff 90%, transparent);
            }
          }
        }

        @include it('from-95\%') {
          @include assert {
            @include output {
              @include from-95\%;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff 95%, transparent);
            }
          }
        }

        @include it('from-100\%') {
          @include assert {
            @include output {
              @include from-100\%;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff 100%, transparent);
            }
          }
        }
      }

      @include describe('group-via') {
        @include it('via-inherit') {
          @include assert {
            @include output {
              @include via-inherit;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: inherit !important;
            }
          }
        }

        @include it('via-current') {
          @include assert {
            @include output {
              @include via-current;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, currentColor, transparent);
            }
          }
        }

        @include it('via-transparent') {
          @include assert {
            @include output {
              @include via-transparent;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, transparent, transparent);
            }
          }
        }

        @include it('via-black') {
          @include assert {
            @include output {
              @include via-black;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, black, transparent);
            }
          }
        }

        @include it('via-white') {
          @include assert {
            @include output {
              @include via-white;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, white, transparent);
            }
          }
        }

        @include it('via-slate-50') {
          @include assert {
            @include output {
              @include via-slate-50;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #f8fafc, transparent);
            }
          }
        }

        @include it('via-slate-100') {
          @include assert {
            @include output {
              @include via-slate-100;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #f1f5f9, transparent);
            }
          }
        }

        @include it('via-slate-200') {
          @include assert {
            @include output {
              @include via-slate-200;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #e2e8f0, transparent);
            }
          }
        }

        @include it('via-slate-300') {
          @include assert {
            @include output {
              @include via-slate-300;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #cbd5e1, transparent);
            }
          }
        }

        @include it('via-slate-400') {
          @include assert {
            @include output {
              @include via-slate-400;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #94a3b8, transparent);
            }
          }
        }

        @include it('via-slate-500') {
          @include assert {
            @include output {
              @include via-slate-500;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #64748b, transparent);
            }
          }
        }

        @include it('via-slate-600') {
          @include assert {
            @include output {
              @include via-slate-600;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #475569, transparent);
            }
          }
        }

        @include it('via-slate-700') {
          @include assert {
            @include output {
              @include via-slate-700;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #334155, transparent);
            }
          }
        }

        @include it('via-slate-800') {
          @include assert {
            @include output {
              @include via-slate-800;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #1e293b, transparent);
            }
          }
        }

        @include it('via-slate-900') {
          @include assert {
            @include output {
              @include via-slate-900;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #0f172a, transparent);
            }
          }
        }

        @include it('via-slate-950') {
          @include assert {
            @include output {
              @include via-slate-950;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #020617, transparent);
            }
          }
        }

        @include it('via-gray-50') {
          @include assert {
            @include output {
              @include via-gray-50;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #f9fafb, transparent);
            }
          }
        }

        @include it('via-gray-100') {
          @include assert {
            @include output {
              @include via-gray-100;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #f3f4f6, transparent);
            }
          }
        }

        @include it('via-gray-200') {
          @include assert {
            @include output {
              @include via-gray-200;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #e5e7eb, transparent);
            }
          }
        }

        @include it('via-gray-300') {
          @include assert {
            @include output {
              @include via-gray-300;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #d1d5db, transparent);
            }
          }
        }

        @include it('via-gray-400') {
          @include assert {
            @include output {
              @include via-gray-400;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #9ca3af, transparent);
            }
          }
        }

        @include it('via-gray-500') {
          @include assert {
            @include output {
              @include via-gray-500;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #6b7280, transparent);
            }
          }
        }

        @include it('via-gray-600') {
          @include assert {
            @include output {
              @include via-gray-600;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #4b5563, transparent);
            }
          }
        }

        @include it('via-gray-700') {
          @include assert {
            @include output {
              @include via-gray-700;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #374151, transparent);
            }
          }
        }

        @include it('via-gray-800') {
          @include assert {
            @include output {
              @include via-gray-800;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #1f2937, transparent);
            }
          }
        }

        @include it('via-gray-900') {
          @include assert {
            @include output {
              @include via-gray-900;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #111827, transparent);
            }
          }
        }

        @include it('via-gray-950') {
          @include assert {
            @include output {
              @include via-gray-950;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #030712, transparent);
            }
          }
        }

        @include it('via-zinc-50') {
          @include assert {
            @include output {
              @include via-zinc-50;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #fafafa, transparent);
            }
          }
        }

        @include it('via-zinc-100') {
          @include assert {
            @include output {
              @include via-zinc-100;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #f4f4f5, transparent);
            }
          }
        }

        @include it('via-zinc-200') {
          @include assert {
            @include output {
              @include via-zinc-200;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #e4e4e7, transparent);
            }
          }
        }

        @include it('via-zinc-300') {
          @include assert {
            @include output {
              @include via-zinc-300;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #d4d4d8, transparent);
            }
          }
        }

        @include it('via-zinc-400') {
          @include assert {
            @include output {
              @include via-zinc-400;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #a1a1aa, transparent);
            }
          }
        }

        @include it('via-zinc-500') {
          @include assert {
            @include output {
              @include via-zinc-500;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #71717a, transparent);
            }
          }
        }

        @include it('via-zinc-600') {
          @include assert {
            @include output {
              @include via-zinc-600;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #52525b, transparent);
            }
          }
        }

        @include it('via-zinc-700') {
          @include assert {
            @include output {
              @include via-zinc-700;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #3f3f46, transparent);
            }
          }
        }

        @include it('via-zinc-800') {
          @include assert {
            @include output {
              @include via-zinc-800;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #27272a, transparent);
            }
          }
        }

        @include it('via-zinc-900') {
          @include assert {
            @include output {
              @include via-zinc-900;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #18181b, transparent);
            }
          }
        }

        @include it('via-zinc-950') {
          @include assert {
            @include output {
              @include via-zinc-950;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #09090b, transparent);
            }
          }
        }

        @include it('via-neutral-50') {
          @include assert {
            @include output {
              @include via-neutral-50;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #fafafa, transparent);
            }
          }
        }

        @include it('via-neutral-100') {
          @include assert {
            @include output {
              @include via-neutral-100;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, whitesmoke, transparent);
            }
          }
        }

        @include it('via-neutral-200') {
          @include assert {
            @include output {
              @include via-neutral-200;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #e5e5e5, transparent);
            }
          }
        }

        @include it('via-neutral-300') {
          @include assert {
            @include output {
              @include via-neutral-300;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #d4d4d4, transparent);
            }
          }
        }

        @include it('via-neutral-400') {
          @include assert {
            @include output {
              @include via-neutral-400;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #a3a3a3, transparent);
            }
          }
        }

        @include it('via-neutral-500') {
          @include assert {
            @include output {
              @include via-neutral-500;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #737373, transparent);
            }
          }
        }

        @include it('via-neutral-600') {
          @include assert {
            @include output {
              @include via-neutral-600;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #525252, transparent);
            }
          }
        }

        @include it('via-neutral-700') {
          @include assert {
            @include output {
              @include via-neutral-700;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #404040, transparent);
            }
          }
        }

        @include it('via-neutral-800') {
          @include assert {
            @include output {
              @include via-neutral-800;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #262626, transparent);
            }
          }
        }

        @include it('via-neutral-900') {
          @include assert {
            @include output {
              @include via-neutral-900;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #171717, transparent);
            }
          }
        }

        @include it('via-neutral-950') {
          @include assert {
            @include output {
              @include via-neutral-950;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #0a0a0a, transparent);
            }
          }
        }

        @include it('via-stone-50') {
          @include assert {
            @include output {
              @include via-stone-50;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #fafaf9, transparent);
            }
          }
        }

        @include it('via-stone-100') {
          @include assert {
            @include output {
              @include via-stone-100;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #f5f5f4, transparent);
            }
          }
        }

        @include it('via-stone-200') {
          @include assert {
            @include output {
              @include via-stone-200;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #e7e5e4, transparent);
            }
          }
        }

        @include it('via-stone-300') {
          @include assert {
            @include output {
              @include via-stone-300;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #d6d3d1, transparent);
            }
          }
        }

        @include it('via-stone-400') {
          @include assert {
            @include output {
              @include via-stone-400;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #a8a29e, transparent);
            }
          }
        }

        @include it('via-stone-500') {
          @include assert {
            @include output {
              @include via-stone-500;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #78716c, transparent);
            }
          }
        }

        @include it('via-stone-600') {
          @include assert {
            @include output {
              @include via-stone-600;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #57534e, transparent);
            }
          }
        }

        @include it('via-stone-700') {
          @include assert {
            @include output {
              @include via-stone-700;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #44403c, transparent);
            }
          }
        }

        @include it('via-stone-800') {
          @include assert {
            @include output {
              @include via-stone-800;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #292524, transparent);
            }
          }
        }

        @include it('via-stone-900') {
          @include assert {
            @include output {
              @include via-stone-900;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #1c1917, transparent);
            }
          }
        }

        @include it('via-stone-950') {
          @include assert {
            @include output {
              @include via-stone-950;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #0c0a09, transparent);
            }
          }
        }

        @include it('via-red-50') {
          @include assert {
            @include output {
              @include via-red-50;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #fef2f2, transparent);
            }
          }
        }

        @include it('via-red-100') {
          @include assert {
            @include output {
              @include via-red-100;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #fee2e2, transparent);
            }
          }
        }

        @include it('via-red-200') {
          @include assert {
            @include output {
              @include via-red-200;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #fecaca, transparent);
            }
          }
        }

        @include it('via-red-300') {
          @include assert {
            @include output {
              @include via-red-300;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #fca5a5, transparent);
            }
          }
        }

        @include it('via-red-400') {
          @include assert {
            @include output {
              @include via-red-400;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #f87171, transparent);
            }
          }
        }

        @include it('via-red-500') {
          @include assert {
            @include output {
              @include via-red-500;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #ef4444, transparent);
            }
          }
        }

        @include it('via-red-600') {
          @include assert {
            @include output {
              @include via-red-600;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #dc2626, transparent);
            }
          }
        }

        @include it('via-red-700') {
          @include assert {
            @include output {
              @include via-red-700;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #b91c1c, transparent);
            }
          }
        }

        @include it('via-red-800') {
          @include assert {
            @include output {
              @include via-red-800;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #991b1b, transparent);
            }
          }
        }

        @include it('via-red-900') {
          @include assert {
            @include output {
              @include via-red-900;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #7f1d1d, transparent);
            }
          }
        }

        @include it('via-red-950') {
          @include assert {
            @include output {
              @include via-red-950;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #450a0a, transparent);
            }
          }
        }

        @include it('via-orange-50') {
          @include assert {
            @include output {
              @include via-orange-50;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #fff7ed, transparent);
            }
          }
        }

        @include it('via-orange-100') {
          @include assert {
            @include output {
              @include via-orange-100;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #ffedd5, transparent);
            }
          }
        }

        @include it('via-orange-200') {
          @include assert {
            @include output {
              @include via-orange-200;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #fed7aa, transparent);
            }
          }
        }

        @include it('via-orange-300') {
          @include assert {
            @include output {
              @include via-orange-300;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #fdba74, transparent);
            }
          }
        }

        @include it('via-orange-400') {
          @include assert {
            @include output {
              @include via-orange-400;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #fb923c, transparent);
            }
          }
        }

        @include it('via-orange-500') {
          @include assert {
            @include output {
              @include via-orange-500;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #f97316, transparent);
            }
          }
        }

        @include it('via-orange-600') {
          @include assert {
            @include output {
              @include via-orange-600;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #ea580c, transparent);
            }
          }
        }

        @include it('via-orange-700') {
          @include assert {
            @include output {
              @include via-orange-700;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #c2410c, transparent);
            }
          }
        }

        @include it('via-orange-800') {
          @include assert {
            @include output {
              @include via-orange-800;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #9a3412, transparent);
            }
          }
        }

        @include it('via-orange-900') {
          @include assert {
            @include output {
              @include via-orange-900;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #7c2d12, transparent);
            }
          }
        }

        @include it('via-orange-950') {
          @include assert {
            @include output {
              @include via-orange-950;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #431407, transparent);
            }
          }
        }

        @include it('via-amber-50') {
          @include assert {
            @include output {
              @include via-amber-50;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #fffbeb, transparent);
            }
          }
        }

        @include it('via-amber-100') {
          @include assert {
            @include output {
              @include via-amber-100;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #fef3c7, transparent);
            }
          }
        }

        @include it('via-amber-200') {
          @include assert {
            @include output {
              @include via-amber-200;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #fde68a, transparent);
            }
          }
        }

        @include it('via-amber-300') {
          @include assert {
            @include output {
              @include via-amber-300;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #fcd34d, transparent);
            }
          }
        }

        @include it('via-amber-400') {
          @include assert {
            @include output {
              @include via-amber-400;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #fbbf24, transparent);
            }
          }
        }

        @include it('via-amber-500') {
          @include assert {
            @include output {
              @include via-amber-500;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #f59e0b, transparent);
            }
          }
        }

        @include it('via-amber-600') {
          @include assert {
            @include output {
              @include via-amber-600;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #d97706, transparent);
            }
          }
        }

        @include it('via-amber-700') {
          @include assert {
            @include output {
              @include via-amber-700;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #b45309, transparent);
            }
          }
        }

        @include it('via-amber-800') {
          @include assert {
            @include output {
              @include via-amber-800;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #92400e, transparent);
            }
          }
        }

        @include it('via-amber-900') {
          @include assert {
            @include output {
              @include via-amber-900;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #78350f, transparent);
            }
          }
        }

        @include it('via-amber-950') {
          @include assert {
            @include output {
              @include via-amber-950;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #451a03, transparent);
            }
          }
        }

        @include it('via-yellow-50') {
          @include assert {
            @include output {
              @include via-yellow-50;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #fefce8, transparent);
            }
          }
        }

        @include it('via-yellow-100') {
          @include assert {
            @include output {
              @include via-yellow-100;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #fef9c3, transparent);
            }
          }
        }

        @include it('via-yellow-200') {
          @include assert {
            @include output {
              @include via-yellow-200;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #fef08a, transparent);
            }
          }
        }

        @include it('via-yellow-300') {
          @include assert {
            @include output {
              @include via-yellow-300;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #fde047, transparent);
            }
          }
        }

        @include it('via-yellow-400') {
          @include assert {
            @include output {
              @include via-yellow-400;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #facc15, transparent);
            }
          }
        }

        @include it('via-yellow-500') {
          @include assert {
            @include output {
              @include via-yellow-500;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #eab308, transparent);
            }
          }
        }

        @include it('via-yellow-600') {
          @include assert {
            @include output {
              @include via-yellow-600;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #ca8a04, transparent);
            }
          }
        }

        @include it('via-yellow-700') {
          @include assert {
            @include output {
              @include via-yellow-700;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #a16207, transparent);
            }
          }
        }

        @include it('via-yellow-800') {
          @include assert {
            @include output {
              @include via-yellow-800;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #854d0e, transparent);
            }
          }
        }

        @include it('via-yellow-900') {
          @include assert {
            @include output {
              @include via-yellow-900;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #713f12, transparent);
            }
          }
        }

        @include it('via-yellow-950') {
          @include assert {
            @include output {
              @include via-yellow-950;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #422006, transparent);
            }
          }
        }

        @include it('via-lime-50') {
          @include assert {
            @include output {
              @include via-lime-50;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #f7fee7, transparent);
            }
          }
        }

        @include it('via-lime-100') {
          @include assert {
            @include output {
              @include via-lime-100;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #ecfccb, transparent);
            }
          }
        }

        @include it('via-lime-200') {
          @include assert {
            @include output {
              @include via-lime-200;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #d9f99d, transparent);
            }
          }
        }

        @include it('via-lime-300') {
          @include assert {
            @include output {
              @include via-lime-300;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #bef264, transparent);
            }
          }
        }

        @include it('via-lime-400') {
          @include assert {
            @include output {
              @include via-lime-400;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #a3e635, transparent);
            }
          }
        }

        @include it('via-lime-500') {
          @include assert {
            @include output {
              @include via-lime-500;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #84cc16, transparent);
            }
          }
        }

        @include it('via-lime-600') {
          @include assert {
            @include output {
              @include via-lime-600;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #65a30d, transparent);
            }
          }
        }

        @include it('via-lime-700') {
          @include assert {
            @include output {
              @include via-lime-700;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #4d7c0f, transparent);
            }
          }
        }

        @include it('via-lime-800') {
          @include assert {
            @include output {
              @include via-lime-800;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #3f6212, transparent);
            }
          }
        }

        @include it('via-lime-900') {
          @include assert {
            @include output {
              @include via-lime-900;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #365314, transparent);
            }
          }
        }

        @include it('via-lime-950') {
          @include assert {
            @include output {
              @include via-lime-950;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #1a2e05, transparent);
            }
          }
        }

        @include it('via-green-50') {
          @include assert {
            @include output {
              @include via-green-50;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #f0fdf4, transparent);
            }
          }
        }

        @include it('via-green-100') {
          @include assert {
            @include output {
              @include via-green-100;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #dcfce7, transparent);
            }
          }
        }

        @include it('via-green-200') {
          @include assert {
            @include output {
              @include via-green-200;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #bbf7d0, transparent);
            }
          }
        }

        @include it('via-green-300') {
          @include assert {
            @include output {
              @include via-green-300;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #86efac, transparent);
            }
          }
        }

        @include it('via-green-400') {
          @include assert {
            @include output {
              @include via-green-400;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #4ade80, transparent);
            }
          }
        }

        @include it('via-green-500') {
          @include assert {
            @include output {
              @include via-green-500;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #22c55e, transparent);
            }
          }
        }

        @include it('via-green-600') {
          @include assert {
            @include output {
              @include via-green-600;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #16a34a, transparent);
            }
          }
        }

        @include it('via-green-700') {
          @include assert {
            @include output {
              @include via-green-700;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #15803d, transparent);
            }
          }
        }

        @include it('via-green-800') {
          @include assert {
            @include output {
              @include via-green-800;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #166534, transparent);
            }
          }
        }

        @include it('via-green-900') {
          @include assert {
            @include output {
              @include via-green-900;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #14532d, transparent);
            }
          }
        }

        @include it('via-green-950') {
          @include assert {
            @include output {
              @include via-green-950;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #052e16, transparent);
            }
          }
        }

        @include it('via-emerald-50') {
          @include assert {
            @include output {
              @include via-emerald-50;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #ecfdf5, transparent);
            }
          }
        }

        @include it('via-emerald-100') {
          @include assert {
            @include output {
              @include via-emerald-100;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #d1fae5, transparent);
            }
          }
        }

        @include it('via-emerald-200') {
          @include assert {
            @include output {
              @include via-emerald-200;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #a7f3d0, transparent);
            }
          }
        }

        @include it('via-emerald-300') {
          @include assert {
            @include output {
              @include via-emerald-300;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #6ee7b7, transparent);
            }
          }
        }

        @include it('via-emerald-400') {
          @include assert {
            @include output {
              @include via-emerald-400;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #34d399, transparent);
            }
          }
        }

        @include it('via-emerald-500') {
          @include assert {
            @include output {
              @include via-emerald-500;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #10b981, transparent);
            }
          }
        }

        @include it('via-emerald-600') {
          @include assert {
            @include output {
              @include via-emerald-600;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #059669, transparent);
            }
          }
        }

        @include it('via-emerald-700') {
          @include assert {
            @include output {
              @include via-emerald-700;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #047857, transparent);
            }
          }
        }

        @include it('via-emerald-800') {
          @include assert {
            @include output {
              @include via-emerald-800;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #065f46, transparent);
            }
          }
        }

        @include it('via-emerald-900') {
          @include assert {
            @include output {
              @include via-emerald-900;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #064e3b, transparent);
            }
          }
        }

        @include it('via-emerald-950') {
          @include assert {
            @include output {
              @include via-emerald-950;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #022c22, transparent);
            }
          }
        }

        @include it('via-teal-50') {
          @include assert {
            @include output {
              @include via-teal-50;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #f0fdfa, transparent);
            }
          }
        }

        @include it('via-teal-100') {
          @include assert {
            @include output {
              @include via-teal-100;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #ccfbf1, transparent);
            }
          }
        }

        @include it('via-teal-200') {
          @include assert {
            @include output {
              @include via-teal-200;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #99f6e4, transparent);
            }
          }
        }

        @include it('via-teal-300') {
          @include assert {
            @include output {
              @include via-teal-300;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #5eead4, transparent);
            }
          }
        }

        @include it('via-teal-400') {
          @include assert {
            @include output {
              @include via-teal-400;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #2dd4bf, transparent);
            }
          }
        }

        @include it('via-teal-500') {
          @include assert {
            @include output {
              @include via-teal-500;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #14b8a6, transparent);
            }
          }
        }

        @include it('via-teal-600') {
          @include assert {
            @include output {
              @include via-teal-600;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #0d9488, transparent);
            }
          }
        }

        @include it('via-teal-700') {
          @include assert {
            @include output {
              @include via-teal-700;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #0f766e, transparent);
            }
          }
        }

        @include it('via-teal-800') {
          @include assert {
            @include output {
              @include via-teal-800;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #115e59, transparent);
            }
          }
        }

        @include it('via-teal-900') {
          @include assert {
            @include output {
              @include via-teal-900;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #134e4a, transparent);
            }
          }
        }

        @include it('via-teal-950') {
          @include assert {
            @include output {
              @include via-teal-950;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #042f2e, transparent);
            }
          }
        }

        @include it('via-cyan-50') {
          @include assert {
            @include output {
              @include via-cyan-50;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #ecfeff, transparent);
            }
          }
        }

        @include it('via-cyan-100') {
          @include assert {
            @include output {
              @include via-cyan-100;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #cffafe, transparent);
            }
          }
        }

        @include it('via-cyan-200') {
          @include assert {
            @include output {
              @include via-cyan-200;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #a5f3fc, transparent);
            }
          }
        }

        @include it('via-cyan-300') {
          @include assert {
            @include output {
              @include via-cyan-300;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #67e8f9, transparent);
            }
          }
        }

        @include it('via-cyan-400') {
          @include assert {
            @include output {
              @include via-cyan-400;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #22d3ee, transparent);
            }
          }
        }

        @include it('via-cyan-500') {
          @include assert {
            @include output {
              @include via-cyan-500;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #06b6d4, transparent);
            }
          }
        }

        @include it('via-cyan-600') {
          @include assert {
            @include output {
              @include via-cyan-600;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #0891b2, transparent);
            }
          }
        }

        @include it('via-cyan-700') {
          @include assert {
            @include output {
              @include via-cyan-700;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #0e7490, transparent);
            }
          }
        }

        @include it('via-cyan-800') {
          @include assert {
            @include output {
              @include via-cyan-800;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #155e75, transparent);
            }
          }
        }

        @include it('via-cyan-900') {
          @include assert {
            @include output {
              @include via-cyan-900;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #164e63, transparent);
            }
          }
        }

        @include it('via-cyan-950') {
          @include assert {
            @include output {
              @include via-cyan-950;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #083344, transparent);
            }
          }
        }

        @include it('via-sky-50') {
          @include assert {
            @include output {
              @include via-sky-50;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #f0f9ff, transparent);
            }
          }
        }

        @include it('via-sky-100') {
          @include assert {
            @include output {
              @include via-sky-100;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #e0f2fe, transparent);
            }
          }
        }

        @include it('via-sky-200') {
          @include assert {
            @include output {
              @include via-sky-200;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #bae6fd, transparent);
            }
          }
        }

        @include it('via-sky-300') {
          @include assert {
            @include output {
              @include via-sky-300;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #7dd3fc, transparent);
            }
          }
        }

        @include it('via-sky-400') {
          @include assert {
            @include output {
              @include via-sky-400;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #38bdf8, transparent);
            }
          }
        }

        @include it('via-sky-500') {
          @include assert {
            @include output {
              @include via-sky-500;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #0ea5e9, transparent);
            }
          }
        }

        @include it('via-sky-600') {
          @include assert {
            @include output {
              @include via-sky-600;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #0284c7, transparent);
            }
          }
        }

        @include it('via-sky-700') {
          @include assert {
            @include output {
              @include via-sky-700;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #0369a1, transparent);
            }
          }
        }

        @include it('via-sky-800') {
          @include assert {
            @include output {
              @include via-sky-800;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #075985, transparent);
            }
          }
        }

        @include it('via-sky-900') {
          @include assert {
            @include output {
              @include via-sky-900;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #0c4a6e, transparent);
            }
          }
        }

        @include it('via-sky-950') {
          @include assert {
            @include output {
              @include via-sky-950;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #082f49, transparent);
            }
          }
        }

        @include it('via-blue-50') {
          @include assert {
            @include output {
              @include via-blue-50;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #eff6ff, transparent);
            }
          }
        }

        @include it('via-blue-100') {
          @include assert {
            @include output {
              @include via-blue-100;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #dbeafe, transparent);
            }
          }
        }

        @include it('via-blue-200') {
          @include assert {
            @include output {
              @include via-blue-200;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #bfdbfe, transparent);
            }
          }
        }

        @include it('via-blue-300') {
          @include assert {
            @include output {
              @include via-blue-300;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #93c5fd, transparent);
            }
          }
        }

        @include it('via-blue-400') {
          @include assert {
            @include output {
              @include via-blue-400;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #60a5fa, transparent);
            }
          }
        }

        @include it('via-blue-500') {
          @include assert {
            @include output {
              @include via-blue-500;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #3b82f6, transparent);
            }
          }
        }

        @include it('via-blue-600') {
          @include assert {
            @include output {
              @include via-blue-600;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #2563eb, transparent);
            }
          }
        }

        @include it('via-blue-700') {
          @include assert {
            @include output {
              @include via-blue-700;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #1d4ed8, transparent);
            }
          }
        }

        @include it('via-blue-800') {
          @include assert {
            @include output {
              @include via-blue-800;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #1e40af, transparent);
            }
          }
        }

        @include it('via-blue-900') {
          @include assert {
            @include output {
              @include via-blue-900;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #1e3a8a, transparent);
            }
          }
        }

        @include it('via-blue-950') {
          @include assert {
            @include output {
              @include via-blue-950;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #172554, transparent);
            }
          }
        }

        @include it('via-indigo-50') {
          @include assert {
            @include output {
              @include via-indigo-50;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #eef2ff, transparent);
            }
          }
        }

        @include it('via-indigo-100') {
          @include assert {
            @include output {
              @include via-indigo-100;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #e0e7ff, transparent);
            }
          }
        }

        @include it('via-indigo-200') {
          @include assert {
            @include output {
              @include via-indigo-200;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #c7d2fe, transparent);
            }
          }
        }

        @include it('via-indigo-300') {
          @include assert {
            @include output {
              @include via-indigo-300;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #a5b4fc, transparent);
            }
          }
        }

        @include it('via-indigo-400') {
          @include assert {
            @include output {
              @include via-indigo-400;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #818cf8, transparent);
            }
          }
        }

        @include it('via-indigo-500') {
          @include assert {
            @include output {
              @include via-indigo-500;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #6366f1, transparent);
            }
          }
        }

        @include it('via-indigo-600') {
          @include assert {
            @include output {
              @include via-indigo-600;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #4f46e5, transparent);
            }
          }
        }

        @include it('via-indigo-700') {
          @include assert {
            @include output {
              @include via-indigo-700;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #4338ca, transparent);
            }
          }
        }

        @include it('via-indigo-800') {
          @include assert {
            @include output {
              @include via-indigo-800;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #3730a3, transparent);
            }
          }
        }

        @include it('via-indigo-900') {
          @include assert {
            @include output {
              @include via-indigo-900;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #312e81, transparent);
            }
          }
        }

        @include it('via-indigo-950') {
          @include assert {
            @include output {
              @include via-indigo-950;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #1e1b4b, transparent);
            }
          }
        }

        @include it('via-violet-50') {
          @include assert {
            @include output {
              @include via-violet-50;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #f5f3ff, transparent);
            }
          }
        }

        @include it('via-violet-100') {
          @include assert {
            @include output {
              @include via-violet-100;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #ede9fe, transparent);
            }
          }
        }

        @include it('via-violet-200') {
          @include assert {
            @include output {
              @include via-violet-200;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #ddd6fe, transparent);
            }
          }
        }

        @include it('via-violet-300') {
          @include assert {
            @include output {
              @include via-violet-300;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #c4b5fd, transparent);
            }
          }
        }

        @include it('via-violet-400') {
          @include assert {
            @include output {
              @include via-violet-400;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #a78bfa, transparent);
            }
          }
        }

        @include it('via-violet-500') {
          @include assert {
            @include output {
              @include via-violet-500;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #8b5cf6, transparent);
            }
          }
        }

        @include it('via-violet-600') {
          @include assert {
            @include output {
              @include via-violet-600;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #7c3aed, transparent);
            }
          }
        }

        @include it('via-violet-700') {
          @include assert {
            @include output {
              @include via-violet-700;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #6d28d9, transparent);
            }
          }
        }

        @include it('via-violet-800') {
          @include assert {
            @include output {
              @include via-violet-800;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #5b21b6, transparent);
            }
          }
        }

        @include it('via-violet-900') {
          @include assert {
            @include output {
              @include via-violet-900;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #4c1d95, transparent);
            }
          }
        }

        @include it('via-violet-950') {
          @include assert {
            @include output {
              @include via-violet-950;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #2e1065, transparent);
            }
          }
        }

        @include it('via-purple-50') {
          @include assert {
            @include output {
              @include via-purple-50;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #faf5ff, transparent);
            }
          }
        }

        @include it('via-purple-100') {
          @include assert {
            @include output {
              @include via-purple-100;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #f3e8ff, transparent);
            }
          }
        }

        @include it('via-purple-200') {
          @include assert {
            @include output {
              @include via-purple-200;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #e9d5ff, transparent);
            }
          }
        }

        @include it('via-purple-300') {
          @include assert {
            @include output {
              @include via-purple-300;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #d8b4fe, transparent);
            }
          }
        }

        @include it('via-purple-400') {
          @include assert {
            @include output {
              @include via-purple-400;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #c084fc, transparent);
            }
          }
        }

        @include it('via-purple-500') {
          @include assert {
            @include output {
              @include via-purple-500;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #a855f7, transparent);
            }
          }
        }

        @include it('via-purple-600') {
          @include assert {
            @include output {
              @include via-purple-600;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #9333ea, transparent);
            }
          }
        }

        @include it('via-purple-700') {
          @include assert {
            @include output {
              @include via-purple-700;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #7e22ce, transparent);
            }
          }
        }

        @include it('via-purple-800') {
          @include assert {
            @include output {
              @include via-purple-800;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #6b21a8, transparent);
            }
          }
        }

        @include it('via-purple-900') {
          @include assert {
            @include output {
              @include via-purple-900;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #581c87, transparent);
            }
          }
        }

        @include it('via-purple-950') {
          @include assert {
            @include output {
              @include via-purple-950;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #3b0764, transparent);
            }
          }
        }

        @include it('via-fuchsia-50') {
          @include assert {
            @include output {
              @include via-fuchsia-50;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #fdf4ff, transparent);
            }
          }
        }

        @include it('via-fuchsia-100') {
          @include assert {
            @include output {
              @include via-fuchsia-100;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #fae8ff, transparent);
            }
          }
        }

        @include it('via-fuchsia-200') {
          @include assert {
            @include output {
              @include via-fuchsia-200;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #f5d0fe, transparent);
            }
          }
        }

        @include it('via-fuchsia-300') {
          @include assert {
            @include output {
              @include via-fuchsia-300;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #f0abfc, transparent);
            }
          }
        }

        @include it('via-fuchsia-400') {
          @include assert {
            @include output {
              @include via-fuchsia-400;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #e879f9, transparent);
            }
          }
        }

        @include it('via-fuchsia-500') {
          @include assert {
            @include output {
              @include via-fuchsia-500;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #d946ef, transparent);
            }
          }
        }

        @include it('via-fuchsia-600') {
          @include assert {
            @include output {
              @include via-fuchsia-600;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #c026d3, transparent);
            }
          }
        }

        @include it('via-fuchsia-700') {
          @include assert {
            @include output {
              @include via-fuchsia-700;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #a21caf, transparent);
            }
          }
        }

        @include it('via-fuchsia-800') {
          @include assert {
            @include output {
              @include via-fuchsia-800;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #86198f, transparent);
            }
          }
        }

        @include it('via-fuchsia-900') {
          @include assert {
            @include output {
              @include via-fuchsia-900;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #701a75, transparent);
            }
          }
        }

        @include it('via-fuchsia-950') {
          @include assert {
            @include output {
              @include via-fuchsia-950;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #4a044e, transparent);
            }
          }
        }

        @include it('via-pink-50') {
          @include assert {
            @include output {
              @include via-pink-50;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #fdf2f8, transparent);
            }
          }
        }

        @include it('via-pink-100') {
          @include assert {
            @include output {
              @include via-pink-100;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #fce7f3, transparent);
            }
          }
        }

        @include it('via-pink-200') {
          @include assert {
            @include output {
              @include via-pink-200;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #fbcfe8, transparent);
            }
          }
        }

        @include it('via-pink-300') {
          @include assert {
            @include output {
              @include via-pink-300;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #f9a8d4, transparent);
            }
          }
        }

        @include it('via-pink-400') {
          @include assert {
            @include output {
              @include via-pink-400;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #f472b6, transparent);
            }
          }
        }

        @include it('via-pink-500') {
          @include assert {
            @include output {
              @include via-pink-500;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #ec4899, transparent);
            }
          }
        }

        @include it('via-pink-600') {
          @include assert {
            @include output {
              @include via-pink-600;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #db2777, transparent);
            }
          }
        }

        @include it('via-pink-700') {
          @include assert {
            @include output {
              @include via-pink-700;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #be185d, transparent);
            }
          }
        }

        @include it('via-pink-800') {
          @include assert {
            @include output {
              @include via-pink-800;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #9d174d, transparent);
            }
          }
        }

        @include it('via-pink-900') {
          @include assert {
            @include output {
              @include via-pink-900;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #831843, transparent);
            }
          }
        }

        @include it('via-pink-950') {
          @include assert {
            @include output {
              @include via-pink-950;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #500724, transparent);
            }
          }
        }

        @include it('via-rose-50') {
          @include assert {
            @include output {
              @include via-rose-50;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #fff1f2, transparent);
            }
          }
        }

        @include it('via-rose-100') {
          @include assert {
            @include output {
              @include via-rose-100;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #ffe4e6, transparent);
            }
          }
        }

        @include it('via-rose-200') {
          @include assert {
            @include output {
              @include via-rose-200;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #fecdd3, transparent);
            }
          }
        }

        @include it('via-rose-300') {
          @include assert {
            @include output {
              @include via-rose-300;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #fda4af, transparent);
            }
          }
        }

        @include it('via-rose-400') {
          @include assert {
            @include output {
              @include via-rose-400;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #fb7185, transparent);
            }
          }
        }

        @include it('via-rose-500') {
          @include assert {
            @include output {
              @include via-rose-500;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #f43f5e, transparent);
            }
          }
        }

        @include it('via-rose-600') {
          @include assert {
            @include output {
              @include via-rose-600;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #e11d48, transparent);
            }
          }
        }

        @include it('via-rose-700') {
          @include assert {
            @include output {
              @include via-rose-700;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #be123c, transparent);
            }
          }
        }

        @include it('via-rose-800') {
          @include assert {
            @include output {
              @include via-rose-800;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #9f1239, transparent);
            }
          }
        }

        @include it('via-rose-900') {
          @include assert {
            @include output {
              @include via-rose-900;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #881337, transparent);
            }
          }
        }

        @include it('via-rose-950') {
          @include assert {
            @include output {
              @include via-rose-950;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #4c0519, transparent);
            }
          }
        }

        @include it('via-black(0.11)') {
          @include assert {
            @include output {
              @include via-black(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#000, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-white(0.11)') {
          @include assert {
            @include output {
              @include via-white(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#fff, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-slate-50(0.11)') {
          @include assert {
            @include output {
              @include via-slate-50(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#f8fafc, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-slate-100(0.11)') {
          @include assert {
            @include output {
              @include via-slate-100(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#f1f5f9, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-slate-200(0.11)') {
          @include assert {
            @include output {
              @include via-slate-200(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#e2e8f0, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-slate-300(0.11)') {
          @include assert {
            @include output {
              @include via-slate-300(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#cbd5e1, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-slate-400(0.11)') {
          @include assert {
            @include output {
              @include via-slate-400(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#94a3b8, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-slate-500(0.11)') {
          @include assert {
            @include output {
              @include via-slate-500(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#64748b, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-slate-600(0.11)') {
          @include assert {
            @include output {
              @include via-slate-600(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#475569, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-slate-700(0.11)') {
          @include assert {
            @include output {
              @include via-slate-700(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#334155, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-slate-800(0.11)') {
          @include assert {
            @include output {
              @include via-slate-800(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#1e293b, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-slate-900(0.11)') {
          @include assert {
            @include output {
              @include via-slate-900(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#0f172a, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-slate-950(0.11)') {
          @include assert {
            @include output {
              @include via-slate-950(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#020617, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-gray-50(0.11)') {
          @include assert {
            @include output {
              @include via-gray-50(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#f9fafb, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-gray-100(0.11)') {
          @include assert {
            @include output {
              @include via-gray-100(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#f3f4f6, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-gray-200(0.11)') {
          @include assert {
            @include output {
              @include via-gray-200(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#e5e7eb, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-gray-300(0.11)') {
          @include assert {
            @include output {
              @include via-gray-300(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#d1d5db, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-gray-400(0.11)') {
          @include assert {
            @include output {
              @include via-gray-400(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#9ca3af, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-gray-500(0.11)') {
          @include assert {
            @include output {
              @include via-gray-500(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#6b7280, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-gray-600(0.11)') {
          @include assert {
            @include output {
              @include via-gray-600(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#4b5563, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-gray-700(0.11)') {
          @include assert {
            @include output {
              @include via-gray-700(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#374151, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-gray-800(0.11)') {
          @include assert {
            @include output {
              @include via-gray-800(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#1f2937, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-gray-900(0.11)') {
          @include assert {
            @include output {
              @include via-gray-900(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#111827, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-gray-950(0.11)') {
          @include assert {
            @include output {
              @include via-gray-950(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#030712, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-zinc-50(0.11)') {
          @include assert {
            @include output {
              @include via-zinc-50(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#fafafa, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-zinc-100(0.11)') {
          @include assert {
            @include output {
              @include via-zinc-100(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#f4f4f5, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-zinc-200(0.11)') {
          @include assert {
            @include output {
              @include via-zinc-200(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#e4e4e7, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-zinc-300(0.11)') {
          @include assert {
            @include output {
              @include via-zinc-300(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#d4d4d8, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-zinc-400(0.11)') {
          @include assert {
            @include output {
              @include via-zinc-400(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#a1a1aa, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-zinc-500(0.11)') {
          @include assert {
            @include output {
              @include via-zinc-500(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#71717a, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-zinc-600(0.11)') {
          @include assert {
            @include output {
              @include via-zinc-600(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#52525b, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-zinc-700(0.11)') {
          @include assert {
            @include output {
              @include via-zinc-700(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#3f3f46, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-zinc-800(0.11)') {
          @include assert {
            @include output {
              @include via-zinc-800(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#27272a, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-zinc-900(0.11)') {
          @include assert {
            @include output {
              @include via-zinc-900(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#18181b, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-zinc-950(0.11)') {
          @include assert {
            @include output {
              @include via-zinc-950(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#09090b, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-neutral-50(0.11)') {
          @include assert {
            @include output {
              @include via-neutral-50(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#fafafa, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-neutral-100(0.11)') {
          @include assert {
            @include output {
              @include via-neutral-100(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#f5f5f5, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-neutral-200(0.11)') {
          @include assert {
            @include output {
              @include via-neutral-200(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#e5e5e5, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-neutral-300(0.11)') {
          @include assert {
            @include output {
              @include via-neutral-300(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#d4d4d4, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-neutral-400(0.11)') {
          @include assert {
            @include output {
              @include via-neutral-400(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#a3a3a3, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-neutral-500(0.11)') {
          @include assert {
            @include output {
              @include via-neutral-500(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#737373, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-neutral-600(0.11)') {
          @include assert {
            @include output {
              @include via-neutral-600(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#525252, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-neutral-700(0.11)') {
          @include assert {
            @include output {
              @include via-neutral-700(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#404040, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-neutral-800(0.11)') {
          @include assert {
            @include output {
              @include via-neutral-800(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#262626, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-neutral-900(0.11)') {
          @include assert {
            @include output {
              @include via-neutral-900(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#171717, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-neutral-950(0.11)') {
          @include assert {
            @include output {
              @include via-neutral-950(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#0a0a0a, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-stone-50(0.11)') {
          @include assert {
            @include output {
              @include via-stone-50(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#fafaf9, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-stone-100(0.11)') {
          @include assert {
            @include output {
              @include via-stone-100(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#f5f5f4, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-stone-200(0.11)') {
          @include assert {
            @include output {
              @include via-stone-200(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#e7e5e4, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-stone-300(0.11)') {
          @include assert {
            @include output {
              @include via-stone-300(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#d6d3d1, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-stone-400(0.11)') {
          @include assert {
            @include output {
              @include via-stone-400(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#a8a29e, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-stone-500(0.11)') {
          @include assert {
            @include output {
              @include via-stone-500(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#78716c, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-stone-600(0.11)') {
          @include assert {
            @include output {
              @include via-stone-600(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#57534e, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-stone-700(0.11)') {
          @include assert {
            @include output {
              @include via-stone-700(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#44403c, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-stone-800(0.11)') {
          @include assert {
            @include output {
              @include via-stone-800(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#292524, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-stone-900(0.11)') {
          @include assert {
            @include output {
              @include via-stone-900(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#1c1917, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-stone-950(0.11)') {
          @include assert {
            @include output {
              @include via-stone-950(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#0c0a09, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-red-50(0.11)') {
          @include assert {
            @include output {
              @include via-red-50(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#fef2f2, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-red-100(0.11)') {
          @include assert {
            @include output {
              @include via-red-100(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#fee2e2, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-red-200(0.11)') {
          @include assert {
            @include output {
              @include via-red-200(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#fecaca, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-red-300(0.11)') {
          @include assert {
            @include output {
              @include via-red-300(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#fca5a5, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-red-400(0.11)') {
          @include assert {
            @include output {
              @include via-red-400(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#f87171, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-red-500(0.11)') {
          @include assert {
            @include output {
              @include via-red-500(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#ef4444, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-red-600(0.11)') {
          @include assert {
            @include output {
              @include via-red-600(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#dc2626, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-red-700(0.11)') {
          @include assert {
            @include output {
              @include via-red-700(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#b91c1c, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-red-800(0.11)') {
          @include assert {
            @include output {
              @include via-red-800(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#991b1b, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-red-900(0.11)') {
          @include assert {
            @include output {
              @include via-red-900(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#7f1d1d, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-red-950(0.11)') {
          @include assert {
            @include output {
              @include via-red-950(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#450a0a, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-orange-50(0.11)') {
          @include assert {
            @include output {
              @include via-orange-50(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#fff7ed, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-orange-100(0.11)') {
          @include assert {
            @include output {
              @include via-orange-100(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#ffedd5, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-orange-200(0.11)') {
          @include assert {
            @include output {
              @include via-orange-200(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#fed7aa, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-orange-300(0.11)') {
          @include assert {
            @include output {
              @include via-orange-300(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#fdba74, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-orange-400(0.11)') {
          @include assert {
            @include output {
              @include via-orange-400(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#fb923c, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-orange-500(0.11)') {
          @include assert {
            @include output {
              @include via-orange-500(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#f97316, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-orange-600(0.11)') {
          @include assert {
            @include output {
              @include via-orange-600(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#ea580c, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-orange-700(0.11)') {
          @include assert {
            @include output {
              @include via-orange-700(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#c2410c, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-orange-800(0.11)') {
          @include assert {
            @include output {
              @include via-orange-800(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#9a3412, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-orange-900(0.11)') {
          @include assert {
            @include output {
              @include via-orange-900(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#7c2d12, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-orange-950(0.11)') {
          @include assert {
            @include output {
              @include via-orange-950(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#431407, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-amber-50(0.11)') {
          @include assert {
            @include output {
              @include via-amber-50(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#fffbeb, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-amber-100(0.11)') {
          @include assert {
            @include output {
              @include via-amber-100(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#fef3c7, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-amber-200(0.11)') {
          @include assert {
            @include output {
              @include via-amber-200(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#fde68a, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-amber-300(0.11)') {
          @include assert {
            @include output {
              @include via-amber-300(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#fcd34d, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-amber-400(0.11)') {
          @include assert {
            @include output {
              @include via-amber-400(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#fbbf24, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-amber-500(0.11)') {
          @include assert {
            @include output {
              @include via-amber-500(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#f59e0b, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-amber-600(0.11)') {
          @include assert {
            @include output {
              @include via-amber-600(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#d97706, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-amber-700(0.11)') {
          @include assert {
            @include output {
              @include via-amber-700(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#b45309, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-amber-800(0.11)') {
          @include assert {
            @include output {
              @include via-amber-800(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#92400e, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-amber-900(0.11)') {
          @include assert {
            @include output {
              @include via-amber-900(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#78350f, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-amber-950(0.11)') {
          @include assert {
            @include output {
              @include via-amber-950(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#451a03, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-yellow-50(0.11)') {
          @include assert {
            @include output {
              @include via-yellow-50(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#fefce8, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-yellow-100(0.11)') {
          @include assert {
            @include output {
              @include via-yellow-100(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#fef9c3, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-yellow-200(0.11)') {
          @include assert {
            @include output {
              @include via-yellow-200(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#fef08a, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-yellow-300(0.11)') {
          @include assert {
            @include output {
              @include via-yellow-300(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#fde047, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-yellow-400(0.11)') {
          @include assert {
            @include output {
              @include via-yellow-400(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#facc15, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-yellow-500(0.11)') {
          @include assert {
            @include output {
              @include via-yellow-500(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#eab308, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-yellow-600(0.11)') {
          @include assert {
            @include output {
              @include via-yellow-600(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#ca8a04, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-yellow-700(0.11)') {
          @include assert {
            @include output {
              @include via-yellow-700(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#a16207, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-yellow-800(0.11)') {
          @include assert {
            @include output {
              @include via-yellow-800(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#854d0e, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-yellow-900(0.11)') {
          @include assert {
            @include output {
              @include via-yellow-900(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#713f12, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-yellow-950(0.11)') {
          @include assert {
            @include output {
              @include via-yellow-950(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#422006, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-lime-50(0.11)') {
          @include assert {
            @include output {
              @include via-lime-50(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#f7fee7, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-lime-100(0.11)') {
          @include assert {
            @include output {
              @include via-lime-100(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#ecfccb, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-lime-200(0.11)') {
          @include assert {
            @include output {
              @include via-lime-200(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#d9f99d, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-lime-300(0.11)') {
          @include assert {
            @include output {
              @include via-lime-300(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#bef264, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-lime-400(0.11)') {
          @include assert {
            @include output {
              @include via-lime-400(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#a3e635, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-lime-500(0.11)') {
          @include assert {
            @include output {
              @include via-lime-500(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#84cc16, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-lime-600(0.11)') {
          @include assert {
            @include output {
              @include via-lime-600(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#65a30d, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-lime-700(0.11)') {
          @include assert {
            @include output {
              @include via-lime-700(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#4d7c0f, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-lime-800(0.11)') {
          @include assert {
            @include output {
              @include via-lime-800(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#3f6212, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-lime-900(0.11)') {
          @include assert {
            @include output {
              @include via-lime-900(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#365314, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-lime-950(0.11)') {
          @include assert {
            @include output {
              @include via-lime-950(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#1a2e05, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-green-50(0.11)') {
          @include assert {
            @include output {
              @include via-green-50(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#f0fdf4, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-green-100(0.11)') {
          @include assert {
            @include output {
              @include via-green-100(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#dcfce7, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-green-200(0.11)') {
          @include assert {
            @include output {
              @include via-green-200(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#bbf7d0, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-green-300(0.11)') {
          @include assert {
            @include output {
              @include via-green-300(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#86efac, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-green-400(0.11)') {
          @include assert {
            @include output {
              @include via-green-400(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#4ade80, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-green-500(0.11)') {
          @include assert {
            @include output {
              @include via-green-500(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#22c55e, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-green-600(0.11)') {
          @include assert {
            @include output {
              @include via-green-600(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#16a34a, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-green-700(0.11)') {
          @include assert {
            @include output {
              @include via-green-700(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#15803d, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-green-800(0.11)') {
          @include assert {
            @include output {
              @include via-green-800(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#166534, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-green-900(0.11)') {
          @include assert {
            @include output {
              @include via-green-900(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#14532d, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-green-950(0.11)') {
          @include assert {
            @include output {
              @include via-green-950(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#052e16, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-emerald-50(0.11)') {
          @include assert {
            @include output {
              @include via-emerald-50(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#ecfdf5, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-emerald-100(0.11)') {
          @include assert {
            @include output {
              @include via-emerald-100(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#d1fae5, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-emerald-200(0.11)') {
          @include assert {
            @include output {
              @include via-emerald-200(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#a7f3d0, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-emerald-300(0.11)') {
          @include assert {
            @include output {
              @include via-emerald-300(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#6ee7b7, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-emerald-400(0.11)') {
          @include assert {
            @include output {
              @include via-emerald-400(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#34d399, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-emerald-500(0.11)') {
          @include assert {
            @include output {
              @include via-emerald-500(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#10b981, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-emerald-600(0.11)') {
          @include assert {
            @include output {
              @include via-emerald-600(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#059669, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-emerald-700(0.11)') {
          @include assert {
            @include output {
              @include via-emerald-700(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#047857, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-emerald-800(0.11)') {
          @include assert {
            @include output {
              @include via-emerald-800(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#065f46, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-emerald-900(0.11)') {
          @include assert {
            @include output {
              @include via-emerald-900(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#064e3b, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-emerald-950(0.11)') {
          @include assert {
            @include output {
              @include via-emerald-950(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#022c22, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-teal-50(0.11)') {
          @include assert {
            @include output {
              @include via-teal-50(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#f0fdfa, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-teal-100(0.11)') {
          @include assert {
            @include output {
              @include via-teal-100(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#ccfbf1, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-teal-200(0.11)') {
          @include assert {
            @include output {
              @include via-teal-200(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#99f6e4, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-teal-300(0.11)') {
          @include assert {
            @include output {
              @include via-teal-300(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#5eead4, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-teal-400(0.11)') {
          @include assert {
            @include output {
              @include via-teal-400(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#2dd4bf, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-teal-500(0.11)') {
          @include assert {
            @include output {
              @include via-teal-500(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#14b8a6, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-teal-600(0.11)') {
          @include assert {
            @include output {
              @include via-teal-600(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#0d9488, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-teal-700(0.11)') {
          @include assert {
            @include output {
              @include via-teal-700(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#0f766e, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-teal-800(0.11)') {
          @include assert {
            @include output {
              @include via-teal-800(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#115e59, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-teal-900(0.11)') {
          @include assert {
            @include output {
              @include via-teal-900(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#134e4a, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-teal-950(0.11)') {
          @include assert {
            @include output {
              @include via-teal-950(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#042f2e, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-cyan-50(0.11)') {
          @include assert {
            @include output {
              @include via-cyan-50(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#ecfeff, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-cyan-100(0.11)') {
          @include assert {
            @include output {
              @include via-cyan-100(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#cffafe, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-cyan-200(0.11)') {
          @include assert {
            @include output {
              @include via-cyan-200(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#a5f3fc, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-cyan-300(0.11)') {
          @include assert {
            @include output {
              @include via-cyan-300(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#67e8f9, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-cyan-400(0.11)') {
          @include assert {
            @include output {
              @include via-cyan-400(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#22d3ee, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-cyan-500(0.11)') {
          @include assert {
            @include output {
              @include via-cyan-500(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#06b6d4, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-cyan-600(0.11)') {
          @include assert {
            @include output {
              @include via-cyan-600(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#0891b2, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-cyan-700(0.11)') {
          @include assert {
            @include output {
              @include via-cyan-700(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#0e7490, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-cyan-800(0.11)') {
          @include assert {
            @include output {
              @include via-cyan-800(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#155e75, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-cyan-900(0.11)') {
          @include assert {
            @include output {
              @include via-cyan-900(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#164e63, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-cyan-950(0.11)') {
          @include assert {
            @include output {
              @include via-cyan-950(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#083344, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-sky-50(0.11)') {
          @include assert {
            @include output {
              @include via-sky-50(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#f0f9ff, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-sky-100(0.11)') {
          @include assert {
            @include output {
              @include via-sky-100(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#e0f2fe, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-sky-200(0.11)') {
          @include assert {
            @include output {
              @include via-sky-200(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#bae6fd, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-sky-300(0.11)') {
          @include assert {
            @include output {
              @include via-sky-300(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#7dd3fc, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-sky-400(0.11)') {
          @include assert {
            @include output {
              @include via-sky-400(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#38bdf8, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-sky-500(0.11)') {
          @include assert {
            @include output {
              @include via-sky-500(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#0ea5e9, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-sky-600(0.11)') {
          @include assert {
            @include output {
              @include via-sky-600(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#0284c7, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-sky-700(0.11)') {
          @include assert {
            @include output {
              @include via-sky-700(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#0369a1, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-sky-800(0.11)') {
          @include assert {
            @include output {
              @include via-sky-800(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#075985, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-sky-900(0.11)') {
          @include assert {
            @include output {
              @include via-sky-900(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#0c4a6e, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-sky-950(0.11)') {
          @include assert {
            @include output {
              @include via-sky-950(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#082f49, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-blue-50(0.11)') {
          @include assert {
            @include output {
              @include via-blue-50(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#eff6ff, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-blue-100(0.11)') {
          @include assert {
            @include output {
              @include via-blue-100(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#dbeafe, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-blue-200(0.11)') {
          @include assert {
            @include output {
              @include via-blue-200(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#bfdbfe, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-blue-300(0.11)') {
          @include assert {
            @include output {
              @include via-blue-300(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#93c5fd, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-blue-400(0.11)') {
          @include assert {
            @include output {
              @include via-blue-400(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#60a5fa, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-blue-500(0.11)') {
          @include assert {
            @include output {
              @include via-blue-500(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#3b82f6, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-blue-600(0.11)') {
          @include assert {
            @include output {
              @include via-blue-600(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#2563eb, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-blue-700(0.11)') {
          @include assert {
            @include output {
              @include via-blue-700(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#1d4ed8, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-blue-800(0.11)') {
          @include assert {
            @include output {
              @include via-blue-800(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#1e40af, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-blue-900(0.11)') {
          @include assert {
            @include output {
              @include via-blue-900(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#1e3a8a, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-blue-950(0.11)') {
          @include assert {
            @include output {
              @include via-blue-950(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#172554, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-indigo-50(0.11)') {
          @include assert {
            @include output {
              @include via-indigo-50(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#eef2ff, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-indigo-100(0.11)') {
          @include assert {
            @include output {
              @include via-indigo-100(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#e0e7ff, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-indigo-200(0.11)') {
          @include assert {
            @include output {
              @include via-indigo-200(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#c7d2fe, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-indigo-300(0.11)') {
          @include assert {
            @include output {
              @include via-indigo-300(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#a5b4fc, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-indigo-400(0.11)') {
          @include assert {
            @include output {
              @include via-indigo-400(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#818cf8, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-indigo-500(0.11)') {
          @include assert {
            @include output {
              @include via-indigo-500(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#6366f1, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-indigo-600(0.11)') {
          @include assert {
            @include output {
              @include via-indigo-600(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#4f46e5, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-indigo-700(0.11)') {
          @include assert {
            @include output {
              @include via-indigo-700(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#4338ca, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-indigo-800(0.11)') {
          @include assert {
            @include output {
              @include via-indigo-800(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#3730a3, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-indigo-900(0.11)') {
          @include assert {
            @include output {
              @include via-indigo-900(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#312e81, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-indigo-950(0.11)') {
          @include assert {
            @include output {
              @include via-indigo-950(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#1e1b4b, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-violet-50(0.11)') {
          @include assert {
            @include output {
              @include via-violet-50(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#f5f3ff, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-violet-100(0.11)') {
          @include assert {
            @include output {
              @include via-violet-100(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#ede9fe, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-violet-200(0.11)') {
          @include assert {
            @include output {
              @include via-violet-200(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#ddd6fe, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-violet-300(0.11)') {
          @include assert {
            @include output {
              @include via-violet-300(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#c4b5fd, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-violet-400(0.11)') {
          @include assert {
            @include output {
              @include via-violet-400(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#a78bfa, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-violet-500(0.11)') {
          @include assert {
            @include output {
              @include via-violet-500(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#8b5cf6, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-violet-600(0.11)') {
          @include assert {
            @include output {
              @include via-violet-600(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#7c3aed, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-violet-700(0.11)') {
          @include assert {
            @include output {
              @include via-violet-700(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#6d28d9, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-violet-800(0.11)') {
          @include assert {
            @include output {
              @include via-violet-800(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#5b21b6, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-violet-900(0.11)') {
          @include assert {
            @include output {
              @include via-violet-900(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#4c1d95, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-violet-950(0.11)') {
          @include assert {
            @include output {
              @include via-violet-950(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#2e1065, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-purple-50(0.11)') {
          @include assert {
            @include output {
              @include via-purple-50(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#faf5ff, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-purple-100(0.11)') {
          @include assert {
            @include output {
              @include via-purple-100(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#f3e8ff, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-purple-200(0.11)') {
          @include assert {
            @include output {
              @include via-purple-200(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#e9d5ff, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-purple-300(0.11)') {
          @include assert {
            @include output {
              @include via-purple-300(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#d8b4fe, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-purple-400(0.11)') {
          @include assert {
            @include output {
              @include via-purple-400(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#c084fc, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-purple-500(0.11)') {
          @include assert {
            @include output {
              @include via-purple-500(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#a855f7, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-purple-600(0.11)') {
          @include assert {
            @include output {
              @include via-purple-600(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#9333ea, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-purple-700(0.11)') {
          @include assert {
            @include output {
              @include via-purple-700(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#7e22ce, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-purple-800(0.11)') {
          @include assert {
            @include output {
              @include via-purple-800(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#6b21a8, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-purple-900(0.11)') {
          @include assert {
            @include output {
              @include via-purple-900(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#581c87, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-purple-950(0.11)') {
          @include assert {
            @include output {
              @include via-purple-950(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#3b0764, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-fuchsia-50(0.11)') {
          @include assert {
            @include output {
              @include via-fuchsia-50(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#fdf4ff, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-fuchsia-100(0.11)') {
          @include assert {
            @include output {
              @include via-fuchsia-100(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#fae8ff, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-fuchsia-200(0.11)') {
          @include assert {
            @include output {
              @include via-fuchsia-200(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#f5d0fe, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-fuchsia-300(0.11)') {
          @include assert {
            @include output {
              @include via-fuchsia-300(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#f0abfc, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-fuchsia-400(0.11)') {
          @include assert {
            @include output {
              @include via-fuchsia-400(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#e879f9, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-fuchsia-500(0.11)') {
          @include assert {
            @include output {
              @include via-fuchsia-500(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#d946ef, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-fuchsia-600(0.11)') {
          @include assert {
            @include output {
              @include via-fuchsia-600(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#c026d3, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-fuchsia-700(0.11)') {
          @include assert {
            @include output {
              @include via-fuchsia-700(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#a21caf, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-fuchsia-800(0.11)') {
          @include assert {
            @include output {
              @include via-fuchsia-800(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#86198f, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-fuchsia-900(0.11)') {
          @include assert {
            @include output {
              @include via-fuchsia-900(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#701a75, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-fuchsia-950(0.11)') {
          @include assert {
            @include output {
              @include via-fuchsia-950(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#4a044e, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-pink-50(0.11)') {
          @include assert {
            @include output {
              @include via-pink-50(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#fdf2f8, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-pink-100(0.11)') {
          @include assert {
            @include output {
              @include via-pink-100(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#fce7f3, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-pink-200(0.11)') {
          @include assert {
            @include output {
              @include via-pink-200(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#fbcfe8, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-pink-300(0.11)') {
          @include assert {
            @include output {
              @include via-pink-300(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#f9a8d4, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-pink-400(0.11)') {
          @include assert {
            @include output {
              @include via-pink-400(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#f472b6, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-pink-500(0.11)') {
          @include assert {
            @include output {
              @include via-pink-500(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#ec4899, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-pink-600(0.11)') {
          @include assert {
            @include output {
              @include via-pink-600(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#db2777, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-pink-700(0.11)') {
          @include assert {
            @include output {
              @include via-pink-700(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#be185d, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-pink-800(0.11)') {
          @include assert {
            @include output {
              @include via-pink-800(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#9d174d, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-pink-900(0.11)') {
          @include assert {
            @include output {
              @include via-pink-900(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#831843, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-pink-950(0.11)') {
          @include assert {
            @include output {
              @include via-pink-950(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#500724, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-rose-50(0.11)') {
          @include assert {
            @include output {
              @include via-rose-50(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#fff1f2, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-rose-100(0.11)') {
          @include assert {
            @include output {
              @include via-rose-100(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#ffe4e6, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-rose-200(0.11)') {
          @include assert {
            @include output {
              @include via-rose-200(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#fecdd3, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-rose-300(0.11)') {
          @include assert {
            @include output {
              @include via-rose-300(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#fda4af, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-rose-400(0.11)') {
          @include assert {
            @include output {
              @include via-rose-400(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#fb7185, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-rose-500(0.11)') {
          @include assert {
            @include output {
              @include via-rose-500(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#f43f5e, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-rose-600(0.11)') {
          @include assert {
            @include output {
              @include via-rose-600(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#e11d48, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-rose-700(0.11)') {
          @include assert {
            @include output {
              @include via-rose-700(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#be123c, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-rose-800(0.11)') {
          @include assert {
            @include output {
              @include via-rose-800(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#9f1239, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-rose-900(0.11)') {
          @include assert {
            @include output {
              @include via-rose-900(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#881337, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-rose-950(0.11)') {
          @include assert {
            @include output {
              @include via-rose-950(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#4c0519, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it('via-0\%') {
          @include assert {
            @include output {
              @include via-white;
              @include via-0\%;
              @include utils_reset-tw;
            }

            @include expect {
              & {
                background-image: linear-gradient(null, #fff, white, transparent);
              }

              & {
                background-image: linear-gradient(null, #fff, white 0%, transparent);
              }
            }
          }
        }

        @include it('via-5\%') {
          @include assert {
            @include output {
              @include via-white;
              @include via-5\%;
              @include utils_reset-tw;
            }

            @include expect {
              & {
                background-image: linear-gradient(null, #fff, white, transparent);
              }

              & {
                background-image: linear-gradient(null, #fff, white 5%, transparent);
              }
            }
          }
        }

        @include it('via-10\%') {
          @include assert {
            @include output {
              @include via-white;
              @include via-10\%;
              @include utils_reset-tw;
            }

            @include expect {
              & {
                background-image: linear-gradient(null, #fff, white, transparent);
              }

              & {
                background-image: linear-gradient(null, #fff, white 10%, transparent);
              }
            }
          }
        }

        @include it('via-15\%') {
          @include assert {
            @include output {
              @include via-white;
              @include via-15\%;
              @include utils_reset-tw;
            }

            @include expect {
              & {
                background-image: linear-gradient(null, #fff, white, transparent);
              }

              & {
                background-image: linear-gradient(null, #fff, white 15%, transparent);
              }
            }
          }
        }

        @include it('via-20\%') {
          @include assert {
            @include output {
              @include via-white;
              @include via-20\%;
              @include utils_reset-tw;
            }

            @include expect {
              & {
                background-image: linear-gradient(null, #fff, white, transparent);
              }

              & {
                background-image: linear-gradient(null, #fff, white 20%, transparent);
              }
            }
          }
        }

        @include it('via-25\%') {
          @include assert {
            @include output {
              @include via-white;
              @include via-25\%;
              @include utils_reset-tw;
            }

            @include expect {
              & {
                background-image: linear-gradient(null, #fff, white, transparent);
              }

              & {
                background-image: linear-gradient(null, #fff, white 25%, transparent);
              }
            }
          }
        }

        @include it('via-30\%') {
          @include assert {
            @include output {
              @include via-white;
              @include via-30\%;
              @include utils_reset-tw;
            }

            @include expect {
              & {
                background-image: linear-gradient(null, #fff, white, transparent);
              }

              & {
                background-image: linear-gradient(null, #fff, white 30%, transparent);
              }
            }
          }
        }

        @include it('via-35\%') {
          @include assert {
            @include output {
              @include via-white;
              @include via-35\%;
              @include utils_reset-tw;
            }

            @include expect {
              & {
                background-image: linear-gradient(null, #fff, white, transparent);
              }

              & {
                background-image: linear-gradient(null, #fff, white 35%, transparent);
              }
            }
          }
        }

        @include it('via-40\%') {
          @include assert {
            @include output {
              @include via-white;
              @include via-40\%;
              @include utils_reset-tw;
            }

            @include expect {
              & {
                background-image: linear-gradient(null, #fff, white, transparent);
              }

              & {
                background-image: linear-gradient(null, #fff, white 40%, transparent);
              }
            }
          }
        }

        @include it('via-45\%') {
          @include assert {
            @include output {
              @include via-white;
              @include via-45\%;
              @include utils_reset-tw;
            }

            @include expect {
              & {
                background-image: linear-gradient(null, #fff, white, transparent);
              }

              & {
                background-image: linear-gradient(null, #fff, white 45%, transparent);
              }
            }
          }
        }

        @include it('via-50\%') {
          @include assert {
            @include output {
              @include via-white;
              @include via-50\%;
              @include utils_reset-tw;
            }

            @include expect {
              & {
                background-image: linear-gradient(null, #fff, white, transparent);
              }

              & {
                background-image: linear-gradient(null, #fff, white 50%, transparent);
              }
            }
          }
        }

        @include it('via-55\%') {
          @include assert {
            @include output {
              @include via-white;
              @include via-55\%;
              @include utils_reset-tw;
            }

            @include expect {
              & {
                background-image: linear-gradient(null, #fff, white, transparent);
              }

              & {
                background-image: linear-gradient(null, #fff, white 55%, transparent);
              }
            }
          }
        }

        @include it('via-60\%') {
          @include assert {
            @include output {
              @include via-white;
              @include via-60\%;
              @include utils_reset-tw;
            }

            @include expect {
              & {
                background-image: linear-gradient(null, #fff, white, transparent);
              }

              & {
                background-image: linear-gradient(null, #fff, white 60%, transparent);
              }
            }
          }
        }

        @include it('via-65\%') {
          @include assert {
            @include output {
              @include via-white;
              @include via-65\%;
              @include utils_reset-tw;
            }

            @include expect {
              & {
                background-image: linear-gradient(null, #fff, white, transparent);
              }

              & {
                background-image: linear-gradient(null, #fff, white 65%, transparent);
              }
            }
          }
        }

        @include it('via-70\%') {
          @include assert {
            @include output {
              @include via-white;
              @include via-70\%;
              @include utils_reset-tw;
            }

            @include expect {
              & {
                background-image: linear-gradient(null, #fff, white, transparent);
              }

              & {
                background-image: linear-gradient(null, #fff, white 70%, transparent);
              }
            }
          }
        }

        @include it('via-75\%') {
          @include assert {
            @include output {
              @include via-white;
              @include via-75\%;
              @include utils_reset-tw;
            }

            @include expect {
              & {
                background-image: linear-gradient(null, #fff, white, transparent);
              }

              & {
                background-image: linear-gradient(null, #fff, white 75%, transparent);
              }
            }
          }
        }

        @include it('via-80\%') {
          @include assert {
            @include output {
              @include via-white;
              @include via-80\%;
              @include utils_reset-tw;
            }

            @include expect {
              & {
                background-image: linear-gradient(null, #fff, white, transparent);
              }

              & {
                background-image: linear-gradient(null, #fff, white 80%, transparent);
              }
            }
          }
        }

        @include it('via-85\%') {
          @include assert {
            @include output {
              @include via-white;
              @include via-85\%;
              @include utils_reset-tw;
            }

            @include expect {
              & {
                background-image: linear-gradient(null, #fff, white, transparent);
              }

              & {
                background-image: linear-gradient(null, #fff, white 85%, transparent);
              }
            }
          }
        }

        @include it('via-90\%') {
          @include assert {
            @include output {
              @include via-white;
              @include via-90\%;
              @include utils_reset-tw;
            }

            @include expect {
              & {
                background-image: linear-gradient(null, #fff, white, transparent);
              }

              & {
                background-image: linear-gradient(null, #fff, white 90%, transparent);
              }
            }
          }
        }

        @include it('via-95\%') {
          @include assert {
            @include output {
              @include via-white;
              @include via-95\%;
              @include utils_reset-tw;
            }

            @include expect {
              & {
                background-image: linear-gradient(null, #fff, white, transparent);
              }

              & {
                background-image: linear-gradient(null, #fff, white 95%, transparent);
              }
            }
          }
        }

        @include it('via-100\%') {
          @include assert {
            @include output {
              @include via-white;
              @include via-100\%;
              @include utils_reset-tw;
            }

            @include expect {
              & {
                background-image: linear-gradient(null, #fff, white, transparent);
              }

              & {
                background-image: linear-gradient(null, #fff, white 100%, transparent);
              }
            }
          }
        }
      }

      @include describe('group-to') {
        @include it('to-inherit') {
          @include assert {
            @include output {
              @include to-inherit;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: inherit !important;
            }
          }
        }

        @include it('to-current') {
          @include assert {
            @include output {
              @include to-current;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, currentColor);
            }
          }
        }

        @include it('to-transparent') {
          @include assert {
            @include output {
              @include to-transparent;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, transparent);
            }
          }
        }

        @include it('to-black') {
          @include assert {
            @include output {
              @include to-black;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, black);
            }
          }
        }

        @include it('to-white') {
          @include assert {
            @include output {
              @include to-white;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, white);
            }
          }
        }

        @include it('to-slate-50') {
          @include assert {
            @include output {
              @include to-slate-50;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #f8fafc);
            }
          }
        }

        @include it('to-slate-100') {
          @include assert {
            @include output {
              @include to-slate-100;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #f1f5f9);
            }
          }
        }

        @include it('to-slate-200') {
          @include assert {
            @include output {
              @include to-slate-200;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #e2e8f0);
            }
          }
        }

        @include it('to-slate-300') {
          @include assert {
            @include output {
              @include to-slate-300;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #cbd5e1);
            }
          }
        }

        @include it('to-slate-400') {
          @include assert {
            @include output {
              @include to-slate-400;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #94a3b8);
            }
          }
        }

        @include it('to-slate-500') {
          @include assert {
            @include output {
              @include to-slate-500;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #64748b);
            }
          }
        }

        @include it('to-slate-600') {
          @include assert {
            @include output {
              @include to-slate-600;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #475569);
            }
          }
        }

        @include it('to-slate-700') {
          @include assert {
            @include output {
              @include to-slate-700;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #334155);
            }
          }
        }

        @include it('to-slate-800') {
          @include assert {
            @include output {
              @include to-slate-800;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #1e293b);
            }
          }
        }

        @include it('to-slate-900') {
          @include assert {
            @include output {
              @include to-slate-900;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #0f172a);
            }
          }
        }

        @include it('to-slate-950') {
          @include assert {
            @include output {
              @include to-slate-950;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #020617);
            }
          }
        }

        @include it('to-gray-50') {
          @include assert {
            @include output {
              @include to-gray-50;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #f9fafb);
            }
          }
        }

        @include it('to-gray-100') {
          @include assert {
            @include output {
              @include to-gray-100;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #f3f4f6);
            }
          }
        }

        @include it('to-gray-200') {
          @include assert {
            @include output {
              @include to-gray-200;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #e5e7eb);
            }
          }
        }

        @include it('to-gray-300') {
          @include assert {
            @include output {
              @include to-gray-300;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #d1d5db);
            }
          }
        }

        @include it('to-gray-400') {
          @include assert {
            @include output {
              @include to-gray-400;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #9ca3af);
            }
          }
        }

        @include it('to-gray-500') {
          @include assert {
            @include output {
              @include to-gray-500;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #6b7280);
            }
          }
        }

        @include it('to-gray-600') {
          @include assert {
            @include output {
              @include to-gray-600;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #4b5563);
            }
          }
        }

        @include it('to-gray-700') {
          @include assert {
            @include output {
              @include to-gray-700;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #374151);
            }
          }
        }

        @include it('to-gray-800') {
          @include assert {
            @include output {
              @include to-gray-800;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #1f2937);
            }
          }
        }

        @include it('to-gray-900') {
          @include assert {
            @include output {
              @include to-gray-900;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #111827);
            }
          }
        }

        @include it('to-gray-950') {
          @include assert {
            @include output {
              @include to-gray-950;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #030712);
            }
          }
        }

        @include it('to-zinc-50') {
          @include assert {
            @include output {
              @include to-zinc-50;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #fafafa);
            }
          }
        }

        @include it('to-zinc-100') {
          @include assert {
            @include output {
              @include to-zinc-100;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #f4f4f5);
            }
          }
        }

        @include it('to-zinc-200') {
          @include assert {
            @include output {
              @include to-zinc-200;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #e4e4e7);
            }
          }
        }

        @include it('to-zinc-300') {
          @include assert {
            @include output {
              @include to-zinc-300;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #d4d4d8);
            }
          }
        }

        @include it('to-zinc-400') {
          @include assert {
            @include output {
              @include to-zinc-400;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #a1a1aa);
            }
          }
        }

        @include it('to-zinc-500') {
          @include assert {
            @include output {
              @include to-zinc-500;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #71717a);
            }
          }
        }

        @include it('to-zinc-600') {
          @include assert {
            @include output {
              @include to-zinc-600;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #52525b);
            }
          }
        }

        @include it('to-zinc-700') {
          @include assert {
            @include output {
              @include to-zinc-700;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #3f3f46);
            }
          }
        }

        @include it('to-zinc-800') {
          @include assert {
            @include output {
              @include to-zinc-800;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #27272a);
            }
          }
        }

        @include it('to-zinc-900') {
          @include assert {
            @include output {
              @include to-zinc-900;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #18181b);
            }
          }
        }

        @include it('to-zinc-950') {
          @include assert {
            @include output {
              @include to-zinc-950;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #09090b);
            }
          }
        }

        @include it('to-neutral-50') {
          @include assert {
            @include output {
              @include to-neutral-50;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #fafafa);
            }
          }
        }

        @include it('to-neutral-100') {
          @include assert {
            @include output {
              @include to-neutral-100;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, whitesmoke);
            }
          }
        }

        @include it('to-neutral-200') {
          @include assert {
            @include output {
              @include to-neutral-200;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #e5e5e5);
            }
          }
        }

        @include it('to-neutral-300') {
          @include assert {
            @include output {
              @include to-neutral-300;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #d4d4d4);
            }
          }
        }

        @include it('to-neutral-400') {
          @include assert {
            @include output {
              @include to-neutral-400;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #a3a3a3);
            }
          }
        }

        @include it('to-neutral-500') {
          @include assert {
            @include output {
              @include to-neutral-500;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #737373);
            }
          }
        }

        @include it('to-neutral-600') {
          @include assert {
            @include output {
              @include to-neutral-600;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #525252);
            }
          }
        }

        @include it('to-neutral-700') {
          @include assert {
            @include output {
              @include to-neutral-700;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #404040);
            }
          }
        }

        @include it('to-neutral-800') {
          @include assert {
            @include output {
              @include to-neutral-800;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #262626);
            }
          }
        }

        @include it('to-neutral-900') {
          @include assert {
            @include output {
              @include to-neutral-900;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #171717);
            }
          }
        }

        @include it('to-neutral-950') {
          @include assert {
            @include output {
              @include to-neutral-950;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #0a0a0a);
            }
          }
        }

        @include it('to-stone-50') {
          @include assert {
            @include output {
              @include to-stone-50;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #fafaf9);
            }
          }
        }

        @include it('to-stone-100') {
          @include assert {
            @include output {
              @include to-stone-100;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #f5f5f4);
            }
          }
        }

        @include it('to-stone-200') {
          @include assert {
            @include output {
              @include to-stone-200;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #e7e5e4);
            }
          }
        }

        @include it('to-stone-300') {
          @include assert {
            @include output {
              @include to-stone-300;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #d6d3d1);
            }
          }
        }

        @include it('to-stone-400') {
          @include assert {
            @include output {
              @include to-stone-400;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #a8a29e);
            }
          }
        }

        @include it('to-stone-500') {
          @include assert {
            @include output {
              @include to-stone-500;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #78716c);
            }
          }
        }

        @include it('to-stone-600') {
          @include assert {
            @include output {
              @include to-stone-600;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #57534e);
            }
          }
        }

        @include it('to-stone-700') {
          @include assert {
            @include output {
              @include to-stone-700;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #44403c);
            }
          }
        }

        @include it('to-stone-800') {
          @include assert {
            @include output {
              @include to-stone-800;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #292524);
            }
          }
        }

        @include it('to-stone-900') {
          @include assert {
            @include output {
              @include to-stone-900;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #1c1917);
            }
          }
        }

        @include it('to-stone-950') {
          @include assert {
            @include output {
              @include to-stone-950;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #0c0a09);
            }
          }
        }

        @include it('to-red-50') {
          @include assert {
            @include output {
              @include to-red-50;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #fef2f2);
            }
          }
        }

        @include it('to-red-100') {
          @include assert {
            @include output {
              @include to-red-100;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #fee2e2);
            }
          }
        }

        @include it('to-red-200') {
          @include assert {
            @include output {
              @include to-red-200;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #fecaca);
            }
          }
        }

        @include it('to-red-300') {
          @include assert {
            @include output {
              @include to-red-300;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #fca5a5);
            }
          }
        }

        @include it('to-red-400') {
          @include assert {
            @include output {
              @include to-red-400;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #f87171);
            }
          }
        }

        @include it('to-red-500') {
          @include assert {
            @include output {
              @include to-red-500;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #ef4444);
            }
          }
        }

        @include it('to-red-600') {
          @include assert {
            @include output {
              @include to-red-600;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #dc2626);
            }
          }
        }

        @include it('to-red-700') {
          @include assert {
            @include output {
              @include to-red-700;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #b91c1c);
            }
          }
        }

        @include it('to-red-800') {
          @include assert {
            @include output {
              @include to-red-800;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #991b1b);
            }
          }
        }

        @include it('to-red-900') {
          @include assert {
            @include output {
              @include to-red-900;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #7f1d1d);
            }
          }
        }

        @include it('to-red-950') {
          @include assert {
            @include output {
              @include to-red-950;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #450a0a);
            }
          }
        }

        @include it('to-orange-50') {
          @include assert {
            @include output {
              @include to-orange-50;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #fff7ed);
            }
          }
        }

        @include it('to-orange-100') {
          @include assert {
            @include output {
              @include to-orange-100;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #ffedd5);
            }
          }
        }

        @include it('to-orange-200') {
          @include assert {
            @include output {
              @include to-orange-200;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #fed7aa);
            }
          }
        }

        @include it('to-orange-300') {
          @include assert {
            @include output {
              @include to-orange-300;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #fdba74);
            }
          }
        }

        @include it('to-orange-400') {
          @include assert {
            @include output {
              @include to-orange-400;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #fb923c);
            }
          }
        }

        @include it('to-orange-500') {
          @include assert {
            @include output {
              @include to-orange-500;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #f97316);
            }
          }
        }

        @include it('to-orange-600') {
          @include assert {
            @include output {
              @include to-orange-600;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #ea580c);
            }
          }
        }

        @include it('to-orange-700') {
          @include assert {
            @include output {
              @include to-orange-700;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #c2410c);
            }
          }
        }

        @include it('to-orange-800') {
          @include assert {
            @include output {
              @include to-orange-800;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #9a3412);
            }
          }
        }

        @include it('to-orange-900') {
          @include assert {
            @include output {
              @include to-orange-900;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #7c2d12);
            }
          }
        }

        @include it('to-orange-950') {
          @include assert {
            @include output {
              @include to-orange-950;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #431407);
            }
          }
        }

        @include it('to-amber-50') {
          @include assert {
            @include output {
              @include to-amber-50;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #fffbeb);
            }
          }
        }

        @include it('to-amber-100') {
          @include assert {
            @include output {
              @include to-amber-100;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #fef3c7);
            }
          }
        }

        @include it('to-amber-200') {
          @include assert {
            @include output {
              @include to-amber-200;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #fde68a);
            }
          }
        }

        @include it('to-amber-300') {
          @include assert {
            @include output {
              @include to-amber-300;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #fcd34d);
            }
          }
        }

        @include it('to-amber-400') {
          @include assert {
            @include output {
              @include to-amber-400;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #fbbf24);
            }
          }
        }

        @include it('to-amber-500') {
          @include assert {
            @include output {
              @include to-amber-500;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #f59e0b);
            }
          }
        }

        @include it('to-amber-600') {
          @include assert {
            @include output {
              @include to-amber-600;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #d97706);
            }
          }
        }

        @include it('to-amber-700') {
          @include assert {
            @include output {
              @include to-amber-700;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #b45309);
            }
          }
        }

        @include it('to-amber-800') {
          @include assert {
            @include output {
              @include to-amber-800;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #92400e);
            }
          }
        }

        @include it('to-amber-900') {
          @include assert {
            @include output {
              @include to-amber-900;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #78350f);
            }
          }
        }

        @include it('to-amber-950') {
          @include assert {
            @include output {
              @include to-amber-950;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #451a03);
            }
          }
        }

        @include it('to-yellow-50') {
          @include assert {
            @include output {
              @include to-yellow-50;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #fefce8);
            }
          }
        }

        @include it('to-yellow-100') {
          @include assert {
            @include output {
              @include to-yellow-100;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #fef9c3);
            }
          }
        }

        @include it('to-yellow-200') {
          @include assert {
            @include output {
              @include to-yellow-200;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #fef08a);
            }
          }
        }

        @include it('to-yellow-300') {
          @include assert {
            @include output {
              @include to-yellow-300;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #fde047);
            }
          }
        }

        @include it('to-yellow-400') {
          @include assert {
            @include output {
              @include to-yellow-400;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #facc15);
            }
          }
        }

        @include it('to-yellow-500') {
          @include assert {
            @include output {
              @include to-yellow-500;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #eab308);
            }
          }
        }

        @include it('to-yellow-600') {
          @include assert {
            @include output {
              @include to-yellow-600;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #ca8a04);
            }
          }
        }

        @include it('to-yellow-700') {
          @include assert {
            @include output {
              @include to-yellow-700;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #a16207);
            }
          }
        }

        @include it('to-yellow-800') {
          @include assert {
            @include output {
              @include to-yellow-800;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #854d0e);
            }
          }
        }

        @include it('to-yellow-900') {
          @include assert {
            @include output {
              @include to-yellow-900;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #713f12);
            }
          }
        }

        @include it('to-yellow-950') {
          @include assert {
            @include output {
              @include to-yellow-950;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #422006);
            }
          }
        }

        @include it('to-lime-50') {
          @include assert {
            @include output {
              @include to-lime-50;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #f7fee7);
            }
          }
        }

        @include it('to-lime-100') {
          @include assert {
            @include output {
              @include to-lime-100;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #ecfccb);
            }
          }
        }

        @include it('to-lime-200') {
          @include assert {
            @include output {
              @include to-lime-200;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #d9f99d);
            }
          }
        }

        @include it('to-lime-300') {
          @include assert {
            @include output {
              @include to-lime-300;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #bef264);
            }
          }
        }

        @include it('to-lime-400') {
          @include assert {
            @include output {
              @include to-lime-400;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #a3e635);
            }
          }
        }

        @include it('to-lime-500') {
          @include assert {
            @include output {
              @include to-lime-500;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #84cc16);
            }
          }
        }

        @include it('to-lime-600') {
          @include assert {
            @include output {
              @include to-lime-600;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #65a30d);
            }
          }
        }

        @include it('to-lime-700') {
          @include assert {
            @include output {
              @include to-lime-700;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #4d7c0f);
            }
          }
        }

        @include it('to-lime-800') {
          @include assert {
            @include output {
              @include to-lime-800;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #3f6212);
            }
          }
        }

        @include it('to-lime-900') {
          @include assert {
            @include output {
              @include to-lime-900;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #365314);
            }
          }
        }

        @include it('to-lime-950') {
          @include assert {
            @include output {
              @include to-lime-950;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #1a2e05);
            }
          }
        }

        @include it('to-green-50') {
          @include assert {
            @include output {
              @include to-green-50;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #f0fdf4);
            }
          }
        }

        @include it('to-green-100') {
          @include assert {
            @include output {
              @include to-green-100;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #dcfce7);
            }
          }
        }

        @include it('to-green-200') {
          @include assert {
            @include output {
              @include to-green-200;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #bbf7d0);
            }
          }
        }

        @include it('to-green-300') {
          @include assert {
            @include output {
              @include to-green-300;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #86efac);
            }
          }
        }

        @include it('to-green-400') {
          @include assert {
            @include output {
              @include to-green-400;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #4ade80);
            }
          }
        }

        @include it('to-green-500') {
          @include assert {
            @include output {
              @include to-green-500;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #22c55e);
            }
          }
        }

        @include it('to-green-600') {
          @include assert {
            @include output {
              @include to-green-600;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #16a34a);
            }
          }
        }

        @include it('to-green-700') {
          @include assert {
            @include output {
              @include to-green-700;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #15803d);
            }
          }
        }

        @include it('to-green-800') {
          @include assert {
            @include output {
              @include to-green-800;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #166534);
            }
          }
        }

        @include it('to-green-900') {
          @include assert {
            @include output {
              @include to-green-900;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #14532d);
            }
          }
        }

        @include it('to-green-950') {
          @include assert {
            @include output {
              @include to-green-950;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #052e16);
            }
          }
        }

        @include it('to-emerald-50') {
          @include assert {
            @include output {
              @include to-emerald-50;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #ecfdf5);
            }
          }
        }

        @include it('to-emerald-100') {
          @include assert {
            @include output {
              @include to-emerald-100;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #d1fae5);
            }
          }
        }

        @include it('to-emerald-200') {
          @include assert {
            @include output {
              @include to-emerald-200;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #a7f3d0);
            }
          }
        }

        @include it('to-emerald-300') {
          @include assert {
            @include output {
              @include to-emerald-300;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #6ee7b7);
            }
          }
        }

        @include it('to-emerald-400') {
          @include assert {
            @include output {
              @include to-emerald-400;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #34d399);
            }
          }
        }

        @include it('to-emerald-500') {
          @include assert {
            @include output {
              @include to-emerald-500;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #10b981);
            }
          }
        }

        @include it('to-emerald-600') {
          @include assert {
            @include output {
              @include to-emerald-600;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #059669);
            }
          }
        }

        @include it('to-emerald-700') {
          @include assert {
            @include output {
              @include to-emerald-700;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #047857);
            }
          }
        }

        @include it('to-emerald-800') {
          @include assert {
            @include output {
              @include to-emerald-800;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #065f46);
            }
          }
        }

        @include it('to-emerald-900') {
          @include assert {
            @include output {
              @include to-emerald-900;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #064e3b);
            }
          }
        }

        @include it('to-emerald-950') {
          @include assert {
            @include output {
              @include to-emerald-950;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #022c22);
            }
          }
        }

        @include it('to-teal-50') {
          @include assert {
            @include output {
              @include to-teal-50;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #f0fdfa);
            }
          }
        }

        @include it('to-teal-100') {
          @include assert {
            @include output {
              @include to-teal-100;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #ccfbf1);
            }
          }
        }

        @include it('to-teal-200') {
          @include assert {
            @include output {
              @include to-teal-200;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #99f6e4);
            }
          }
        }

        @include it('to-teal-300') {
          @include assert {
            @include output {
              @include to-teal-300;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #5eead4);
            }
          }
        }

        @include it('to-teal-400') {
          @include assert {
            @include output {
              @include to-teal-400;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #2dd4bf);
            }
          }
        }

        @include it('to-teal-500') {
          @include assert {
            @include output {
              @include to-teal-500;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #14b8a6);
            }
          }
        }

        @include it('to-teal-600') {
          @include assert {
            @include output {
              @include to-teal-600;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #0d9488);
            }
          }
        }

        @include it('to-teal-700') {
          @include assert {
            @include output {
              @include to-teal-700;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #0f766e);
            }
          }
        }

        @include it('to-teal-800') {
          @include assert {
            @include output {
              @include to-teal-800;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #115e59);
            }
          }
        }

        @include it('to-teal-900') {
          @include assert {
            @include output {
              @include to-teal-900;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #134e4a);
            }
          }
        }

        @include it('to-teal-950') {
          @include assert {
            @include output {
              @include to-teal-950;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #042f2e);
            }
          }
        }

        @include it('to-cyan-50') {
          @include assert {
            @include output {
              @include to-cyan-50;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #ecfeff);
            }
          }
        }

        @include it('to-cyan-100') {
          @include assert {
            @include output {
              @include to-cyan-100;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #cffafe);
            }
          }
        }

        @include it('to-cyan-200') {
          @include assert {
            @include output {
              @include to-cyan-200;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #a5f3fc);
            }
          }
        }

        @include it('to-cyan-300') {
          @include assert {
            @include output {
              @include to-cyan-300;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #67e8f9);
            }
          }
        }

        @include it('to-cyan-400') {
          @include assert {
            @include output {
              @include to-cyan-400;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #22d3ee);
            }
          }
        }

        @include it('to-cyan-500') {
          @include assert {
            @include output {
              @include to-cyan-500;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #06b6d4);
            }
          }
        }

        @include it('to-cyan-600') {
          @include assert {
            @include output {
              @include to-cyan-600;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #0891b2);
            }
          }
        }

        @include it('to-cyan-700') {
          @include assert {
            @include output {
              @include to-cyan-700;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #0e7490);
            }
          }
        }

        @include it('to-cyan-800') {
          @include assert {
            @include output {
              @include to-cyan-800;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #155e75);
            }
          }
        }

        @include it('to-cyan-900') {
          @include assert {
            @include output {
              @include to-cyan-900;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #164e63);
            }
          }
        }

        @include it('to-cyan-950') {
          @include assert {
            @include output {
              @include to-cyan-950;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #083344);
            }
          }
        }

        @include it('to-sky-50') {
          @include assert {
            @include output {
              @include to-sky-50;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #f0f9ff);
            }
          }
        }

        @include it('to-sky-100') {
          @include assert {
            @include output {
              @include to-sky-100;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #e0f2fe);
            }
          }
        }

        @include it('to-sky-200') {
          @include assert {
            @include output {
              @include to-sky-200;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #bae6fd);
            }
          }
        }

        @include it('to-sky-300') {
          @include assert {
            @include output {
              @include to-sky-300;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #7dd3fc);
            }
          }
        }

        @include it('to-sky-400') {
          @include assert {
            @include output {
              @include to-sky-400;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #38bdf8);
            }
          }
        }

        @include it('to-sky-500') {
          @include assert {
            @include output {
              @include to-sky-500;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #0ea5e9);
            }
          }
        }

        @include it('to-sky-600') {
          @include assert {
            @include output {
              @include to-sky-600;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #0284c7);
            }
          }
        }

        @include it('to-sky-700') {
          @include assert {
            @include output {
              @include to-sky-700;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #0369a1);
            }
          }
        }

        @include it('to-sky-800') {
          @include assert {
            @include output {
              @include to-sky-800;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #075985);
            }
          }
        }

        @include it('to-sky-900') {
          @include assert {
            @include output {
              @include to-sky-900;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #0c4a6e);
            }
          }
        }

        @include it('to-sky-950') {
          @include assert {
            @include output {
              @include to-sky-950;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #082f49);
            }
          }
        }

        @include it('to-blue-50') {
          @include assert {
            @include output {
              @include to-blue-50;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #eff6ff);
            }
          }
        }

        @include it('to-blue-100') {
          @include assert {
            @include output {
              @include to-blue-100;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #dbeafe);
            }
          }
        }

        @include it('to-blue-200') {
          @include assert {
            @include output {
              @include to-blue-200;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #bfdbfe);
            }
          }
        }

        @include it('to-blue-300') {
          @include assert {
            @include output {
              @include to-blue-300;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #93c5fd);
            }
          }
        }

        @include it('to-blue-400') {
          @include assert {
            @include output {
              @include to-blue-400;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #60a5fa);
            }
          }
        }

        @include it('to-blue-500') {
          @include assert {
            @include output {
              @include to-blue-500;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #3b82f6);
            }
          }
        }

        @include it('to-blue-600') {
          @include assert {
            @include output {
              @include to-blue-600;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #2563eb);
            }
          }
        }

        @include it('to-blue-700') {
          @include assert {
            @include output {
              @include to-blue-700;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #1d4ed8);
            }
          }
        }

        @include it('to-blue-800') {
          @include assert {
            @include output {
              @include to-blue-800;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #1e40af);
            }
          }
        }

        @include it('to-blue-900') {
          @include assert {
            @include output {
              @include to-blue-900;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #1e3a8a);
            }
          }
        }

        @include it('to-blue-950') {
          @include assert {
            @include output {
              @include to-blue-950;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #172554);
            }
          }
        }

        @include it('to-indigo-50') {
          @include assert {
            @include output {
              @include to-indigo-50;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #eef2ff);
            }
          }
        }

        @include it('to-indigo-100') {
          @include assert {
            @include output {
              @include to-indigo-100;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #e0e7ff);
            }
          }
        }

        @include it('to-indigo-200') {
          @include assert {
            @include output {
              @include to-indigo-200;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #c7d2fe);
            }
          }
        }

        @include it('to-indigo-300') {
          @include assert {
            @include output {
              @include to-indigo-300;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #a5b4fc);
            }
          }
        }

        @include it('to-indigo-400') {
          @include assert {
            @include output {
              @include to-indigo-400;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #818cf8);
            }
          }
        }

        @include it('to-indigo-500') {
          @include assert {
            @include output {
              @include to-indigo-500;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #6366f1);
            }
          }
        }

        @include it('to-indigo-600') {
          @include assert {
            @include output {
              @include to-indigo-600;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #4f46e5);
            }
          }
        }

        @include it('to-indigo-700') {
          @include assert {
            @include output {
              @include to-indigo-700;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #4338ca);
            }
          }
        }

        @include it('to-indigo-800') {
          @include assert {
            @include output {
              @include to-indigo-800;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #3730a3);
            }
          }
        }

        @include it('to-indigo-900') {
          @include assert {
            @include output {
              @include to-indigo-900;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #312e81);
            }
          }
        }

        @include it('to-indigo-950') {
          @include assert {
            @include output {
              @include to-indigo-950;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #1e1b4b);
            }
          }
        }

        @include it('to-violet-50') {
          @include assert {
            @include output {
              @include to-violet-50;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #f5f3ff);
            }
          }
        }

        @include it('to-violet-100') {
          @include assert {
            @include output {
              @include to-violet-100;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #ede9fe);
            }
          }
        }

        @include it('to-violet-200') {
          @include assert {
            @include output {
              @include to-violet-200;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #ddd6fe);
            }
          }
        }

        @include it('to-violet-300') {
          @include assert {
            @include output {
              @include to-violet-300;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #c4b5fd);
            }
          }
        }

        @include it('to-violet-400') {
          @include assert {
            @include output {
              @include to-violet-400;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #a78bfa);
            }
          }
        }

        @include it('to-violet-500') {
          @include assert {
            @include output {
              @include to-violet-500;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #8b5cf6);
            }
          }
        }

        @include it('to-violet-600') {
          @include assert {
            @include output {
              @include to-violet-600;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #7c3aed);
            }
          }
        }

        @include it('to-violet-700') {
          @include assert {
            @include output {
              @include to-violet-700;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #6d28d9);
            }
          }
        }

        @include it('to-violet-800') {
          @include assert {
            @include output {
              @include to-violet-800;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #5b21b6);
            }
          }
        }

        @include it('to-violet-900') {
          @include assert {
            @include output {
              @include to-violet-900;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #4c1d95);
            }
          }
        }

        @include it('to-violet-950') {
          @include assert {
            @include output {
              @include to-violet-950;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #2e1065);
            }
          }
        }

        @include it('to-purple-50') {
          @include assert {
            @include output {
              @include to-purple-50;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #faf5ff);
            }
          }
        }

        @include it('to-purple-100') {
          @include assert {
            @include output {
              @include to-purple-100;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #f3e8ff);
            }
          }
        }

        @include it('to-purple-200') {
          @include assert {
            @include output {
              @include to-purple-200;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #e9d5ff);
            }
          }
        }

        @include it('to-purple-300') {
          @include assert {
            @include output {
              @include to-purple-300;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #d8b4fe);
            }
          }
        }

        @include it('to-purple-400') {
          @include assert {
            @include output {
              @include to-purple-400;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #c084fc);
            }
          }
        }

        @include it('to-purple-500') {
          @include assert {
            @include output {
              @include to-purple-500;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #a855f7);
            }
          }
        }

        @include it('to-purple-600') {
          @include assert {
            @include output {
              @include to-purple-600;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #9333ea);
            }
          }
        }

        @include it('to-purple-700') {
          @include assert {
            @include output {
              @include to-purple-700;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #7e22ce);
            }
          }
        }

        @include it('to-purple-800') {
          @include assert {
            @include output {
              @include to-purple-800;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #6b21a8);
            }
          }
        }

        @include it('to-purple-900') {
          @include assert {
            @include output {
              @include to-purple-900;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #581c87);
            }
          }
        }

        @include it('to-purple-950') {
          @include assert {
            @include output {
              @include to-purple-950;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #3b0764);
            }
          }
        }

        @include it('to-fuchsia-50') {
          @include assert {
            @include output {
              @include to-fuchsia-50;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #fdf4ff);
            }
          }
        }

        @include it('to-fuchsia-100') {
          @include assert {
            @include output {
              @include to-fuchsia-100;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #fae8ff);
            }
          }
        }

        @include it('to-fuchsia-200') {
          @include assert {
            @include output {
              @include to-fuchsia-200;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #f5d0fe);
            }
          }
        }

        @include it('to-fuchsia-300') {
          @include assert {
            @include output {
              @include to-fuchsia-300;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #f0abfc);
            }
          }
        }

        @include it('to-fuchsia-400') {
          @include assert {
            @include output {
              @include to-fuchsia-400;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #e879f9);
            }
          }
        }

        @include it('to-fuchsia-500') {
          @include assert {
            @include output {
              @include to-fuchsia-500;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #d946ef);
            }
          }
        }

        @include it('to-fuchsia-600') {
          @include assert {
            @include output {
              @include to-fuchsia-600;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #c026d3);
            }
          }
        }

        @include it('to-fuchsia-700') {
          @include assert {
            @include output {
              @include to-fuchsia-700;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #a21caf);
            }
          }
        }

        @include it('to-fuchsia-800') {
          @include assert {
            @include output {
              @include to-fuchsia-800;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #86198f);
            }
          }
        }

        @include it('to-fuchsia-900') {
          @include assert {
            @include output {
              @include to-fuchsia-900;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #701a75);
            }
          }
        }

        @include it('to-fuchsia-950') {
          @include assert {
            @include output {
              @include to-fuchsia-950;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #4a044e);
            }
          }
        }

        @include it('to-pink-50') {
          @include assert {
            @include output {
              @include to-pink-50;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #fdf2f8);
            }
          }
        }

        @include it('to-pink-100') {
          @include assert {
            @include output {
              @include to-pink-100;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #fce7f3);
            }
          }
        }

        @include it('to-pink-200') {
          @include assert {
            @include output {
              @include to-pink-200;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #fbcfe8);
            }
          }
        }

        @include it('to-pink-300') {
          @include assert {
            @include output {
              @include to-pink-300;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #f9a8d4);
            }
          }
        }

        @include it('to-pink-400') {
          @include assert {
            @include output {
              @include to-pink-400;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #f472b6);
            }
          }
        }

        @include it('to-pink-500') {
          @include assert {
            @include output {
              @include to-pink-500;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #ec4899);
            }
          }
        }

        @include it('to-pink-600') {
          @include assert {
            @include output {
              @include to-pink-600;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #db2777);
            }
          }
        }

        @include it('to-pink-700') {
          @include assert {
            @include output {
              @include to-pink-700;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #be185d);
            }
          }
        }

        @include it('to-pink-800') {
          @include assert {
            @include output {
              @include to-pink-800;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #9d174d);
            }
          }
        }

        @include it('to-pink-900') {
          @include assert {
            @include output {
              @include to-pink-900;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #831843);
            }
          }
        }

        @include it('to-pink-950') {
          @include assert {
            @include output {
              @include to-pink-950;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #500724);
            }
          }
        }

        @include it('to-rose-50') {
          @include assert {
            @include output {
              @include to-rose-50;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #fff1f2);
            }
          }
        }

        @include it('to-rose-100') {
          @include assert {
            @include output {
              @include to-rose-100;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #ffe4e6);
            }
          }
        }

        @include it('to-rose-200') {
          @include assert {
            @include output {
              @include to-rose-200;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #fecdd3);
            }
          }
        }

        @include it('to-rose-300') {
          @include assert {
            @include output {
              @include to-rose-300;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #fda4af);
            }
          }
        }

        @include it('to-rose-400') {
          @include assert {
            @include output {
              @include to-rose-400;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #fb7185);
            }
          }
        }

        @include it('to-rose-500') {
          @include assert {
            @include output {
              @include to-rose-500;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #f43f5e);
            }
          }
        }

        @include it('to-rose-600') {
          @include assert {
            @include output {
              @include to-rose-600;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #e11d48);
            }
          }
        }

        @include it('to-rose-700') {
          @include assert {
            @include output {
              @include to-rose-700;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #be123c);
            }
          }
        }

        @include it('to-rose-800') {
          @include assert {
            @include output {
              @include to-rose-800;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #9f1239);
            }
          }
        }

        @include it('to-rose-900') {
          @include assert {
            @include output {
              @include to-rose-900;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #881337);
            }
          }
        }

        @include it('to-rose-950') {
          @include assert {
            @include output {
              @include to-rose-950;
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, #4c0519);
            }
          }
        }

        @include it('to-black(0.11)') {
          @include assert {
            @include output {
              @include to-black(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#000, $alpha: 0.11));
            }
          }
        }

        @include it('to-white(0.11)') {
          @include assert {
            @include output {
              @include to-white(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#fff, $alpha: 0.11));
            }
          }
        }

        @include it('to-slate-50(0.11)') {
          @include assert {
            @include output {
              @include to-slate-50(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#f8fafc, $alpha: 0.11));
            }
          }
        }

        @include it('to-slate-100(0.11)') {
          @include assert {
            @include output {
              @include to-slate-100(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#f1f5f9, $alpha: 0.11));
            }
          }
        }

        @include it('to-slate-200(0.11)') {
          @include assert {
            @include output {
              @include to-slate-200(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#e2e8f0, $alpha: 0.11));
            }
          }
        }

        @include it('to-slate-300(0.11)') {
          @include assert {
            @include output {
              @include to-slate-300(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#cbd5e1, $alpha: 0.11));
            }
          }
        }

        @include it('to-slate-400(0.11)') {
          @include assert {
            @include output {
              @include to-slate-400(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#94a3b8, $alpha: 0.11));
            }
          }
        }

        @include it('to-slate-500(0.11)') {
          @include assert {
            @include output {
              @include to-slate-500(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#64748b, $alpha: 0.11));
            }
          }
        }

        @include it('to-slate-600(0.11)') {
          @include assert {
            @include output {
              @include to-slate-600(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#475569, $alpha: 0.11));
            }
          }
        }

        @include it('to-slate-700(0.11)') {
          @include assert {
            @include output {
              @include to-slate-700(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#334155, $alpha: 0.11));
            }
          }
        }

        @include it('to-slate-800(0.11)') {
          @include assert {
            @include output {
              @include to-slate-800(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#1e293b, $alpha: 0.11));
            }
          }
        }

        @include it('to-slate-900(0.11)') {
          @include assert {
            @include output {
              @include to-slate-900(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#0f172a, $alpha: 0.11));
            }
          }
        }

        @include it('to-slate-950(0.11)') {
          @include assert {
            @include output {
              @include to-slate-950(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#020617, $alpha: 0.11));
            }
          }
        }

        @include it('to-gray-50(0.11)') {
          @include assert {
            @include output {
              @include to-gray-50(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#f9fafb, $alpha: 0.11));
            }
          }
        }

        @include it('to-gray-100(0.11)') {
          @include assert {
            @include output {
              @include to-gray-100(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#f3f4f6, $alpha: 0.11));
            }
          }
        }

        @include it('to-gray-200(0.11)') {
          @include assert {
            @include output {
              @include to-gray-200(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#e5e7eb, $alpha: 0.11));
            }
          }
        }

        @include it('to-gray-300(0.11)') {
          @include assert {
            @include output {
              @include to-gray-300(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#d1d5db, $alpha: 0.11));
            }
          }
        }

        @include it('to-gray-400(0.11)') {
          @include assert {
            @include output {
              @include to-gray-400(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#9ca3af, $alpha: 0.11));
            }
          }
        }

        @include it('to-gray-500(0.11)') {
          @include assert {
            @include output {
              @include to-gray-500(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#6b7280, $alpha: 0.11));
            }
          }
        }

        @include it('to-gray-600(0.11)') {
          @include assert {
            @include output {
              @include to-gray-600(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#4b5563, $alpha: 0.11));
            }
          }
        }

        @include it('to-gray-700(0.11)') {
          @include assert {
            @include output {
              @include to-gray-700(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#374151, $alpha: 0.11));
            }
          }
        }

        @include it('to-gray-800(0.11)') {
          @include assert {
            @include output {
              @include to-gray-800(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#1f2937, $alpha: 0.11));
            }
          }
        }

        @include it('to-gray-900(0.11)') {
          @include assert {
            @include output {
              @include to-gray-900(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#111827, $alpha: 0.11));
            }
          }
        }

        @include it('to-gray-950(0.11)') {
          @include assert {
            @include output {
              @include to-gray-950(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#030712, $alpha: 0.11));
            }
          }
        }

        @include it('to-zinc-50(0.11)') {
          @include assert {
            @include output {
              @include to-zinc-50(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#fafafa, $alpha: 0.11));
            }
          }
        }

        @include it('to-zinc-100(0.11)') {
          @include assert {
            @include output {
              @include to-zinc-100(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#f4f4f5, $alpha: 0.11));
            }
          }
        }

        @include it('to-zinc-200(0.11)') {
          @include assert {
            @include output {
              @include to-zinc-200(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#e4e4e7, $alpha: 0.11));
            }
          }
        }

        @include it('to-zinc-300(0.11)') {
          @include assert {
            @include output {
              @include to-zinc-300(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#d4d4d8, $alpha: 0.11));
            }
          }
        }

        @include it('to-zinc-400(0.11)') {
          @include assert {
            @include output {
              @include to-zinc-400(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#a1a1aa, $alpha: 0.11));
            }
          }
        }

        @include it('to-zinc-500(0.11)') {
          @include assert {
            @include output {
              @include to-zinc-500(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#71717a, $alpha: 0.11));
            }
          }
        }

        @include it('to-zinc-600(0.11)') {
          @include assert {
            @include output {
              @include to-zinc-600(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#52525b, $alpha: 0.11));
            }
          }
        }

        @include it('to-zinc-700(0.11)') {
          @include assert {
            @include output {
              @include to-zinc-700(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#3f3f46, $alpha: 0.11));
            }
          }
        }

        @include it('to-zinc-800(0.11)') {
          @include assert {
            @include output {
              @include to-zinc-800(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#27272a, $alpha: 0.11));
            }
          }
        }

        @include it('to-zinc-900(0.11)') {
          @include assert {
            @include output {
              @include to-zinc-900(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#18181b, $alpha: 0.11));
            }
          }
        }

        @include it('to-zinc-950(0.11)') {
          @include assert {
            @include output {
              @include to-zinc-950(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#09090b, $alpha: 0.11));
            }
          }
        }

        @include it('to-neutral-50(0.11)') {
          @include assert {
            @include output {
              @include to-neutral-50(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#fafafa, $alpha: 0.11));
            }
          }
        }

        @include it('to-neutral-100(0.11)') {
          @include assert {
            @include output {
              @include to-neutral-100(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#f5f5f5, $alpha: 0.11));
            }
          }
        }

        @include it('to-neutral-200(0.11)') {
          @include assert {
            @include output {
              @include to-neutral-200(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#e5e5e5, $alpha: 0.11));
            }
          }
        }

        @include it('to-neutral-300(0.11)') {
          @include assert {
            @include output {
              @include to-neutral-300(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#d4d4d4, $alpha: 0.11));
            }
          }
        }

        @include it('to-neutral-400(0.11)') {
          @include assert {
            @include output {
              @include to-neutral-400(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#a3a3a3, $alpha: 0.11));
            }
          }
        }

        @include it('to-neutral-500(0.11)') {
          @include assert {
            @include output {
              @include to-neutral-500(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#737373, $alpha: 0.11));
            }
          }
        }

        @include it('to-neutral-600(0.11)') {
          @include assert {
            @include output {
              @include to-neutral-600(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#525252, $alpha: 0.11));
            }
          }
        }

        @include it('to-neutral-700(0.11)') {
          @include assert {
            @include output {
              @include to-neutral-700(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#404040, $alpha: 0.11));
            }
          }
        }

        @include it('to-neutral-800(0.11)') {
          @include assert {
            @include output {
              @include to-neutral-800(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#262626, $alpha: 0.11));
            }
          }
        }

        @include it('to-neutral-900(0.11)') {
          @include assert {
            @include output {
              @include to-neutral-900(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#171717, $alpha: 0.11));
            }
          }
        }

        @include it('to-neutral-950(0.11)') {
          @include assert {
            @include output {
              @include to-neutral-950(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#0a0a0a, $alpha: 0.11));
            }
          }
        }

        @include it('to-stone-50(0.11)') {
          @include assert {
            @include output {
              @include to-stone-50(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#fafaf9, $alpha: 0.11));
            }
          }
        }

        @include it('to-stone-100(0.11)') {
          @include assert {
            @include output {
              @include to-stone-100(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#f5f5f4, $alpha: 0.11));
            }
          }
        }

        @include it('to-stone-200(0.11)') {
          @include assert {
            @include output {
              @include to-stone-200(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#e7e5e4, $alpha: 0.11));
            }
          }
        }

        @include it('to-stone-300(0.11)') {
          @include assert {
            @include output {
              @include to-stone-300(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#d6d3d1, $alpha: 0.11));
            }
          }
        }

        @include it('to-stone-400(0.11)') {
          @include assert {
            @include output {
              @include to-stone-400(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#a8a29e, $alpha: 0.11));
            }
          }
        }

        @include it('to-stone-500(0.11)') {
          @include assert {
            @include output {
              @include to-stone-500(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#78716c, $alpha: 0.11));
            }
          }
        }

        @include it('to-stone-600(0.11)') {
          @include assert {
            @include output {
              @include to-stone-600(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#57534e, $alpha: 0.11));
            }
          }
        }

        @include it('to-stone-700(0.11)') {
          @include assert {
            @include output {
              @include to-stone-700(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#44403c, $alpha: 0.11));
            }
          }
        }

        @include it('to-stone-800(0.11)') {
          @include assert {
            @include output {
              @include to-stone-800(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#292524, $alpha: 0.11));
            }
          }
        }

        @include it('to-stone-900(0.11)') {
          @include assert {
            @include output {
              @include to-stone-900(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#1c1917, $alpha: 0.11));
            }
          }
        }

        @include it('to-stone-950(0.11)') {
          @include assert {
            @include output {
              @include to-stone-950(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#0c0a09, $alpha: 0.11));
            }
          }
        }

        @include it('to-red-50(0.11)') {
          @include assert {
            @include output {
              @include to-red-50(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#fef2f2, $alpha: 0.11));
            }
          }
        }

        @include it('to-red-100(0.11)') {
          @include assert {
            @include output {
              @include to-red-100(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#fee2e2, $alpha: 0.11));
            }
          }
        }

        @include it('to-red-200(0.11)') {
          @include assert {
            @include output {
              @include to-red-200(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#fecaca, $alpha: 0.11));
            }
          }
        }

        @include it('to-red-300(0.11)') {
          @include assert {
            @include output {
              @include to-red-300(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#fca5a5, $alpha: 0.11));
            }
          }
        }

        @include it('to-red-400(0.11)') {
          @include assert {
            @include output {
              @include to-red-400(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#f87171, $alpha: 0.11));
            }
          }
        }

        @include it('to-red-500(0.11)') {
          @include assert {
            @include output {
              @include to-red-500(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#ef4444, $alpha: 0.11));
            }
          }
        }

        @include it('to-red-600(0.11)') {
          @include assert {
            @include output {
              @include to-red-600(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#dc2626, $alpha: 0.11));
            }
          }
        }

        @include it('to-red-700(0.11)') {
          @include assert {
            @include output {
              @include to-red-700(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#b91c1c, $alpha: 0.11));
            }
          }
        }

        @include it('to-red-800(0.11)') {
          @include assert {
            @include output {
              @include to-red-800(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#991b1b, $alpha: 0.11));
            }
          }
        }

        @include it('to-red-900(0.11)') {
          @include assert {
            @include output {
              @include to-red-900(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#7f1d1d, $alpha: 0.11));
            }
          }
        }

        @include it('to-red-950(0.11)') {
          @include assert {
            @include output {
              @include to-red-950(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#450a0a, $alpha: 0.11));
            }
          }
        }

        @include it('to-orange-50(0.11)') {
          @include assert {
            @include output {
              @include to-orange-50(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#fff7ed, $alpha: 0.11));
            }
          }
        }

        @include it('to-orange-100(0.11)') {
          @include assert {
            @include output {
              @include to-orange-100(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#ffedd5, $alpha: 0.11));
            }
          }
        }

        @include it('to-orange-200(0.11)') {
          @include assert {
            @include output {
              @include to-orange-200(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#fed7aa, $alpha: 0.11));
            }
          }
        }

        @include it('to-orange-300(0.11)') {
          @include assert {
            @include output {
              @include to-orange-300(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#fdba74, $alpha: 0.11));
            }
          }
        }

        @include it('to-orange-400(0.11)') {
          @include assert {
            @include output {
              @include to-orange-400(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#fb923c, $alpha: 0.11));
            }
          }
        }

        @include it('to-orange-500(0.11)') {
          @include assert {
            @include output {
              @include to-orange-500(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#f97316, $alpha: 0.11));
            }
          }
        }

        @include it('to-orange-600(0.11)') {
          @include assert {
            @include output {
              @include to-orange-600(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#ea580c, $alpha: 0.11));
            }
          }
        }

        @include it('to-orange-700(0.11)') {
          @include assert {
            @include output {
              @include to-orange-700(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#c2410c, $alpha: 0.11));
            }
          }
        }

        @include it('to-orange-800(0.11)') {
          @include assert {
            @include output {
              @include to-orange-800(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#9a3412, $alpha: 0.11));
            }
          }
        }

        @include it('to-orange-900(0.11)') {
          @include assert {
            @include output {
              @include to-orange-900(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#7c2d12, $alpha: 0.11));
            }
          }
        }

        @include it('to-orange-950(0.11)') {
          @include assert {
            @include output {
              @include to-orange-950(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#431407, $alpha: 0.11));
            }
          }
        }

        @include it('to-amber-50(0.11)') {
          @include assert {
            @include output {
              @include to-amber-50(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#fffbeb, $alpha: 0.11));
            }
          }
        }

        @include it('to-amber-100(0.11)') {
          @include assert {
            @include output {
              @include to-amber-100(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#fef3c7, $alpha: 0.11));
            }
          }
        }

        @include it('to-amber-200(0.11)') {
          @include assert {
            @include output {
              @include to-amber-200(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#fde68a, $alpha: 0.11));
            }
          }
        }

        @include it('to-amber-300(0.11)') {
          @include assert {
            @include output {
              @include to-amber-300(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#fcd34d, $alpha: 0.11));
            }
          }
        }

        @include it('to-amber-400(0.11)') {
          @include assert {
            @include output {
              @include to-amber-400(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#fbbf24, $alpha: 0.11));
            }
          }
        }

        @include it('to-amber-500(0.11)') {
          @include assert {
            @include output {
              @include to-amber-500(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#f59e0b, $alpha: 0.11));
            }
          }
        }

        @include it('to-amber-600(0.11)') {
          @include assert {
            @include output {
              @include to-amber-600(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#d97706, $alpha: 0.11));
            }
          }
        }

        @include it('to-amber-700(0.11)') {
          @include assert {
            @include output {
              @include to-amber-700(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#b45309, $alpha: 0.11));
            }
          }
        }

        @include it('to-amber-800(0.11)') {
          @include assert {
            @include output {
              @include to-amber-800(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#92400e, $alpha: 0.11));
            }
          }
        }

        @include it('to-amber-900(0.11)') {
          @include assert {
            @include output {
              @include to-amber-900(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#78350f, $alpha: 0.11));
            }
          }
        }

        @include it('to-amber-950(0.11)') {
          @include assert {
            @include output {
              @include to-amber-950(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#451a03, $alpha: 0.11));
            }
          }
        }

        @include it('to-yellow-50(0.11)') {
          @include assert {
            @include output {
              @include to-yellow-50(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#fefce8, $alpha: 0.11));
            }
          }
        }

        @include it('to-yellow-100(0.11)') {
          @include assert {
            @include output {
              @include to-yellow-100(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#fef9c3, $alpha: 0.11));
            }
          }
        }

        @include it('to-yellow-200(0.11)') {
          @include assert {
            @include output {
              @include to-yellow-200(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#fef08a, $alpha: 0.11));
            }
          }
        }

        @include it('to-yellow-300(0.11)') {
          @include assert {
            @include output {
              @include to-yellow-300(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#fde047, $alpha: 0.11));
            }
          }
        }

        @include it('to-yellow-400(0.11)') {
          @include assert {
            @include output {
              @include to-yellow-400(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#facc15, $alpha: 0.11));
            }
          }
        }

        @include it('to-yellow-500(0.11)') {
          @include assert {
            @include output {
              @include to-yellow-500(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#eab308, $alpha: 0.11));
            }
          }
        }

        @include it('to-yellow-600(0.11)') {
          @include assert {
            @include output {
              @include to-yellow-600(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#ca8a04, $alpha: 0.11));
            }
          }
        }

        @include it('to-yellow-700(0.11)') {
          @include assert {
            @include output {
              @include to-yellow-700(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#a16207, $alpha: 0.11));
            }
          }
        }

        @include it('to-yellow-800(0.11)') {
          @include assert {
            @include output {
              @include to-yellow-800(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#854d0e, $alpha: 0.11));
            }
          }
        }

        @include it('to-yellow-900(0.11)') {
          @include assert {
            @include output {
              @include to-yellow-900(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#713f12, $alpha: 0.11));
            }
          }
        }

        @include it('to-yellow-950(0.11)') {
          @include assert {
            @include output {
              @include to-yellow-950(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#422006, $alpha: 0.11));
            }
          }
        }

        @include it('to-lime-50(0.11)') {
          @include assert {
            @include output {
              @include to-lime-50(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#f7fee7, $alpha: 0.11));
            }
          }
        }

        @include it('to-lime-100(0.11)') {
          @include assert {
            @include output {
              @include to-lime-100(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#ecfccb, $alpha: 0.11));
            }
          }
        }

        @include it('to-lime-200(0.11)') {
          @include assert {
            @include output {
              @include to-lime-200(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#d9f99d, $alpha: 0.11));
            }
          }
        }

        @include it('to-lime-300(0.11)') {
          @include assert {
            @include output {
              @include to-lime-300(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#bef264, $alpha: 0.11));
            }
          }
        }

        @include it('to-lime-400(0.11)') {
          @include assert {
            @include output {
              @include to-lime-400(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#a3e635, $alpha: 0.11));
            }
          }
        }

        @include it('to-lime-500(0.11)') {
          @include assert {
            @include output {
              @include to-lime-500(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#84cc16, $alpha: 0.11));
            }
          }
        }

        @include it('to-lime-600(0.11)') {
          @include assert {
            @include output {
              @include to-lime-600(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#65a30d, $alpha: 0.11));
            }
          }
        }

        @include it('to-lime-700(0.11)') {
          @include assert {
            @include output {
              @include to-lime-700(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#4d7c0f, $alpha: 0.11));
            }
          }
        }

        @include it('to-lime-800(0.11)') {
          @include assert {
            @include output {
              @include to-lime-800(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#3f6212, $alpha: 0.11));
            }
          }
        }

        @include it('to-lime-900(0.11)') {
          @include assert {
            @include output {
              @include to-lime-900(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#365314, $alpha: 0.11));
            }
          }
        }

        @include it('to-lime-950(0.11)') {
          @include assert {
            @include output {
              @include to-lime-950(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#1a2e05, $alpha: 0.11));
            }
          }
        }

        @include it('to-green-50(0.11)') {
          @include assert {
            @include output {
              @include to-green-50(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#f0fdf4, $alpha: 0.11));
            }
          }
        }

        @include it('to-green-100(0.11)') {
          @include assert {
            @include output {
              @include to-green-100(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#dcfce7, $alpha: 0.11));
            }
          }
        }

        @include it('to-green-200(0.11)') {
          @include assert {
            @include output {
              @include to-green-200(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#bbf7d0, $alpha: 0.11));
            }
          }
        }

        @include it('to-green-300(0.11)') {
          @include assert {
            @include output {
              @include to-green-300(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#86efac, $alpha: 0.11));
            }
          }
        }

        @include it('to-green-400(0.11)') {
          @include assert {
            @include output {
              @include to-green-400(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#4ade80, $alpha: 0.11));
            }
          }
        }

        @include it('to-green-500(0.11)') {
          @include assert {
            @include output {
              @include to-green-500(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#22c55e, $alpha: 0.11));
            }
          }
        }

        @include it('to-green-600(0.11)') {
          @include assert {
            @include output {
              @include to-green-600(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#16a34a, $alpha: 0.11));
            }
          }
        }

        @include it('to-green-700(0.11)') {
          @include assert {
            @include output {
              @include to-green-700(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#15803d, $alpha: 0.11));
            }
          }
        }

        @include it('to-green-800(0.11)') {
          @include assert {
            @include output {
              @include to-green-800(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#166534, $alpha: 0.11));
            }
          }
        }

        @include it('to-green-900(0.11)') {
          @include assert {
            @include output {
              @include to-green-900(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#14532d, $alpha: 0.11));
            }
          }
        }

        @include it('to-green-950(0.11)') {
          @include assert {
            @include output {
              @include to-green-950(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#052e16, $alpha: 0.11));
            }
          }
        }

        @include it('to-emerald-50(0.11)') {
          @include assert {
            @include output {
              @include to-emerald-50(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#ecfdf5, $alpha: 0.11));
            }
          }
        }

        @include it('to-emerald-100(0.11)') {
          @include assert {
            @include output {
              @include to-emerald-100(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#d1fae5, $alpha: 0.11));
            }
          }
        }

        @include it('to-emerald-200(0.11)') {
          @include assert {
            @include output {
              @include to-emerald-200(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#a7f3d0, $alpha: 0.11));
            }
          }
        }

        @include it('to-emerald-300(0.11)') {
          @include assert {
            @include output {
              @include to-emerald-300(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#6ee7b7, $alpha: 0.11));
            }
          }
        }

        @include it('to-emerald-400(0.11)') {
          @include assert {
            @include output {
              @include to-emerald-400(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#34d399, $alpha: 0.11));
            }
          }
        }

        @include it('to-emerald-500(0.11)') {
          @include assert {
            @include output {
              @include to-emerald-500(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#10b981, $alpha: 0.11));
            }
          }
        }

        @include it('to-emerald-600(0.11)') {
          @include assert {
            @include output {
              @include to-emerald-600(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#059669, $alpha: 0.11));
            }
          }
        }

        @include it('to-emerald-700(0.11)') {
          @include assert {
            @include output {
              @include to-emerald-700(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#047857, $alpha: 0.11));
            }
          }
        }

        @include it('to-emerald-800(0.11)') {
          @include assert {
            @include output {
              @include to-emerald-800(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#065f46, $alpha: 0.11));
            }
          }
        }

        @include it('to-emerald-900(0.11)') {
          @include assert {
            @include output {
              @include to-emerald-900(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#064e3b, $alpha: 0.11));
            }
          }
        }

        @include it('to-emerald-950(0.11)') {
          @include assert {
            @include output {
              @include to-emerald-950(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#022c22, $alpha: 0.11));
            }
          }
        }

        @include it('to-teal-50(0.11)') {
          @include assert {
            @include output {
              @include to-teal-50(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#f0fdfa, $alpha: 0.11));
            }
          }
        }

        @include it('to-teal-100(0.11)') {
          @include assert {
            @include output {
              @include to-teal-100(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#ccfbf1, $alpha: 0.11));
            }
          }
        }

        @include it('to-teal-200(0.11)') {
          @include assert {
            @include output {
              @include to-teal-200(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#99f6e4, $alpha: 0.11));
            }
          }
        }

        @include it('to-teal-300(0.11)') {
          @include assert {
            @include output {
              @include to-teal-300(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#5eead4, $alpha: 0.11));
            }
          }
        }

        @include it('to-teal-400(0.11)') {
          @include assert {
            @include output {
              @include to-teal-400(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#2dd4bf, $alpha: 0.11));
            }
          }
        }

        @include it('to-teal-500(0.11)') {
          @include assert {
            @include output {
              @include to-teal-500(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#14b8a6, $alpha: 0.11));
            }
          }
        }

        @include it('to-teal-600(0.11)') {
          @include assert {
            @include output {
              @include to-teal-600(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#0d9488, $alpha: 0.11));
            }
          }
        }

        @include it('to-teal-700(0.11)') {
          @include assert {
            @include output {
              @include to-teal-700(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#0f766e, $alpha: 0.11));
            }
          }
        }

        @include it('to-teal-800(0.11)') {
          @include assert {
            @include output {
              @include to-teal-800(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#115e59, $alpha: 0.11));
            }
          }
        }

        @include it('to-teal-900(0.11)') {
          @include assert {
            @include output {
              @include to-teal-900(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#134e4a, $alpha: 0.11));
            }
          }
        }

        @include it('to-teal-950(0.11)') {
          @include assert {
            @include output {
              @include to-teal-950(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#042f2e, $alpha: 0.11));
            }
          }
        }

        @include it('to-cyan-50(0.11)') {
          @include assert {
            @include output {
              @include to-cyan-50(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#ecfeff, $alpha: 0.11));
            }
          }
        }

        @include it('to-cyan-100(0.11)') {
          @include assert {
            @include output {
              @include to-cyan-100(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#cffafe, $alpha: 0.11));
            }
          }
        }

        @include it('to-cyan-200(0.11)') {
          @include assert {
            @include output {
              @include to-cyan-200(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#a5f3fc, $alpha: 0.11));
            }
          }
        }

        @include it('to-cyan-300(0.11)') {
          @include assert {
            @include output {
              @include to-cyan-300(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#67e8f9, $alpha: 0.11));
            }
          }
        }

        @include it('to-cyan-400(0.11)') {
          @include assert {
            @include output {
              @include to-cyan-400(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#22d3ee, $alpha: 0.11));
            }
          }
        }

        @include it('to-cyan-500(0.11)') {
          @include assert {
            @include output {
              @include to-cyan-500(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#06b6d4, $alpha: 0.11));
            }
          }
        }

        @include it('to-cyan-600(0.11)') {
          @include assert {
            @include output {
              @include to-cyan-600(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#0891b2, $alpha: 0.11));
            }
          }
        }

        @include it('to-cyan-700(0.11)') {
          @include assert {
            @include output {
              @include to-cyan-700(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#0e7490, $alpha: 0.11));
            }
          }
        }

        @include it('to-cyan-800(0.11)') {
          @include assert {
            @include output {
              @include to-cyan-800(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#155e75, $alpha: 0.11));
            }
          }
        }

        @include it('to-cyan-900(0.11)') {
          @include assert {
            @include output {
              @include to-cyan-900(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#164e63, $alpha: 0.11));
            }
          }
        }

        @include it('to-cyan-950(0.11)') {
          @include assert {
            @include output {
              @include to-cyan-950(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#083344, $alpha: 0.11));
            }
          }
        }

        @include it('to-sky-50(0.11)') {
          @include assert {
            @include output {
              @include to-sky-50(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#f0f9ff, $alpha: 0.11));
            }
          }
        }

        @include it('to-sky-100(0.11)') {
          @include assert {
            @include output {
              @include to-sky-100(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#e0f2fe, $alpha: 0.11));
            }
          }
        }

        @include it('to-sky-200(0.11)') {
          @include assert {
            @include output {
              @include to-sky-200(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#bae6fd, $alpha: 0.11));
            }
          }
        }

        @include it('to-sky-300(0.11)') {
          @include assert {
            @include output {
              @include to-sky-300(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#7dd3fc, $alpha: 0.11));
            }
          }
        }

        @include it('to-sky-400(0.11)') {
          @include assert {
            @include output {
              @include to-sky-400(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#38bdf8, $alpha: 0.11));
            }
          }
        }

        @include it('to-sky-500(0.11)') {
          @include assert {
            @include output {
              @include to-sky-500(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#0ea5e9, $alpha: 0.11));
            }
          }
        }

        @include it('to-sky-600(0.11)') {
          @include assert {
            @include output {
              @include to-sky-600(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#0284c7, $alpha: 0.11));
            }
          }
        }

        @include it('to-sky-700(0.11)') {
          @include assert {
            @include output {
              @include to-sky-700(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#0369a1, $alpha: 0.11));
            }
          }
        }

        @include it('to-sky-800(0.11)') {
          @include assert {
            @include output {
              @include to-sky-800(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#075985, $alpha: 0.11));
            }
          }
        }

        @include it('to-sky-900(0.11)') {
          @include assert {
            @include output {
              @include to-sky-900(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#0c4a6e, $alpha: 0.11));
            }
          }
        }

        @include it('to-sky-950(0.11)') {
          @include assert {
            @include output {
              @include to-sky-950(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#082f49, $alpha: 0.11));
            }
          }
        }

        @include it('to-blue-50(0.11)') {
          @include assert {
            @include output {
              @include to-blue-50(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#eff6ff, $alpha: 0.11));
            }
          }
        }

        @include it('to-blue-100(0.11)') {
          @include assert {
            @include output {
              @include to-blue-100(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#dbeafe, $alpha: 0.11));
            }
          }
        }

        @include it('to-blue-200(0.11)') {
          @include assert {
            @include output {
              @include to-blue-200(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#bfdbfe, $alpha: 0.11));
            }
          }
        }

        @include it('to-blue-300(0.11)') {
          @include assert {
            @include output {
              @include to-blue-300(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#93c5fd, $alpha: 0.11));
            }
          }
        }

        @include it('to-blue-400(0.11)') {
          @include assert {
            @include output {
              @include to-blue-400(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#60a5fa, $alpha: 0.11));
            }
          }
        }

        @include it('to-blue-500(0.11)') {
          @include assert {
            @include output {
              @include to-blue-500(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#3b82f6, $alpha: 0.11));
            }
          }
        }

        @include it('to-blue-600(0.11)') {
          @include assert {
            @include output {
              @include to-blue-600(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#2563eb, $alpha: 0.11));
            }
          }
        }

        @include it('to-blue-700(0.11)') {
          @include assert {
            @include output {
              @include to-blue-700(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#1d4ed8, $alpha: 0.11));
            }
          }
        }

        @include it('to-blue-800(0.11)') {
          @include assert {
            @include output {
              @include to-blue-800(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#1e40af, $alpha: 0.11));
            }
          }
        }

        @include it('to-blue-900(0.11)') {
          @include assert {
            @include output {
              @include to-blue-900(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#1e3a8a, $alpha: 0.11));
            }
          }
        }

        @include it('to-blue-950(0.11)') {
          @include assert {
            @include output {
              @include to-blue-950(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#172554, $alpha: 0.11));
            }
          }
        }

        @include it('to-indigo-50(0.11)') {
          @include assert {
            @include output {
              @include to-indigo-50(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#eef2ff, $alpha: 0.11));
            }
          }
        }

        @include it('to-indigo-100(0.11)') {
          @include assert {
            @include output {
              @include to-indigo-100(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#e0e7ff, $alpha: 0.11));
            }
          }
        }

        @include it('to-indigo-200(0.11)') {
          @include assert {
            @include output {
              @include to-indigo-200(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#c7d2fe, $alpha: 0.11));
            }
          }
        }

        @include it('to-indigo-300(0.11)') {
          @include assert {
            @include output {
              @include to-indigo-300(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#a5b4fc, $alpha: 0.11));
            }
          }
        }

        @include it('to-indigo-400(0.11)') {
          @include assert {
            @include output {
              @include to-indigo-400(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#818cf8, $alpha: 0.11));
            }
          }
        }

        @include it('to-indigo-500(0.11)') {
          @include assert {
            @include output {
              @include to-indigo-500(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#6366f1, $alpha: 0.11));
            }
          }
        }

        @include it('to-indigo-600(0.11)') {
          @include assert {
            @include output {
              @include to-indigo-600(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#4f46e5, $alpha: 0.11));
            }
          }
        }

        @include it('to-indigo-700(0.11)') {
          @include assert {
            @include output {
              @include to-indigo-700(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#4338ca, $alpha: 0.11));
            }
          }
        }

        @include it('to-indigo-800(0.11)') {
          @include assert {
            @include output {
              @include to-indigo-800(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#3730a3, $alpha: 0.11));
            }
          }
        }

        @include it('to-indigo-900(0.11)') {
          @include assert {
            @include output {
              @include to-indigo-900(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#312e81, $alpha: 0.11));
            }
          }
        }

        @include it('to-indigo-950(0.11)') {
          @include assert {
            @include output {
              @include to-indigo-950(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#1e1b4b, $alpha: 0.11));
            }
          }
        }

        @include it('to-violet-50(0.11)') {
          @include assert {
            @include output {
              @include to-violet-50(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#f5f3ff, $alpha: 0.11));
            }
          }
        }

        @include it('to-violet-100(0.11)') {
          @include assert {
            @include output {
              @include to-violet-100(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#ede9fe, $alpha: 0.11));
            }
          }
        }

        @include it('to-violet-200(0.11)') {
          @include assert {
            @include output {
              @include to-violet-200(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#ddd6fe, $alpha: 0.11));
            }
          }
        }

        @include it('to-violet-300(0.11)') {
          @include assert {
            @include output {
              @include to-violet-300(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#c4b5fd, $alpha: 0.11));
            }
          }
        }

        @include it('to-violet-400(0.11)') {
          @include assert {
            @include output {
              @include to-violet-400(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#a78bfa, $alpha: 0.11));
            }
          }
        }

        @include it('to-violet-500(0.11)') {
          @include assert {
            @include output {
              @include to-violet-500(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#8b5cf6, $alpha: 0.11));
            }
          }
        }

        @include it('to-violet-600(0.11)') {
          @include assert {
            @include output {
              @include to-violet-600(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#7c3aed, $alpha: 0.11));
            }
          }
        }

        @include it('to-violet-700(0.11)') {
          @include assert {
            @include output {
              @include to-violet-700(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#6d28d9, $alpha: 0.11));
            }
          }
        }

        @include it('to-violet-800(0.11)') {
          @include assert {
            @include output {
              @include to-violet-800(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#5b21b6, $alpha: 0.11));
            }
          }
        }

        @include it('to-violet-900(0.11)') {
          @include assert {
            @include output {
              @include to-violet-900(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#4c1d95, $alpha: 0.11));
            }
          }
        }

        @include it('to-violet-950(0.11)') {
          @include assert {
            @include output {
              @include to-violet-950(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#2e1065, $alpha: 0.11));
            }
          }
        }

        @include it('to-purple-50(0.11)') {
          @include assert {
            @include output {
              @include to-purple-50(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#faf5ff, $alpha: 0.11));
            }
          }
        }

        @include it('to-purple-100(0.11)') {
          @include assert {
            @include output {
              @include to-purple-100(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#f3e8ff, $alpha: 0.11));
            }
          }
        }

        @include it('to-purple-200(0.11)') {
          @include assert {
            @include output {
              @include to-purple-200(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#e9d5ff, $alpha: 0.11));
            }
          }
        }

        @include it('to-purple-300(0.11)') {
          @include assert {
            @include output {
              @include to-purple-300(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#d8b4fe, $alpha: 0.11));
            }
          }
        }

        @include it('to-purple-400(0.11)') {
          @include assert {
            @include output {
              @include to-purple-400(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#c084fc, $alpha: 0.11));
            }
          }
        }

        @include it('to-purple-500(0.11)') {
          @include assert {
            @include output {
              @include to-purple-500(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#a855f7, $alpha: 0.11));
            }
          }
        }

        @include it('to-purple-600(0.11)') {
          @include assert {
            @include output {
              @include to-purple-600(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#9333ea, $alpha: 0.11));
            }
          }
        }

        @include it('to-purple-700(0.11)') {
          @include assert {
            @include output {
              @include to-purple-700(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#7e22ce, $alpha: 0.11));
            }
          }
        }

        @include it('to-purple-800(0.11)') {
          @include assert {
            @include output {
              @include to-purple-800(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#6b21a8, $alpha: 0.11));
            }
          }
        }

        @include it('to-purple-900(0.11)') {
          @include assert {
            @include output {
              @include to-purple-900(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#581c87, $alpha: 0.11));
            }
          }
        }

        @include it('to-purple-950(0.11)') {
          @include assert {
            @include output {
              @include to-purple-950(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#3b0764, $alpha: 0.11));
            }
          }
        }

        @include it('to-fuchsia-50(0.11)') {
          @include assert {
            @include output {
              @include to-fuchsia-50(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#fdf4ff, $alpha: 0.11));
            }
          }
        }

        @include it('to-fuchsia-100(0.11)') {
          @include assert {
            @include output {
              @include to-fuchsia-100(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#fae8ff, $alpha: 0.11));
            }
          }
        }

        @include it('to-fuchsia-200(0.11)') {
          @include assert {
            @include output {
              @include to-fuchsia-200(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#f5d0fe, $alpha: 0.11));
            }
          }
        }

        @include it('to-fuchsia-300(0.11)') {
          @include assert {
            @include output {
              @include to-fuchsia-300(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#f0abfc, $alpha: 0.11));
            }
          }
        }

        @include it('to-fuchsia-400(0.11)') {
          @include assert {
            @include output {
              @include to-fuchsia-400(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#e879f9, $alpha: 0.11));
            }
          }
        }

        @include it('to-fuchsia-500(0.11)') {
          @include assert {
            @include output {
              @include to-fuchsia-500(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#d946ef, $alpha: 0.11));
            }
          }
        }

        @include it('to-fuchsia-600(0.11)') {
          @include assert {
            @include output {
              @include to-fuchsia-600(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#c026d3, $alpha: 0.11));
            }
          }
        }

        @include it('to-fuchsia-700(0.11)') {
          @include assert {
            @include output {
              @include to-fuchsia-700(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#a21caf, $alpha: 0.11));
            }
          }
        }

        @include it('to-fuchsia-800(0.11)') {
          @include assert {
            @include output {
              @include to-fuchsia-800(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#86198f, $alpha: 0.11));
            }
          }
        }

        @include it('to-fuchsia-900(0.11)') {
          @include assert {
            @include output {
              @include to-fuchsia-900(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#701a75, $alpha: 0.11));
            }
          }
        }

        @include it('to-fuchsia-950(0.11)') {
          @include assert {
            @include output {
              @include to-fuchsia-950(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#4a044e, $alpha: 0.11));
            }
          }
        }

        @include it('to-pink-50(0.11)') {
          @include assert {
            @include output {
              @include to-pink-50(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#fdf2f8, $alpha: 0.11));
            }
          }
        }

        @include it('to-pink-100(0.11)') {
          @include assert {
            @include output {
              @include to-pink-100(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#fce7f3, $alpha: 0.11));
            }
          }
        }

        @include it('to-pink-200(0.11)') {
          @include assert {
            @include output {
              @include to-pink-200(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#fbcfe8, $alpha: 0.11));
            }
          }
        }

        @include it('to-pink-300(0.11)') {
          @include assert {
            @include output {
              @include to-pink-300(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#f9a8d4, $alpha: 0.11));
            }
          }
        }

        @include it('to-pink-400(0.11)') {
          @include assert {
            @include output {
              @include to-pink-400(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#f472b6, $alpha: 0.11));
            }
          }
        }

        @include it('to-pink-500(0.11)') {
          @include assert {
            @include output {
              @include to-pink-500(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#ec4899, $alpha: 0.11));
            }
          }
        }

        @include it('to-pink-600(0.11)') {
          @include assert {
            @include output {
              @include to-pink-600(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#db2777, $alpha: 0.11));
            }
          }
        }

        @include it('to-pink-700(0.11)') {
          @include assert {
            @include output {
              @include to-pink-700(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#be185d, $alpha: 0.11));
            }
          }
        }

        @include it('to-pink-800(0.11)') {
          @include assert {
            @include output {
              @include to-pink-800(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#9d174d, $alpha: 0.11));
            }
          }
        }

        @include it('to-pink-900(0.11)') {
          @include assert {
            @include output {
              @include to-pink-900(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#831843, $alpha: 0.11));
            }
          }
        }

        @include it('to-pink-950(0.11)') {
          @include assert {
            @include output {
              @include to-pink-950(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#500724, $alpha: 0.11));
            }
          }
        }

        @include it('to-rose-50(0.11)') {
          @include assert {
            @include output {
              @include to-rose-50(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#fff1f2, $alpha: 0.11));
            }
          }
        }

        @include it('to-rose-100(0.11)') {
          @include assert {
            @include output {
              @include to-rose-100(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#ffe4e6, $alpha: 0.11));
            }
          }
        }

        @include it('to-rose-200(0.11)') {
          @include assert {
            @include output {
              @include to-rose-200(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#fecdd3, $alpha: 0.11));
            }
          }
        }

        @include it('to-rose-300(0.11)') {
          @include assert {
            @include output {
              @include to-rose-300(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#fda4af, $alpha: 0.11));
            }
          }
        }

        @include it('to-rose-400(0.11)') {
          @include assert {
            @include output {
              @include to-rose-400(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#fb7185, $alpha: 0.11));
            }
          }
        }

        @include it('to-rose-500(0.11)') {
          @include assert {
            @include output {
              @include to-rose-500(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#f43f5e, $alpha: 0.11));
            }
          }
        }

        @include it('to-rose-600(0.11)') {
          @include assert {
            @include output {
              @include to-rose-600(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#e11d48, $alpha: 0.11));
            }
          }
        }

        @include it('to-rose-700(0.11)') {
          @include assert {
            @include output {
              @include to-rose-700(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#be123c, $alpha: 0.11));
            }
          }
        }

        @include it('to-rose-800(0.11)') {
          @include assert {
            @include output {
              @include to-rose-800(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#9f1239, $alpha: 0.11));
            }
          }
        }

        @include it('to-rose-900(0.11)') {
          @include assert {
            @include output {
              @include to-rose-900(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#881337, $alpha: 0.11));
            }
          }
        }

        @include it('to-rose-950(0.11)') {
          @include assert {
            @include output {
              @include to-rose-950(0.11);
              @include utils_reset-tw;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#4c0519, $alpha: 0.11));
            }
          }
        }

        @include it('to-0\%') {
          @include assert {
            @include output {
              @include to-white;
              @include to-0\%;
              @include utils_reset-tw;
            }

            @include expect {
              & {
                background-image: linear-gradient(null, #fff, white);
              }

              & {
                background-image: linear-gradient(null, #fff, white 0%);
              }
            }
          }
        }

        @include it('to-5\%') {
          @include assert {
            @include output {
              @include to-white;
              @include to-5\%;
              @include utils_reset-tw;
            }

            @include expect {
              & {
                background-image: linear-gradient(null, #fff, white);
              }

              & {
                background-image: linear-gradient(null, #fff, white 5%);
              }
            }
          }
        }

        @include it('to-10\%') {
          @include assert {
            @include output {
              @include to-white;
              @include to-10\%;
              @include utils_reset-tw;
            }

            @include expect {
              & {
                background-image: linear-gradient(null, #fff, white);
              }

              & {
                background-image: linear-gradient(null, #fff, white 10%);
              }
            }
          }
        }

        @include it('to-15\%') {
          @include assert {
            @include output {
              @include to-white;
              @include to-15\%;
              @include utils_reset-tw;
            }

            @include expect {
              & {
                background-image: linear-gradient(null, #fff, white);
              }

              & {
                background-image: linear-gradient(null, #fff, white 15%);
              }
            }
          }
        }

        @include it('to-20\%') {
          @include assert {
            @include output {
              @include to-white;
              @include to-20\%;
              @include utils_reset-tw;
            }

            @include expect {
              & {
                background-image: linear-gradient(null, #fff, white);
              }

              & {
                background-image: linear-gradient(null, #fff, white 20%);
              }
            }
          }
        }

        @include it('to-25\%') {
          @include assert {
            @include output {
              @include to-white;
              @include to-25\%;
              @include utils_reset-tw;
            }

            @include expect {
              & {
                background-image: linear-gradient(null, #fff, white);
              }

              & {
                background-image: linear-gradient(null, #fff, white 25%);
              }
            }
          }
        }

        @include it('to-30\%') {
          @include assert {
            @include output {
              @include to-white;
              @include to-30\%;
              @include utils_reset-tw;
            }

            @include expect {
              & {
                background-image: linear-gradient(null, #fff, white);
              }

              & {
                background-image: linear-gradient(null, #fff, white 30%);
              }
            }
          }
        }

        @include it('to-35\%') {
          @include assert {
            @include output {
              @include to-white;
              @include to-35\%;
              @include utils_reset-tw;
            }

            @include expect {
              & {
                background-image: linear-gradient(null, #fff, white);
              }

              & {
                background-image: linear-gradient(null, #fff, white 35%);
              }
            }
          }
        }

        @include it('to-40\%') {
          @include assert {
            @include output {
              @include to-white;
              @include to-40\%;
              @include utils_reset-tw;
            }

            @include expect {
              & {
                background-image: linear-gradient(null, #fff, white);
              }

              & {
                background-image: linear-gradient(null, #fff, white 40%);
              }
            }
          }
        }

        @include it('to-45\%') {
          @include assert {
            @include output {
              @include to-white;
              @include to-45\%;
              @include utils_reset-tw;
            }

            @include expect {
              & {
                background-image: linear-gradient(null, #fff, white);
              }

              & {
                background-image: linear-gradient(null, #fff, white 45%);
              }
            }
          }
        }

        @include it('to-50\%') {
          @include assert {
            @include output {
              @include to-white;
              @include to-50\%;
              @include utils_reset-tw;
            }

            @include expect {
              & {
                background-image: linear-gradient(null, #fff, white);
              }

              & {
                background-image: linear-gradient(null, #fff, white 50%);
              }
            }
          }
        }

        @include it('to-55\%') {
          @include assert {
            @include output {
              @include to-white;
              @include to-55\%;
              @include utils_reset-tw;
            }

            @include expect {
              & {
                background-image: linear-gradient(null, #fff, white);
              }

              & {
                background-image: linear-gradient(null, #fff, white 55%);
              }
            }
          }
        }

        @include it('to-60\%') {
          @include assert {
            @include output {
              @include to-white;
              @include to-60\%;
              @include utils_reset-tw;
            }

            @include expect {
              & {
                background-image: linear-gradient(null, #fff, white);
              }

              & {
                background-image: linear-gradient(null, #fff, white 60%);
              }
            }
          }
        }

        @include it('to-65\%') {
          @include assert {
            @include output {
              @include to-white;
              @include to-65\%;
              @include utils_reset-tw;
            }

            @include expect {
              & {
                background-image: linear-gradient(null, #fff, white);
              }

              & {
                background-image: linear-gradient(null, #fff, white 65%);
              }
            }
          }
        }

        @include it('to-70\%') {
          @include assert {
            @include output {
              @include to-white;
              @include to-70\%;
              @include utils_reset-tw;
            }

            @include expect {
              & {
                background-image: linear-gradient(null, #fff, white);
              }

              & {
                background-image: linear-gradient(null, #fff, white 70%);
              }
            }
          }
        }

        @include it('to-75\%') {
          @include assert {
            @include output {
              @include to-white;
              @include to-75\%;
              @include utils_reset-tw;
            }

            @include expect {
              & {
                background-image: linear-gradient(null, #fff, white);
              }

              & {
                background-image: linear-gradient(null, #fff, white 75%);
              }
            }
          }
        }

        @include it('to-80\%') {
          @include assert {
            @include output {
              @include to-white;
              @include to-80\%;
              @include utils_reset-tw;
            }

            @include expect {
              & {
                background-image: linear-gradient(null, #fff, white);
              }

              & {
                background-image: linear-gradient(null, #fff, white 80%);
              }
            }
          }
        }

        @include it('to-85\%') {
          @include assert {
            @include output {
              @include to-white;
              @include to-85\%;
              @include utils_reset-tw;
            }

            @include expect {
              & {
                background-image: linear-gradient(null, #fff, white);
              }

              & {
                background-image: linear-gradient(null, #fff, white 85%);
              }
            }
          }
        }

        @include it('to-90\%') {
          @include assert {
            @include output {
              @include to-white;
              @include to-90\%;
              @include utils_reset-tw;
            }

            @include expect {
              & {
                background-image: linear-gradient(null, #fff, white);
              }

              & {
                background-image: linear-gradient(null, #fff, white 90%);
              }
            }
          }
        }

        @include it('to-95\%') {
          @include assert {
            @include output {
              @include to-white;
              @include to-95\%;
              @include utils_reset-tw;
            }

            @include expect {
              & {
                background-image: linear-gradient(null, #fff, white);
              }

              & {
                background-image: linear-gradient(null, #fff, white 95%);
              }
            }
          }
        }

        @include it('to-100\%') {
          @include assert {
            @include output {
              @include to-white;
              @include to-100\%;
              @include utils_reset-tw;
            }

            @include expect {
              & {
                background-image: linear-gradient(null, #fff, white);
              }

              & {
                background-image: linear-gradient(null, #fff, white 100%);
              }
            }
          }
        }
      }
    }

    @include describe('Custom') {
      @include it('from-(#243c5a)') {
        @include assert {
          @include output {
            @include from-(#243c5a);
            @include utils_reset-tw;
          }

          @include expect {
            background-image: linear-gradient(null, #243c5a, transparent);
          }
        }
      }

      @include it('via-(#243c5a)') {
        @include assert {
          @include output {
            @include via-(#243c5a);
            @include utils_reset-tw;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #243c5a, transparent);
          }
        }
      }

      @include it('to-(#243c5a)') {
        @include assert {
          @include output {
            @include to-(#243c5a);
            @include utils_reset-tw;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #243c5a);
          }
        }
      }
    }
  }
}
