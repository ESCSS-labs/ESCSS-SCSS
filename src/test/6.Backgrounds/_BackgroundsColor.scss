@use "sass:color";
@use "true" as *;
@use "../awaken" as *;

@include describe("6.Backgrounds") {
  @include describe("Background Color") {
    @include describe("Basic") {
      @include it("bg-inherit") {
        @include assert {
          @include output {
            @include bg-inherit;
            @include utils_reset;
          }

          @include expect {
            background-color: inherit;
          }
        }
      }

      @include it("bg-current") {
        @include assert {
          @include output {
            @include bg-current;
            @include utils_reset;
          }

          @include expect {
            background-color: currentColor;
          }
        }
      }

      @include it("bg-transparent") {
        @include assert {
          @include output {
            @include bg-transparent;
            @include utils_reset;
          }

          @include expect {
            background-color: transparent;
          }
        }
      }

      @include it("bg-black") {
        @include assert {
          @include output {
            @include bg-black;
            @include utils_reset;
          }

          @include expect {
            background-color: black;
          }
        }
      }

      @include it("bg-white") {
        @include assert {
          @include output {
            @include bg-white;
            @include utils_reset;
          }

          @include expect {
            background-color: white;
          }
        }
      }

      @include it("bg-slate-50") {
        @include assert {
          @include output {
            @include bg-slate-50;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-slate-50;
          }
        }
      }

      @include it("bg-slate-100") {
        @include assert {
          @include output {
            @include bg-slate-100;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-slate-100;
          }
        }
      }

      @include it("bg-slate-200") {
        @include assert {
          @include output {
            @include bg-slate-200;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-slate-200;
          }
        }
      }

      @include it("bg-slate-300") {
        @include assert {
          @include output {
            @include bg-slate-300;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-slate-300;
          }
        }
      }

      @include it("bg-slate-400") {
        @include assert {
          @include output {
            @include bg-slate-400;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-slate-400;
          }
        }
      }

      @include it("bg-slate-500") {
        @include assert {
          @include output {
            @include bg-slate-500;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-slate-500;
          }
        }
      }

      @include it("bg-slate-600") {
        @include assert {
          @include output {
            @include bg-slate-600;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-slate-600;
          }
        }
      }

      @include it("bg-slate-700") {
        @include assert {
          @include output {
            @include bg-slate-700;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-slate-700;
          }
        }
      }

      @include it("bg-slate-800") {
        @include assert {
          @include output {
            @include bg-slate-800;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-slate-800;
          }
        }
      }

      @include it("bg-slate-900") {
        @include assert {
          @include output {
            @include bg-slate-900;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-slate-900;
          }
        }
      }

      @include it("bg-slate-950") {
        @include assert {
          @include output {
            @include bg-slate-950;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-slate-950;
          }
        }
      }

      @include it("bg-gray-50") {
        @include assert {
          @include output {
            @include bg-gray-50;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-gray-50;
          }
        }
      }

      @include it("bg-gray-100") {
        @include assert {
          @include output {
            @include bg-gray-100;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-gray-100;
          }
        }
      }

      @include it("bg-gray-200") {
        @include assert {
          @include output {
            @include bg-gray-200;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-gray-200;
          }
        }
      }

      @include it("bg-gray-300") {
        @include assert {
          @include output {
            @include bg-gray-300;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-gray-300;
          }
        }
      }

      @include it("bg-gray-400") {
        @include assert {
          @include output {
            @include bg-gray-400;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-gray-400;
          }
        }
      }

      @include it("bg-gray-500") {
        @include assert {
          @include output {
            @include bg-gray-500;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-gray-500;
          }
        }
      }

      @include it("bg-gray-600") {
        @include assert {
          @include output {
            @include bg-gray-600;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-gray-600;
          }
        }
      }

      @include it("bg-gray-700") {
        @include assert {
          @include output {
            @include bg-gray-700;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-gray-700;
          }
        }
      }

      @include it("bg-gray-800") {
        @include assert {
          @include output {
            @include bg-gray-800;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-gray-800;
          }
        }
      }

      @include it("bg-gray-900") {
        @include assert {
          @include output {
            @include bg-gray-900;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-gray-900;
          }
        }
      }

      @include it("bg-gray-950") {
        @include assert {
          @include output {
            @include bg-gray-950;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-gray-950;
          }
        }
      }

      @include it("bg-zinc-50") {
        @include assert {
          @include output {
            @include bg-zinc-50;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-zinc-50;
          }
        }
      }

      @include it("bg-zinc-100") {
        @include assert {
          @include output {
            @include bg-zinc-100;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-zinc-100;
          }
        }
      }

      @include it("bg-zinc-200") {
        @include assert {
          @include output {
            @include bg-zinc-200;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-zinc-200;
          }
        }
      }

      @include it("bg-zinc-300") {
        @include assert {
          @include output {
            @include bg-zinc-300;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-zinc-300;
          }
        }
      }

      @include it("bg-zinc-400") {
        @include assert {
          @include output {
            @include bg-zinc-400;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-zinc-400;
          }
        }
      }

      @include it("bg-zinc-500") {
        @include assert {
          @include output {
            @include bg-zinc-500;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-zinc-500;
          }
        }
      }

      @include it("bg-zinc-600") {
        @include assert {
          @include output {
            @include bg-zinc-600;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-zinc-600;
          }
        }
      }

      @include it("bg-zinc-700") {
        @include assert {
          @include output {
            @include bg-zinc-700;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-zinc-700;
          }
        }
      }

      @include it("bg-zinc-800") {
        @include assert {
          @include output {
            @include bg-zinc-800;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-zinc-800;
          }
        }
      }

      @include it("bg-zinc-900") {
        @include assert {
          @include output {
            @include bg-zinc-900;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-zinc-900;
          }
        }
      }

      @include it("bg-zinc-950") {
        @include assert {
          @include output {
            @include bg-zinc-950;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-zinc-950;
          }
        }
      }

      @include it("bg-neutral-50") {
        @include assert {
          @include output {
            @include bg-neutral-50;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-neutral-50;
          }
        }
      }

      @include it("bg-neutral-100") {
        @include assert {
          @include output {
            @include bg-neutral-100;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-neutral-100;
          }
        }
      }

      @include it("bg-neutral-200") {
        @include assert {
          @include output {
            @include bg-neutral-200;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-neutral-200;
          }
        }
      }

      @include it("bg-neutral-300") {
        @include assert {
          @include output {
            @include bg-neutral-300;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-neutral-300;
          }
        }
      }

      @include it("bg-neutral-400") {
        @include assert {
          @include output {
            @include bg-neutral-400;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-neutral-400;
          }
        }
      }

      @include it("bg-neutral-500") {
        @include assert {
          @include output {
            @include bg-neutral-500;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-neutral-500;
          }
        }
      }

      @include it("bg-neutral-600") {
        @include assert {
          @include output {
            @include bg-neutral-600;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-neutral-600;
          }
        }
      }

      @include it("bg-neutral-700") {
        @include assert {
          @include output {
            @include bg-neutral-700;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-neutral-700;
          }
        }
      }

      @include it("bg-neutral-800") {
        @include assert {
          @include output {
            @include bg-neutral-800;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-neutral-800;
          }
        }
      }

      @include it("bg-neutral-900") {
        @include assert {
          @include output {
            @include bg-neutral-900;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-neutral-900;
          }
        }
      }

      @include it("bg-neutral-950") {
        @include assert {
          @include output {
            @include bg-neutral-950;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-neutral-950;
          }
        }
      }

      @include it("bg-stone-50") {
        @include assert {
          @include output {
            @include bg-stone-50;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-stone-50;
          }
        }
      }

      @include it("bg-stone-100") {
        @include assert {
          @include output {
            @include bg-stone-100;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-stone-100;
          }
        }
      }

      @include it("bg-stone-200") {
        @include assert {
          @include output {
            @include bg-stone-200;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-stone-200;
          }
        }
      }

      @include it("bg-stone-300") {
        @include assert {
          @include output {
            @include bg-stone-300;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-stone-300;
          }
        }
      }

      @include it("bg-stone-400") {
        @include assert {
          @include output {
            @include bg-stone-400;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-stone-400;
          }
        }
      }

      @include it("bg-stone-500") {
        @include assert {
          @include output {
            @include bg-stone-500;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-stone-500;
          }
        }
      }

      @include it("bg-stone-600") {
        @include assert {
          @include output {
            @include bg-stone-600;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-stone-600;
          }
        }
      }

      @include it("bg-stone-700") {
        @include assert {
          @include output {
            @include bg-stone-700;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-stone-700;
          }
        }
      }

      @include it("bg-stone-800") {
        @include assert {
          @include output {
            @include bg-stone-800;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-stone-800;
          }
        }
      }

      @include it("bg-stone-900") {
        @include assert {
          @include output {
            @include bg-stone-900;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-stone-900;
          }
        }
      }

      @include it("bg-stone-950") {
        @include assert {
          @include output {
            @include bg-stone-950;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-stone-950;
          }
        }
      }

      @include it("bg-red-50") {
        @include assert {
          @include output {
            @include bg-red-50;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-red-50;
          }
        }
      }

      @include it("bg-red-100") {
        @include assert {
          @include output {
            @include bg-red-100;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-red-100;
          }
        }
      }

      @include it("bg-red-200") {
        @include assert {
          @include output {
            @include bg-red-200;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-red-200;
          }
        }
      }

      @include it("bg-red-300") {
        @include assert {
          @include output {
            @include bg-red-300;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-red-300;
          }
        }
      }

      @include it("bg-red-400") {
        @include assert {
          @include output {
            @include bg-red-400;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-red-400;
          }
        }
      }

      @include it("bg-red-500") {
        @include assert {
          @include output {
            @include bg-red-500;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-red-500;
          }
        }
      }

      @include it("bg-red-600") {
        @include assert {
          @include output {
            @include bg-red-600;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-red-600;
          }
        }
      }

      @include it("bg-red-700") {
        @include assert {
          @include output {
            @include bg-red-700;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-red-700;
          }
        }
      }

      @include it("bg-red-800") {
        @include assert {
          @include output {
            @include bg-red-800;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-red-800;
          }
        }
      }

      @include it("bg-red-900") {
        @include assert {
          @include output {
            @include bg-red-900;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-red-900;
          }
        }
      }

      @include it("bg-red-950") {
        @include assert {
          @include output {
            @include bg-red-950;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-red-950;
          }
        }
      }

      @include it("bg-orange-50") {
        @include assert {
          @include output {
            @include bg-orange-50;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-orange-50;
          }
        }
      }

      @include it("bg-orange-100") {
        @include assert {
          @include output {
            @include bg-orange-100;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-orange-100;
          }
        }
      }

      @include it("bg-orange-200") {
        @include assert {
          @include output {
            @include bg-orange-200;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-orange-200;
          }
        }
      }

      @include it("bg-orange-300") {
        @include assert {
          @include output {
            @include bg-orange-300;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-orange-300;
          }
        }
      }

      @include it("bg-orange-400") {
        @include assert {
          @include output {
            @include bg-orange-400;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-orange-400;
          }
        }
      }

      @include it("bg-orange-500") {
        @include assert {
          @include output {
            @include bg-orange-500;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-orange-500;
          }
        }
      }

      @include it("bg-orange-600") {
        @include assert {
          @include output {
            @include bg-orange-600;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-orange-600;
          }
        }
      }

      @include it("bg-orange-700") {
        @include assert {
          @include output {
            @include bg-orange-700;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-orange-700;
          }
        }
      }

      @include it("bg-orange-800") {
        @include assert {
          @include output {
            @include bg-orange-800;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-orange-800;
          }
        }
      }

      @include it("bg-orange-900") {
        @include assert {
          @include output {
            @include bg-orange-900;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-orange-900;
          }
        }
      }

      @include it("bg-orange-950") {
        @include assert {
          @include output {
            @include bg-orange-950;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-orange-950;
          }
        }
      }

      @include it("bg-amber-50") {
        @include assert {
          @include output {
            @include bg-amber-50;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-amber-50;
          }
        }
      }

      @include it("bg-amber-100") {
        @include assert {
          @include output {
            @include bg-amber-100;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-amber-100;
          }
        }
      }

      @include it("bg-amber-200") {
        @include assert {
          @include output {
            @include bg-amber-200;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-amber-200;
          }
        }
      }

      @include it("bg-amber-300") {
        @include assert {
          @include output {
            @include bg-amber-300;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-amber-300;
          }
        }
      }

      @include it("bg-amber-400") {
        @include assert {
          @include output {
            @include bg-amber-400;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-amber-400;
          }
        }
      }

      @include it("bg-amber-500") {
        @include assert {
          @include output {
            @include bg-amber-500;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-amber-500;
          }
        }
      }

      @include it("bg-amber-600") {
        @include assert {
          @include output {
            @include bg-amber-600;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-amber-600;
          }
        }
      }

      @include it("bg-amber-700") {
        @include assert {
          @include output {
            @include bg-amber-700;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-amber-700;
          }
        }
      }

      @include it("bg-amber-800") {
        @include assert {
          @include output {
            @include bg-amber-800;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-amber-800;
          }
        }
      }

      @include it("bg-amber-900") {
        @include assert {
          @include output {
            @include bg-amber-900;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-amber-900;
          }
        }
      }

      @include it("bg-amber-950") {
        @include assert {
          @include output {
            @include bg-amber-950;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-amber-950;
          }
        }
      }

      @include it("bg-yellow-50") {
        @include assert {
          @include output {
            @include bg-yellow-50;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-yellow-50;
          }
        }
      }

      @include it("bg-yellow-100") {
        @include assert {
          @include output {
            @include bg-yellow-100;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-yellow-100;
          }
        }
      }

      @include it("bg-yellow-200") {
        @include assert {
          @include output {
            @include bg-yellow-200;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-yellow-200;
          }
        }
      }

      @include it("bg-yellow-300") {
        @include assert {
          @include output {
            @include bg-yellow-300;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-yellow-300;
          }
        }
      }

      @include it("bg-yellow-400") {
        @include assert {
          @include output {
            @include bg-yellow-400;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-yellow-400;
          }
        }
      }

      @include it("bg-yellow-500") {
        @include assert {
          @include output {
            @include bg-yellow-500;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-yellow-500;
          }
        }
      }

      @include it("bg-yellow-600") {
        @include assert {
          @include output {
            @include bg-yellow-600;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-yellow-600;
          }
        }
      }

      @include it("bg-yellow-700") {
        @include assert {
          @include output {
            @include bg-yellow-700;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-yellow-700;
          }
        }
      }

      @include it("bg-yellow-800") {
        @include assert {
          @include output {
            @include bg-yellow-800;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-yellow-800;
          }
        }
      }

      @include it("bg-yellow-900") {
        @include assert {
          @include output {
            @include bg-yellow-900;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-yellow-900;
          }
        }
      }

      @include it("bg-yellow-950") {
        @include assert {
          @include output {
            @include bg-yellow-950;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-yellow-950;
          }
        }
      }

      @include it("bg-lime-50") {
        @include assert {
          @include output {
            @include bg-lime-50;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-lime-50;
          }
        }
      }

      @include it("bg-lime-100") {
        @include assert {
          @include output {
            @include bg-lime-100;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-lime-100;
          }
        }
      }

      @include it("bg-lime-200") {
        @include assert {
          @include output {
            @include bg-lime-200;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-lime-200;
          }
        }
      }

      @include it("bg-lime-300") {
        @include assert {
          @include output {
            @include bg-lime-300;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-lime-300;
          }
        }
      }

      @include it("bg-lime-400") {
        @include assert {
          @include output {
            @include bg-lime-400;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-lime-400;
          }
        }
      }

      @include it("bg-lime-500") {
        @include assert {
          @include output {
            @include bg-lime-500;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-lime-500;
          }
        }
      }

      @include it("bg-lime-600") {
        @include assert {
          @include output {
            @include bg-lime-600;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-lime-600;
          }
        }
      }

      @include it("bg-lime-700") {
        @include assert {
          @include output {
            @include bg-lime-700;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-lime-700;
          }
        }
      }

      @include it("bg-lime-800") {
        @include assert {
          @include output {
            @include bg-lime-800;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-lime-800;
          }
        }
      }

      @include it("bg-lime-900") {
        @include assert {
          @include output {
            @include bg-lime-900;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-lime-900;
          }
        }
      }

      @include it("bg-lime-950") {
        @include assert {
          @include output {
            @include bg-lime-950;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-lime-950;
          }
        }
      }

      @include it("bg-green-50") {
        @include assert {
          @include output {
            @include bg-green-50;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-green-50;
          }
        }
      }

      @include it("bg-green-100") {
        @include assert {
          @include output {
            @include bg-green-100;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-green-100;
          }
        }
      }

      @include it("bg-green-200") {
        @include assert {
          @include output {
            @include bg-green-200;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-green-200;
          }
        }
      }

      @include it("bg-green-300") {
        @include assert {
          @include output {
            @include bg-green-300;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-green-300;
          }
        }
      }

      @include it("bg-green-400") {
        @include assert {
          @include output {
            @include bg-green-400;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-green-400;
          }
        }
      }

      @include it("bg-green-500") {
        @include assert {
          @include output {
            @include bg-green-500;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-green-500;
          }
        }
      }

      @include it("bg-green-600") {
        @include assert {
          @include output {
            @include bg-green-600;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-green-600;
          }
        }
      }

      @include it("bg-green-700") {
        @include assert {
          @include output {
            @include bg-green-700;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-green-700;
          }
        }
      }

      @include it("bg-green-800") {
        @include assert {
          @include output {
            @include bg-green-800;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-green-800;
          }
        }
      }

      @include it("bg-green-900") {
        @include assert {
          @include output {
            @include bg-green-900;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-green-900;
          }
        }
      }

      @include it("bg-green-950") {
        @include assert {
          @include output {
            @include bg-green-950;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-green-950;
          }
        }
      }

      @include it("bg-emerald-50") {
        @include assert {
          @include output {
            @include bg-emerald-50;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-emerald-50;
          }
        }
      }

      @include it("bg-emerald-100") {
        @include assert {
          @include output {
            @include bg-emerald-100;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-emerald-100;
          }
        }
      }

      @include it("bg-emerald-200") {
        @include assert {
          @include output {
            @include bg-emerald-200;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-emerald-200;
          }
        }
      }

      @include it("bg-emerald-300") {
        @include assert {
          @include output {
            @include bg-emerald-300;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-emerald-300;
          }
        }
      }

      @include it("bg-emerald-400") {
        @include assert {
          @include output {
            @include bg-emerald-400;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-emerald-400;
          }
        }
      }

      @include it("bg-emerald-500") {
        @include assert {
          @include output {
            @include bg-emerald-500;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-emerald-500;
          }
        }
      }

      @include it("bg-emerald-600") {
        @include assert {
          @include output {
            @include bg-emerald-600;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-emerald-600;
          }
        }
      }

      @include it("bg-emerald-700") {
        @include assert {
          @include output {
            @include bg-emerald-700;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-emerald-700;
          }
        }
      }

      @include it("bg-emerald-800") {
        @include assert {
          @include output {
            @include bg-emerald-800;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-emerald-800;
          }
        }
      }

      @include it("bg-emerald-900") {
        @include assert {
          @include output {
            @include bg-emerald-900;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-emerald-900;
          }
        }
      }

      @include it("bg-emerald-950") {
        @include assert {
          @include output {
            @include bg-emerald-950;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-emerald-950;
          }
        }
      }

      @include it("bg-teal-50") {
        @include assert {
          @include output {
            @include bg-teal-50;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-teal-50;
          }
        }
      }

      @include it("bg-teal-100") {
        @include assert {
          @include output {
            @include bg-teal-100;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-teal-100;
          }
        }
      }

      @include it("bg-teal-200") {
        @include assert {
          @include output {
            @include bg-teal-200;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-teal-200;
          }
        }
      }

      @include it("bg-teal-300") {
        @include assert {
          @include output {
            @include bg-teal-300;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-teal-300;
          }
        }
      }

      @include it("bg-teal-400") {
        @include assert {
          @include output {
            @include bg-teal-400;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-teal-400;
          }
        }
      }

      @include it("bg-teal-500") {
        @include assert {
          @include output {
            @include bg-teal-500;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-teal-500;
          }
        }
      }

      @include it("bg-teal-600") {
        @include assert {
          @include output {
            @include bg-teal-600;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-teal-600;
          }
        }
      }

      @include it("bg-teal-700") {
        @include assert {
          @include output {
            @include bg-teal-700;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-teal-700;
          }
        }
      }

      @include it("bg-teal-800") {
        @include assert {
          @include output {
            @include bg-teal-800;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-teal-800;
          }
        }
      }

      @include it("bg-teal-900") {
        @include assert {
          @include output {
            @include bg-teal-900;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-teal-900;
          }
        }
      }

      @include it("bg-teal-950") {
        @include assert {
          @include output {
            @include bg-teal-950;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-teal-950;
          }
        }
      }

      @include it("bg-cyan-50") {
        @include assert {
          @include output {
            @include bg-cyan-50;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-cyan-50;
          }
        }
      }

      @include it("bg-cyan-100") {
        @include assert {
          @include output {
            @include bg-cyan-100;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-cyan-100;
          }
        }
      }

      @include it("bg-cyan-200") {
        @include assert {
          @include output {
            @include bg-cyan-200;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-cyan-200;
          }
        }
      }

      @include it("bg-cyan-300") {
        @include assert {
          @include output {
            @include bg-cyan-300;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-cyan-300;
          }
        }
      }

      @include it("bg-cyan-400") {
        @include assert {
          @include output {
            @include bg-cyan-400;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-cyan-400;
          }
        }
      }

      @include it("bg-cyan-500") {
        @include assert {
          @include output {
            @include bg-cyan-500;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-cyan-500;
          }
        }
      }

      @include it("bg-cyan-600") {
        @include assert {
          @include output {
            @include bg-cyan-600;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-cyan-600;
          }
        }
      }

      @include it("bg-cyan-700") {
        @include assert {
          @include output {
            @include bg-cyan-700;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-cyan-700;
          }
        }
      }

      @include it("bg-cyan-800") {
        @include assert {
          @include output {
            @include bg-cyan-800;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-cyan-800;
          }
        }
      }

      @include it("bg-cyan-900") {
        @include assert {
          @include output {
            @include bg-cyan-900;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-cyan-900;
          }
        }
      }

      @include it("bg-cyan-950") {
        @include assert {
          @include output {
            @include bg-cyan-950;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-cyan-950;
          }
        }
      }

      @include it("bg-sky-50") {
        @include assert {
          @include output {
            @include bg-sky-50;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-sky-50;
          }
        }
      }

      @include it("bg-sky-100") {
        @include assert {
          @include output {
            @include bg-sky-100;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-sky-100;
          }
        }
      }

      @include it("bg-sky-200") {
        @include assert {
          @include output {
            @include bg-sky-200;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-sky-200;
          }
        }
      }

      @include it("bg-sky-300") {
        @include assert {
          @include output {
            @include bg-sky-300;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-sky-300;
          }
        }
      }

      @include it("bg-sky-400") {
        @include assert {
          @include output {
            @include bg-sky-400;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-sky-400;
          }
        }
      }

      @include it("bg-sky-500") {
        @include assert {
          @include output {
            @include bg-sky-500;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-sky-500;
          }
        }
      }

      @include it("bg-sky-600") {
        @include assert {
          @include output {
            @include bg-sky-600;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-sky-600;
          }
        }
      }

      @include it("bg-sky-700") {
        @include assert {
          @include output {
            @include bg-sky-700;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-sky-700;
          }
        }
      }

      @include it("bg-sky-800") {
        @include assert {
          @include output {
            @include bg-sky-800;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-sky-800;
          }
        }
      }

      @include it("bg-sky-900") {
        @include assert {
          @include output {
            @include bg-sky-900;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-sky-900;
          }
        }
      }

      @include it("bg-sky-950") {
        @include assert {
          @include output {
            @include bg-sky-950;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-sky-950;
          }
        }
      }

      @include it("bg-blue-50") {
        @include assert {
          @include output {
            @include bg-blue-50;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-blue-50;
          }
        }
      }

      @include it("bg-blue-100") {
        @include assert {
          @include output {
            @include bg-blue-100;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-blue-100;
          }
        }
      }

      @include it("bg-blue-200") {
        @include assert {
          @include output {
            @include bg-blue-200;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-blue-200;
          }
        }
      }

      @include it("bg-blue-300") {
        @include assert {
          @include output {
            @include bg-blue-300;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-blue-300;
          }
        }
      }

      @include it("bg-blue-400") {
        @include assert {
          @include output {
            @include bg-blue-400;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-blue-400;
          }
        }
      }

      @include it("bg-blue-500") {
        @include assert {
          @include output {
            @include bg-blue-500;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-blue-500;
          }
        }
      }

      @include it("bg-blue-600") {
        @include assert {
          @include output {
            @include bg-blue-600;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-blue-600;
          }
        }
      }

      @include it("bg-blue-700") {
        @include assert {
          @include output {
            @include bg-blue-700;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-blue-700;
          }
        }
      }

      @include it("bg-blue-800") {
        @include assert {
          @include output {
            @include bg-blue-800;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-blue-800;
          }
        }
      }

      @include it("bg-blue-900") {
        @include assert {
          @include output {
            @include bg-blue-900;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-blue-900;
          }
        }
      }

      @include it("bg-blue-950") {
        @include assert {
          @include output {
            @include bg-blue-950;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-blue-950;
          }
        }
      }

      @include it("bg-indigo-50") {
        @include assert {
          @include output {
            @include bg-indigo-50;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-indigo-50;
          }
        }
      }

      @include it("bg-indigo-100") {
        @include assert {
          @include output {
            @include bg-indigo-100;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-indigo-100;
          }
        }
      }

      @include it("bg-indigo-200") {
        @include assert {
          @include output {
            @include bg-indigo-200;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-indigo-200;
          }
        }
      }

      @include it("bg-indigo-300") {
        @include assert {
          @include output {
            @include bg-indigo-300;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-indigo-300;
          }
        }
      }

      @include it("bg-indigo-400") {
        @include assert {
          @include output {
            @include bg-indigo-400;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-indigo-400;
          }
        }
      }

      @include it("bg-indigo-500") {
        @include assert {
          @include output {
            @include bg-indigo-500;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-indigo-500;
          }
        }
      }

      @include it("bg-indigo-600") {
        @include assert {
          @include output {
            @include bg-indigo-600;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-indigo-600;
          }
        }
      }

      @include it("bg-indigo-700") {
        @include assert {
          @include output {
            @include bg-indigo-700;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-indigo-700;
          }
        }
      }

      @include it("bg-indigo-800") {
        @include assert {
          @include output {
            @include bg-indigo-800;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-indigo-800;
          }
        }
      }

      @include it("bg-indigo-900") {
        @include assert {
          @include output {
            @include bg-indigo-900;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-indigo-900;
          }
        }
      }

      @include it("bg-indigo-950") {
        @include assert {
          @include output {
            @include bg-indigo-950;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-indigo-950;
          }
        }
      }

      @include it("bg-violet-50") {
        @include assert {
          @include output {
            @include bg-violet-50;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-violet-50;
          }
        }
      }

      @include it("bg-violet-100") {
        @include assert {
          @include output {
            @include bg-violet-100;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-violet-100;
          }
        }
      }

      @include it("bg-violet-200") {
        @include assert {
          @include output {
            @include bg-violet-200;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-violet-200;
          }
        }
      }

      @include it("bg-violet-300") {
        @include assert {
          @include output {
            @include bg-violet-300;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-violet-300;
          }
        }
      }

      @include it("bg-violet-400") {
        @include assert {
          @include output {
            @include bg-violet-400;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-violet-400;
          }
        }
      }

      @include it("bg-violet-500") {
        @include assert {
          @include output {
            @include bg-violet-500;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-violet-500;
          }
        }
      }

      @include it("bg-violet-600") {
        @include assert {
          @include output {
            @include bg-violet-600;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-violet-600;
          }
        }
      }

      @include it("bg-violet-700") {
        @include assert {
          @include output {
            @include bg-violet-700;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-violet-700;
          }
        }
      }

      @include it("bg-violet-800") {
        @include assert {
          @include output {
            @include bg-violet-800;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-violet-800;
          }
        }
      }

      @include it("bg-violet-900") {
        @include assert {
          @include output {
            @include bg-violet-900;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-violet-900;
          }
        }
      }

      @include it("bg-violet-950") {
        @include assert {
          @include output {
            @include bg-violet-950;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-violet-950;
          }
        }
      }

      @include it("bg-purple-50") {
        @include assert {
          @include output {
            @include bg-purple-50;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-purple-50;
          }
        }
      }

      @include it("bg-purple-100") {
        @include assert {
          @include output {
            @include bg-purple-100;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-purple-100;
          }
        }
      }

      @include it("bg-purple-200") {
        @include assert {
          @include output {
            @include bg-purple-200;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-purple-200;
          }
        }
      }

      @include it("bg-purple-300") {
        @include assert {
          @include output {
            @include bg-purple-300;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-purple-300;
          }
        }
      }

      @include it("bg-purple-400") {
        @include assert {
          @include output {
            @include bg-purple-400;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-purple-400;
          }
        }
      }

      @include it("bg-purple-500") {
        @include assert {
          @include output {
            @include bg-purple-500;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-purple-500;
          }
        }
      }

      @include it("bg-purple-600") {
        @include assert {
          @include output {
            @include bg-purple-600;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-purple-600;
          }
        }
      }

      @include it("bg-purple-700") {
        @include assert {
          @include output {
            @include bg-purple-700;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-purple-700;
          }
        }
      }

      @include it("bg-purple-800") {
        @include assert {
          @include output {
            @include bg-purple-800;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-purple-800;
          }
        }
      }

      @include it("bg-purple-900") {
        @include assert {
          @include output {
            @include bg-purple-900;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-purple-900;
          }
        }
      }

      @include it("bg-purple-950") {
        @include assert {
          @include output {
            @include bg-purple-950;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-purple-950;
          }
        }
      }

      @include it("bg-fuchsia-50") {
        @include assert {
          @include output {
            @include bg-fuchsia-50;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-fuchsia-50;
          }
        }
      }

      @include it("bg-fuchsia-100") {
        @include assert {
          @include output {
            @include bg-fuchsia-100;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-fuchsia-100;
          }
        }
      }

      @include it("bg-fuchsia-200") {
        @include assert {
          @include output {
            @include bg-fuchsia-200;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-fuchsia-200;
          }
        }
      }

      @include it("bg-fuchsia-300") {
        @include assert {
          @include output {
            @include bg-fuchsia-300;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-fuchsia-300;
          }
        }
      }

      @include it("bg-fuchsia-400") {
        @include assert {
          @include output {
            @include bg-fuchsia-400;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-fuchsia-400;
          }
        }
      }

      @include it("bg-fuchsia-500") {
        @include assert {
          @include output {
            @include bg-fuchsia-500;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-fuchsia-500;
          }
        }
      }

      @include it("bg-fuchsia-600") {
        @include assert {
          @include output {
            @include bg-fuchsia-600;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-fuchsia-600;
          }
        }
      }

      @include it("bg-fuchsia-700") {
        @include assert {
          @include output {
            @include bg-fuchsia-700;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-fuchsia-700;
          }
        }
      }

      @include it("bg-fuchsia-800") {
        @include assert {
          @include output {
            @include bg-fuchsia-800;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-fuchsia-800;
          }
        }
      }

      @include it("bg-fuchsia-900") {
        @include assert {
          @include output {
            @include bg-fuchsia-900;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-fuchsia-900;
          }
        }
      }

      @include it("bg-fuchsia-950") {
        @include assert {
          @include output {
            @include bg-fuchsia-950;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-fuchsia-950;
          }
        }
      }

      @include it("bg-pink-50") {
        @include assert {
          @include output {
            @include bg-pink-50;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-pink-50;
          }
        }
      }

      @include it("bg-pink-100") {
        @include assert {
          @include output {
            @include bg-pink-100;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-pink-100;
          }
        }
      }

      @include it("bg-pink-200") {
        @include assert {
          @include output {
            @include bg-pink-200;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-pink-200;
          }
        }
      }

      @include it("bg-pink-300") {
        @include assert {
          @include output {
            @include bg-pink-300;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-pink-300;
          }
        }
      }

      @include it("bg-pink-400") {
        @include assert {
          @include output {
            @include bg-pink-400;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-pink-400;
          }
        }
      }

      @include it("bg-pink-500") {
        @include assert {
          @include output {
            @include bg-pink-500;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-pink-500;
          }
        }
      }

      @include it("bg-pink-600") {
        @include assert {
          @include output {
            @include bg-pink-600;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-pink-600;
          }
        }
      }

      @include it("bg-pink-700") {
        @include assert {
          @include output {
            @include bg-pink-700;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-pink-700;
          }
        }
      }

      @include it("bg-pink-800") {
        @include assert {
          @include output {
            @include bg-pink-800;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-pink-800;
          }
        }
      }

      @include it("bg-pink-900") {
        @include assert {
          @include output {
            @include bg-pink-900;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-pink-900;
          }
        }
      }

      @include it("bg-pink-950") {
        @include assert {
          @include output {
            @include bg-pink-950;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-pink-950;
          }
        }
      }

      @include it("bg-rose-50") {
        @include assert {
          @include output {
            @include bg-rose-50;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-rose-50;
          }
        }
      }

      @include it("bg-rose-100") {
        @include assert {
          @include output {
            @include bg-rose-100;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-rose-100;
          }
        }
      }

      @include it("bg-rose-200") {
        @include assert {
          @include output {
            @include bg-rose-200;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-rose-200;
          }
        }
      }

      @include it("bg-rose-300") {
        @include assert {
          @include output {
            @include bg-rose-300;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-rose-300;
          }
        }
      }

      @include it("bg-rose-400") {
        @include assert {
          @include output {
            @include bg-rose-400;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-rose-400;
          }
        }
      }

      @include it("bg-rose-500") {
        @include assert {
          @include output {
            @include bg-rose-500;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-rose-500;
          }
        }
      }

      @include it("bg-rose-600") {
        @include assert {
          @include output {
            @include bg-rose-600;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-rose-600;
          }
        }
      }

      @include it("bg-rose-700") {
        @include assert {
          @include output {
            @include bg-rose-700;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-rose-700;
          }
        }
      }

      @include it("bg-rose-800") {
        @include assert {
          @include output {
            @include bg-rose-800;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-rose-800;
          }
        }
      }

      @include it("bg-rose-900") {
        @include assert {
          @include output {
            @include bg-rose-900;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-rose-900;
          }
        }
      }

      @include it("bg-rose-950") {
        @include assert {
          @include output {
            @include bg-rose-950;
            @include utils_reset;
          }

          @include expect {
            background-color: $color-rose-950;
          }
        }
      }

      @include it("bg-black(0.11)") {
        @include assert {
          @include output {
            @include bg-black(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change(#000, $alpha: 0.11);
          }
        }
      }

      @include it("bg-white(0.11)") {
        @include assert {
          @include output {
            @include bg-white(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change(#fff, $alpha: 0.11);
          }
        }
      }

      @include it("bg-slate-50(0.11)") {
        @include assert {
          @include output {
            @include bg-slate-50(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-slate-50, $alpha: 0.11);
          }
        }
      }

      @include it("bg-slate-100(0.11)") {
        @include assert {
          @include output {
            @include bg-slate-100(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-slate-100, $alpha: 0.11);
          }
        }
      }

      @include it("bg-slate-200(0.11)") {
        @include assert {
          @include output {
            @include bg-slate-200(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-slate-200, $alpha: 0.11);
          }
        }
      }

      @include it("bg-slate-300(0.11)") {
        @include assert {
          @include output {
            @include bg-slate-300(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-slate-300, $alpha: 0.11);
          }
        }
      }

      @include it("bg-slate-400(0.11)") {
        @include assert {
          @include output {
            @include bg-slate-400(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-slate-400, $alpha: 0.11);
          }
        }
      }

      @include it("bg-slate-500(0.11)") {
        @include assert {
          @include output {
            @include bg-slate-500(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-slate-500, $alpha: 0.11);
          }
        }
      }

      @include it("bg-slate-600(0.11)") {
        @include assert {
          @include output {
            @include bg-slate-600(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-slate-600, $alpha: 0.11);
          }
        }
      }

      @include it("bg-slate-700(0.11)") {
        @include assert {
          @include output {
            @include bg-slate-700(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-slate-700, $alpha: 0.11);
          }
        }
      }

      @include it("bg-slate-800(0.11)") {
        @include assert {
          @include output {
            @include bg-slate-800(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-slate-800, $alpha: 0.11);
          }
        }
      }

      @include it("bg-slate-900(0.11)") {
        @include assert {
          @include output {
            @include bg-slate-900(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-slate-900, $alpha: 0.11);
          }
        }
      }

      @include it("bg-slate-950(0.11)") {
        @include assert {
          @include output {
            @include bg-slate-950(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-slate-950, $alpha: 0.11);
          }
        }
      }

      @include it("bg-gray-50(0.11)") {
        @include assert {
          @include output {
            @include bg-gray-50(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-gray-50, $alpha: 0.11);
          }
        }
      }

      @include it("bg-gray-100(0.11)") {
        @include assert {
          @include output {
            @include bg-gray-100(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-gray-100, $alpha: 0.11);
          }
        }
      }

      @include it("bg-gray-200(0.11)") {
        @include assert {
          @include output {
            @include bg-gray-200(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-gray-200, $alpha: 0.11);
          }
        }
      }

      @include it("bg-gray-300(0.11)") {
        @include assert {
          @include output {
            @include bg-gray-300(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-gray-300, $alpha: 0.11);
          }
        }
      }

      @include it("bg-gray-400(0.11)") {
        @include assert {
          @include output {
            @include bg-gray-400(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-gray-400, $alpha: 0.11);
          }
        }
      }

      @include it("bg-gray-500(0.11)") {
        @include assert {
          @include output {
            @include bg-gray-500(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-gray-500, $alpha: 0.11);
          }
        }
      }

      @include it("bg-gray-600(0.11)") {
        @include assert {
          @include output {
            @include bg-gray-600(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-gray-600, $alpha: 0.11);
          }
        }
      }

      @include it("bg-gray-700(0.11)") {
        @include assert {
          @include output {
            @include bg-gray-700(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-gray-700, $alpha: 0.11);
          }
        }
      }

      @include it("bg-gray-800(0.11)") {
        @include assert {
          @include output {
            @include bg-gray-800(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-gray-800, $alpha: 0.11);
          }
        }
      }

      @include it("bg-gray-900(0.11)") {
        @include assert {
          @include output {
            @include bg-gray-900(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-gray-900, $alpha: 0.11);
          }
        }
      }

      @include it("bg-gray-950(0.11)") {
        @include assert {
          @include output {
            @include bg-gray-950(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-gray-950, $alpha: 0.11);
          }
        }
      }

      @include it("bg-zinc-50(0.11)") {
        @include assert {
          @include output {
            @include bg-zinc-50(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-zinc-50, $alpha: 0.11);
          }
        }
      }

      @include it("bg-zinc-100(0.11)") {
        @include assert {
          @include output {
            @include bg-zinc-100(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-zinc-100, $alpha: 0.11);
          }
        }
      }

      @include it("bg-zinc-200(0.11)") {
        @include assert {
          @include output {
            @include bg-zinc-200(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-zinc-200, $alpha: 0.11);
          }
        }
      }

      @include it("bg-zinc-300(0.11)") {
        @include assert {
          @include output {
            @include bg-zinc-300(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-zinc-300, $alpha: 0.11);
          }
        }
      }

      @include it("bg-zinc-400(0.11)") {
        @include assert {
          @include output {
            @include bg-zinc-400(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-zinc-400, $alpha: 0.11);
          }
        }
      }

      @include it("bg-zinc-500(0.11)") {
        @include assert {
          @include output {
            @include bg-zinc-500(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-zinc-500, $alpha: 0.11);
          }
        }
      }

      @include it("bg-zinc-600(0.11)") {
        @include assert {
          @include output {
            @include bg-zinc-600(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-zinc-600, $alpha: 0.11);
          }
        }
      }

      @include it("bg-zinc-700(0.11)") {
        @include assert {
          @include output {
            @include bg-zinc-700(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-zinc-700, $alpha: 0.11);
          }
        }
      }

      @include it("bg-zinc-800(0.11)") {
        @include assert {
          @include output {
            @include bg-zinc-800(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-zinc-800, $alpha: 0.11);
          }
        }
      }

      @include it("bg-zinc-900(0.11)") {
        @include assert {
          @include output {
            @include bg-zinc-900(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-zinc-900, $alpha: 0.11);
          }
        }
      }

      @include it("bg-zinc-950(0.11)") {
        @include assert {
          @include output {
            @include bg-zinc-950(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-zinc-950, $alpha: 0.11);
          }
        }
      }

      @include it("bg-neutral-50(0.11)") {
        @include assert {
          @include output {
            @include bg-neutral-50(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-neutral-50, $alpha: 0.11);
          }
        }
      }

      @include it("bg-neutral-100(0.11)") {
        @include assert {
          @include output {
            @include bg-neutral-100(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-neutral-100, $alpha: 0.11);
          }
        }
      }

      @include it("bg-neutral-200(0.11)") {
        @include assert {
          @include output {
            @include bg-neutral-200(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-neutral-200, $alpha: 0.11);
          }
        }
      }

      @include it("bg-neutral-300(0.11)") {
        @include assert {
          @include output {
            @include bg-neutral-300(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-neutral-300, $alpha: 0.11);
          }
        }
      }

      @include it("bg-neutral-400(0.11)") {
        @include assert {
          @include output {
            @include bg-neutral-400(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-neutral-400, $alpha: 0.11);
          }
        }
      }

      @include it("bg-neutral-500(0.11)") {
        @include assert {
          @include output {
            @include bg-neutral-500(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-neutral-500, $alpha: 0.11);
          }
        }
      }

      @include it("bg-neutral-600(0.11)") {
        @include assert {
          @include output {
            @include bg-neutral-600(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-neutral-600, $alpha: 0.11);
          }
        }
      }

      @include it("bg-neutral-700(0.11)") {
        @include assert {
          @include output {
            @include bg-neutral-700(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-neutral-700, $alpha: 0.11);
          }
        }
      }

      @include it("bg-neutral-800(0.11)") {
        @include assert {
          @include output {
            @include bg-neutral-800(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-neutral-800, $alpha: 0.11);
          }
        }
      }

      @include it("bg-neutral-900(0.11)") {
        @include assert {
          @include output {
            @include bg-neutral-900(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-neutral-900, $alpha: 0.11);
          }
        }
      }

      @include it("bg-neutral-950(0.11)") {
        @include assert {
          @include output {
            @include bg-neutral-950(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-neutral-950, $alpha: 0.11);
          }
        }
      }

      @include it("bg-stone-50(0.11)") {
        @include assert {
          @include output {
            @include bg-stone-50(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-stone-50, $alpha: 0.11);
          }
        }
      }

      @include it("bg-stone-100(0.11)") {
        @include assert {
          @include output {
            @include bg-stone-100(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-stone-100, $alpha: 0.11);
          }
        }
      }

      @include it("bg-stone-200(0.11)") {
        @include assert {
          @include output {
            @include bg-stone-200(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-stone-200, $alpha: 0.11);
          }
        }
      }

      @include it("bg-stone-300(0.11)") {
        @include assert {
          @include output {
            @include bg-stone-300(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-stone-300, $alpha: 0.11);
          }
        }
      }

      @include it("bg-stone-400(0.11)") {
        @include assert {
          @include output {
            @include bg-stone-400(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-stone-400, $alpha: 0.11);
          }
        }
      }

      @include it("bg-stone-500(0.11)") {
        @include assert {
          @include output {
            @include bg-stone-500(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-stone-500, $alpha: 0.11);
          }
        }
      }

      @include it("bg-stone-600(0.11)") {
        @include assert {
          @include output {
            @include bg-stone-600(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-stone-600, $alpha: 0.11);
          }
        }
      }

      @include it("bg-stone-700(0.11)") {
        @include assert {
          @include output {
            @include bg-stone-700(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-stone-700, $alpha: 0.11);
          }
        }
      }

      @include it("bg-stone-800(0.11)") {
        @include assert {
          @include output {
            @include bg-stone-800(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-stone-800, $alpha: 0.11);
          }
        }
      }

      @include it("bg-stone-900(0.11)") {
        @include assert {
          @include output {
            @include bg-stone-900(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-stone-900, $alpha: 0.11);
          }
        }
      }

      @include it("bg-stone-950(0.11)") {
        @include assert {
          @include output {
            @include bg-stone-950(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-stone-950, $alpha: 0.11);
          }
        }
      }

      @include it("bg-red-50(0.11)") {
        @include assert {
          @include output {
            @include bg-red-50(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-red-50, $alpha: 0.11);
          }
        }
      }

      @include it("bg-red-100(0.11)") {
        @include assert {
          @include output {
            @include bg-red-100(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-red-100, $alpha: 0.11);
          }
        }
      }

      @include it("bg-red-200(0.11)") {
        @include assert {
          @include output {
            @include bg-red-200(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-red-200, $alpha: 0.11);
          }
        }
      }

      @include it("bg-red-300(0.11)") {
        @include assert {
          @include output {
            @include bg-red-300(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-red-300, $alpha: 0.11);
          }
        }
      }

      @include it("bg-red-400(0.11)") {
        @include assert {
          @include output {
            @include bg-red-400(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-red-400, $alpha: 0.11);
          }
        }
      }

      @include it("bg-red-500(0.11)") {
        @include assert {
          @include output {
            @include bg-red-500(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-red-500, $alpha: 0.11);
          }
        }
      }

      @include it("bg-red-600(0.11)") {
        @include assert {
          @include output {
            @include bg-red-600(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-red-600, $alpha: 0.11);
          }
        }
      }

      @include it("bg-red-700(0.11)") {
        @include assert {
          @include output {
            @include bg-red-700(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-red-700, $alpha: 0.11);
          }
        }
      }

      @include it("bg-red-800(0.11)") {
        @include assert {
          @include output {
            @include bg-red-800(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-red-800, $alpha: 0.11);
          }
        }
      }

      @include it("bg-red-900(0.11)") {
        @include assert {
          @include output {
            @include bg-red-900(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-red-900, $alpha: 0.11);
          }
        }
      }

      @include it("bg-red-950(0.11)") {
        @include assert {
          @include output {
            @include bg-red-950(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-red-950, $alpha: 0.11);
          }
        }
      }

      @include it("bg-orange-50(0.11)") {
        @include assert {
          @include output {
            @include bg-orange-50(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-orange-50, $alpha: 0.11);
          }
        }
      }

      @include it("bg-orange-100(0.11)") {
        @include assert {
          @include output {
            @include bg-orange-100(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-orange-100, $alpha: 0.11);
          }
        }
      }

      @include it("bg-orange-200(0.11)") {
        @include assert {
          @include output {
            @include bg-orange-200(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-orange-200, $alpha: 0.11);
          }
        }
      }

      @include it("bg-orange-300(0.11)") {
        @include assert {
          @include output {
            @include bg-orange-300(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-orange-300, $alpha: 0.11);
          }
        }
      }

      @include it("bg-orange-400(0.11)") {
        @include assert {
          @include output {
            @include bg-orange-400(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-orange-400, $alpha: 0.11);
          }
        }
      }

      @include it("bg-orange-500(0.11)") {
        @include assert {
          @include output {
            @include bg-orange-500(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-orange-500, $alpha: 0.11);
          }
        }
      }

      @include it("bg-orange-600(0.11)") {
        @include assert {
          @include output {
            @include bg-orange-600(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-orange-600, $alpha: 0.11);
          }
        }
      }

      @include it("bg-orange-700(0.11)") {
        @include assert {
          @include output {
            @include bg-orange-700(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-orange-700, $alpha: 0.11);
          }
        }
      }

      @include it("bg-orange-800(0.11)") {
        @include assert {
          @include output {
            @include bg-orange-800(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-orange-800, $alpha: 0.11);
          }
        }
      }

      @include it("bg-orange-900(0.11)") {
        @include assert {
          @include output {
            @include bg-orange-900(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-orange-900, $alpha: 0.11);
          }
        }
      }

      @include it("bg-orange-950(0.11)") {
        @include assert {
          @include output {
            @include bg-orange-950(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-orange-950, $alpha: 0.11);
          }
        }
      }

      @include it("bg-amber-50(0.11)") {
        @include assert {
          @include output {
            @include bg-amber-50(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-amber-50, $alpha: 0.11);
          }
        }
      }

      @include it("bg-amber-100(0.11)") {
        @include assert {
          @include output {
            @include bg-amber-100(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-amber-100, $alpha: 0.11);
          }
        }
      }

      @include it("bg-amber-200(0.11)") {
        @include assert {
          @include output {
            @include bg-amber-200(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-amber-200, $alpha: 0.11);
          }
        }
      }

      @include it("bg-amber-300(0.11)") {
        @include assert {
          @include output {
            @include bg-amber-300(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-amber-300, $alpha: 0.11);
          }
        }
      }

      @include it("bg-amber-400(0.11)") {
        @include assert {
          @include output {
            @include bg-amber-400(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-amber-400, $alpha: 0.11);
          }
        }
      }

      @include it("bg-amber-500(0.11)") {
        @include assert {
          @include output {
            @include bg-amber-500(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-amber-500, $alpha: 0.11);
          }
        }
      }

      @include it("bg-amber-600(0.11)") {
        @include assert {
          @include output {
            @include bg-amber-600(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-amber-600, $alpha: 0.11);
          }
        }
      }

      @include it("bg-amber-700(0.11)") {
        @include assert {
          @include output {
            @include bg-amber-700(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-amber-700, $alpha: 0.11);
          }
        }
      }

      @include it("bg-amber-800(0.11)") {
        @include assert {
          @include output {
            @include bg-amber-800(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-amber-800, $alpha: 0.11);
          }
        }
      }

      @include it("bg-amber-900(0.11)") {
        @include assert {
          @include output {
            @include bg-amber-900(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-amber-900, $alpha: 0.11);
          }
        }
      }

      @include it("bg-amber-950(0.11)") {
        @include assert {
          @include output {
            @include bg-amber-950(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-amber-950, $alpha: 0.11);
          }
        }
      }

      @include it("bg-yellow-50(0.11)") {
        @include assert {
          @include output {
            @include bg-yellow-50(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-yellow-50, $alpha: 0.11);
          }
        }
      }

      @include it("bg-yellow-100(0.11)") {
        @include assert {
          @include output {
            @include bg-yellow-100(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-yellow-100, $alpha: 0.11);
          }
        }
      }

      @include it("bg-yellow-200(0.11)") {
        @include assert {
          @include output {
            @include bg-yellow-200(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-yellow-200, $alpha: 0.11);
          }
        }
      }

      @include it("bg-yellow-300(0.11)") {
        @include assert {
          @include output {
            @include bg-yellow-300(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-yellow-300, $alpha: 0.11);
          }
        }
      }

      @include it("bg-yellow-400(0.11)") {
        @include assert {
          @include output {
            @include bg-yellow-400(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-yellow-400, $alpha: 0.11);
          }
        }
      }

      @include it("bg-yellow-500(0.11)") {
        @include assert {
          @include output {
            @include bg-yellow-500(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-yellow-500, $alpha: 0.11);
          }
        }
      }

      @include it("bg-yellow-600(0.11)") {
        @include assert {
          @include output {
            @include bg-yellow-600(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-yellow-600, $alpha: 0.11);
          }
        }
      }

      @include it("bg-yellow-700(0.11)") {
        @include assert {
          @include output {
            @include bg-yellow-700(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-yellow-700, $alpha: 0.11);
          }
        }
      }

      @include it("bg-yellow-800(0.11)") {
        @include assert {
          @include output {
            @include bg-yellow-800(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-yellow-800, $alpha: 0.11);
          }
        }
      }

      @include it("bg-yellow-900(0.11)") {
        @include assert {
          @include output {
            @include bg-yellow-900(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-yellow-900, $alpha: 0.11);
          }
        }
      }

      @include it("bg-yellow-950(0.11)") {
        @include assert {
          @include output {
            @include bg-yellow-950(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-yellow-950, $alpha: 0.11);
          }
        }
      }

      @include it("bg-lime-50(0.11)") {
        @include assert {
          @include output {
            @include bg-lime-50(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-lime-50, $alpha: 0.11);
          }
        }
      }

      @include it("bg-lime-100(0.11)") {
        @include assert {
          @include output {
            @include bg-lime-100(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-lime-100, $alpha: 0.11);
          }
        }
      }

      @include it("bg-lime-200(0.11)") {
        @include assert {
          @include output {
            @include bg-lime-200(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-lime-200, $alpha: 0.11);
          }
        }
      }

      @include it("bg-lime-300(0.11)") {
        @include assert {
          @include output {
            @include bg-lime-300(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-lime-300, $alpha: 0.11);
          }
        }
      }

      @include it("bg-lime-400(0.11)") {
        @include assert {
          @include output {
            @include bg-lime-400(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-lime-400, $alpha: 0.11);
          }
        }
      }

      @include it("bg-lime-500(0.11)") {
        @include assert {
          @include output {
            @include bg-lime-500(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-lime-500, $alpha: 0.11);
          }
        }
      }

      @include it("bg-lime-600(0.11)") {
        @include assert {
          @include output {
            @include bg-lime-600(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-lime-600, $alpha: 0.11);
          }
        }
      }

      @include it("bg-lime-700(0.11)") {
        @include assert {
          @include output {
            @include bg-lime-700(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-lime-700, $alpha: 0.11);
          }
        }
      }

      @include it("bg-lime-800(0.11)") {
        @include assert {
          @include output {
            @include bg-lime-800(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-lime-800, $alpha: 0.11);
          }
        }
      }

      @include it("bg-lime-900(0.11)") {
        @include assert {
          @include output {
            @include bg-lime-900(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-lime-900, $alpha: 0.11);
          }
        }
      }

      @include it("bg-lime-950(0.11)") {
        @include assert {
          @include output {
            @include bg-lime-950(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-lime-950, $alpha: 0.11);
          }
        }
      }

      @include it("bg-green-50(0.11)") {
        @include assert {
          @include output {
            @include bg-green-50(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-green-50, $alpha: 0.11);
          }
        }
      }

      @include it("bg-green-100(0.11)") {
        @include assert {
          @include output {
            @include bg-green-100(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-green-100, $alpha: 0.11);
          }
        }
      }

      @include it("bg-green-200(0.11)") {
        @include assert {
          @include output {
            @include bg-green-200(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-green-200, $alpha: 0.11);
          }
        }
      }

      @include it("bg-green-300(0.11)") {
        @include assert {
          @include output {
            @include bg-green-300(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-green-300, $alpha: 0.11);
          }
        }
      }

      @include it("bg-green-400(0.11)") {
        @include assert {
          @include output {
            @include bg-green-400(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-green-400, $alpha: 0.11);
          }
        }
      }

      @include it("bg-green-500(0.11)") {
        @include assert {
          @include output {
            @include bg-green-500(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-green-500, $alpha: 0.11);
          }
        }
      }

      @include it("bg-green-600(0.11)") {
        @include assert {
          @include output {
            @include bg-green-600(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-green-600, $alpha: 0.11);
          }
        }
      }

      @include it("bg-green-700(0.11)") {
        @include assert {
          @include output {
            @include bg-green-700(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-green-700, $alpha: 0.11);
          }
        }
      }

      @include it("bg-green-800(0.11)") {
        @include assert {
          @include output {
            @include bg-green-800(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-green-800, $alpha: 0.11);
          }
        }
      }

      @include it("bg-green-900(0.11)") {
        @include assert {
          @include output {
            @include bg-green-900(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-green-900, $alpha: 0.11);
          }
        }
      }

      @include it("bg-green-950(0.11)") {
        @include assert {
          @include output {
            @include bg-green-950(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-green-950, $alpha: 0.11);
          }
        }
      }

      @include it("bg-emerald-50(0.11)") {
        @include assert {
          @include output {
            @include bg-emerald-50(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-emerald-50, $alpha: 0.11);
          }
        }
      }

      @include it("bg-emerald-100(0.11)") {
        @include assert {
          @include output {
            @include bg-emerald-100(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-emerald-100, $alpha: 0.11);
          }
        }
      }

      @include it("bg-emerald-200(0.11)") {
        @include assert {
          @include output {
            @include bg-emerald-200(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-emerald-200, $alpha: 0.11);
          }
        }
      }

      @include it("bg-emerald-300(0.11)") {
        @include assert {
          @include output {
            @include bg-emerald-300(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-emerald-300, $alpha: 0.11);
          }
        }
      }

      @include it("bg-emerald-400(0.11)") {
        @include assert {
          @include output {
            @include bg-emerald-400(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-emerald-400, $alpha: 0.11);
          }
        }
      }

      @include it("bg-emerald-500(0.11)") {
        @include assert {
          @include output {
            @include bg-emerald-500(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-emerald-500, $alpha: 0.11);
          }
        }
      }

      @include it("bg-emerald-600(0.11)") {
        @include assert {
          @include output {
            @include bg-emerald-600(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-emerald-600, $alpha: 0.11);
          }
        }
      }

      @include it("bg-emerald-700(0.11)") {
        @include assert {
          @include output {
            @include bg-emerald-700(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-emerald-700, $alpha: 0.11);
          }
        }
      }

      @include it("bg-emerald-800(0.11)") {
        @include assert {
          @include output {
            @include bg-emerald-800(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-emerald-800, $alpha: 0.11);
          }
        }
      }

      @include it("bg-emerald-900(0.11)") {
        @include assert {
          @include output {
            @include bg-emerald-900(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-emerald-900, $alpha: 0.11);
          }
        }
      }

      @include it("bg-emerald-950(0.11)") {
        @include assert {
          @include output {
            @include bg-emerald-950(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-emerald-950, $alpha: 0.11);
          }
        }
      }

      @include it("bg-teal-50(0.11)") {
        @include assert {
          @include output {
            @include bg-teal-50(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-teal-50, $alpha: 0.11);
          }
        }
      }

      @include it("bg-teal-100(0.11)") {
        @include assert {
          @include output {
            @include bg-teal-100(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-teal-100, $alpha: 0.11);
          }
        }
      }

      @include it("bg-teal-200(0.11)") {
        @include assert {
          @include output {
            @include bg-teal-200(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-teal-200, $alpha: 0.11);
          }
        }
      }

      @include it("bg-teal-300(0.11)") {
        @include assert {
          @include output {
            @include bg-teal-300(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-teal-300, $alpha: 0.11);
          }
        }
      }

      @include it("bg-teal-400(0.11)") {
        @include assert {
          @include output {
            @include bg-teal-400(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-teal-400, $alpha: 0.11);
          }
        }
      }

      @include it("bg-teal-500(0.11)") {
        @include assert {
          @include output {
            @include bg-teal-500(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-teal-500, $alpha: 0.11);
          }
        }
      }

      @include it("bg-teal-600(0.11)") {
        @include assert {
          @include output {
            @include bg-teal-600(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-teal-600, $alpha: 0.11);
          }
        }
      }

      @include it("bg-teal-700(0.11)") {
        @include assert {
          @include output {
            @include bg-teal-700(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-teal-700, $alpha: 0.11);
          }
        }
      }

      @include it("bg-teal-800(0.11)") {
        @include assert {
          @include output {
            @include bg-teal-800(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-teal-800, $alpha: 0.11);
          }
        }
      }

      @include it("bg-teal-900(0.11)") {
        @include assert {
          @include output {
            @include bg-teal-900(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-teal-900, $alpha: 0.11);
          }
        }
      }

      @include it("bg-teal-950(0.11)") {
        @include assert {
          @include output {
            @include bg-teal-950(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-teal-950, $alpha: 0.11);
          }
        }
      }

      @include it("bg-cyan-50(0.11)") {
        @include assert {
          @include output {
            @include bg-cyan-50(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-cyan-50, $alpha: 0.11);
          }
        }
      }

      @include it("bg-cyan-100(0.11)") {
        @include assert {
          @include output {
            @include bg-cyan-100(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-cyan-100, $alpha: 0.11);
          }
        }
      }

      @include it("bg-cyan-200(0.11)") {
        @include assert {
          @include output {
            @include bg-cyan-200(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-cyan-200, $alpha: 0.11);
          }
        }
      }

      @include it("bg-cyan-300(0.11)") {
        @include assert {
          @include output {
            @include bg-cyan-300(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-cyan-300, $alpha: 0.11);
          }
        }
      }

      @include it("bg-cyan-400(0.11)") {
        @include assert {
          @include output {
            @include bg-cyan-400(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-cyan-400, $alpha: 0.11);
          }
        }
      }

      @include it("bg-cyan-500(0.11)") {
        @include assert {
          @include output {
            @include bg-cyan-500(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-cyan-500, $alpha: 0.11);
          }
        }
      }

      @include it("bg-cyan-600(0.11)") {
        @include assert {
          @include output {
            @include bg-cyan-600(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-cyan-600, $alpha: 0.11);
          }
        }
      }

      @include it("bg-cyan-700(0.11)") {
        @include assert {
          @include output {
            @include bg-cyan-700(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-cyan-700, $alpha: 0.11);
          }
        }
      }

      @include it("bg-cyan-800(0.11)") {
        @include assert {
          @include output {
            @include bg-cyan-800(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-cyan-800, $alpha: 0.11);
          }
        }
      }

      @include it("bg-cyan-900(0.11)") {
        @include assert {
          @include output {
            @include bg-cyan-900(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-cyan-900, $alpha: 0.11);
          }
        }
      }

      @include it("bg-cyan-950(0.11)") {
        @include assert {
          @include output {
            @include bg-cyan-950(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-cyan-950, $alpha: 0.11);
          }
        }
      }

      @include it("bg-sky-50(0.11)") {
        @include assert {
          @include output {
            @include bg-sky-50(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-sky-50, $alpha: 0.11);
          }
        }
      }

      @include it("bg-sky-100(0.11)") {
        @include assert {
          @include output {
            @include bg-sky-100(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-sky-100, $alpha: 0.11);
          }
        }
      }

      @include it("bg-sky-200(0.11)") {
        @include assert {
          @include output {
            @include bg-sky-200(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-sky-200, $alpha: 0.11);
          }
        }
      }

      @include it("bg-sky-300(0.11)") {
        @include assert {
          @include output {
            @include bg-sky-300(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-sky-300, $alpha: 0.11);
          }
        }
      }

      @include it("bg-sky-400(0.11)") {
        @include assert {
          @include output {
            @include bg-sky-400(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-sky-400, $alpha: 0.11);
          }
        }
      }

      @include it("bg-sky-500(0.11)") {
        @include assert {
          @include output {
            @include bg-sky-500(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-sky-500, $alpha: 0.11);
          }
        }
      }

      @include it("bg-sky-600(0.11)") {
        @include assert {
          @include output {
            @include bg-sky-600(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-sky-600, $alpha: 0.11);
          }
        }
      }

      @include it("bg-sky-700(0.11)") {
        @include assert {
          @include output {
            @include bg-sky-700(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-sky-700, $alpha: 0.11);
          }
        }
      }

      @include it("bg-sky-800(0.11)") {
        @include assert {
          @include output {
            @include bg-sky-800(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-sky-800, $alpha: 0.11);
          }
        }
      }

      @include it("bg-sky-900(0.11)") {
        @include assert {
          @include output {
            @include bg-sky-900(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-sky-900, $alpha: 0.11);
          }
        }
      }

      @include it("bg-sky-950(0.11)") {
        @include assert {
          @include output {
            @include bg-sky-950(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-sky-950, $alpha: 0.11);
          }
        }
      }

      @include it("bg-blue-50(0.11)") {
        @include assert {
          @include output {
            @include bg-blue-50(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-blue-50, $alpha: 0.11);
          }
        }
      }

      @include it("bg-blue-100(0.11)") {
        @include assert {
          @include output {
            @include bg-blue-100(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-blue-100, $alpha: 0.11);
          }
        }
      }

      @include it("bg-blue-200(0.11)") {
        @include assert {
          @include output {
            @include bg-blue-200(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-blue-200, $alpha: 0.11);
          }
        }
      }

      @include it("bg-blue-300(0.11)") {
        @include assert {
          @include output {
            @include bg-blue-300(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-blue-300, $alpha: 0.11);
          }
        }
      }

      @include it("bg-blue-400(0.11)") {
        @include assert {
          @include output {
            @include bg-blue-400(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-blue-400, $alpha: 0.11);
          }
        }
      }

      @include it("bg-blue-500(0.11)") {
        @include assert {
          @include output {
            @include bg-blue-500(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-blue-500, $alpha: 0.11);
          }
        }
      }

      @include it("bg-blue-600(0.11)") {
        @include assert {
          @include output {
            @include bg-blue-600(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-blue-600, $alpha: 0.11);
          }
        }
      }

      @include it("bg-blue-700(0.11)") {
        @include assert {
          @include output {
            @include bg-blue-700(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-blue-700, $alpha: 0.11);
          }
        }
      }

      @include it("bg-blue-800(0.11)") {
        @include assert {
          @include output {
            @include bg-blue-800(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-blue-800, $alpha: 0.11);
          }
        }
      }

      @include it("bg-blue-900(0.11)") {
        @include assert {
          @include output {
            @include bg-blue-900(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-blue-900, $alpha: 0.11);
          }
        }
      }

      @include it("bg-blue-950(0.11)") {
        @include assert {
          @include output {
            @include bg-blue-950(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-blue-950, $alpha: 0.11);
          }
        }
      }

      @include it("bg-indigo-50(0.11)") {
        @include assert {
          @include output {
            @include bg-indigo-50(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-indigo-50, $alpha: 0.11);
          }
        }
      }

      @include it("bg-indigo-100(0.11)") {
        @include assert {
          @include output {
            @include bg-indigo-100(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-indigo-100, $alpha: 0.11);
          }
        }
      }

      @include it("bg-indigo-200(0.11)") {
        @include assert {
          @include output {
            @include bg-indigo-200(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-indigo-200, $alpha: 0.11);
          }
        }
      }

      @include it("bg-indigo-300(0.11)") {
        @include assert {
          @include output {
            @include bg-indigo-300(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-indigo-300, $alpha: 0.11);
          }
        }
      }

      @include it("bg-indigo-400(0.11)") {
        @include assert {
          @include output {
            @include bg-indigo-400(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-indigo-400, $alpha: 0.11);
          }
        }
      }

      @include it("bg-indigo-500(0.11)") {
        @include assert {
          @include output {
            @include bg-indigo-500(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-indigo-500, $alpha: 0.11);
          }
        }
      }

      @include it("bg-indigo-600(0.11)") {
        @include assert {
          @include output {
            @include bg-indigo-600(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-indigo-600, $alpha: 0.11);
          }
        }
      }

      @include it("bg-indigo-700(0.11)") {
        @include assert {
          @include output {
            @include bg-indigo-700(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-indigo-700, $alpha: 0.11);
          }
        }
      }

      @include it("bg-indigo-800(0.11)") {
        @include assert {
          @include output {
            @include bg-indigo-800(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-indigo-800, $alpha: 0.11);
          }
        }
      }

      @include it("bg-indigo-900(0.11)") {
        @include assert {
          @include output {
            @include bg-indigo-900(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-indigo-900, $alpha: 0.11);
          }
        }
      }

      @include it("bg-indigo-950(0.11)") {
        @include assert {
          @include output {
            @include bg-indigo-950(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-indigo-950, $alpha: 0.11);
          }
        }
      }

      @include it("bg-violet-50(0.11)") {
        @include assert {
          @include output {
            @include bg-violet-50(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-violet-50, $alpha: 0.11);
          }
        }
      }

      @include it("bg-violet-100(0.11)") {
        @include assert {
          @include output {
            @include bg-violet-100(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-violet-100, $alpha: 0.11);
          }
        }
      }

      @include it("bg-violet-200(0.11)") {
        @include assert {
          @include output {
            @include bg-violet-200(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-violet-200, $alpha: 0.11);
          }
        }
      }

      @include it("bg-violet-300(0.11)") {
        @include assert {
          @include output {
            @include bg-violet-300(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-violet-300, $alpha: 0.11);
          }
        }
      }

      @include it("bg-violet-400(0.11)") {
        @include assert {
          @include output {
            @include bg-violet-400(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-violet-400, $alpha: 0.11);
          }
        }
      }

      @include it("bg-violet-500(0.11)") {
        @include assert {
          @include output {
            @include bg-violet-500(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-violet-500, $alpha: 0.11);
          }
        }
      }

      @include it("bg-violet-600(0.11)") {
        @include assert {
          @include output {
            @include bg-violet-600(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-violet-600, $alpha: 0.11);
          }
        }
      }

      @include it("bg-violet-700(0.11)") {
        @include assert {
          @include output {
            @include bg-violet-700(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-violet-700, $alpha: 0.11);
          }
        }
      }

      @include it("bg-violet-800(0.11)") {
        @include assert {
          @include output {
            @include bg-violet-800(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-violet-800, $alpha: 0.11);
          }
        }
      }

      @include it("bg-violet-900(0.11)") {
        @include assert {
          @include output {
            @include bg-violet-900(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-violet-900, $alpha: 0.11);
          }
        }
      }

      @include it("bg-violet-950(0.11)") {
        @include assert {
          @include output {
            @include bg-violet-950(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-violet-950, $alpha: 0.11);
          }
        }
      }

      @include it("bg-purple-50(0.11)") {
        @include assert {
          @include output {
            @include bg-purple-50(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-purple-50, $alpha: 0.11);
          }
        }
      }

      @include it("bg-purple-100(0.11)") {
        @include assert {
          @include output {
            @include bg-purple-100(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-purple-100, $alpha: 0.11);
          }
        }
      }

      @include it("bg-purple-200(0.11)") {
        @include assert {
          @include output {
            @include bg-purple-200(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-purple-200, $alpha: 0.11);
          }
        }
      }

      @include it("bg-purple-300(0.11)") {
        @include assert {
          @include output {
            @include bg-purple-300(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-purple-300, $alpha: 0.11);
          }
        }
      }

      @include it("bg-purple-400(0.11)") {
        @include assert {
          @include output {
            @include bg-purple-400(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-purple-400, $alpha: 0.11);
          }
        }
      }

      @include it("bg-purple-500(0.11)") {
        @include assert {
          @include output {
            @include bg-purple-500(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-purple-500, $alpha: 0.11);
          }
        }
      }

      @include it("bg-purple-600(0.11)") {
        @include assert {
          @include output {
            @include bg-purple-600(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-purple-600, $alpha: 0.11);
          }
        }
      }

      @include it("bg-purple-700(0.11)") {
        @include assert {
          @include output {
            @include bg-purple-700(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-purple-700, $alpha: 0.11);
          }
        }
      }

      @include it("bg-purple-800(0.11)") {
        @include assert {
          @include output {
            @include bg-purple-800(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-purple-800, $alpha: 0.11);
          }
        }
      }

      @include it("bg-purple-900(0.11)") {
        @include assert {
          @include output {
            @include bg-purple-900(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-purple-900, $alpha: 0.11);
          }
        }
      }

      @include it("bg-purple-950(0.11)") {
        @include assert {
          @include output {
            @include bg-purple-950(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-purple-950, $alpha: 0.11);
          }
        }
      }

      @include it("bg-fuchsia-50(0.11)") {
        @include assert {
          @include output {
            @include bg-fuchsia-50(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-fuchsia-50, $alpha: 0.11);
          }
        }
      }

      @include it("bg-fuchsia-100(0.11)") {
        @include assert {
          @include output {
            @include bg-fuchsia-100(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-fuchsia-100, $alpha: 0.11);
          }
        }
      }

      @include it("bg-fuchsia-200(0.11)") {
        @include assert {
          @include output {
            @include bg-fuchsia-200(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-fuchsia-200, $alpha: 0.11);
          }
        }
      }

      @include it("bg-fuchsia-300(0.11)") {
        @include assert {
          @include output {
            @include bg-fuchsia-300(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-fuchsia-300, $alpha: 0.11);
          }
        }
      }

      @include it("bg-fuchsia-400(0.11)") {
        @include assert {
          @include output {
            @include bg-fuchsia-400(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-fuchsia-400, $alpha: 0.11);
          }
        }
      }

      @include it("bg-fuchsia-500(0.11)") {
        @include assert {
          @include output {
            @include bg-fuchsia-500(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-fuchsia-500, $alpha: 0.11);
          }
        }
      }

      @include it("bg-fuchsia-600(0.11)") {
        @include assert {
          @include output {
            @include bg-fuchsia-600(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-fuchsia-600, $alpha: 0.11);
          }
        }
      }

      @include it("bg-fuchsia-700(0.11)") {
        @include assert {
          @include output {
            @include bg-fuchsia-700(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-fuchsia-700, $alpha: 0.11);
          }
        }
      }

      @include it("bg-fuchsia-800(0.11)") {
        @include assert {
          @include output {
            @include bg-fuchsia-800(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-fuchsia-800, $alpha: 0.11);
          }
        }
      }

      @include it("bg-fuchsia-900(0.11)") {
        @include assert {
          @include output {
            @include bg-fuchsia-900(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-fuchsia-900, $alpha: 0.11);
          }
        }
      }

      @include it("bg-fuchsia-950(0.11)") {
        @include assert {
          @include output {
            @include bg-fuchsia-950(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-fuchsia-950, $alpha: 0.11);
          }
        }
      }

      @include it("bg-pink-50(0.11)") {
        @include assert {
          @include output {
            @include bg-pink-50(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-pink-50, $alpha: 0.11);
          }
        }
      }

      @include it("bg-pink-100(0.11)") {
        @include assert {
          @include output {
            @include bg-pink-100(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-pink-100, $alpha: 0.11);
          }
        }
      }

      @include it("bg-pink-200(0.11)") {
        @include assert {
          @include output {
            @include bg-pink-200(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-pink-200, $alpha: 0.11);
          }
        }
      }

      @include it("bg-pink-300(0.11)") {
        @include assert {
          @include output {
            @include bg-pink-300(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-pink-300, $alpha: 0.11);
          }
        }
      }

      @include it("bg-pink-400(0.11)") {
        @include assert {
          @include output {
            @include bg-pink-400(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-pink-400, $alpha: 0.11);
          }
        }
      }

      @include it("bg-pink-500(0.11)") {
        @include assert {
          @include output {
            @include bg-pink-500(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-pink-500, $alpha: 0.11);
          }
        }
      }

      @include it("bg-pink-600(0.11)") {
        @include assert {
          @include output {
            @include bg-pink-600(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-pink-600, $alpha: 0.11);
          }
        }
      }

      @include it("bg-pink-700(0.11)") {
        @include assert {
          @include output {
            @include bg-pink-700(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-pink-700, $alpha: 0.11);
          }
        }
      }

      @include it("bg-pink-800(0.11)") {
        @include assert {
          @include output {
            @include bg-pink-800(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-pink-800, $alpha: 0.11);
          }
        }
      }

      @include it("bg-pink-900(0.11)") {
        @include assert {
          @include output {
            @include bg-pink-900(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-pink-900, $alpha: 0.11);
          }
        }
      }

      @include it("bg-pink-950(0.11)") {
        @include assert {
          @include output {
            @include bg-pink-950(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-pink-950, $alpha: 0.11);
          }
        }
      }

      @include it("bg-rose-50(0.11)") {
        @include assert {
          @include output {
            @include bg-rose-50(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-rose-50, $alpha: 0.11);
          }
        }
      }

      @include it("bg-rose-100(0.11)") {
        @include assert {
          @include output {
            @include bg-rose-100(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-rose-100, $alpha: 0.11);
          }
        }
      }

      @include it("bg-rose-200(0.11)") {
        @include assert {
          @include output {
            @include bg-rose-200(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-rose-200, $alpha: 0.11);
          }
        }
      }

      @include it("bg-rose-300(0.11)") {
        @include assert {
          @include output {
            @include bg-rose-300(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-rose-300, $alpha: 0.11);
          }
        }
      }

      @include it("bg-rose-400(0.11)") {
        @include assert {
          @include output {
            @include bg-rose-400(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-rose-400, $alpha: 0.11);
          }
        }
      }

      @include it("bg-rose-500(0.11)") {
        @include assert {
          @include output {
            @include bg-rose-500(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-rose-500, $alpha: 0.11);
          }
        }
      }

      @include it("bg-rose-600(0.11)") {
        @include assert {
          @include output {
            @include bg-rose-600(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-rose-600, $alpha: 0.11);
          }
        }
      }

      @include it("bg-rose-700(0.11)") {
        @include assert {
          @include output {
            @include bg-rose-700(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-rose-700, $alpha: 0.11);
          }
        }
      }

      @include it("bg-rose-800(0.11)") {
        @include assert {
          @include output {
            @include bg-rose-800(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-rose-800, $alpha: 0.11);
          }
        }
      }

      @include it("bg-rose-900(0.11)") {
        @include assert {
          @include output {
            @include bg-rose-900(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-rose-900, $alpha: 0.11);
          }
        }
      }

      @include it("bg-rose-950(0.11)") {
        @include assert {
          @include output {
            @include bg-rose-950(0.11);
            @include utils_reset;
          }

          @include expect {
            background-color: color.change($color-rose-950, $alpha: 0.11);
          }
        }
      }
    }

    @include describe("Custom") {
      @include it("bg-(#50d71e)") {
        @include assert {
          @include output {
            @include bg-(#50d71e);
            @include utils_reset;
          }

          @include expect {
            background-color: #50d71e;
          }
        }
      }
    }
  }
}
