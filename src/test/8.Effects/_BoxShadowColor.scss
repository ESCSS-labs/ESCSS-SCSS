@include describe('8.Effects') {
  @include describe('Box Shadow Color') {
    @include describe('Basic') {
      @include it('shadow-inherit') {
        @include assert {
          @include output {
            @include shadow-inherit;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 inherit;
          }
        }
      }

      @include it('shadow-current') {
        @include assert {
          @include output {
            @include shadow-current;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 currentColor;
          }
        }
      }

      @include it('shadow-transparent') {
        @include assert {
          @include output {
            @include shadow-transparent;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 transparent;
          }
        }
      }

      @include it('shadow-black') {
        @include assert {
          @include output {
            @include shadow-black;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 black;
          }
        }
      }

      @include it('shadow-white') {
        @include assert {
          @include output {
            @include shadow-white;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 white;
          }
        }
      }

      @include it('shadow-slate-50') {
        @include assert {
          @include output {
            @include shadow-slate-50;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #f8fafc;
          }
        }
      }

      @include it('shadow-slate-100') {
        @include assert {
          @include output {
            @include shadow-slate-100;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #f1f5f9;
          }
        }
      }

      @include it('shadow-slate-200') {
        @include assert {
          @include output {
            @include shadow-slate-200;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #e2e8f0;
          }
        }
      }

      @include it('shadow-slate-300') {
        @include assert {
          @include output {
            @include shadow-slate-300;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #cbd5e1;
          }
        }
      }

      @include it('shadow-slate-400') {
        @include assert {
          @include output {
            @include shadow-slate-400;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #94a3b8;
          }
        }
      }

      @include it('shadow-slate-500') {
        @include assert {
          @include output {
            @include shadow-slate-500;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #64748b;
          }
        }
      }

      @include it('shadow-slate-600') {
        @include assert {
          @include output {
            @include shadow-slate-600;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #475569;
          }
        }
      }

      @include it('shadow-slate-700') {
        @include assert {
          @include output {
            @include shadow-slate-700;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #334155;
          }
        }
      }

      @include it('shadow-slate-800') {
        @include assert {
          @include output {
            @include shadow-slate-800;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #1e293b;
          }
        }
      }

      @include it('shadow-slate-900') {
        @include assert {
          @include output {
            @include shadow-slate-900;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #0f172a;
          }
        }
      }

      @include it('shadow-slate-950') {
        @include assert {
          @include output {
            @include shadow-slate-950;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #020617;
          }
        }
      }

      @include it('shadow-gray-50') {
        @include assert {
          @include output {
            @include shadow-gray-50;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #f9fafb;
          }
        }
      }

      @include it('shadow-gray-100') {
        @include assert {
          @include output {
            @include shadow-gray-100;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #f3f4f6;
          }
        }
      }

      @include it('shadow-gray-200') {
        @include assert {
          @include output {
            @include shadow-gray-200;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #e5e7eb;
          }
        }
      }

      @include it('shadow-gray-300') {
        @include assert {
          @include output {
            @include shadow-gray-300;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #d1d5db;
          }
        }
      }

      @include it('shadow-gray-400') {
        @include assert {
          @include output {
            @include shadow-gray-400;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #9ca3af;
          }
        }
      }

      @include it('shadow-gray-500') {
        @include assert {
          @include output {
            @include shadow-gray-500;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #6b7280;
          }
        }
      }

      @include it('shadow-gray-600') {
        @include assert {
          @include output {
            @include shadow-gray-600;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #4b5563;
          }
        }
      }

      @include it('shadow-gray-700') {
        @include assert {
          @include output {
            @include shadow-gray-700;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #374151;
          }
        }
      }

      @include it('shadow-gray-800') {
        @include assert {
          @include output {
            @include shadow-gray-800;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #1f2937;
          }
        }
      }

      @include it('shadow-gray-900') {
        @include assert {
          @include output {
            @include shadow-gray-900;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #111827;
          }
        }
      }

      @include it('shadow-gray-950') {
        @include assert {
          @include output {
            @include shadow-gray-950;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #030712;
          }
        }
      }

      @include it('shadow-zinc-50') {
        @include assert {
          @include output {
            @include shadow-zinc-50;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fafafa;
          }
        }
      }

      @include it('shadow-zinc-100') {
        @include assert {
          @include output {
            @include shadow-zinc-100;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #f4f4f5;
          }
        }
      }

      @include it('shadow-zinc-200') {
        @include assert {
          @include output {
            @include shadow-zinc-200;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #e4e4e7;
          }
        }
      }

      @include it('shadow-zinc-300') {
        @include assert {
          @include output {
            @include shadow-zinc-300;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #d4d4d8;
          }
        }
      }

      @include it('shadow-zinc-400') {
        @include assert {
          @include output {
            @include shadow-zinc-400;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #a1a1aa;
          }
        }
      }

      @include it('shadow-zinc-500') {
        @include assert {
          @include output {
            @include shadow-zinc-500;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #71717a;
          }
        }
      }

      @include it('shadow-zinc-600') {
        @include assert {
          @include output {
            @include shadow-zinc-600;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #52525b;
          }
        }
      }

      @include it('shadow-zinc-700') {
        @include assert {
          @include output {
            @include shadow-zinc-700;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #3f3f46;
          }
        }
      }

      @include it('shadow-zinc-800') {
        @include assert {
          @include output {
            @include shadow-zinc-800;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #27272a;
          }
        }
      }

      @include it('shadow-zinc-900') {
        @include assert {
          @include output {
            @include shadow-zinc-900;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #18181b;
          }
        }
      }

      @include it('shadow-zinc-950') {
        @include assert {
          @include output {
            @include shadow-zinc-950;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #09090b;
          }
        }
      }

      @include it('shadow-neutral-50') {
        @include assert {
          @include output {
            @include shadow-neutral-50;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fafafa;
          }
        }
      }

      @include it('shadow-neutral-100') {
        @include assert {
          @include output {
            @include shadow-neutral-100;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 whitesmoke;
          }
        }
      }

      @include it('shadow-neutral-200') {
        @include assert {
          @include output {
            @include shadow-neutral-200;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #e5e5e5;
          }
        }
      }

      @include it('shadow-neutral-300') {
        @include assert {
          @include output {
            @include shadow-neutral-300;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #d4d4d4;
          }
        }
      }

      @include it('shadow-neutral-400') {
        @include assert {
          @include output {
            @include shadow-neutral-400;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #a3a3a3;
          }
        }
      }

      @include it('shadow-neutral-500') {
        @include assert {
          @include output {
            @include shadow-neutral-500;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #737373;
          }
        }
      }

      @include it('shadow-neutral-600') {
        @include assert {
          @include output {
            @include shadow-neutral-600;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #525252;
          }
        }
      }

      @include it('shadow-neutral-700') {
        @include assert {
          @include output {
            @include shadow-neutral-700;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #404040;
          }
        }
      }

      @include it('shadow-neutral-800') {
        @include assert {
          @include output {
            @include shadow-neutral-800;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #262626;
          }
        }
      }

      @include it('shadow-neutral-900') {
        @include assert {
          @include output {
            @include shadow-neutral-900;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #171717;
          }
        }
      }

      @include it('shadow-neutral-950') {
        @include assert {
          @include output {
            @include shadow-neutral-950;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #0a0a0a;
          }
        }
      }

      @include it('shadow-stone-50') {
        @include assert {
          @include output {
            @include shadow-stone-50;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fafaf9;
          }
        }
      }

      @include it('shadow-stone-100') {
        @include assert {
          @include output {
            @include shadow-stone-100;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #f5f5f4;
          }
        }
      }

      @include it('shadow-stone-200') {
        @include assert {
          @include output {
            @include shadow-stone-200;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #e7e5e4;
          }
        }
      }

      @include it('shadow-stone-300') {
        @include assert {
          @include output {
            @include shadow-stone-300;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #d6d3d1;
          }
        }
      }

      @include it('shadow-stone-400') {
        @include assert {
          @include output {
            @include shadow-stone-400;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #a8a29e;
          }
        }
      }

      @include it('shadow-stone-500') {
        @include assert {
          @include output {
            @include shadow-stone-500;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #78716c;
          }
        }
      }

      @include it('shadow-stone-600') {
        @include assert {
          @include output {
            @include shadow-stone-600;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #57534e;
          }
        }
      }

      @include it('shadow-stone-700') {
        @include assert {
          @include output {
            @include shadow-stone-700;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #44403c;
          }
        }
      }

      @include it('shadow-stone-800') {
        @include assert {
          @include output {
            @include shadow-stone-800;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #292524;
          }
        }
      }

      @include it('shadow-stone-900') {
        @include assert {
          @include output {
            @include shadow-stone-900;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #1c1917;
          }
        }
      }

      @include it('shadow-stone-950') {
        @include assert {
          @include output {
            @include shadow-stone-950;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #0c0a09;
          }
        }
      }

      @include it('shadow-red-50') {
        @include assert {
          @include output {
            @include shadow-red-50;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fef2f2;
          }
        }
      }

      @include it('shadow-red-100') {
        @include assert {
          @include output {
            @include shadow-red-100;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fee2e2;
          }
        }
      }

      @include it('shadow-red-200') {
        @include assert {
          @include output {
            @include shadow-red-200;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fecaca;
          }
        }
      }

      @include it('shadow-red-300') {
        @include assert {
          @include output {
            @include shadow-red-300;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fca5a5;
          }
        }
      }

      @include it('shadow-red-400') {
        @include assert {
          @include output {
            @include shadow-red-400;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #f87171;
          }
        }
      }

      @include it('shadow-red-500') {
        @include assert {
          @include output {
            @include shadow-red-500;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #ef4444;
          }
        }
      }

      @include it('shadow-red-600') {
        @include assert {
          @include output {
            @include shadow-red-600;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #dc2626;
          }
        }
      }

      @include it('shadow-red-700') {
        @include assert {
          @include output {
            @include shadow-red-700;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #b91c1c;
          }
        }
      }

      @include it('shadow-red-800') {
        @include assert {
          @include output {
            @include shadow-red-800;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #991b1b;
          }
        }
      }

      @include it('shadow-red-900') {
        @include assert {
          @include output {
            @include shadow-red-900;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #7f1d1d;
          }
        }
      }

      @include it('shadow-red-950') {
        @include assert {
          @include output {
            @include shadow-red-950;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #450a0a;
          }
        }
      }

      @include it('shadow-orange-50') {
        @include assert {
          @include output {
            @include shadow-orange-50;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff7ed;
          }
        }
      }

      @include it('shadow-orange-100') {
        @include assert {
          @include output {
            @include shadow-orange-100;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #ffedd5;
          }
        }
      }

      @include it('shadow-orange-200') {
        @include assert {
          @include output {
            @include shadow-orange-200;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fed7aa;
          }
        }
      }

      @include it('shadow-orange-300') {
        @include assert {
          @include output {
            @include shadow-orange-300;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fdba74;
          }
        }
      }

      @include it('shadow-orange-400') {
        @include assert {
          @include output {
            @include shadow-orange-400;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fb923c;
          }
        }
      }

      @include it('shadow-orange-500') {
        @include assert {
          @include output {
            @include shadow-orange-500;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #f97316;
          }
        }
      }

      @include it('shadow-orange-600') {
        @include assert {
          @include output {
            @include shadow-orange-600;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #ea580c;
          }
        }
      }

      @include it('shadow-orange-700') {
        @include assert {
          @include output {
            @include shadow-orange-700;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #c2410c;
          }
        }
      }

      @include it('shadow-orange-800') {
        @include assert {
          @include output {
            @include shadow-orange-800;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #9a3412;
          }
        }
      }

      @include it('shadow-orange-900') {
        @include assert {
          @include output {
            @include shadow-orange-900;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #7c2d12;
          }
        }
      }

      @include it('shadow-orange-950') {
        @include assert {
          @include output {
            @include shadow-orange-950;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #431407;
          }
        }
      }

      @include it('shadow-amber-50') {
        @include assert {
          @include output {
            @include shadow-amber-50;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fffbeb;
          }
        }
      }

      @include it('shadow-amber-100') {
        @include assert {
          @include output {
            @include shadow-amber-100;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fef3c7;
          }
        }
      }

      @include it('shadow-amber-200') {
        @include assert {
          @include output {
            @include shadow-amber-200;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fde68a;
          }
        }
      }

      @include it('shadow-amber-300') {
        @include assert {
          @include output {
            @include shadow-amber-300;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fcd34d;
          }
        }
      }

      @include it('shadow-amber-400') {
        @include assert {
          @include output {
            @include shadow-amber-400;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fbbf24;
          }
        }
      }

      @include it('shadow-amber-500') {
        @include assert {
          @include output {
            @include shadow-amber-500;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #f59e0b;
          }
        }
      }

      @include it('shadow-amber-600') {
        @include assert {
          @include output {
            @include shadow-amber-600;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #d97706;
          }
        }
      }

      @include it('shadow-amber-700') {
        @include assert {
          @include output {
            @include shadow-amber-700;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #b45309;
          }
        }
      }

      @include it('shadow-amber-800') {
        @include assert {
          @include output {
            @include shadow-amber-800;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #92400e;
          }
        }
      }

      @include it('shadow-amber-900') {
        @include assert {
          @include output {
            @include shadow-amber-900;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #78350f;
          }
        }
      }

      @include it('shadow-amber-950') {
        @include assert {
          @include output {
            @include shadow-amber-950;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #451a03;
          }
        }
      }

      @include it('shadow-yellow-50') {
        @include assert {
          @include output {
            @include shadow-yellow-50;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fefce8;
          }
        }
      }

      @include it('shadow-yellow-100') {
        @include assert {
          @include output {
            @include shadow-yellow-100;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fef9c3;
          }
        }
      }

      @include it('shadow-yellow-200') {
        @include assert {
          @include output {
            @include shadow-yellow-200;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fef08a;
          }
        }
      }

      @include it('shadow-yellow-300') {
        @include assert {
          @include output {
            @include shadow-yellow-300;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fde047;
          }
        }
      }

      @include it('shadow-yellow-400') {
        @include assert {
          @include output {
            @include shadow-yellow-400;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #facc15;
          }
        }
      }

      @include it('shadow-yellow-500') {
        @include assert {
          @include output {
            @include shadow-yellow-500;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #eab308;
          }
        }
      }

      @include it('shadow-yellow-600') {
        @include assert {
          @include output {
            @include shadow-yellow-600;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #ca8a04;
          }
        }
      }

      @include it('shadow-yellow-700') {
        @include assert {
          @include output {
            @include shadow-yellow-700;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #a16207;
          }
        }
      }

      @include it('shadow-yellow-800') {
        @include assert {
          @include output {
            @include shadow-yellow-800;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #854d0e;
          }
        }
      }

      @include it('shadow-yellow-900') {
        @include assert {
          @include output {
            @include shadow-yellow-900;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #713f12;
          }
        }
      }

      @include it('shadow-yellow-950') {
        @include assert {
          @include output {
            @include shadow-yellow-950;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #422006;
          }
        }
      }

      @include it('shadow-lime-50') {
        @include assert {
          @include output {
            @include shadow-lime-50;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #f7fee7;
          }
        }
      }

      @include it('shadow-lime-100') {
        @include assert {
          @include output {
            @include shadow-lime-100;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #ecfccb;
          }
        }
      }

      @include it('shadow-lime-200') {
        @include assert {
          @include output {
            @include shadow-lime-200;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #d9f99d;
          }
        }
      }

      @include it('shadow-lime-300') {
        @include assert {
          @include output {
            @include shadow-lime-300;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #bef264;
          }
        }
      }

      @include it('shadow-lime-400') {
        @include assert {
          @include output {
            @include shadow-lime-400;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #a3e635;
          }
        }
      }

      @include it('shadow-lime-500') {
        @include assert {
          @include output {
            @include shadow-lime-500;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #84cc16;
          }
        }
      }

      @include it('shadow-lime-600') {
        @include assert {
          @include output {
            @include shadow-lime-600;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #65a30d;
          }
        }
      }

      @include it('shadow-lime-700') {
        @include assert {
          @include output {
            @include shadow-lime-700;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #4d7c0f;
          }
        }
      }

      @include it('shadow-lime-800') {
        @include assert {
          @include output {
            @include shadow-lime-800;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #3f6212;
          }
        }
      }

      @include it('shadow-lime-900') {
        @include assert {
          @include output {
            @include shadow-lime-900;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #365314;
          }
        }
      }

      @include it('shadow-lime-950') {
        @include assert {
          @include output {
            @include shadow-lime-950;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #1a2e05;
          }
        }
      }

      @include it('shadow-green-50') {
        @include assert {
          @include output {
            @include shadow-green-50;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #f0fdf4;
          }
        }
      }

      @include it('shadow-green-100') {
        @include assert {
          @include output {
            @include shadow-green-100;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #dcfce7;
          }
        }
      }

      @include it('shadow-green-200') {
        @include assert {
          @include output {
            @include shadow-green-200;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #bbf7d0;
          }
        }
      }

      @include it('shadow-green-300') {
        @include assert {
          @include output {
            @include shadow-green-300;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #86efac;
          }
        }
      }

      @include it('shadow-green-400') {
        @include assert {
          @include output {
            @include shadow-green-400;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #4ade80;
          }
        }
      }

      @include it('shadow-green-500') {
        @include assert {
          @include output {
            @include shadow-green-500;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #22c55e;
          }
        }
      }

      @include it('shadow-green-600') {
        @include assert {
          @include output {
            @include shadow-green-600;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #16a34a;
          }
        }
      }

      @include it('shadow-green-700') {
        @include assert {
          @include output {
            @include shadow-green-700;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #15803d;
          }
        }
      }

      @include it('shadow-green-800') {
        @include assert {
          @include output {
            @include shadow-green-800;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #166534;
          }
        }
      }

      @include it('shadow-green-900') {
        @include assert {
          @include output {
            @include shadow-green-900;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #14532d;
          }
        }
      }

      @include it('shadow-green-950') {
        @include assert {
          @include output {
            @include shadow-green-950;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #052e16;
          }
        }
      }

      @include it('shadow-emerald-50') {
        @include assert {
          @include output {
            @include shadow-emerald-50;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #ecfdf5;
          }
        }
      }

      @include it('shadow-emerald-100') {
        @include assert {
          @include output {
            @include shadow-emerald-100;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #d1fae5;
          }
        }
      }

      @include it('shadow-emerald-200') {
        @include assert {
          @include output {
            @include shadow-emerald-200;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #a7f3d0;
          }
        }
      }

      @include it('shadow-emerald-300') {
        @include assert {
          @include output {
            @include shadow-emerald-300;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #6ee7b7;
          }
        }
      }

      @include it('shadow-emerald-400') {
        @include assert {
          @include output {
            @include shadow-emerald-400;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #34d399;
          }
        }
      }

      @include it('shadow-emerald-500') {
        @include assert {
          @include output {
            @include shadow-emerald-500;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #10b981;
          }
        }
      }

      @include it('shadow-emerald-600') {
        @include assert {
          @include output {
            @include shadow-emerald-600;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #059669;
          }
        }
      }

      @include it('shadow-emerald-700') {
        @include assert {
          @include output {
            @include shadow-emerald-700;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #047857;
          }
        }
      }

      @include it('shadow-emerald-800') {
        @include assert {
          @include output {
            @include shadow-emerald-800;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #065f46;
          }
        }
      }

      @include it('shadow-emerald-900') {
        @include assert {
          @include output {
            @include shadow-emerald-900;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #064e3b;
          }
        }
      }

      @include it('shadow-emerald-950') {
        @include assert {
          @include output {
            @include shadow-emerald-950;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #022c22;
          }
        }
      }

      @include it('shadow-teal-50') {
        @include assert {
          @include output {
            @include shadow-teal-50;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #f0fdfa;
          }
        }
      }

      @include it('shadow-teal-100') {
        @include assert {
          @include output {
            @include shadow-teal-100;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #ccfbf1;
          }
        }
      }

      @include it('shadow-teal-200') {
        @include assert {
          @include output {
            @include shadow-teal-200;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #99f6e4;
          }
        }
      }

      @include it('shadow-teal-300') {
        @include assert {
          @include output {
            @include shadow-teal-300;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #5eead4;
          }
        }
      }

      @include it('shadow-teal-400') {
        @include assert {
          @include output {
            @include shadow-teal-400;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #2dd4bf;
          }
        }
      }

      @include it('shadow-teal-500') {
        @include assert {
          @include output {
            @include shadow-teal-500;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #14b8a6;
          }
        }
      }

      @include it('shadow-teal-600') {
        @include assert {
          @include output {
            @include shadow-teal-600;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #0d9488;
          }
        }
      }

      @include it('shadow-teal-700') {
        @include assert {
          @include output {
            @include shadow-teal-700;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #0f766e;
          }
        }
      }

      @include it('shadow-teal-800') {
        @include assert {
          @include output {
            @include shadow-teal-800;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #115e59;
          }
        }
      }

      @include it('shadow-teal-900') {
        @include assert {
          @include output {
            @include shadow-teal-900;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #134e4a;
          }
        }
      }

      @include it('shadow-teal-950') {
        @include assert {
          @include output {
            @include shadow-teal-950;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #042f2e;
          }
        }
      }

      @include it('shadow-cyan-50') {
        @include assert {
          @include output {
            @include shadow-cyan-50;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #ecfeff;
          }
        }
      }

      @include it('shadow-cyan-100') {
        @include assert {
          @include output {
            @include shadow-cyan-100;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #cffafe;
          }
        }
      }

      @include it('shadow-cyan-200') {
        @include assert {
          @include output {
            @include shadow-cyan-200;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #a5f3fc;
          }
        }
      }

      @include it('shadow-cyan-300') {
        @include assert {
          @include output {
            @include shadow-cyan-300;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #67e8f9;
          }
        }
      }

      @include it('shadow-cyan-400') {
        @include assert {
          @include output {
            @include shadow-cyan-400;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #22d3ee;
          }
        }
      }

      @include it('shadow-cyan-500') {
        @include assert {
          @include output {
            @include shadow-cyan-500;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #06b6d4;
          }
        }
      }

      @include it('shadow-cyan-600') {
        @include assert {
          @include output {
            @include shadow-cyan-600;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #0891b2;
          }
        }
      }

      @include it('shadow-cyan-700') {
        @include assert {
          @include output {
            @include shadow-cyan-700;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #0e7490;
          }
        }
      }

      @include it('shadow-cyan-800') {
        @include assert {
          @include output {
            @include shadow-cyan-800;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #155e75;
          }
        }
      }

      @include it('shadow-cyan-900') {
        @include assert {
          @include output {
            @include shadow-cyan-900;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #164e63;
          }
        }
      }

      @include it('shadow-cyan-950') {
        @include assert {
          @include output {
            @include shadow-cyan-950;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #083344;
          }
        }
      }

      @include it('shadow-sky-50') {
        @include assert {
          @include output {
            @include shadow-sky-50;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #f0f9ff;
          }
        }
      }

      @include it('shadow-sky-100') {
        @include assert {
          @include output {
            @include shadow-sky-100;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #e0f2fe;
          }
        }
      }

      @include it('shadow-sky-200') {
        @include assert {
          @include output {
            @include shadow-sky-200;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #bae6fd;
          }
        }
      }

      @include it('shadow-sky-300') {
        @include assert {
          @include output {
            @include shadow-sky-300;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #7dd3fc;
          }
        }
      }

      @include it('shadow-sky-400') {
        @include assert {
          @include output {
            @include shadow-sky-400;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #38bdf8;
          }
        }
      }

      @include it('shadow-sky-500') {
        @include assert {
          @include output {
            @include shadow-sky-500;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #0ea5e9;
          }
        }
      }

      @include it('shadow-sky-600') {
        @include assert {
          @include output {
            @include shadow-sky-600;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #0284c7;
          }
        }
      }

      @include it('shadow-sky-700') {
        @include assert {
          @include output {
            @include shadow-sky-700;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #0369a1;
          }
        }
      }

      @include it('shadow-sky-800') {
        @include assert {
          @include output {
            @include shadow-sky-800;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #075985;
          }
        }
      }

      @include it('shadow-sky-900') {
        @include assert {
          @include output {
            @include shadow-sky-900;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #0c4a6e;
          }
        }
      }

      @include it('shadow-sky-950') {
        @include assert {
          @include output {
            @include shadow-sky-950;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #082f49;
          }
        }
      }

      @include it('shadow-blue-50') {
        @include assert {
          @include output {
            @include shadow-blue-50;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #eff6ff;
          }
        }
      }

      @include it('shadow-blue-100') {
        @include assert {
          @include output {
            @include shadow-blue-100;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #dbeafe;
          }
        }
      }

      @include it('shadow-blue-200') {
        @include assert {
          @include output {
            @include shadow-blue-200;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #bfdbfe;
          }
        }
      }

      @include it('shadow-blue-300') {
        @include assert {
          @include output {
            @include shadow-blue-300;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #93c5fd;
          }
        }
      }

      @include it('shadow-blue-400') {
        @include assert {
          @include output {
            @include shadow-blue-400;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #60a5fa;
          }
        }
      }

      @include it('shadow-blue-500') {
        @include assert {
          @include output {
            @include shadow-blue-500;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #3b82f6;
          }
        }
      }

      @include it('shadow-blue-600') {
        @include assert {
          @include output {
            @include shadow-blue-600;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #2563eb;
          }
        }
      }

      @include it('shadow-blue-700') {
        @include assert {
          @include output {
            @include shadow-blue-700;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #1d4ed8;
          }
        }
      }

      @include it('shadow-blue-800') {
        @include assert {
          @include output {
            @include shadow-blue-800;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #1e40af;
          }
        }
      }

      @include it('shadow-blue-900') {
        @include assert {
          @include output {
            @include shadow-blue-900;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #1e3a8a;
          }
        }
      }

      @include it('shadow-blue-950') {
        @include assert {
          @include output {
            @include shadow-blue-950;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #172554;
          }
        }
      }

      @include it('shadow-indigo-50') {
        @include assert {
          @include output {
            @include shadow-indigo-50;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #eef2ff;
          }
        }
      }

      @include it('shadow-indigo-100') {
        @include assert {
          @include output {
            @include shadow-indigo-100;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #e0e7ff;
          }
        }
      }

      @include it('shadow-indigo-200') {
        @include assert {
          @include output {
            @include shadow-indigo-200;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #c7d2fe;
          }
        }
      }

      @include it('shadow-indigo-300') {
        @include assert {
          @include output {
            @include shadow-indigo-300;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #a5b4fc;
          }
        }
      }

      @include it('shadow-indigo-400') {
        @include assert {
          @include output {
            @include shadow-indigo-400;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #818cf8;
          }
        }
      }

      @include it('shadow-indigo-500') {
        @include assert {
          @include output {
            @include shadow-indigo-500;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #6366f1;
          }
        }
      }

      @include it('shadow-indigo-600') {
        @include assert {
          @include output {
            @include shadow-indigo-600;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #4f46e5;
          }
        }
      }

      @include it('shadow-indigo-700') {
        @include assert {
          @include output {
            @include shadow-indigo-700;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #4338ca;
          }
        }
      }

      @include it('shadow-indigo-800') {
        @include assert {
          @include output {
            @include shadow-indigo-800;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #3730a3;
          }
        }
      }

      @include it('shadow-indigo-900') {
        @include assert {
          @include output {
            @include shadow-indigo-900;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #312e81;
          }
        }
      }

      @include it('shadow-indigo-950') {
        @include assert {
          @include output {
            @include shadow-indigo-950;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #1e1b4b;
          }
        }
      }

      @include it('shadow-violet-50') {
        @include assert {
          @include output {
            @include shadow-violet-50;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #f5f3ff;
          }
        }
      }

      @include it('shadow-violet-100') {
        @include assert {
          @include output {
            @include shadow-violet-100;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #ede9fe;
          }
        }
      }

      @include it('shadow-violet-200') {
        @include assert {
          @include output {
            @include shadow-violet-200;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #ddd6fe;
          }
        }
      }

      @include it('shadow-violet-300') {
        @include assert {
          @include output {
            @include shadow-violet-300;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #c4b5fd;
          }
        }
      }

      @include it('shadow-violet-400') {
        @include assert {
          @include output {
            @include shadow-violet-400;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #a78bfa;
          }
        }
      }

      @include it('shadow-violet-500') {
        @include assert {
          @include output {
            @include shadow-violet-500;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #8b5cf6;
          }
        }
      }

      @include it('shadow-violet-600') {
        @include assert {
          @include output {
            @include shadow-violet-600;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #7c3aed;
          }
        }
      }

      @include it('shadow-violet-700') {
        @include assert {
          @include output {
            @include shadow-violet-700;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #6d28d9;
          }
        }
      }

      @include it('shadow-violet-800') {
        @include assert {
          @include output {
            @include shadow-violet-800;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #5b21b6;
          }
        }
      }

      @include it('shadow-violet-900') {
        @include assert {
          @include output {
            @include shadow-violet-900;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #4c1d95;
          }
        }
      }

      @include it('shadow-violet-950') {
        @include assert {
          @include output {
            @include shadow-violet-950;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #2e1065;
          }
        }
      }

      @include it('shadow-purple-50') {
        @include assert {
          @include output {
            @include shadow-purple-50;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #faf5ff;
          }
        }
      }

      @include it('shadow-purple-100') {
        @include assert {
          @include output {
            @include shadow-purple-100;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #f3e8ff;
          }
        }
      }

      @include it('shadow-purple-200') {
        @include assert {
          @include output {
            @include shadow-purple-200;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #e9d5ff;
          }
        }
      }

      @include it('shadow-purple-300') {
        @include assert {
          @include output {
            @include shadow-purple-300;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #d8b4fe;
          }
        }
      }

      @include it('shadow-purple-400') {
        @include assert {
          @include output {
            @include shadow-purple-400;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #c084fc;
          }
        }
      }

      @include it('shadow-purple-500') {
        @include assert {
          @include output {
            @include shadow-purple-500;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #a855f7;
          }
        }
      }

      @include it('shadow-purple-600') {
        @include assert {
          @include output {
            @include shadow-purple-600;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #9333ea;
          }
        }
      }

      @include it('shadow-purple-700') {
        @include assert {
          @include output {
            @include shadow-purple-700;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #7e22ce;
          }
        }
      }

      @include it('shadow-purple-800') {
        @include assert {
          @include output {
            @include shadow-purple-800;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #6b21a8;
          }
        }
      }

      @include it('shadow-purple-900') {
        @include assert {
          @include output {
            @include shadow-purple-900;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #581c87;
          }
        }
      }

      @include it('shadow-purple-950') {
        @include assert {
          @include output {
            @include shadow-purple-950;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #3b0764;
          }
        }
      }

      @include it('shadow-fuchsia-50') {
        @include assert {
          @include output {
            @include shadow-fuchsia-50;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fdf4ff;
          }
        }
      }

      @include it('shadow-fuchsia-100') {
        @include assert {
          @include output {
            @include shadow-fuchsia-100;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fae8ff;
          }
        }
      }

      @include it('shadow-fuchsia-200') {
        @include assert {
          @include output {
            @include shadow-fuchsia-200;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #f5d0fe;
          }
        }
      }

      @include it('shadow-fuchsia-300') {
        @include assert {
          @include output {
            @include shadow-fuchsia-300;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #f0abfc;
          }
        }
      }

      @include it('shadow-fuchsia-400') {
        @include assert {
          @include output {
            @include shadow-fuchsia-400;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #e879f9;
          }
        }
      }

      @include it('shadow-fuchsia-500') {
        @include assert {
          @include output {
            @include shadow-fuchsia-500;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #d946ef;
          }
        }
      }

      @include it('shadow-fuchsia-600') {
        @include assert {
          @include output {
            @include shadow-fuchsia-600;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #c026d3;
          }
        }
      }

      @include it('shadow-fuchsia-700') {
        @include assert {
          @include output {
            @include shadow-fuchsia-700;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #a21caf;
          }
        }
      }

      @include it('shadow-fuchsia-800') {
        @include assert {
          @include output {
            @include shadow-fuchsia-800;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #86198f;
          }
        }
      }

      @include it('shadow-fuchsia-900') {
        @include assert {
          @include output {
            @include shadow-fuchsia-900;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #701a75;
          }
        }
      }

      @include it('shadow-fuchsia-950') {
        @include assert {
          @include output {
            @include shadow-fuchsia-950;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #4a044e;
          }
        }
      }

      @include it('shadow-pink-50') {
        @include assert {
          @include output {
            @include shadow-pink-50;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fdf2f8;
          }
        }
      }

      @include it('shadow-pink-100') {
        @include assert {
          @include output {
            @include shadow-pink-100;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fce7f3;
          }
        }
      }

      @include it('shadow-pink-200') {
        @include assert {
          @include output {
            @include shadow-pink-200;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fbcfe8;
          }
        }
      }

      @include it('shadow-pink-300') {
        @include assert {
          @include output {
            @include shadow-pink-300;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #f9a8d4;
          }
        }
      }

      @include it('shadow-pink-400') {
        @include assert {
          @include output {
            @include shadow-pink-400;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #f472b6;
          }
        }
      }

      @include it('shadow-pink-500') {
        @include assert {
          @include output {
            @include shadow-pink-500;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #ec4899;
          }
        }
      }

      @include it('shadow-pink-600') {
        @include assert {
          @include output {
            @include shadow-pink-600;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #db2777;
          }
        }
      }

      @include it('shadow-pink-700') {
        @include assert {
          @include output {
            @include shadow-pink-700;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #be185d;
          }
        }
      }

      @include it('shadow-pink-800') {
        @include assert {
          @include output {
            @include shadow-pink-800;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #9d174d;
          }
        }
      }

      @include it('shadow-pink-900') {
        @include assert {
          @include output {
            @include shadow-pink-900;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #831843;
          }
        }
      }

      @include it('shadow-pink-950') {
        @include assert {
          @include output {
            @include shadow-pink-950;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #500724;
          }
        }
      }

      @include it('shadow-rose-50') {
        @include assert {
          @include output {
            @include shadow-rose-50;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff1f2;
          }
        }
      }

      @include it('shadow-rose-100') {
        @include assert {
          @include output {
            @include shadow-rose-100;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #ffe4e6;
          }
        }
      }

      @include it('shadow-rose-200') {
        @include assert {
          @include output {
            @include shadow-rose-200;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fecdd3;
          }
        }
      }

      @include it('shadow-rose-300') {
        @include assert {
          @include output {
            @include shadow-rose-300;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fda4af;
          }
        }
      }

      @include it('shadow-rose-400') {
        @include assert {
          @include output {
            @include shadow-rose-400;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fb7185;
          }
        }
      }

      @include it('shadow-rose-500') {
        @include assert {
          @include output {
            @include shadow-rose-500;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #f43f5e;
          }
        }
      }

      @include it('shadow-rose-600') {
        @include assert {
          @include output {
            @include shadow-rose-600;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #e11d48;
          }
        }
      }

      @include it('shadow-rose-700') {
        @include assert {
          @include output {
            @include shadow-rose-700;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #be123c;
          }
        }
      }

      @include it('shadow-rose-800') {
        @include assert {
          @include output {
            @include shadow-rose-800;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #9f1239;
          }
        }
      }

      @include it('shadow-rose-900') {
        @include assert {
          @include output {
            @include shadow-rose-900;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #881337;
          }
        }
      }

      @include it('shadow-rose-950') {
        @include assert {
          @include output {
            @include shadow-rose-950;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #4c0519;
          }
        }
      }

      @include it('shadow-black(0.11)') {
        @include assert {
          @include output {
            @include shadow-black(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#000, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-white(0.11)') {
        @include assert {
          @include output {
            @include shadow-white(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#fff, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-slate-50(0.11)') {
        @include assert {
          @include output {
            @include shadow-slate-50(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#f8fafc, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-slate-100(0.11)') {
        @include assert {
          @include output {
            @include shadow-slate-100(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#f1f5f9, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-slate-200(0.11)') {
        @include assert {
          @include output {
            @include shadow-slate-200(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#e2e8f0, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-slate-300(0.11)') {
        @include assert {
          @include output {
            @include shadow-slate-300(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#cbd5e1, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-slate-400(0.11)') {
        @include assert {
          @include output {
            @include shadow-slate-400(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#94a3b8, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-slate-500(0.11)') {
        @include assert {
          @include output {
            @include shadow-slate-500(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#64748b, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-slate-600(0.11)') {
        @include assert {
          @include output {
            @include shadow-slate-600(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#475569, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-slate-700(0.11)') {
        @include assert {
          @include output {
            @include shadow-slate-700(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#334155, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-slate-800(0.11)') {
        @include assert {
          @include output {
            @include shadow-slate-800(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#1e293b, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-slate-900(0.11)') {
        @include assert {
          @include output {
            @include shadow-slate-900(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#0f172a, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-slate-950(0.11)') {
        @include assert {
          @include output {
            @include shadow-slate-950(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#020617, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-gray-50(0.11)') {
        @include assert {
          @include output {
            @include shadow-gray-50(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#f9fafb, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-gray-100(0.11)') {
        @include assert {
          @include output {
            @include shadow-gray-100(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#f3f4f6, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-gray-200(0.11)') {
        @include assert {
          @include output {
            @include shadow-gray-200(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#e5e7eb, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-gray-300(0.11)') {
        @include assert {
          @include output {
            @include shadow-gray-300(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#d1d5db, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-gray-400(0.11)') {
        @include assert {
          @include output {
            @include shadow-gray-400(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#9ca3af, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-gray-500(0.11)') {
        @include assert {
          @include output {
            @include shadow-gray-500(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#6b7280, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-gray-600(0.11)') {
        @include assert {
          @include output {
            @include shadow-gray-600(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#4b5563, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-gray-700(0.11)') {
        @include assert {
          @include output {
            @include shadow-gray-700(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#374151, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-gray-800(0.11)') {
        @include assert {
          @include output {
            @include shadow-gray-800(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#1f2937, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-gray-900(0.11)') {
        @include assert {
          @include output {
            @include shadow-gray-900(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#111827, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-gray-950(0.11)') {
        @include assert {
          @include output {
            @include shadow-gray-950(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#030712, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-zinc-50(0.11)') {
        @include assert {
          @include output {
            @include shadow-zinc-50(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#fafafa, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-zinc-100(0.11)') {
        @include assert {
          @include output {
            @include shadow-zinc-100(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#f4f4f5, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-zinc-200(0.11)') {
        @include assert {
          @include output {
            @include shadow-zinc-200(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#e4e4e7, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-zinc-300(0.11)') {
        @include assert {
          @include output {
            @include shadow-zinc-300(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#d4d4d8, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-zinc-400(0.11)') {
        @include assert {
          @include output {
            @include shadow-zinc-400(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#a1a1aa, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-zinc-500(0.11)') {
        @include assert {
          @include output {
            @include shadow-zinc-500(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#71717a, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-zinc-600(0.11)') {
        @include assert {
          @include output {
            @include shadow-zinc-600(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#52525b, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-zinc-700(0.11)') {
        @include assert {
          @include output {
            @include shadow-zinc-700(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#3f3f46, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-zinc-800(0.11)') {
        @include assert {
          @include output {
            @include shadow-zinc-800(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#27272a, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-zinc-900(0.11)') {
        @include assert {
          @include output {
            @include shadow-zinc-900(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#18181b, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-zinc-950(0.11)') {
        @include assert {
          @include output {
            @include shadow-zinc-950(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#09090b, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-neutral-50(0.11)') {
        @include assert {
          @include output {
            @include shadow-neutral-50(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#fafafa, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-neutral-100(0.11)') {
        @include assert {
          @include output {
            @include shadow-neutral-100(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#f5f5f5, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-neutral-200(0.11)') {
        @include assert {
          @include output {
            @include shadow-neutral-200(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#e5e5e5, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-neutral-300(0.11)') {
        @include assert {
          @include output {
            @include shadow-neutral-300(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#d4d4d4, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-neutral-400(0.11)') {
        @include assert {
          @include output {
            @include shadow-neutral-400(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#a3a3a3, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-neutral-500(0.11)') {
        @include assert {
          @include output {
            @include shadow-neutral-500(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#737373, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-neutral-600(0.11)') {
        @include assert {
          @include output {
            @include shadow-neutral-600(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#525252, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-neutral-700(0.11)') {
        @include assert {
          @include output {
            @include shadow-neutral-700(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#404040, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-neutral-800(0.11)') {
        @include assert {
          @include output {
            @include shadow-neutral-800(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#262626, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-neutral-900(0.11)') {
        @include assert {
          @include output {
            @include shadow-neutral-900(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#171717, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-neutral-950(0.11)') {
        @include assert {
          @include output {
            @include shadow-neutral-950(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#0a0a0a, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-stone-50(0.11)') {
        @include assert {
          @include output {
            @include shadow-stone-50(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#fafaf9, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-stone-100(0.11)') {
        @include assert {
          @include output {
            @include shadow-stone-100(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#f5f5f4, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-stone-200(0.11)') {
        @include assert {
          @include output {
            @include shadow-stone-200(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#e7e5e4, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-stone-300(0.11)') {
        @include assert {
          @include output {
            @include shadow-stone-300(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#d6d3d1, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-stone-400(0.11)') {
        @include assert {
          @include output {
            @include shadow-stone-400(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#a8a29e, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-stone-500(0.11)') {
        @include assert {
          @include output {
            @include shadow-stone-500(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#78716c, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-stone-600(0.11)') {
        @include assert {
          @include output {
            @include shadow-stone-600(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#57534e, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-stone-700(0.11)') {
        @include assert {
          @include output {
            @include shadow-stone-700(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#44403c, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-stone-800(0.11)') {
        @include assert {
          @include output {
            @include shadow-stone-800(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#292524, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-stone-900(0.11)') {
        @include assert {
          @include output {
            @include shadow-stone-900(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#1c1917, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-stone-950(0.11)') {
        @include assert {
          @include output {
            @include shadow-stone-950(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#0c0a09, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-red-50(0.11)') {
        @include assert {
          @include output {
            @include shadow-red-50(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#fef2f2, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-red-100(0.11)') {
        @include assert {
          @include output {
            @include shadow-red-100(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#fee2e2, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-red-200(0.11)') {
        @include assert {
          @include output {
            @include shadow-red-200(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#fecaca, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-red-300(0.11)') {
        @include assert {
          @include output {
            @include shadow-red-300(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#fca5a5, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-red-400(0.11)') {
        @include assert {
          @include output {
            @include shadow-red-400(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#f87171, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-red-500(0.11)') {
        @include assert {
          @include output {
            @include shadow-red-500(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#ef4444, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-red-600(0.11)') {
        @include assert {
          @include output {
            @include shadow-red-600(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#dc2626, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-red-700(0.11)') {
        @include assert {
          @include output {
            @include shadow-red-700(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#b91c1c, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-red-800(0.11)') {
        @include assert {
          @include output {
            @include shadow-red-800(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#991b1b, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-red-900(0.11)') {
        @include assert {
          @include output {
            @include shadow-red-900(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#7f1d1d, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-red-950(0.11)') {
        @include assert {
          @include output {
            @include shadow-red-950(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#450a0a, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-orange-50(0.11)') {
        @include assert {
          @include output {
            @include shadow-orange-50(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#fff7ed, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-orange-100(0.11)') {
        @include assert {
          @include output {
            @include shadow-orange-100(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#ffedd5, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-orange-200(0.11)') {
        @include assert {
          @include output {
            @include shadow-orange-200(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#fed7aa, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-orange-300(0.11)') {
        @include assert {
          @include output {
            @include shadow-orange-300(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#fdba74, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-orange-400(0.11)') {
        @include assert {
          @include output {
            @include shadow-orange-400(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#fb923c, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-orange-500(0.11)') {
        @include assert {
          @include output {
            @include shadow-orange-500(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#f97316, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-orange-600(0.11)') {
        @include assert {
          @include output {
            @include shadow-orange-600(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#ea580c, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-orange-700(0.11)') {
        @include assert {
          @include output {
            @include shadow-orange-700(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#c2410c, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-orange-800(0.11)') {
        @include assert {
          @include output {
            @include shadow-orange-800(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#9a3412, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-orange-900(0.11)') {
        @include assert {
          @include output {
            @include shadow-orange-900(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#7c2d12, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-orange-950(0.11)') {
        @include assert {
          @include output {
            @include shadow-orange-950(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#431407, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-amber-50(0.11)') {
        @include assert {
          @include output {
            @include shadow-amber-50(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#fffbeb, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-amber-100(0.11)') {
        @include assert {
          @include output {
            @include shadow-amber-100(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#fef3c7, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-amber-200(0.11)') {
        @include assert {
          @include output {
            @include shadow-amber-200(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#fde68a, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-amber-300(0.11)') {
        @include assert {
          @include output {
            @include shadow-amber-300(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#fcd34d, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-amber-400(0.11)') {
        @include assert {
          @include output {
            @include shadow-amber-400(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#fbbf24, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-amber-500(0.11)') {
        @include assert {
          @include output {
            @include shadow-amber-500(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#f59e0b, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-amber-600(0.11)') {
        @include assert {
          @include output {
            @include shadow-amber-600(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#d97706, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-amber-700(0.11)') {
        @include assert {
          @include output {
            @include shadow-amber-700(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#b45309, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-amber-800(0.11)') {
        @include assert {
          @include output {
            @include shadow-amber-800(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#92400e, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-amber-900(0.11)') {
        @include assert {
          @include output {
            @include shadow-amber-900(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#78350f, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-amber-950(0.11)') {
        @include assert {
          @include output {
            @include shadow-amber-950(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#451a03, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-yellow-50(0.11)') {
        @include assert {
          @include output {
            @include shadow-yellow-50(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#fefce8, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-yellow-100(0.11)') {
        @include assert {
          @include output {
            @include shadow-yellow-100(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#fef9c3, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-yellow-200(0.11)') {
        @include assert {
          @include output {
            @include shadow-yellow-200(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#fef08a, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-yellow-300(0.11)') {
        @include assert {
          @include output {
            @include shadow-yellow-300(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#fde047, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-yellow-400(0.11)') {
        @include assert {
          @include output {
            @include shadow-yellow-400(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#facc15, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-yellow-500(0.11)') {
        @include assert {
          @include output {
            @include shadow-yellow-500(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#eab308, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-yellow-600(0.11)') {
        @include assert {
          @include output {
            @include shadow-yellow-600(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#ca8a04, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-yellow-700(0.11)') {
        @include assert {
          @include output {
            @include shadow-yellow-700(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#a16207, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-yellow-800(0.11)') {
        @include assert {
          @include output {
            @include shadow-yellow-800(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#854d0e, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-yellow-900(0.11)') {
        @include assert {
          @include output {
            @include shadow-yellow-900(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#713f12, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-yellow-950(0.11)') {
        @include assert {
          @include output {
            @include shadow-yellow-950(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#422006, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-lime-50(0.11)') {
        @include assert {
          @include output {
            @include shadow-lime-50(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#f7fee7, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-lime-100(0.11)') {
        @include assert {
          @include output {
            @include shadow-lime-100(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#ecfccb, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-lime-200(0.11)') {
        @include assert {
          @include output {
            @include shadow-lime-200(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#d9f99d, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-lime-300(0.11)') {
        @include assert {
          @include output {
            @include shadow-lime-300(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#bef264, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-lime-400(0.11)') {
        @include assert {
          @include output {
            @include shadow-lime-400(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#a3e635, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-lime-500(0.11)') {
        @include assert {
          @include output {
            @include shadow-lime-500(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#84cc16, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-lime-600(0.11)') {
        @include assert {
          @include output {
            @include shadow-lime-600(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#65a30d, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-lime-700(0.11)') {
        @include assert {
          @include output {
            @include shadow-lime-700(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#4d7c0f, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-lime-800(0.11)') {
        @include assert {
          @include output {
            @include shadow-lime-800(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#3f6212, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-lime-900(0.11)') {
        @include assert {
          @include output {
            @include shadow-lime-900(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#365314, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-lime-950(0.11)') {
        @include assert {
          @include output {
            @include shadow-lime-950(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#1a2e05, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-green-50(0.11)') {
        @include assert {
          @include output {
            @include shadow-green-50(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#f0fdf4, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-green-100(0.11)') {
        @include assert {
          @include output {
            @include shadow-green-100(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#dcfce7, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-green-200(0.11)') {
        @include assert {
          @include output {
            @include shadow-green-200(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#bbf7d0, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-green-300(0.11)') {
        @include assert {
          @include output {
            @include shadow-green-300(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#86efac, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-green-400(0.11)') {
        @include assert {
          @include output {
            @include shadow-green-400(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#4ade80, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-green-500(0.11)') {
        @include assert {
          @include output {
            @include shadow-green-500(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#22c55e, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-green-600(0.11)') {
        @include assert {
          @include output {
            @include shadow-green-600(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#16a34a, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-green-700(0.11)') {
        @include assert {
          @include output {
            @include shadow-green-700(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#15803d, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-green-800(0.11)') {
        @include assert {
          @include output {
            @include shadow-green-800(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#166534, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-green-900(0.11)') {
        @include assert {
          @include output {
            @include shadow-green-900(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#14532d, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-green-950(0.11)') {
        @include assert {
          @include output {
            @include shadow-green-950(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#052e16, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-emerald-50(0.11)') {
        @include assert {
          @include output {
            @include shadow-emerald-50(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#ecfdf5, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-emerald-100(0.11)') {
        @include assert {
          @include output {
            @include shadow-emerald-100(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#d1fae5, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-emerald-200(0.11)') {
        @include assert {
          @include output {
            @include shadow-emerald-200(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#a7f3d0, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-emerald-300(0.11)') {
        @include assert {
          @include output {
            @include shadow-emerald-300(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#6ee7b7, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-emerald-400(0.11)') {
        @include assert {
          @include output {
            @include shadow-emerald-400(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#34d399, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-emerald-500(0.11)') {
        @include assert {
          @include output {
            @include shadow-emerald-500(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#10b981, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-emerald-600(0.11)') {
        @include assert {
          @include output {
            @include shadow-emerald-600(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#059669, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-emerald-700(0.11)') {
        @include assert {
          @include output {
            @include shadow-emerald-700(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#047857, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-emerald-800(0.11)') {
        @include assert {
          @include output {
            @include shadow-emerald-800(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#065f46, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-emerald-900(0.11)') {
        @include assert {
          @include output {
            @include shadow-emerald-900(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#064e3b, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-emerald-950(0.11)') {
        @include assert {
          @include output {
            @include shadow-emerald-950(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#022c22, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-teal-50(0.11)') {
        @include assert {
          @include output {
            @include shadow-teal-50(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#f0fdfa, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-teal-100(0.11)') {
        @include assert {
          @include output {
            @include shadow-teal-100(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#ccfbf1, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-teal-200(0.11)') {
        @include assert {
          @include output {
            @include shadow-teal-200(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#99f6e4, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-teal-300(0.11)') {
        @include assert {
          @include output {
            @include shadow-teal-300(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#5eead4, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-teal-400(0.11)') {
        @include assert {
          @include output {
            @include shadow-teal-400(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#2dd4bf, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-teal-500(0.11)') {
        @include assert {
          @include output {
            @include shadow-teal-500(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#14b8a6, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-teal-600(0.11)') {
        @include assert {
          @include output {
            @include shadow-teal-600(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#0d9488, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-teal-700(0.11)') {
        @include assert {
          @include output {
            @include shadow-teal-700(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#0f766e, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-teal-800(0.11)') {
        @include assert {
          @include output {
            @include shadow-teal-800(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#115e59, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-teal-900(0.11)') {
        @include assert {
          @include output {
            @include shadow-teal-900(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#134e4a, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-teal-950(0.11)') {
        @include assert {
          @include output {
            @include shadow-teal-950(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#042f2e, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-cyan-50(0.11)') {
        @include assert {
          @include output {
            @include shadow-cyan-50(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#ecfeff, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-cyan-100(0.11)') {
        @include assert {
          @include output {
            @include shadow-cyan-100(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#cffafe, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-cyan-200(0.11)') {
        @include assert {
          @include output {
            @include shadow-cyan-200(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#a5f3fc, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-cyan-300(0.11)') {
        @include assert {
          @include output {
            @include shadow-cyan-300(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#67e8f9, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-cyan-400(0.11)') {
        @include assert {
          @include output {
            @include shadow-cyan-400(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#22d3ee, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-cyan-500(0.11)') {
        @include assert {
          @include output {
            @include shadow-cyan-500(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#06b6d4, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-cyan-600(0.11)') {
        @include assert {
          @include output {
            @include shadow-cyan-600(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#0891b2, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-cyan-700(0.11)') {
        @include assert {
          @include output {
            @include shadow-cyan-700(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#0e7490, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-cyan-800(0.11)') {
        @include assert {
          @include output {
            @include shadow-cyan-800(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#155e75, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-cyan-900(0.11)') {
        @include assert {
          @include output {
            @include shadow-cyan-900(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#164e63, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-cyan-950(0.11)') {
        @include assert {
          @include output {
            @include shadow-cyan-950(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#083344, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-sky-50(0.11)') {
        @include assert {
          @include output {
            @include shadow-sky-50(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#f0f9ff, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-sky-100(0.11)') {
        @include assert {
          @include output {
            @include shadow-sky-100(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#e0f2fe, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-sky-200(0.11)') {
        @include assert {
          @include output {
            @include shadow-sky-200(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#bae6fd, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-sky-300(0.11)') {
        @include assert {
          @include output {
            @include shadow-sky-300(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#7dd3fc, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-sky-400(0.11)') {
        @include assert {
          @include output {
            @include shadow-sky-400(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#38bdf8, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-sky-500(0.11)') {
        @include assert {
          @include output {
            @include shadow-sky-500(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#0ea5e9, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-sky-600(0.11)') {
        @include assert {
          @include output {
            @include shadow-sky-600(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#0284c7, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-sky-700(0.11)') {
        @include assert {
          @include output {
            @include shadow-sky-700(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#0369a1, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-sky-800(0.11)') {
        @include assert {
          @include output {
            @include shadow-sky-800(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#075985, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-sky-900(0.11)') {
        @include assert {
          @include output {
            @include shadow-sky-900(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#0c4a6e, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-sky-950(0.11)') {
        @include assert {
          @include output {
            @include shadow-sky-950(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#082f49, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-blue-50(0.11)') {
        @include assert {
          @include output {
            @include shadow-blue-50(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#eff6ff, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-blue-100(0.11)') {
        @include assert {
          @include output {
            @include shadow-blue-100(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#dbeafe, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-blue-200(0.11)') {
        @include assert {
          @include output {
            @include shadow-blue-200(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#bfdbfe, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-blue-300(0.11)') {
        @include assert {
          @include output {
            @include shadow-blue-300(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#93c5fd, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-blue-400(0.11)') {
        @include assert {
          @include output {
            @include shadow-blue-400(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#60a5fa, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-blue-500(0.11)') {
        @include assert {
          @include output {
            @include shadow-blue-500(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#3b82f6, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-blue-600(0.11)') {
        @include assert {
          @include output {
            @include shadow-blue-600(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#2563eb, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-blue-700(0.11)') {
        @include assert {
          @include output {
            @include shadow-blue-700(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#1d4ed8, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-blue-800(0.11)') {
        @include assert {
          @include output {
            @include shadow-blue-800(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#1e40af, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-blue-900(0.11)') {
        @include assert {
          @include output {
            @include shadow-blue-900(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#1e3a8a, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-blue-950(0.11)') {
        @include assert {
          @include output {
            @include shadow-blue-950(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#172554, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-indigo-50(0.11)') {
        @include assert {
          @include output {
            @include shadow-indigo-50(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#eef2ff, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-indigo-100(0.11)') {
        @include assert {
          @include output {
            @include shadow-indigo-100(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#e0e7ff, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-indigo-200(0.11)') {
        @include assert {
          @include output {
            @include shadow-indigo-200(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#c7d2fe, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-indigo-300(0.11)') {
        @include assert {
          @include output {
            @include shadow-indigo-300(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#a5b4fc, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-indigo-400(0.11)') {
        @include assert {
          @include output {
            @include shadow-indigo-400(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#818cf8, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-indigo-500(0.11)') {
        @include assert {
          @include output {
            @include shadow-indigo-500(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#6366f1, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-indigo-600(0.11)') {
        @include assert {
          @include output {
            @include shadow-indigo-600(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#4f46e5, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-indigo-700(0.11)') {
        @include assert {
          @include output {
            @include shadow-indigo-700(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#4338ca, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-indigo-800(0.11)') {
        @include assert {
          @include output {
            @include shadow-indigo-800(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#3730a3, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-indigo-900(0.11)') {
        @include assert {
          @include output {
            @include shadow-indigo-900(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#312e81, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-indigo-950(0.11)') {
        @include assert {
          @include output {
            @include shadow-indigo-950(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#1e1b4b, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-violet-50(0.11)') {
        @include assert {
          @include output {
            @include shadow-violet-50(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#f5f3ff, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-violet-100(0.11)') {
        @include assert {
          @include output {
            @include shadow-violet-100(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#ede9fe, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-violet-200(0.11)') {
        @include assert {
          @include output {
            @include shadow-violet-200(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#ddd6fe, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-violet-300(0.11)') {
        @include assert {
          @include output {
            @include shadow-violet-300(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#c4b5fd, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-violet-400(0.11)') {
        @include assert {
          @include output {
            @include shadow-violet-400(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#a78bfa, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-violet-500(0.11)') {
        @include assert {
          @include output {
            @include shadow-violet-500(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#8b5cf6, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-violet-600(0.11)') {
        @include assert {
          @include output {
            @include shadow-violet-600(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#7c3aed, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-violet-700(0.11)') {
        @include assert {
          @include output {
            @include shadow-violet-700(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#6d28d9, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-violet-800(0.11)') {
        @include assert {
          @include output {
            @include shadow-violet-800(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#5b21b6, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-violet-900(0.11)') {
        @include assert {
          @include output {
            @include shadow-violet-900(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#4c1d95, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-violet-950(0.11)') {
        @include assert {
          @include output {
            @include shadow-violet-950(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#2e1065, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-purple-50(0.11)') {
        @include assert {
          @include output {
            @include shadow-purple-50(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#faf5ff, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-purple-100(0.11)') {
        @include assert {
          @include output {
            @include shadow-purple-100(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#f3e8ff, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-purple-200(0.11)') {
        @include assert {
          @include output {
            @include shadow-purple-200(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#e9d5ff, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-purple-300(0.11)') {
        @include assert {
          @include output {
            @include shadow-purple-300(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#d8b4fe, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-purple-400(0.11)') {
        @include assert {
          @include output {
            @include shadow-purple-400(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#c084fc, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-purple-500(0.11)') {
        @include assert {
          @include output {
            @include shadow-purple-500(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#a855f7, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-purple-600(0.11)') {
        @include assert {
          @include output {
            @include shadow-purple-600(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#9333ea, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-purple-700(0.11)') {
        @include assert {
          @include output {
            @include shadow-purple-700(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#7e22ce, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-purple-800(0.11)') {
        @include assert {
          @include output {
            @include shadow-purple-800(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#6b21a8, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-purple-900(0.11)') {
        @include assert {
          @include output {
            @include shadow-purple-900(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#581c87, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-purple-950(0.11)') {
        @include assert {
          @include output {
            @include shadow-purple-950(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#3b0764, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-fuchsia-50(0.11)') {
        @include assert {
          @include output {
            @include shadow-fuchsia-50(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#fdf4ff, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-fuchsia-100(0.11)') {
        @include assert {
          @include output {
            @include shadow-fuchsia-100(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#fae8ff, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-fuchsia-200(0.11)') {
        @include assert {
          @include output {
            @include shadow-fuchsia-200(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#f5d0fe, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-fuchsia-300(0.11)') {
        @include assert {
          @include output {
            @include shadow-fuchsia-300(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#f0abfc, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-fuchsia-400(0.11)') {
        @include assert {
          @include output {
            @include shadow-fuchsia-400(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#e879f9, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-fuchsia-500(0.11)') {
        @include assert {
          @include output {
            @include shadow-fuchsia-500(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#d946ef, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-fuchsia-600(0.11)') {
        @include assert {
          @include output {
            @include shadow-fuchsia-600(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#c026d3, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-fuchsia-700(0.11)') {
        @include assert {
          @include output {
            @include shadow-fuchsia-700(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#a21caf, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-fuchsia-800(0.11)') {
        @include assert {
          @include output {
            @include shadow-fuchsia-800(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#86198f, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-fuchsia-900(0.11)') {
        @include assert {
          @include output {
            @include shadow-fuchsia-900(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#701a75, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-fuchsia-950(0.11)') {
        @include assert {
          @include output {
            @include shadow-fuchsia-950(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#4a044e, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-pink-50(0.11)') {
        @include assert {
          @include output {
            @include shadow-pink-50(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#fdf2f8, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-pink-100(0.11)') {
        @include assert {
          @include output {
            @include shadow-pink-100(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#fce7f3, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-pink-200(0.11)') {
        @include assert {
          @include output {
            @include shadow-pink-200(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#fbcfe8, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-pink-300(0.11)') {
        @include assert {
          @include output {
            @include shadow-pink-300(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#f9a8d4, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-pink-400(0.11)') {
        @include assert {
          @include output {
            @include shadow-pink-400(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#f472b6, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-pink-500(0.11)') {
        @include assert {
          @include output {
            @include shadow-pink-500(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#ec4899, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-pink-600(0.11)') {
        @include assert {
          @include output {
            @include shadow-pink-600(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#db2777, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-pink-700(0.11)') {
        @include assert {
          @include output {
            @include shadow-pink-700(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#be185d, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-pink-800(0.11)') {
        @include assert {
          @include output {
            @include shadow-pink-800(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#9d174d, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-pink-900(0.11)') {
        @include assert {
          @include output {
            @include shadow-pink-900(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#831843, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-pink-950(0.11)') {
        @include assert {
          @include output {
            @include shadow-pink-950(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#500724, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-rose-50(0.11)') {
        @include assert {
          @include output {
            @include shadow-rose-50(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#fff1f2, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-rose-100(0.11)') {
        @include assert {
          @include output {
            @include shadow-rose-100(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#ffe4e6, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-rose-200(0.11)') {
        @include assert {
          @include output {
            @include shadow-rose-200(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#fecdd3, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-rose-300(0.11)') {
        @include assert {
          @include output {
            @include shadow-rose-300(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#fda4af, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-rose-400(0.11)') {
        @include assert {
          @include output {
            @include shadow-rose-400(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#fb7185, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-rose-500(0.11)') {
        @include assert {
          @include output {
            @include shadow-rose-500(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#f43f5e, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-rose-600(0.11)') {
        @include assert {
          @include output {
            @include shadow-rose-600(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#e11d48, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-rose-700(0.11)') {
        @include assert {
          @include output {
            @include shadow-rose-700(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#be123c, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-rose-800(0.11)') {
        @include assert {
          @include output {
            @include shadow-rose-800(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#9f1239, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-rose-900(0.11)') {
        @include assert {
          @include output {
            @include shadow-rose-900(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#881337, $alpha: 0.11);
          }
        }
      }

      @include it('shadow-rose-950(0.11)') {
        @include assert {
          @include output {
            @include shadow-rose-950(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 color.change(#4c0519, $alpha: 0.11);
          }
        }
      }
    }

    @include describe('Custom') {
      @include it('shadow-(#50d71e)') {
        @include assert {
          @include output {
            @include shadow-(#50d71e);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #50d71e;
          }
        }
      }
    }
  }
}
