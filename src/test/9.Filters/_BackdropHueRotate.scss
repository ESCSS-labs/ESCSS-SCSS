@use "true" as *;
@use "../awaken" as *;

@include describe("9.Filters") {
  @include describe("Backdrop Hue Rotate") {
    @include describe("Positive") {
      @include describe("Basic") {
        @include it("backdrop-hue-rotate-0") {
          @include assert {
            @include output {
              @include backdrop-hue-rotate-0;
              @include utils_reset-tw;
            }

            @include expect {
              backdrop-filter: hue-rotate(0deg);
            }
          }
        }

        @include it("backdrop-hue-rotate-15") {
          @include assert {
            @include output {
              @include backdrop-hue-rotate-15;
              @include utils_reset-tw;
            }

            @include expect {
              backdrop-filter: hue-rotate(15deg);
            }
          }
        }

        @include it("backdrop-hue-rotate-30") {
          @include assert {
            @include output {
              @include backdrop-hue-rotate-30;
              @include utils_reset-tw;
            }

            @include expect {
              backdrop-filter: hue-rotate(30deg);
            }
          }
        }

        @include it("backdrop-hue-rotate-60") {
          @include assert {
            @include output {
              @include backdrop-hue-rotate-60;
              @include utils_reset-tw;
            }

            @include expect {
              backdrop-filter: hue-rotate(60deg);
            }
          }
        }

        @include it("backdrop-hue-rotate-90") {
          @include assert {
            @include output {
              @include backdrop-hue-rotate-90;
              @include utils_reset-tw;
            }

            @include expect {
              backdrop-filter: hue-rotate(90deg);
            }
          }
        }

        @include it("backdrop-hue-rotate-180") {
          @include assert {
            @include output {
              @include backdrop-hue-rotate-180;
              @include utils_reset-tw;
            }

            @include expect {
              backdrop-filter: hue-rotate(180deg);
            }
          }
        }
      }

      @include describe("Custom") {
        @include it("backdrop-hue-rotate-(270deg)") {
          @include assert {
            @include output {
              @include backdrop-hue-rotate-(270deg);
              @include utils_reset-tw;
            }

            @include expect {
              backdrop-filter: hue-rotate(270deg);
            }
          }
        }
      }
    }

    @include describe("Negative") {
      @include describe("Basic") {
        @include it("-backdrop-hue-rotate-0") {
          @include assert {
            @include output {
              @include \-backdrop-hue-rotate-0;
              @include utils_reset-tw;
            }

            @include expect {
              backdrop-filter: hue-rotate(-0deg);
            }
          }
        }

        @include it("-backdrop-hue-rotate-15") {
          @include assert {
            @include output {
              @include \-backdrop-hue-rotate-15;
              @include utils_reset-tw;
            }

            @include expect {
              backdrop-filter: hue-rotate(-15deg);
            }
          }
        }

        @include it("-backdrop-hue-rotate-30") {
          @include assert {
            @include output {
              @include \-backdrop-hue-rotate-30;
              @include utils_reset-tw;
            }

            @include expect {
              backdrop-filter: hue-rotate(-30deg);
            }
          }
        }

        @include it("-backdrop-hue-rotate-60") {
          @include assert {
            @include output {
              @include \-backdrop-hue-rotate-60;
              @include utils_reset-tw;
            }

            @include expect {
              backdrop-filter: hue-rotate(-60deg);
            }
          }
        }

        @include it("-backdrop-hue-rotate-90") {
          @include assert {
            @include output {
              @include \-backdrop-hue-rotate-90;
              @include utils_reset-tw;
            }

            @include expect {
              backdrop-filter: hue-rotate(-90deg);
            }
          }
        }

        @include it("-backdrop-hue-rotate-180") {
          @include assert {
            @include output {
              @include \-backdrop-hue-rotate-180;
              @include utils_reset-tw;
            }

            @include expect {
              backdrop-filter: hue-rotate(-180deg);
            }
          }
        }
      }

      @include describe("Custom") {
        @include it("-backdrop-hue-rotate-(270deg)") {
          @include assert {
            @include output {
              @include \-backdrop-hue-rotate-(270deg);
              @include utils_reset-tw;
            }

            @include expect {
              backdrop-filter: hue-rotate(-270deg);
            }
          }
        }
      }
    }
  }
}
