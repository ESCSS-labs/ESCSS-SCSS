@use "true" as *;
@use "../awaken" as *;

@include describe("Others") {
  @include describe("utils") {
    @include it("dark") {
      @include assert {
        @include output {
          @include dark {
            color: red;
          }

          @include utils_reset-tw;
        }

        @include expect {
          .dark & {
            color: red;
          }

          @media (prefers-color-scheme: dark) {
            color: red;
          }
        }
      }
    }

    @include it("sm") {
      @include assert {
        @include output {
          @include sm {
            color: red;
          }

          @include utils_reset-tw;
        }

        @include expect {
          @media (min-width: $SM) {
            color: red;
          }
        }
      }
    }

    @include it("md") {
      @include assert {
        @include output {
          @include md {
            color: red;
          }

          @include utils_reset-tw;
        }

        @include expect {
          @media (min-width: $MD) {
            color: red;
          }
        }
      }
    }

    @include it("lg") {
      @include assert {
        @include output {
          @include lg {
            color: red;
          }

          @include utils_reset-tw;
        }

        @include expect {
          @media (min-width: $LG) {
            color: red;
          }
        }
      }
    }

    @include it("xl") {
      @include assert {
        @include output {
          @include xl {
            color: red;
          }

          @include utils_reset-tw;
        }

        @include expect {
          @media (min-width: $XL) {
            color: red;
          }
        }
      }
    }

    @include it("2xl") {
      @include assert {
        @include output {
          @include \2xl {
            color: red;
          }

          @include utils_reset-tw;
        }

        @include expect {
          @media (min-width: $XXL) {
            color: red;
          }
        }
      }
    }

    @include it("max-sm") {
      @include assert {
        @include output {
          @include max-sm {
            color: red;
          }

          @include utils_reset-tw;
        }

        @include expect {
          @media not all and (min-width: $SM) {
            color: red;
          }
        }
      }
    }

    @include it("max-md") {
      @include assert {
        @include output {
          @include max-md {
            color: red;
          }

          @include utils_reset-tw;
        }

        @include expect {
          @media not all and (min-width: $MD) {
            color: red;
          }
        }
      }
    }

    @include it("max-lg") {
      @include assert {
        @include output {
          @include max-lg {
            color: red;
          }

          @include utils_reset-tw;
        }

        @include expect {
          @media not all and (min-width: $LG) {
            color: red;
          }
        }
      }
    }

    @include it("max-xl") {
      @include assert {
        @include output {
          @include max-xl {
            color: red;
          }

          @include utils_reset-tw;
        }

        @include expect {
          @media not all and (min-width: $XL) {
            color: red;
          }
        }
      }
    }

    @include it("max-2xl") {
      @include assert {
        @include output {
          @include max-2xl {
            color: red;
          }

          @include utils_reset-tw;
        }

        @include expect {
          @media not all and (min-width: $XXL) {
            color: red;
          }
        }
      }
    }

    @include it("utils_hover-gradient") {
      @include assert {
        @include output {
          @include bg-gradient-to-r;
          @include from-red-100;

          @include utils_hover-gradient {
            @include from-red-500;
          }

          @include utils_reset-tw;
        }

        @include expect {
          & {
            background-image: linear-gradient(to right, #fff, transparent);
            background-image: linear-gradient(to right, $red-100, transparent);
            position: relative;
          }

          &::before {
            content: "";
            position: absolute;
            inset: 0;
            opacity: 0;
            background-image: linear-gradient(to right, $red-500, transparent);
          }

          &:hover::before {
            opacity: 1;
            cursor: pointer;
          }
        }
      }
    }

    @include it("utils_reset-tw") {
      @include assert {
        @include output {
          @include utils_reset-tw;
        }

        @include expect {
        }
      }
    }
  }
}
