@use "true" as *;
@use "../style" as *;

@include describe("12-Transforms") {
  @include describe("4-Rotate") {
    @include describe("Positive") {
      @include describe("Hardware acceleration") {
        @include it("transform-none") {
          @include assert {
            @include output {
              @include transform-none;
            }

            @include expect {
              transform: none;
            }
          }
        }

        @include it("transform-cpu") {
          @include assert {
            @include output {
              @include transform-cpu;
            }

            @include expect {
              transform: var(--tw-rotate-x,) var(--tw-rotate-y,)
                var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
            }
          }
        }

        @include it("transform-gpu") {
          @include assert {
            @include output {
              @include transform-gpu;
            }

            @include expect {
              transform: translateZ(0) var(--tw-rotate-x,) var(--tw-rotate-y,)
                var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
            }
          }
        }
      }

      @include describe("Basic") {
        @include it("rotate-0") {
          @include assert {
            @include output {
              @include rotate-0;
            }

            @include expect {
              rotate: 0deg;
            }
          }
        }

        @include it("rotate-1") {
          @include assert {
            @include output {
              @include rotate-1;
            }

            @include expect {
              rotate: 1deg;
            }
          }
        }

        @include it("rotate-2") {
          @include assert {
            @include output {
              @include rotate-2;
            }

            @include expect {
              rotate: 2deg;
            }
          }
        }

        @include it("rotate-3") {
          @include assert {
            @include output {
              @include rotate-3;
            }

            @include expect {
              rotate: 3deg;
            }
          }
        }

        @include it("rotate-6") {
          @include assert {
            @include output {
              @include rotate-6;
            }

            @include expect {
              rotate: 6deg;
            }
          }
        }

        @include it("rotate-12") {
          @include assert {
            @include output {
              @include rotate-12;
            }

            @include expect {
              rotate: 12deg;
            }
          }
        }

        @include it("rotate-45") {
          @include assert {
            @include output {
              @include rotate-45;
            }

            @include expect {
              rotate: 45deg;
            }
          }
        }

        @include it("rotate-90") {
          @include assert {
            @include output {
              @include rotate-90;
            }

            @include expect {
              rotate: 90deg;
            }
          }
        }

        @include it("rotate-180") {
          @include assert {
            @include output {
              @include rotate-180;
            }

            @include expect {
              rotate: 180deg;
            }
          }
        }
      }

      @include describe("Custom") {
        @include it("rotate-(17deg)") {
          @include assert {
            @include output {
              @include rotate-(17deg);
            }

            @include expect {
              rotate: 17deg;
            }
          }
        }
      }
    }

    @include describe("Negative") {
      @include describe("Basic") {
        @include it("-rotate-0") {
          @include assert {
            @include output {
              @include \-rotate-0;
            }

            @include expect {
              rotate: 0deg;
            }
          }
        }

        @include it("-rotate-1") {
          @include assert {
            @include output {
              @include \-rotate-1;
            }

            @include expect {
              rotate: -1deg;
            }
          }
        }

        @include it("-rotate-2") {
          @include assert {
            @include output {
              @include \-rotate-2;
            }

            @include expect {
              rotate: -2deg;
            }
          }
        }

        @include it("-rotate-3") {
          @include assert {
            @include output {
              @include \-rotate-3;
            }

            @include expect {
              rotate: -3deg;
            }
          }
        }

        @include it("-rotate-6") {
          @include assert {
            @include output {
              @include \-rotate-6;
            }

            @include expect {
              rotate: -6deg;
            }
          }
        }

        @include it("-rotate-12") {
          @include assert {
            @include output {
              @include \-rotate-12;
            }

            @include expect {
              rotate: -12deg;
            }
          }
        }

        @include it("-rotate-45") {
          @include assert {
            @include output {
              @include \-rotate-45;
            }

            @include expect {
              rotate: -45deg;
            }
          }
        }

        @include it("-rotate-90") {
          @include assert {
            @include output {
              @include \-rotate-90;
            }

            @include expect {
              rotate: -90deg;
            }
          }
        }

        @include it("-rotate-180") {
          @include assert {
            @include output {
              @include \-rotate-180;
            }

            @include expect {
              rotate: -180deg;
            }
          }
        }
      }

      @include describe("Custom") {
        @include it("-rotate-(17deg)") {
          @include assert {
            @include output {
              @include \-rotate-(17deg);
            }

            @include expect {
              rotate: -17deg;
            }
          }
        }
      }
    }
  }
}
