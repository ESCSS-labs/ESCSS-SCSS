@use "true" as *;
@use "../style" as *;

@include describe("12-Transforms") {
  @include describe("1-Scale") {
    @include describe("Positive") {
      @include describe("Basic") {
        @include it("scale-0") {
          @include assert {
            @include output {
              @include scale-0;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(0) scaleY(0);
            }
          }
        }

        @include it("scale-x-0") {
          @include assert {
            @include output {
              @include scale-x-0;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(0) scaleY(1);
            }
          }
        }

        @include it("scale-y-0") {
          @include assert {
            @include output {
              @include scale-y-0;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1) scaleY(0);
            }
          }
        }

        @include it("scale-50") {
          @include assert {
            @include output {
              @include scale-50;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(0.5) scaleY(0.5);
            }
          }
        }

        @include it("scale-x-50") {
          @include assert {
            @include output {
              @include scale-x-50;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(0.5) scaleY(1);
            }
          }
        }

        @include it("scale-y-50") {
          @include assert {
            @include output {
              @include scale-y-50;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1) scaleY(0.5);
            }
          }
        }

        @include it("scale-75") {
          @include assert {
            @include output {
              @include scale-75;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(0.75) scaleY(0.75);
            }
          }
        }

        @include it("scale-x-75") {
          @include assert {
            @include output {
              @include scale-x-75;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(0.75) scaleY(1);
            }
          }
        }

        @include it("scale-y-75") {
          @include assert {
            @include output {
              @include scale-y-75;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1) scaleY(0.75);
            }
          }
        }

        @include it("scale-90") {
          @include assert {
            @include output {
              @include scale-90;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(0.9) scaleY(0.9);
            }
          }
        }

        @include it("scale-x-90") {
          @include assert {
            @include output {
              @include scale-x-90;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(0.9) scaleY(1);
            }
          }
        }

        @include it("scale-y-90") {
          @include assert {
            @include output {
              @include scale-y-90;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1) scaleY(0.9);
            }
          }
        }

        @include it("scale-95") {
          @include assert {
            @include output {
              @include scale-95;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(0.95) scaleY(0.95);
            }
          }
        }

        @include it("scale-x-95") {
          @include assert {
            @include output {
              @include scale-x-95;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(0.95) scaleY(1);
            }
          }
        }

        @include it("scale-y-95") {
          @include assert {
            @include output {
              @include scale-y-95;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1) scaleY(0.95);
            }
          }
        }

        @include it("scale-100") {
          @include assert {
            @include output {
              @include scale-100;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1) scaleY(1);
            }
          }
        }

        @include it("scale-x-100") {
          @include assert {
            @include output {
              @include scale-x-100;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1) scaleY(1);
            }
          }
        }

        @include it("scale-y-100") {
          @include assert {
            @include output {
              @include scale-y-100;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1) scaleY(1);
            }
          }
        }

        @include it("scale-105") {
          @include assert {
            @include output {
              @include scale-105;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1.05) scaleY(1.05);
            }
          }
        }

        @include it("scale-x-105") {
          @include assert {
            @include output {
              @include scale-x-105;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1.05) scaleY(1);
            }
          }
        }

        @include it("scale-y-105") {
          @include assert {
            @include output {
              @include scale-y-105;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1) scaleY(1.05);
            }
          }
        }

        @include it("scale-110") {
          @include assert {
            @include output {
              @include scale-110;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1.1) scaleY(1.1);
            }
          }
        }

        @include it("scale-x-110") {
          @include assert {
            @include output {
              @include scale-x-110;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1.1) scaleY(1);
            }
          }
        }

        @include it("scale-y-110") {
          @include assert {
            @include output {
              @include scale-y-110;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1) scaleY(1.1);
            }
          }
        }

        @include it("scale-125") {
          @include assert {
            @include output {
              @include scale-125;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1.25) scaleY(1.25);
            }
          }
        }

        @include it("scale-x-125") {
          @include assert {
            @include output {
              @include scale-x-125;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1.25) scaleY(1);
            }
          }
        }

        @include it("scale-y-125") {
          @include assert {
            @include output {
              @include scale-y-125;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1) scaleY(1.25);
            }
          }
        }

        @include it("scale-150") {
          @include assert {
            @include output {
              @include scale-150;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1.5) scaleY(1.5);
            }
          }
        }

        @include it("scale-x-150") {
          @include assert {
            @include output {
              @include scale-x-150;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1.5) scaleY(1);
            }
          }
        }

        @include it("scale-y-150") {
          @include assert {
            @include output {
              @include scale-y-150;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1) scaleY(1.5);
            }
          }
        }
      }

      @include describe("Custom") {
        @include it("scale-(1.7)") {
          @include assert {
            @include output {
              @include scale-(1.7);
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1.7) scaleY(1.7);
            }
          }
        }

        @include it("scale-x-(1.7)") {
          @include assert {
            @include output {
              @include scale-x-(1.7);
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1.7) scaleY(1);
            }
          }
        }

        @include it("scale-y-(1.7)") {
          @include assert {
            @include output {
              @include scale-y-(1.7);
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1) scaleY(1.7);
            }
          }
        }
      }
    }

    @include describe("Negative") {
      @include describe("Basic") {
        @include it("-scale-0") {
          @include assert {
            @include output {
              @include \-scale-0;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(0) scaleY(0);
            }
          }
        }

        @include it("-scale-x-0") {
          @include assert {
            @include output {
              @include \-scale-x-0;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(0) scaleY(1);
            }
          }
        }

        @include it("-scale-y-0") {
          @include assert {
            @include output {
              @include \-scale-y-0;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1) scaleY(0);
            }
          }
        }

        @include it("-scale-50") {
          @include assert {
            @include output {
              @include \-scale-50;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(-0.5) scaleY(-0.5);
            }
          }
        }

        @include it("-scale-x-50") {
          @include assert {
            @include output {
              @include \-scale-x-50;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(-0.5) scaleY(1);
            }
          }
        }

        @include it("-scale-y-50") {
          @include assert {
            @include output {
              @include \-scale-y-50;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1) scaleY(-0.5);
            }
          }
        }

        @include it("-scale-75") {
          @include assert {
            @include output {
              @include \-scale-75;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(-0.75) scaleY(-0.75);
            }
          }
        }

        @include it("-scale-x-75") {
          @include assert {
            @include output {
              @include \-scale-x-75;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(-0.75) scaleY(1);
            }
          }
        }

        @include it("-scale-y-75") {
          @include assert {
            @include output {
              @include \-scale-y-75;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1) scaleY(-0.75);
            }
          }
        }

        @include it("-scale-90") {
          @include assert {
            @include output {
              @include \-scale-90;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(-0.9) scaleY(-0.9);
            }
          }
        }

        @include it("-scale-x-90") {
          @include assert {
            @include output {
              @include \-scale-x-90;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(-0.9) scaleY(1);
            }
          }
        }

        @include it("-scale-y-90") {
          @include assert {
            @include output {
              @include \-scale-y-90;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1) scaleY(-0.9);
            }
          }
        }

        @include it("-scale-95") {
          @include assert {
            @include output {
              @include \-scale-95;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(-0.95) scaleY(-0.95);
            }
          }
        }

        @include it("-scale-x-95") {
          @include assert {
            @include output {
              @include \-scale-x-95;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(-0.95) scaleY(1);
            }
          }
        }

        @include it("-scale-y-95") {
          @include assert {
            @include output {
              @include \-scale-y-95;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1) scaleY(-0.95);
            }
          }
        }

        @include it("-scale-100") {
          @include assert {
            @include output {
              @include \-scale-100;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(-1) scaleY(-1);
            }
          }
        }

        @include it("-scale-x-100") {
          @include assert {
            @include output {
              @include \-scale-x-100;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(-1) scaleY(1);
            }
          }
        }

        @include it("-scale-y-100") {
          @include assert {
            @include output {
              @include \-scale-y-100;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1) scaleY(-1);
            }
          }
        }

        @include it("-scale-105") {
          @include assert {
            @include output {
              @include \-scale-105;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(-1.05) scaleY(-1.05);
            }
          }
        }

        @include it("-scale-x-105") {
          @include assert {
            @include output {
              @include \-scale-x-105;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(-1.05) scaleY(1);
            }
          }
        }

        @include it("-scale-y-105") {
          @include assert {
            @include output {
              @include \-scale-y-105;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1) scaleY(-1.05);
            }
          }
        }

        @include it("-scale-110") {
          @include assert {
            @include output {
              @include \-scale-110;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(-1.1) scaleY(-1.1);
            }
          }
        }

        @include it("-scale-x-110") {
          @include assert {
            @include output {
              @include \-scale-x-110;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(-1.1) scaleY(1);
            }
          }
        }

        @include it("-scale-y-110") {
          @include assert {
            @include output {
              @include \-scale-y-110;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1) scaleY(-1.1);
            }
          }
        }

        @include it("-scale-125") {
          @include assert {
            @include output {
              @include \-scale-125;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(-1.25) scaleY(-1.25);
            }
          }
        }

        @include it("-scale-x-125") {
          @include assert {
            @include output {
              @include \-scale-x-125;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(-1.25) scaleY(1);
            }
          }
        }

        @include it("-scale-y-125") {
          @include assert {
            @include output {
              @include \-scale-y-125;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1) scaleY(-1.25);
            }
          }
        }

        @include it("-scale-150") {
          @include assert {
            @include output {
              @include \-scale-150;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(-1.5) scaleY(-1.5);
            }
          }
        }

        @include it("-scale-x-150") {
          @include assert {
            @include output {
              @include \-scale-x-150;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(-1.5) scaleY(1);
            }
          }
        }

        @include it("-scale-y-150") {
          @include assert {
            @include output {
              @include \-scale-y-150;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1) scaleY(-1.5);
            }
          }
        }
      }

      @include describe("Custom") {
        @include it("-scale-(1.7)") {
          @include assert {
            @include output {
              @include \-scale-(1.7);
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(-1.7) scaleY(-1.7);
            }
          }
        }

        @include it("-scale-x-(1.7)") {
          @include assert {
            @include output {
              @include \-scale-x-(1.7);
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(-1.7) scaleY(1);
            }
          }
        }

        @include it("-scale-y-(1.7)") {
          @include assert {
            @include output {
              @include \-scale-y-(1.7);
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1) scaleY(-1.7);
            }
          }
        }
      }
    }
  }
}
