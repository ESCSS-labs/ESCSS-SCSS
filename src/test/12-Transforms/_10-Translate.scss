@use "true" as *;
@use "../style" as *;

@include describe("12-Transforms") {
  @include describe("3-Translate") {
    @include describe("Positive") {
      @include describe("Basic") {
        @include it("translate-x-0") {
          @include assert {
            @include output {
              @include translate-x-0;
            }

            @include expect {
              transform: translate(0px, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-y-0") {
          @include assert {
            @include output {
              @include translate-y-0;
            }

            @include expect {
              transform: translate(0, 0px) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-x-px") {
          @include assert {
            @include output {
              @include translate-x-px;
            }

            @include expect {
              transform: translate(1px, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-y-px") {
          @include assert {
            @include output {
              @include translate-y-px;
            }

            @include expect {
              transform: translate(0, 1px) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-x-0\.5") {
          @include assert {
            @include output {
              @include translate-x-0\.5;
            }

            @include expect {
              transform: translate(0.125rem, 0) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-y-0\.5") {
          @include assert {
            @include output {
              @include translate-y-0\.5;
            }

            @include expect {
              transform: translate(0, 0.125rem) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-x-1") {
          @include assert {
            @include output {
              @include translate-x-1;
            }

            @include expect {
              transform: translate(0.25rem, 0) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-y-1") {
          @include assert {
            @include output {
              @include translate-y-1;
            }

            @include expect {
              transform: translate(0, 0.25rem) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-x-1\.5") {
          @include assert {
            @include output {
              @include translate-x-1\.5;
            }

            @include expect {
              transform: translate(0.375rem, 0) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-y-1\.5") {
          @include assert {
            @include output {
              @include translate-y-1\.5;
            }

            @include expect {
              transform: translate(0, 0.375rem) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-x-2") {
          @include assert {
            @include output {
              @include translate-x-2;
            }

            @include expect {
              transform: translate(0.5rem, 0) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-y-2") {
          @include assert {
            @include output {
              @include translate-y-2;
            }

            @include expect {
              transform: translate(0, 0.5rem) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-x-2\.5") {
          @include assert {
            @include output {
              @include translate-x-2\.5;
            }

            @include expect {
              transform: translate(0.625rem, 0) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-y-2\.5") {
          @include assert {
            @include output {
              @include translate-y-2\.5;
            }

            @include expect {
              transform: translate(0, 0.625rem) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-x-3") {
          @include assert {
            @include output {
              @include translate-x-3;
            }

            @include expect {
              transform: translate(0.75rem, 0) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-y-3") {
          @include assert {
            @include output {
              @include translate-y-3;
            }

            @include expect {
              transform: translate(0, 0.75rem) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-x-3\.5") {
          @include assert {
            @include output {
              @include translate-x-3\.5;
            }

            @include expect {
              transform: translate(0.875rem, 0) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-y-3\.5") {
          @include assert {
            @include output {
              @include translate-y-3\.5;
            }

            @include expect {
              transform: translate(0, 0.875rem) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-x-4") {
          @include assert {
            @include output {
              @include translate-x-4;
            }

            @include expect {
              transform: translate(1rem, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-y-4") {
          @include assert {
            @include output {
              @include translate-y-4;
            }

            @include expect {
              transform: translate(0, 1rem) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-x-5") {
          @include assert {
            @include output {
              @include translate-x-5;
            }

            @include expect {
              transform: translate(1.25rem, 0) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-y-5") {
          @include assert {
            @include output {
              @include translate-y-5;
            }

            @include expect {
              transform: translate(0, 1.25rem) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-x-6") {
          @include assert {
            @include output {
              @include translate-x-6;
            }

            @include expect {
              transform: translate(1.5rem, 0) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-y-6") {
          @include assert {
            @include output {
              @include translate-y-6;
            }

            @include expect {
              transform: translate(0, 1.5rem) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-x-7") {
          @include assert {
            @include output {
              @include translate-x-7;
            }

            @include expect {
              transform: translate(1.75rem, 0) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-y-7") {
          @include assert {
            @include output {
              @include translate-y-7;
            }

            @include expect {
              transform: translate(0, 1.75rem) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-x-8") {
          @include assert {
            @include output {
              @include translate-x-8;
            }

            @include expect {
              transform: translate(2rem, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-y-8") {
          @include assert {
            @include output {
              @include translate-y-8;
            }

            @include expect {
              transform: translate(0, 2rem) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-x-9") {
          @include assert {
            @include output {
              @include translate-x-9;
            }

            @include expect {
              transform: translate(2.25rem, 0) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-y-9") {
          @include assert {
            @include output {
              @include translate-y-9;
            }

            @include expect {
              transform: translate(0, 2.25rem) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-x-10") {
          @include assert {
            @include output {
              @include translate-x-10;
            }

            @include expect {
              transform: translate(2.5rem, 0) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-y-10") {
          @include assert {
            @include output {
              @include translate-y-10;
            }

            @include expect {
              transform: translate(0, 2.5rem) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-x-11") {
          @include assert {
            @include output {
              @include translate-x-11;
            }

            @include expect {
              transform: translate(2.75rem, 0) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-y-11") {
          @include assert {
            @include output {
              @include translate-y-11;
            }

            @include expect {
              transform: translate(0, 2.75rem) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-x-12") {
          @include assert {
            @include output {
              @include translate-x-12;
            }

            @include expect {
              transform: translate(3rem, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-y-12") {
          @include assert {
            @include output {
              @include translate-y-12;
            }

            @include expect {
              transform: translate(0, 3rem) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-x-14") {
          @include assert {
            @include output {
              @include translate-x-14;
            }

            @include expect {
              transform: translate(3.5rem, 0) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-y-14") {
          @include assert {
            @include output {
              @include translate-y-14;
            }

            @include expect {
              transform: translate(0, 3.5rem) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-x-16") {
          @include assert {
            @include output {
              @include translate-x-16;
            }

            @include expect {
              transform: translate(4rem, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-y-16") {
          @include assert {
            @include output {
              @include translate-y-16;
            }

            @include expect {
              transform: translate(0, 4rem) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-x-20") {
          @include assert {
            @include output {
              @include translate-x-20;
            }

            @include expect {
              transform: translate(5rem, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-y-20") {
          @include assert {
            @include output {
              @include translate-y-20;
            }

            @include expect {
              transform: translate(0, 5rem) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-x-24") {
          @include assert {
            @include output {
              @include translate-x-24;
            }

            @include expect {
              transform: translate(6rem, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-y-24") {
          @include assert {
            @include output {
              @include translate-y-24;
            }

            @include expect {
              transform: translate(0, 6rem) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-x-28") {
          @include assert {
            @include output {
              @include translate-x-28;
            }

            @include expect {
              transform: translate(7rem, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-y-28") {
          @include assert {
            @include output {
              @include translate-y-28;
            }

            @include expect {
              transform: translate(0, 7rem) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-x-32") {
          @include assert {
            @include output {
              @include translate-x-32;
            }

            @include expect {
              transform: translate(8rem, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-y-32") {
          @include assert {
            @include output {
              @include translate-y-32;
            }

            @include expect {
              transform: translate(0, 8rem) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-x-36") {
          @include assert {
            @include output {
              @include translate-x-36;
            }

            @include expect {
              transform: translate(9rem, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-y-36") {
          @include assert {
            @include output {
              @include translate-y-36;
            }

            @include expect {
              transform: translate(0, 9rem) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-x-40") {
          @include assert {
            @include output {
              @include translate-x-40;
            }

            @include expect {
              transform: translate(10rem, 0) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-y-40") {
          @include assert {
            @include output {
              @include translate-y-40;
            }

            @include expect {
              transform: translate(0, 10rem) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-x-44") {
          @include assert {
            @include output {
              @include translate-x-44;
            }

            @include expect {
              transform: translate(11rem, 0) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-y-44") {
          @include assert {
            @include output {
              @include translate-y-44;
            }

            @include expect {
              transform: translate(0, 11rem) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-x-48") {
          @include assert {
            @include output {
              @include translate-x-48;
            }

            @include expect {
              transform: translate(12rem, 0) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-y-48") {
          @include assert {
            @include output {
              @include translate-y-48;
            }

            @include expect {
              transform: translate(0, 12rem) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-x-52") {
          @include assert {
            @include output {
              @include translate-x-52;
            }

            @include expect {
              transform: translate(13rem, 0) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-y-52") {
          @include assert {
            @include output {
              @include translate-y-52;
            }

            @include expect {
              transform: translate(0, 13rem) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-x-56") {
          @include assert {
            @include output {
              @include translate-x-56;
            }

            @include expect {
              transform: translate(14rem, 0) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-y-56") {
          @include assert {
            @include output {
              @include translate-y-56;
            }

            @include expect {
              transform: translate(0, 14rem) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-x-60") {
          @include assert {
            @include output {
              @include translate-x-60;
            }

            @include expect {
              transform: translate(15rem, 0) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-y-60") {
          @include assert {
            @include output {
              @include translate-y-60;
            }

            @include expect {
              transform: translate(0, 15rem) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-x-64") {
          @include assert {
            @include output {
              @include translate-x-64;
            }

            @include expect {
              transform: translate(16rem, 0) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-y-64") {
          @include assert {
            @include output {
              @include translate-y-64;
            }

            @include expect {
              transform: translate(0, 16rem) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-x-72") {
          @include assert {
            @include output {
              @include translate-x-72;
            }

            @include expect {
              transform: translate(18rem, 0) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-y-72") {
          @include assert {
            @include output {
              @include translate-y-72;
            }

            @include expect {
              transform: translate(0, 18rem) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-x-80") {
          @include assert {
            @include output {
              @include translate-x-80;
            }

            @include expect {
              transform: translate(20rem, 0) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-y-80") {
          @include assert {
            @include output {
              @include translate-y-80;
            }

            @include expect {
              transform: translate(0, 20rem) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-x-96") {
          @include assert {
            @include output {
              @include translate-x-96;
            }

            @include expect {
              transform: translate(24rem, 0) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-y-96") {
          @include assert {
            @include output {
              @include translate-y-96;
            }

            @include expect {
              transform: translate(0, 24rem) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-x-1\/2") {
          @include assert {
            @include output {
              @include translate-x-1\/2;
            }

            @include expect {
              transform: translate(50%, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-x-1\/3") {
          @include assert {
            @include output {
              @include translate-x-1\/3;
            }

            @include expect {
              transform: translate(33.333333%, 0) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-x-2\/3") {
          @include assert {
            @include output {
              @include translate-x-2\/3;
            }

            @include expect {
              transform: translate(66.666667%, 0) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-x-1\/4") {
          @include assert {
            @include output {
              @include translate-x-1\/4;
            }

            @include expect {
              transform: translate(25%, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-x-2\/4") {
          @include assert {
            @include output {
              @include translate-x-2\/4;
            }

            @include expect {
              transform: translate(50%, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-x-3\/4") {
          @include assert {
            @include output {
              @include translate-x-3\/4;
            }

            @include expect {
              transform: translate(75%, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-x-full") {
          @include assert {
            @include output {
              @include translate-x-full;
            }

            @include expect {
              transform: translate(100%, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-y-1\/2") {
          @include assert {
            @include output {
              @include translate-y-1\/2;
            }

            @include expect {
              transform: translate(0, 50%) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-y-1\/3") {
          @include assert {
            @include output {
              @include translate-y-1\/3;
            }

            @include expect {
              transform: translate(0, 33.333333%) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-y-2\/3") {
          @include assert {
            @include output {
              @include translate-y-2\/3;
            }

            @include expect {
              transform: translate(0, 66.666667%) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-y-1\/4") {
          @include assert {
            @include output {
              @include translate-y-1\/4;
            }

            @include expect {
              transform: translate(0, 25%) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-y-2\/4") {
          @include assert {
            @include output {
              @include translate-y-2\/4;
            }

            @include expect {
              transform: translate(0, 50%) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-y-3\/4") {
          @include assert {
            @include output {
              @include translate-y-3\/4;
            }

            @include expect {
              transform: translate(0, 75%) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1) scaleY(1);
            }
          }
        }

        @include it("translate-y-full") {
          @include assert {
            @include output {
              @include translate-y-full;
            }

            @include expect {
              transform: translate(0, 100%) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1) scaleY(1);
            }
          }
        }
      }

      @include it("translate-x-(17rem)") {
        @include assert {
          @include output {
            @include translate-x-(17rem);
          }

          @include expect {
            transform: translate(17rem, 0) rotate(0deg) skewX(0deg) skewY(0deg)
              scaleX(1) scaleY(1);
          }
        }
      }

      @include it("translate-y-(17rem)") {
        @include assert {
          @include output {
            @include translate-y-(17rem);
          }

          @include expect {
            transform: translate(0, 17rem) rotate(0deg) skewX(0deg) skewY(0deg)
              scaleX(1) scaleY(1);
          }
        }
      }
    }

    @include describe("Negative") {
      @include describe("Basic") {
        @include it("-translate-x-0") {
          @include assert {
            @include output {
              @include \-translate-x-0;
            }

            @include expect {
              transform: translate(-0px, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-y-0") {
          @include assert {
            @include output {
              @include \-translate-y-0;
            }

            @include expect {
              transform: translate(0, -0px) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-x-px") {
          @include assert {
            @include output {
              @include \-translate-x-px;
            }

            @include expect {
              transform: translate(-1px, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-y-px") {
          @include assert {
            @include output {
              @include \-translate-y-px;
            }

            @include expect {
              transform: translate(0, -1px) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-x-0\.5") {
          @include assert {
            @include output {
              @include \-translate-x-0\.5;
            }

            @include expect {
              transform: translate(-0.125rem, 0) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-y-0\.5") {
          @include assert {
            @include output {
              @include \-translate-y-0\.5;
            }

            @include expect {
              transform: translate(0, -0.125rem) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-x-1") {
          @include assert {
            @include output {
              @include \-translate-x-1;
            }

            @include expect {
              transform: translate(-0.25rem, 0) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-y-1") {
          @include assert {
            @include output {
              @include \-translate-y-1;
            }

            @include expect {
              transform: translate(0, -0.25rem) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-x-1\.5") {
          @include assert {
            @include output {
              @include \-translate-x-1\.5;
            }

            @include expect {
              transform: translate(-0.375rem, 0) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-y-1\.5") {
          @include assert {
            @include output {
              @include \-translate-y-1\.5;
            }

            @include expect {
              transform: translate(0, -0.375rem) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-x-2") {
          @include assert {
            @include output {
              @include \-translate-x-2;
            }

            @include expect {
              transform: translate(-0.5rem, 0) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-y-2") {
          @include assert {
            @include output {
              @include \-translate-y-2;
            }

            @include expect {
              transform: translate(0, -0.5rem) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-x-2\.5") {
          @include assert {
            @include output {
              @include \-translate-x-2\.5;
            }

            @include expect {
              transform: translate(-0.625rem, 0) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-y-2\.5") {
          @include assert {
            @include output {
              @include \-translate-y-2\.5;
            }

            @include expect {
              transform: translate(0, -0.625rem) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-x-3") {
          @include assert {
            @include output {
              @include \-translate-x-3;
            }

            @include expect {
              transform: translate(-0.75rem, 0) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-y-3") {
          @include assert {
            @include output {
              @include \-translate-y-3;
            }

            @include expect {
              transform: translate(0, -0.75rem) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-x-3\.5") {
          @include assert {
            @include output {
              @include \-translate-x-3\.5;
            }

            @include expect {
              transform: translate(-0.875rem, 0) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-y-3\.5") {
          @include assert {
            @include output {
              @include \-translate-y-3\.5;
            }

            @include expect {
              transform: translate(0, -0.875rem) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-x-4") {
          @include assert {
            @include output {
              @include \-translate-x-4;
            }

            @include expect {
              transform: translate(-1rem, 0) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-y-4") {
          @include assert {
            @include output {
              @include \-translate-y-4;
            }

            @include expect {
              transform: translate(0, -1rem) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-x-5") {
          @include assert {
            @include output {
              @include \-translate-x-5;
            }

            @include expect {
              transform: translate(-1.25rem, 0) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-y-5") {
          @include assert {
            @include output {
              @include \-translate-y-5;
            }

            @include expect {
              transform: translate(0, -1.25rem) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-x-6") {
          @include assert {
            @include output {
              @include \-translate-x-6;
            }

            @include expect {
              transform: translate(-1.5rem, 0) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-y-6") {
          @include assert {
            @include output {
              @include \-translate-y-6;
            }

            @include expect {
              transform: translate(0, -1.5rem) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-x-7") {
          @include assert {
            @include output {
              @include \-translate-x-7;
            }

            @include expect {
              transform: translate(-1.75rem, 0) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-y-7") {
          @include assert {
            @include output {
              @include \-translate-y-7;
            }

            @include expect {
              transform: translate(0, -1.75rem) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-x-8") {
          @include assert {
            @include output {
              @include \-translate-x-8;
            }

            @include expect {
              transform: translate(-2rem, 0) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-y-8") {
          @include assert {
            @include output {
              @include \-translate-y-8;
            }

            @include expect {
              transform: translate(0, -2rem) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-x-9") {
          @include assert {
            @include output {
              @include \-translate-x-9;
            }

            @include expect {
              transform: translate(-2.25rem, 0) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-y-9") {
          @include assert {
            @include output {
              @include \-translate-y-9;
            }

            @include expect {
              transform: translate(0, -2.25rem) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-x-10") {
          @include assert {
            @include output {
              @include \-translate-x-10;
            }

            @include expect {
              transform: translate(-2.5rem, 0) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-y-10") {
          @include assert {
            @include output {
              @include \-translate-y-10;
            }

            @include expect {
              transform: translate(0, -2.5rem) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-x-11") {
          @include assert {
            @include output {
              @include \-translate-x-11;
            }

            @include expect {
              transform: translate(-2.75rem, 0) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-y-11") {
          @include assert {
            @include output {
              @include \-translate-y-11;
            }

            @include expect {
              transform: translate(0, -2.75rem) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-x-12") {
          @include assert {
            @include output {
              @include \-translate-x-12;
            }

            @include expect {
              transform: translate(-3rem, 0) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-y-12") {
          @include assert {
            @include output {
              @include \-translate-y-12;
            }

            @include expect {
              transform: translate(0, -3rem) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-x-14") {
          @include assert {
            @include output {
              @include \-translate-x-14;
            }

            @include expect {
              transform: translate(-3.5rem, 0) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-y-14") {
          @include assert {
            @include output {
              @include \-translate-y-14;
            }

            @include expect {
              transform: translate(0, -3.5rem) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-x-16") {
          @include assert {
            @include output {
              @include \-translate-x-16;
            }

            @include expect {
              transform: translate(-4rem, 0) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-y-16") {
          @include assert {
            @include output {
              @include \-translate-y-16;
            }

            @include expect {
              transform: translate(0, -4rem) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-x-20") {
          @include assert {
            @include output {
              @include \-translate-x-20;
            }

            @include expect {
              transform: translate(-5rem, 0) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-y-20") {
          @include assert {
            @include output {
              @include \-translate-y-20;
            }

            @include expect {
              transform: translate(0, -5rem) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-x-24") {
          @include assert {
            @include output {
              @include \-translate-x-24;
            }

            @include expect {
              transform: translate(-6rem, 0) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-y-24") {
          @include assert {
            @include output {
              @include \-translate-y-24;
            }

            @include expect {
              transform: translate(0, -6rem) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-x-28") {
          @include assert {
            @include output {
              @include \-translate-x-28;
            }

            @include expect {
              transform: translate(-7rem, 0) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-y-28") {
          @include assert {
            @include output {
              @include \-translate-y-28;
            }

            @include expect {
              transform: translate(0, -7rem) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-x-32") {
          @include assert {
            @include output {
              @include \-translate-x-32;
            }

            @include expect {
              transform: translate(-8rem, 0) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-y-32") {
          @include assert {
            @include output {
              @include \-translate-y-32;
            }

            @include expect {
              transform: translate(0, -8rem) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-x-36") {
          @include assert {
            @include output {
              @include \-translate-x-36;
            }

            @include expect {
              transform: translate(-9rem, 0) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-y-36") {
          @include assert {
            @include output {
              @include \-translate-y-36;
            }

            @include expect {
              transform: translate(0, -9rem) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-x-40") {
          @include assert {
            @include output {
              @include \-translate-x-40;
            }

            @include expect {
              transform: translate(-10rem, 0) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-y-40") {
          @include assert {
            @include output {
              @include \-translate-y-40;
            }

            @include expect {
              transform: translate(0, -10rem) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-x-44") {
          @include assert {
            @include output {
              @include \-translate-x-44;
            }

            @include expect {
              transform: translate(-11rem, 0) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-y-44") {
          @include assert {
            @include output {
              @include \-translate-y-44;
            }

            @include expect {
              transform: translate(0, -11rem) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-x-48") {
          @include assert {
            @include output {
              @include \-translate-x-48;
            }

            @include expect {
              transform: translate(-12rem, 0) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-y-48") {
          @include assert {
            @include output {
              @include \-translate-y-48;
            }

            @include expect {
              transform: translate(0, -12rem) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-x-52") {
          @include assert {
            @include output {
              @include \-translate-x-52;
            }

            @include expect {
              transform: translate(-13rem, 0) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-y-52") {
          @include assert {
            @include output {
              @include \-translate-y-52;
            }

            @include expect {
              transform: translate(0, -13rem) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-x-56") {
          @include assert {
            @include output {
              @include \-translate-x-56;
            }

            @include expect {
              transform: translate(-14rem, 0) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-y-56") {
          @include assert {
            @include output {
              @include \-translate-y-56;
            }

            @include expect {
              transform: translate(0, -14rem) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-x-60") {
          @include assert {
            @include output {
              @include \-translate-x-60;
            }

            @include expect {
              transform: translate(-15rem, 0) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-y-60") {
          @include assert {
            @include output {
              @include \-translate-y-60;
            }

            @include expect {
              transform: translate(0, -15rem) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-x-64") {
          @include assert {
            @include output {
              @include \-translate-x-64;
            }

            @include expect {
              transform: translate(-16rem, 0) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-y-64") {
          @include assert {
            @include output {
              @include \-translate-y-64;
            }

            @include expect {
              transform: translate(0, -16rem) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-x-72") {
          @include assert {
            @include output {
              @include \-translate-x-72;
            }

            @include expect {
              transform: translate(-18rem, 0) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-y-72") {
          @include assert {
            @include output {
              @include \-translate-y-72;
            }

            @include expect {
              transform: translate(0, -18rem) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-x-80") {
          @include assert {
            @include output {
              @include \-translate-x-80;
            }

            @include expect {
              transform: translate(-20rem, 0) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-y-80") {
          @include assert {
            @include output {
              @include \-translate-y-80;
            }

            @include expect {
              transform: translate(0, -20rem) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-x-96") {
          @include assert {
            @include output {
              @include \-translate-x-96;
            }

            @include expect {
              transform: translate(-24rem, 0) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-y-96") {
          @include assert {
            @include output {
              @include \-translate-y-96;
            }

            @include expect {
              transform: translate(0, -24rem) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-x-1\/2") {
          @include assert {
            @include output {
              @include \-translate-x-1\/2;
            }

            @include expect {
              transform: translate(-50%, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-x-1\/3") {
          @include assert {
            @include output {
              @include \-translate-x-1\/3;
            }

            @include expect {
              transform: translate(-33.333333%, 0) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-x-2\/3") {
          @include assert {
            @include output {
              @include \-translate-x-2\/3;
            }

            @include expect {
              transform: translate(-66.666667%, 0) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-x-1\/4") {
          @include assert {
            @include output {
              @include \-translate-x-1\/4;
            }

            @include expect {
              transform: translate(-25%, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-x-2\/4") {
          @include assert {
            @include output {
              @include \-translate-x-2\/4;
            }

            @include expect {
              transform: translate(-50%, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-x-3\/4") {
          @include assert {
            @include output {
              @include \-translate-x-3\/4;
            }

            @include expect {
              transform: translate(-75%, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-x-full") {
          @include assert {
            @include output {
              @include \-translate-x-full;
            }

            @include expect {
              transform: translate(-100%, 0) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-y-1\/2") {
          @include assert {
            @include output {
              @include \-translate-y-1\/2;
            }

            @include expect {
              transform: translate(0, -50%) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-y-1\/3") {
          @include assert {
            @include output {
              @include \-translate-y-1\/3;
            }

            @include expect {
              transform: translate(0, -33.333333%) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-y-2\/3") {
          @include assert {
            @include output {
              @include \-translate-y-2\/3;
            }

            @include expect {
              transform: translate(0, -66.666667%) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-y-1\/4") {
          @include assert {
            @include output {
              @include \-translate-y-1\/4;
            }

            @include expect {
              transform: translate(0, -25%) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-y-2\/4") {
          @include assert {
            @include output {
              @include \-translate-y-2\/4;
            }

            @include expect {
              transform: translate(0, -50%) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-y-3\/4") {
          @include assert {
            @include output {
              @include \-translate-y-3\/4;
            }

            @include expect {
              transform: translate(0, -75%) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-y-full") {
          @include assert {
            @include output {
              @include \-translate-y-full;
            }

            @include expect {
              transform: translate(0, -100%) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }
      }

      @include describe("Custom") {
        @include it("-translate-x-(17rem)") {
          @include assert {
            @include output {
              @include \-translate-x-(17rem);
            }

            @include expect {
              transform: translate(-17rem, 0) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-translate-y-(17rem)") {
          @include assert {
            @include output {
              @include \-translate-y-(17rem);
            }

            @include expect {
              transform: translate(0, -17rem) rotate(0deg) skewX(0deg)
                skewY(0deg) scaleX(1) scaleY(1);
            }
          }
        }
      }
    }
  }
}
