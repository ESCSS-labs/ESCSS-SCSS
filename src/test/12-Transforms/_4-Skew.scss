@use "true" as *;
@use "../awaken" as *;

@include describe("12-Transforms") {
  @include describe("4-Skew") {
    @include describe("Positive") {
      @include describe("Basic") {
        @include it("skew-x-0") {
          @include assert {
            @include output {
              @include skew-x-0;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1) scaleY(1);
            }
          }
        }

        @include it("skew-y-0") {
          @include assert {
            @include output {
              @include skew-y-0;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1) scaleY(1);
            }
          }
        }

        @include it("skew-x-1") {
          @include assert {
            @include output {
              @include skew-x-1;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(1deg) skewY(0deg)
                scaleX(1) scaleY(1);
            }
          }
        }

        @include it("skew-y-1") {
          @include assert {
            @include output {
              @include skew-y-1;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(1deg)
                scaleX(1) scaleY(1);
            }
          }
        }

        @include it("skew-x-2") {
          @include assert {
            @include output {
              @include skew-x-2;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(2deg) skewY(0deg)
                scaleX(1) scaleY(1);
            }
          }
        }

        @include it("skew-y-2") {
          @include assert {
            @include output {
              @include skew-y-2;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(2deg)
                scaleX(1) scaleY(1);
            }
          }
        }

        @include it("skew-x-3") {
          @include assert {
            @include output {
              @include skew-x-3;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(3deg) skewY(0deg)
                scaleX(1) scaleY(1);
            }
          }
        }

        @include it("skew-y-3") {
          @include assert {
            @include output {
              @include skew-y-3;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(3deg)
                scaleX(1) scaleY(1);
            }
          }
        }

        @include it("skew-x-6") {
          @include assert {
            @include output {
              @include skew-x-6;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(6deg) skewY(0deg)
                scaleX(1) scaleY(1);
            }
          }
        }

        @include it("skew-y-6") {
          @include assert {
            @include output {
              @include skew-y-6;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(6deg)
                scaleX(1) scaleY(1);
            }
          }
        }

        @include it("skew-x-12") {
          @include assert {
            @include output {
              @include skew-x-12;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(12deg) skewY(0deg)
                scaleX(1) scaleY(1);
            }
          }
        }

        @include it("skew-y-12") {
          @include assert {
            @include output {
              @include skew-y-12;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(12deg)
                scaleX(1) scaleY(1);
            }
          }
        }
      }

      @include describe("Custom") {
        @include it("skew-x-(17deg)") {
          @include assert {
            @include output {
              @include skew-x-(17deg);
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(17deg) skewY(0deg)
                scaleX(1) scaleY(1);
            }
          }
        }

        @include it("skew-y-(17deg)") {
          @include assert {
            @include output {
              @include skew-y-(17deg);
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(17deg)
                scaleX(1) scaleY(1);
            }
          }
        }
      }
    }

    @include describe("Negative") {
      @include describe("Basic") {
        @include it("-skew-x-0") {
          @include assert {
            @include output {
              @include \-skew-x-0;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-skew-y-0") {
          @include assert {
            @include output {
              @include \-skew-y-0;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(0deg)
                scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-skew-x-1") {
          @include assert {
            @include output {
              @include \-skew-x-1;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(-1deg) skewY(0deg)
                scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-skew-y-1") {
          @include assert {
            @include output {
              @include \-skew-y-1;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(-1deg)
                scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-skew-x-2") {
          @include assert {
            @include output {
              @include \-skew-x-2;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(-2deg) skewY(0deg)
                scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-skew-y-2") {
          @include assert {
            @include output {
              @include \-skew-y-2;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(-2deg)
                scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-skew-x-3") {
          @include assert {
            @include output {
              @include \-skew-x-3;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(-3deg) skewY(0deg)
                scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-skew-y-3") {
          @include assert {
            @include output {
              @include \-skew-y-3;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(-3deg)
                scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-skew-x-6") {
          @include assert {
            @include output {
              @include \-skew-x-6;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(-6deg) skewY(0deg)
                scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-skew-y-6") {
          @include assert {
            @include output {
              @include \-skew-y-6;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(-6deg)
                scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-skew-x-12") {
          @include assert {
            @include output {
              @include \-skew-x-12;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(-12deg) skewY(0deg)
                scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-skew-y-12") {
          @include assert {
            @include output {
              @include \-skew-y-12;
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(-12deg)
                scaleX(1) scaleY(1);
            }
          }
        }
      }

      @include describe("Custom") {
        @include it("-skew-x-(17deg)") {
          @include assert {
            @include output {
              @include \-skew-x-(17deg);
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(-17deg) skewY(0deg)
                scaleX(1) scaleY(1);
            }
          }
        }

        @include it("-skew-y-(17deg)") {
          @include assert {
            @include output {
              @include \-skew-y-(17deg);
            }

            @include expect {
              transform: translate(0, 0) rotate(0deg) skewX(0deg) skewY(-17deg)
                scaleX(1) scaleY(1);
            }
          }
        }
      }
    }
  }
}
