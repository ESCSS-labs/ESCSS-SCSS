@use "sass:color";
@use "true" as *;
@use "../awaken" as *;

@include describe("6-Backgrounds") {
  @include describe("9-Gradient Color Stops") {
    @include describe("Basic") {
      @include describe("group-from") {
        @include it("from-inherit") {
          @include assert {
            @include output {
              @include from-inherit;
              @include utils_reset;
            }

            @include expect {
              background-image: inherit !important;
            }
          }
        }

        @include it("from-current") {
          @include assert {
            @include output {
              @include from-current;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, currentColor, transparent);
            }
          }
        }

        @include it("from-transparent") {
          @include assert {
            @include output {
              @include from-transparent;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, transparent, transparent);
            }
          }
        }

        @include it("from-black") {
          @include assert {
            @include output {
              @include from-black;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, black, transparent);
            }
          }
        }

        @include it("from-white") {
          @include assert {
            @include output {
              @include from-white;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, white, transparent);
            }
          }
        }

        @include it("from-slate-50") {
          @include assert {
            @include output {
              @include from-slate-50;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-slate-50, transparent);
            }
          }
        }

        @include it("from-slate-100") {
          @include assert {
            @include output {
              @include from-slate-100;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-slate-100, transparent);
            }
          }
        }

        @include it("from-slate-200") {
          @include assert {
            @include output {
              @include from-slate-200;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-slate-200, transparent);
            }
          }
        }

        @include it("from-slate-300") {
          @include assert {
            @include output {
              @include from-slate-300;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-slate-300, transparent);
            }
          }
        }

        @include it("from-slate-400") {
          @include assert {
            @include output {
              @include from-slate-400;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-slate-400, transparent);
            }
          }
        }

        @include it("from-slate-500") {
          @include assert {
            @include output {
              @include from-slate-500;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-slate-500, transparent);
            }
          }
        }

        @include it("from-slate-600") {
          @include assert {
            @include output {
              @include from-slate-600;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-slate-600, transparent);
            }
          }
        }

        @include it("from-slate-700") {
          @include assert {
            @include output {
              @include from-slate-700;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-slate-700, transparent);
            }
          }
        }

        @include it("from-slate-800") {
          @include assert {
            @include output {
              @include from-slate-800;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-slate-800, transparent);
            }
          }
        }

        @include it("from-slate-900") {
          @include assert {
            @include output {
              @include from-slate-900;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-slate-900, transparent);
            }
          }
        }

        @include it("from-slate-950") {
          @include assert {
            @include output {
              @include from-slate-950;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-slate-950, transparent);
            }
          }
        }

        @include it("from-gray-50") {
          @include assert {
            @include output {
              @include from-gray-50;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-gray-50, transparent);
            }
          }
        }

        @include it("from-gray-100") {
          @include assert {
            @include output {
              @include from-gray-100;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-gray-100, transparent);
            }
          }
        }

        @include it("from-gray-200") {
          @include assert {
            @include output {
              @include from-gray-200;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-gray-200, transparent);
            }
          }
        }

        @include it("from-gray-300") {
          @include assert {
            @include output {
              @include from-gray-300;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-gray-300, transparent);
            }
          }
        }

        @include it("from-gray-400") {
          @include assert {
            @include output {
              @include from-gray-400;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-gray-400, transparent);
            }
          }
        }

        @include it("from-gray-500") {
          @include assert {
            @include output {
              @include from-gray-500;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-gray-500, transparent);
            }
          }
        }

        @include it("from-gray-600") {
          @include assert {
            @include output {
              @include from-gray-600;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-gray-600, transparent);
            }
          }
        }

        @include it("from-gray-700") {
          @include assert {
            @include output {
              @include from-gray-700;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-gray-700, transparent);
            }
          }
        }

        @include it("from-gray-800") {
          @include assert {
            @include output {
              @include from-gray-800;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-gray-800, transparent);
            }
          }
        }

        @include it("from-gray-900") {
          @include assert {
            @include output {
              @include from-gray-900;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-gray-900, transparent);
            }
          }
        }

        @include it("from-gray-950") {
          @include assert {
            @include output {
              @include from-gray-950;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-gray-950, transparent);
            }
          }
        }

        @include it("from-zinc-50") {
          @include assert {
            @include output {
              @include from-zinc-50;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-zinc-50, transparent);
            }
          }
        }

        @include it("from-zinc-100") {
          @include assert {
            @include output {
              @include from-zinc-100;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-zinc-100, transparent);
            }
          }
        }

        @include it("from-zinc-200") {
          @include assert {
            @include output {
              @include from-zinc-200;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-zinc-200, transparent);
            }
          }
        }

        @include it("from-zinc-300") {
          @include assert {
            @include output {
              @include from-zinc-300;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-zinc-300, transparent);
            }
          }
        }

        @include it("from-zinc-400") {
          @include assert {
            @include output {
              @include from-zinc-400;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-zinc-400, transparent);
            }
          }
        }

        @include it("from-zinc-500") {
          @include assert {
            @include output {
              @include from-zinc-500;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-zinc-500, transparent);
            }
          }
        }

        @include it("from-zinc-600") {
          @include assert {
            @include output {
              @include from-zinc-600;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-zinc-600, transparent);
            }
          }
        }

        @include it("from-zinc-700") {
          @include assert {
            @include output {
              @include from-zinc-700;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-zinc-700, transparent);
            }
          }
        }

        @include it("from-zinc-800") {
          @include assert {
            @include output {
              @include from-zinc-800;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-zinc-800, transparent);
            }
          }
        }

        @include it("from-zinc-900") {
          @include assert {
            @include output {
              @include from-zinc-900;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-zinc-900, transparent);
            }
          }
        }

        @include it("from-zinc-950") {
          @include assert {
            @include output {
              @include from-zinc-950;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-zinc-950, transparent);
            }
          }
        }

        @include it("from-neutral-50") {
          @include assert {
            @include output {
              @include from-neutral-50;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-neutral-50, transparent);
            }
          }
        }

        @include it("from-neutral-100") {
          @include assert {
            @include output {
              @include from-neutral-100;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-neutral-100, transparent);
            }
          }
        }

        @include it("from-neutral-200") {
          @include assert {
            @include output {
              @include from-neutral-200;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-neutral-200, transparent);
            }
          }
        }

        @include it("from-neutral-300") {
          @include assert {
            @include output {
              @include from-neutral-300;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-neutral-300, transparent);
            }
          }
        }

        @include it("from-neutral-400") {
          @include assert {
            @include output {
              @include from-neutral-400;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-neutral-400, transparent);
            }
          }
        }

        @include it("from-neutral-500") {
          @include assert {
            @include output {
              @include from-neutral-500;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-neutral-500, transparent);
            }
          }
        }

        @include it("from-neutral-600") {
          @include assert {
            @include output {
              @include from-neutral-600;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-neutral-600, transparent);
            }
          }
        }

        @include it("from-neutral-700") {
          @include assert {
            @include output {
              @include from-neutral-700;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-neutral-700, transparent);
            }
          }
        }

        @include it("from-neutral-800") {
          @include assert {
            @include output {
              @include from-neutral-800;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-neutral-800, transparent);
            }
          }
        }

        @include it("from-neutral-900") {
          @include assert {
            @include output {
              @include from-neutral-900;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-neutral-900, transparent);
            }
          }
        }

        @include it("from-neutral-950") {
          @include assert {
            @include output {
              @include from-neutral-950;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-neutral-950, transparent);
            }
          }
        }

        @include it("from-stone-50") {
          @include assert {
            @include output {
              @include from-stone-50;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-stone-50, transparent);
            }
          }
        }

        @include it("from-stone-100") {
          @include assert {
            @include output {
              @include from-stone-100;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-stone-100, transparent);
            }
          }
        }

        @include it("from-stone-200") {
          @include assert {
            @include output {
              @include from-stone-200;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-stone-200, transparent);
            }
          }
        }

        @include it("from-stone-300") {
          @include assert {
            @include output {
              @include from-stone-300;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-stone-300, transparent);
            }
          }
        }

        @include it("from-stone-400") {
          @include assert {
            @include output {
              @include from-stone-400;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-stone-400, transparent);
            }
          }
        }

        @include it("from-stone-500") {
          @include assert {
            @include output {
              @include from-stone-500;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-stone-500, transparent);
            }
          }
        }

        @include it("from-stone-600") {
          @include assert {
            @include output {
              @include from-stone-600;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-stone-600, transparent);
            }
          }
        }

        @include it("from-stone-700") {
          @include assert {
            @include output {
              @include from-stone-700;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-stone-700, transparent);
            }
          }
        }

        @include it("from-stone-800") {
          @include assert {
            @include output {
              @include from-stone-800;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-stone-800, transparent);
            }
          }
        }

        @include it("from-stone-900") {
          @include assert {
            @include output {
              @include from-stone-900;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-stone-900, transparent);
            }
          }
        }

        @include it("from-stone-950") {
          @include assert {
            @include output {
              @include from-stone-950;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-stone-950, transparent);
            }
          }
        }

        @include it("from-red-50") {
          @include assert {
            @include output {
              @include from-red-50;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-red-50, transparent);
            }
          }
        }

        @include it("from-red-100") {
          @include assert {
            @include output {
              @include from-red-100;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-red-100, transparent);
            }
          }
        }

        @include it("from-red-200") {
          @include assert {
            @include output {
              @include from-red-200;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-red-200, transparent);
            }
          }
        }

        @include it("from-red-300") {
          @include assert {
            @include output {
              @include from-red-300;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-red-300, transparent);
            }
          }
        }

        @include it("from-red-400") {
          @include assert {
            @include output {
              @include from-red-400;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-red-400, transparent);
            }
          }
        }

        @include it("from-red-500") {
          @include assert {
            @include output {
              @include from-red-500;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-red-500, transparent);
            }
          }
        }

        @include it("from-red-600") {
          @include assert {
            @include output {
              @include from-red-600;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-red-600, transparent);
            }
          }
        }

        @include it("from-red-700") {
          @include assert {
            @include output {
              @include from-red-700;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-red-700, transparent);
            }
          }
        }

        @include it("from-red-800") {
          @include assert {
            @include output {
              @include from-red-800;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-red-800, transparent);
            }
          }
        }

        @include it("from-red-900") {
          @include assert {
            @include output {
              @include from-red-900;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-red-900, transparent);
            }
          }
        }

        @include it("from-red-950") {
          @include assert {
            @include output {
              @include from-red-950;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-red-950, transparent);
            }
          }
        }

        @include it("from-orange-50") {
          @include assert {
            @include output {
              @include from-orange-50;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-orange-50, transparent);
            }
          }
        }

        @include it("from-orange-100") {
          @include assert {
            @include output {
              @include from-orange-100;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-orange-100, transparent);
            }
          }
        }

        @include it("from-orange-200") {
          @include assert {
            @include output {
              @include from-orange-200;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-orange-200, transparent);
            }
          }
        }

        @include it("from-orange-300") {
          @include assert {
            @include output {
              @include from-orange-300;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-orange-300, transparent);
            }
          }
        }

        @include it("from-orange-400") {
          @include assert {
            @include output {
              @include from-orange-400;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-orange-400, transparent);
            }
          }
        }

        @include it("from-orange-500") {
          @include assert {
            @include output {
              @include from-orange-500;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-orange-500, transparent);
            }
          }
        }

        @include it("from-orange-600") {
          @include assert {
            @include output {
              @include from-orange-600;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-orange-600, transparent);
            }
          }
        }

        @include it("from-orange-700") {
          @include assert {
            @include output {
              @include from-orange-700;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-orange-700, transparent);
            }
          }
        }

        @include it("from-orange-800") {
          @include assert {
            @include output {
              @include from-orange-800;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-orange-800, transparent);
            }
          }
        }

        @include it("from-orange-900") {
          @include assert {
            @include output {
              @include from-orange-900;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-orange-900, transparent);
            }
          }
        }

        @include it("from-orange-950") {
          @include assert {
            @include output {
              @include from-orange-950;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-orange-950, transparent);
            }
          }
        }

        @include it("from-amber-50") {
          @include assert {
            @include output {
              @include from-amber-50;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-amber-50, transparent);
            }
          }
        }

        @include it("from-amber-100") {
          @include assert {
            @include output {
              @include from-amber-100;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-amber-100, transparent);
            }
          }
        }

        @include it("from-amber-200") {
          @include assert {
            @include output {
              @include from-amber-200;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-amber-200, transparent);
            }
          }
        }

        @include it("from-amber-300") {
          @include assert {
            @include output {
              @include from-amber-300;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-amber-300, transparent);
            }
          }
        }

        @include it("from-amber-400") {
          @include assert {
            @include output {
              @include from-amber-400;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-amber-400, transparent);
            }
          }
        }

        @include it("from-amber-500") {
          @include assert {
            @include output {
              @include from-amber-500;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-amber-500, transparent);
            }
          }
        }

        @include it("from-amber-600") {
          @include assert {
            @include output {
              @include from-amber-600;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-amber-600, transparent);
            }
          }
        }

        @include it("from-amber-700") {
          @include assert {
            @include output {
              @include from-amber-700;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-amber-700, transparent);
            }
          }
        }

        @include it("from-amber-800") {
          @include assert {
            @include output {
              @include from-amber-800;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-amber-800, transparent);
            }
          }
        }

        @include it("from-amber-900") {
          @include assert {
            @include output {
              @include from-amber-900;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-amber-900, transparent);
            }
          }
        }

        @include it("from-amber-950") {
          @include assert {
            @include output {
              @include from-amber-950;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-amber-950, transparent);
            }
          }
        }

        @include it("from-yellow-50") {
          @include assert {
            @include output {
              @include from-yellow-50;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-yellow-50, transparent);
            }
          }
        }

        @include it("from-yellow-100") {
          @include assert {
            @include output {
              @include from-yellow-100;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-yellow-100, transparent);
            }
          }
        }

        @include it("from-yellow-200") {
          @include assert {
            @include output {
              @include from-yellow-200;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-yellow-200, transparent);
            }
          }
        }

        @include it("from-yellow-300") {
          @include assert {
            @include output {
              @include from-yellow-300;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-yellow-300, transparent);
            }
          }
        }

        @include it("from-yellow-400") {
          @include assert {
            @include output {
              @include from-yellow-400;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-yellow-400, transparent);
            }
          }
        }

        @include it("from-yellow-500") {
          @include assert {
            @include output {
              @include from-yellow-500;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-yellow-500, transparent);
            }
          }
        }

        @include it("from-yellow-600") {
          @include assert {
            @include output {
              @include from-yellow-600;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-yellow-600, transparent);
            }
          }
        }

        @include it("from-yellow-700") {
          @include assert {
            @include output {
              @include from-yellow-700;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-yellow-700, transparent);
            }
          }
        }

        @include it("from-yellow-800") {
          @include assert {
            @include output {
              @include from-yellow-800;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-yellow-800, transparent);
            }
          }
        }

        @include it("from-yellow-900") {
          @include assert {
            @include output {
              @include from-yellow-900;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-yellow-900, transparent);
            }
          }
        }

        @include it("from-yellow-950") {
          @include assert {
            @include output {
              @include from-yellow-950;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-yellow-950, transparent);
            }
          }
        }

        @include it("from-lime-50") {
          @include assert {
            @include output {
              @include from-lime-50;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-lime-50, transparent);
            }
          }
        }

        @include it("from-lime-100") {
          @include assert {
            @include output {
              @include from-lime-100;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-lime-100, transparent);
            }
          }
        }

        @include it("from-lime-200") {
          @include assert {
            @include output {
              @include from-lime-200;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-lime-200, transparent);
            }
          }
        }

        @include it("from-lime-300") {
          @include assert {
            @include output {
              @include from-lime-300;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-lime-300, transparent);
            }
          }
        }

        @include it("from-lime-400") {
          @include assert {
            @include output {
              @include from-lime-400;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-lime-400, transparent);
            }
          }
        }

        @include it("from-lime-500") {
          @include assert {
            @include output {
              @include from-lime-500;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-lime-500, transparent);
            }
          }
        }

        @include it("from-lime-600") {
          @include assert {
            @include output {
              @include from-lime-600;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-lime-600, transparent);
            }
          }
        }

        @include it("from-lime-700") {
          @include assert {
            @include output {
              @include from-lime-700;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-lime-700, transparent);
            }
          }
        }

        @include it("from-lime-800") {
          @include assert {
            @include output {
              @include from-lime-800;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-lime-800, transparent);
            }
          }
        }

        @include it("from-lime-900") {
          @include assert {
            @include output {
              @include from-lime-900;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-lime-900, transparent);
            }
          }
        }

        @include it("from-lime-950") {
          @include assert {
            @include output {
              @include from-lime-950;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-lime-950, transparent);
            }
          }
        }

        @include it("from-green-50") {
          @include assert {
            @include output {
              @include from-green-50;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-green-50, transparent);
            }
          }
        }

        @include it("from-green-100") {
          @include assert {
            @include output {
              @include from-green-100;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-green-100, transparent);
            }
          }
        }

        @include it("from-green-200") {
          @include assert {
            @include output {
              @include from-green-200;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-green-200, transparent);
            }
          }
        }

        @include it("from-green-300") {
          @include assert {
            @include output {
              @include from-green-300;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-green-300, transparent);
            }
          }
        }

        @include it("from-green-400") {
          @include assert {
            @include output {
              @include from-green-400;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-green-400, transparent);
            }
          }
        }

        @include it("from-green-500") {
          @include assert {
            @include output {
              @include from-green-500;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-green-500, transparent);
            }
          }
        }

        @include it("from-green-600") {
          @include assert {
            @include output {
              @include from-green-600;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-green-600, transparent);
            }
          }
        }

        @include it("from-green-700") {
          @include assert {
            @include output {
              @include from-green-700;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-green-700, transparent);
            }
          }
        }

        @include it("from-green-800") {
          @include assert {
            @include output {
              @include from-green-800;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-green-800, transparent);
            }
          }
        }

        @include it("from-green-900") {
          @include assert {
            @include output {
              @include from-green-900;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-green-900, transparent);
            }
          }
        }

        @include it("from-green-950") {
          @include assert {
            @include output {
              @include from-green-950;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-green-950, transparent);
            }
          }
        }

        @include it("from-emerald-50") {
          @include assert {
            @include output {
              @include from-emerald-50;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-emerald-50, transparent);
            }
          }
        }

        @include it("from-emerald-100") {
          @include assert {
            @include output {
              @include from-emerald-100;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-emerald-100, transparent);
            }
          }
        }

        @include it("from-emerald-200") {
          @include assert {
            @include output {
              @include from-emerald-200;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-emerald-200, transparent);
            }
          }
        }

        @include it("from-emerald-300") {
          @include assert {
            @include output {
              @include from-emerald-300;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-emerald-300, transparent);
            }
          }
        }

        @include it("from-emerald-400") {
          @include assert {
            @include output {
              @include from-emerald-400;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-emerald-400, transparent);
            }
          }
        }

        @include it("from-emerald-500") {
          @include assert {
            @include output {
              @include from-emerald-500;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-emerald-500, transparent);
            }
          }
        }

        @include it("from-emerald-600") {
          @include assert {
            @include output {
              @include from-emerald-600;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-emerald-600, transparent);
            }
          }
        }

        @include it("from-emerald-700") {
          @include assert {
            @include output {
              @include from-emerald-700;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-emerald-700, transparent);
            }
          }
        }

        @include it("from-emerald-800") {
          @include assert {
            @include output {
              @include from-emerald-800;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-emerald-800, transparent);
            }
          }
        }

        @include it("from-emerald-900") {
          @include assert {
            @include output {
              @include from-emerald-900;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-emerald-900, transparent);
            }
          }
        }

        @include it("from-emerald-950") {
          @include assert {
            @include output {
              @include from-emerald-950;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-emerald-950, transparent);
            }
          }
        }

        @include it("from-teal-50") {
          @include assert {
            @include output {
              @include from-teal-50;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-teal-50, transparent);
            }
          }
        }

        @include it("from-teal-100") {
          @include assert {
            @include output {
              @include from-teal-100;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-teal-100, transparent);
            }
          }
        }

        @include it("from-teal-200") {
          @include assert {
            @include output {
              @include from-teal-200;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-teal-200, transparent);
            }
          }
        }

        @include it("from-teal-300") {
          @include assert {
            @include output {
              @include from-teal-300;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-teal-300, transparent);
            }
          }
        }

        @include it("from-teal-400") {
          @include assert {
            @include output {
              @include from-teal-400;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-teal-400, transparent);
            }
          }
        }

        @include it("from-teal-500") {
          @include assert {
            @include output {
              @include from-teal-500;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-teal-500, transparent);
            }
          }
        }

        @include it("from-teal-600") {
          @include assert {
            @include output {
              @include from-teal-600;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-teal-600, transparent);
            }
          }
        }

        @include it("from-teal-700") {
          @include assert {
            @include output {
              @include from-teal-700;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-teal-700, transparent);
            }
          }
        }

        @include it("from-teal-800") {
          @include assert {
            @include output {
              @include from-teal-800;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-teal-800, transparent);
            }
          }
        }

        @include it("from-teal-900") {
          @include assert {
            @include output {
              @include from-teal-900;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-teal-900, transparent);
            }
          }
        }

        @include it("from-teal-950") {
          @include assert {
            @include output {
              @include from-teal-950;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-teal-950, transparent);
            }
          }
        }

        @include it("from-cyan-50") {
          @include assert {
            @include output {
              @include from-cyan-50;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-cyan-50, transparent);
            }
          }
        }

        @include it("from-cyan-100") {
          @include assert {
            @include output {
              @include from-cyan-100;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-cyan-100, transparent);
            }
          }
        }

        @include it("from-cyan-200") {
          @include assert {
            @include output {
              @include from-cyan-200;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-cyan-200, transparent);
            }
          }
        }

        @include it("from-cyan-300") {
          @include assert {
            @include output {
              @include from-cyan-300;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-cyan-300, transparent);
            }
          }
        }

        @include it("from-cyan-400") {
          @include assert {
            @include output {
              @include from-cyan-400;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-cyan-400, transparent);
            }
          }
        }

        @include it("from-cyan-500") {
          @include assert {
            @include output {
              @include from-cyan-500;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-cyan-500, transparent);
            }
          }
        }

        @include it("from-cyan-600") {
          @include assert {
            @include output {
              @include from-cyan-600;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-cyan-600, transparent);
            }
          }
        }

        @include it("from-cyan-700") {
          @include assert {
            @include output {
              @include from-cyan-700;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-cyan-700, transparent);
            }
          }
        }

        @include it("from-cyan-800") {
          @include assert {
            @include output {
              @include from-cyan-800;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-cyan-800, transparent);
            }
          }
        }

        @include it("from-cyan-900") {
          @include assert {
            @include output {
              @include from-cyan-900;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-cyan-900, transparent);
            }
          }
        }

        @include it("from-cyan-950") {
          @include assert {
            @include output {
              @include from-cyan-950;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-cyan-950, transparent);
            }
          }
        }

        @include it("from-sky-50") {
          @include assert {
            @include output {
              @include from-sky-50;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-sky-50, transparent);
            }
          }
        }

        @include it("from-sky-100") {
          @include assert {
            @include output {
              @include from-sky-100;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-sky-100, transparent);
            }
          }
        }

        @include it("from-sky-200") {
          @include assert {
            @include output {
              @include from-sky-200;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-sky-200, transparent);
            }
          }
        }

        @include it("from-sky-300") {
          @include assert {
            @include output {
              @include from-sky-300;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-sky-300, transparent);
            }
          }
        }

        @include it("from-sky-400") {
          @include assert {
            @include output {
              @include from-sky-400;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-sky-400, transparent);
            }
          }
        }

        @include it("from-sky-500") {
          @include assert {
            @include output {
              @include from-sky-500;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-sky-500, transparent);
            }
          }
        }

        @include it("from-sky-600") {
          @include assert {
            @include output {
              @include from-sky-600;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-sky-600, transparent);
            }
          }
        }

        @include it("from-sky-700") {
          @include assert {
            @include output {
              @include from-sky-700;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-sky-700, transparent);
            }
          }
        }

        @include it("from-sky-800") {
          @include assert {
            @include output {
              @include from-sky-800;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-sky-800, transparent);
            }
          }
        }

        @include it("from-sky-900") {
          @include assert {
            @include output {
              @include from-sky-900;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-sky-900, transparent);
            }
          }
        }

        @include it("from-sky-950") {
          @include assert {
            @include output {
              @include from-sky-950;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-sky-950, transparent);
            }
          }
        }

        @include it("from-blue-50") {
          @include assert {
            @include output {
              @include from-blue-50;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-blue-50, transparent);
            }
          }
        }

        @include it("from-blue-100") {
          @include assert {
            @include output {
              @include from-blue-100;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-blue-100, transparent);
            }
          }
        }

        @include it("from-blue-200") {
          @include assert {
            @include output {
              @include from-blue-200;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-blue-200, transparent);
            }
          }
        }

        @include it("from-blue-300") {
          @include assert {
            @include output {
              @include from-blue-300;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-blue-300, transparent);
            }
          }
        }

        @include it("from-blue-400") {
          @include assert {
            @include output {
              @include from-blue-400;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-blue-400, transparent);
            }
          }
        }

        @include it("from-blue-500") {
          @include assert {
            @include output {
              @include from-blue-500;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-blue-500, transparent);
            }
          }
        }

        @include it("from-blue-600") {
          @include assert {
            @include output {
              @include from-blue-600;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-blue-600, transparent);
            }
          }
        }

        @include it("from-blue-700") {
          @include assert {
            @include output {
              @include from-blue-700;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-blue-700, transparent);
            }
          }
        }

        @include it("from-blue-800") {
          @include assert {
            @include output {
              @include from-blue-800;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-blue-800, transparent);
            }
          }
        }

        @include it("from-blue-900") {
          @include assert {
            @include output {
              @include from-blue-900;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-blue-900, transparent);
            }
          }
        }

        @include it("from-blue-950") {
          @include assert {
            @include output {
              @include from-blue-950;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-blue-950, transparent);
            }
          }
        }

        @include it("from-indigo-50") {
          @include assert {
            @include output {
              @include from-indigo-50;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-indigo-50, transparent);
            }
          }
        }

        @include it("from-indigo-100") {
          @include assert {
            @include output {
              @include from-indigo-100;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-indigo-100, transparent);
            }
          }
        }

        @include it("from-indigo-200") {
          @include assert {
            @include output {
              @include from-indigo-200;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-indigo-200, transparent);
            }
          }
        }

        @include it("from-indigo-300") {
          @include assert {
            @include output {
              @include from-indigo-300;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-indigo-300, transparent);
            }
          }
        }

        @include it("from-indigo-400") {
          @include assert {
            @include output {
              @include from-indigo-400;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-indigo-400, transparent);
            }
          }
        }

        @include it("from-indigo-500") {
          @include assert {
            @include output {
              @include from-indigo-500;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-indigo-500, transparent);
            }
          }
        }

        @include it("from-indigo-600") {
          @include assert {
            @include output {
              @include from-indigo-600;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-indigo-600, transparent);
            }
          }
        }

        @include it("from-indigo-700") {
          @include assert {
            @include output {
              @include from-indigo-700;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-indigo-700, transparent);
            }
          }
        }

        @include it("from-indigo-800") {
          @include assert {
            @include output {
              @include from-indigo-800;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-indigo-800, transparent);
            }
          }
        }

        @include it("from-indigo-900") {
          @include assert {
            @include output {
              @include from-indigo-900;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-indigo-900, transparent);
            }
          }
        }

        @include it("from-indigo-950") {
          @include assert {
            @include output {
              @include from-indigo-950;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-indigo-950, transparent);
            }
          }
        }

        @include it("from-violet-50") {
          @include assert {
            @include output {
              @include from-violet-50;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-violet-50, transparent);
            }
          }
        }

        @include it("from-violet-100") {
          @include assert {
            @include output {
              @include from-violet-100;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-violet-100, transparent);
            }
          }
        }

        @include it("from-violet-200") {
          @include assert {
            @include output {
              @include from-violet-200;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-violet-200, transparent);
            }
          }
        }

        @include it("from-violet-300") {
          @include assert {
            @include output {
              @include from-violet-300;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-violet-300, transparent);
            }
          }
        }

        @include it("from-violet-400") {
          @include assert {
            @include output {
              @include from-violet-400;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-violet-400, transparent);
            }
          }
        }

        @include it("from-violet-500") {
          @include assert {
            @include output {
              @include from-violet-500;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-violet-500, transparent);
            }
          }
        }

        @include it("from-violet-600") {
          @include assert {
            @include output {
              @include from-violet-600;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-violet-600, transparent);
            }
          }
        }

        @include it("from-violet-700") {
          @include assert {
            @include output {
              @include from-violet-700;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-violet-700, transparent);
            }
          }
        }

        @include it("from-violet-800") {
          @include assert {
            @include output {
              @include from-violet-800;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-violet-800, transparent);
            }
          }
        }

        @include it("from-violet-900") {
          @include assert {
            @include output {
              @include from-violet-900;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-violet-900, transparent);
            }
          }
        }

        @include it("from-violet-950") {
          @include assert {
            @include output {
              @include from-violet-950;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-violet-950, transparent);
            }
          }
        }

        @include it("from-purple-50") {
          @include assert {
            @include output {
              @include from-purple-50;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-purple-50, transparent);
            }
          }
        }

        @include it("from-purple-100") {
          @include assert {
            @include output {
              @include from-purple-100;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-purple-100, transparent);
            }
          }
        }

        @include it("from-purple-200") {
          @include assert {
            @include output {
              @include from-purple-200;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-purple-200, transparent);
            }
          }
        }

        @include it("from-purple-300") {
          @include assert {
            @include output {
              @include from-purple-300;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-purple-300, transparent);
            }
          }
        }

        @include it("from-purple-400") {
          @include assert {
            @include output {
              @include from-purple-400;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-purple-400, transparent);
            }
          }
        }

        @include it("from-purple-500") {
          @include assert {
            @include output {
              @include from-purple-500;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-purple-500, transparent);
            }
          }
        }

        @include it("from-purple-600") {
          @include assert {
            @include output {
              @include from-purple-600;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-purple-600, transparent);
            }
          }
        }

        @include it("from-purple-700") {
          @include assert {
            @include output {
              @include from-purple-700;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-purple-700, transparent);
            }
          }
        }

        @include it("from-purple-800") {
          @include assert {
            @include output {
              @include from-purple-800;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-purple-800, transparent);
            }
          }
        }

        @include it("from-purple-900") {
          @include assert {
            @include output {
              @include from-purple-900;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-purple-900, transparent);
            }
          }
        }

        @include it("from-purple-950") {
          @include assert {
            @include output {
              @include from-purple-950;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-purple-950, transparent);
            }
          }
        }

        @include it("from-fuchsia-50") {
          @include assert {
            @include output {
              @include from-fuchsia-50;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-fuchsia-50, transparent);
            }
          }
        }

        @include it("from-fuchsia-100") {
          @include assert {
            @include output {
              @include from-fuchsia-100;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-fuchsia-100, transparent);
            }
          }
        }

        @include it("from-fuchsia-200") {
          @include assert {
            @include output {
              @include from-fuchsia-200;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-fuchsia-200, transparent);
            }
          }
        }

        @include it("from-fuchsia-300") {
          @include assert {
            @include output {
              @include from-fuchsia-300;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-fuchsia-300, transparent);
            }
          }
        }

        @include it("from-fuchsia-400") {
          @include assert {
            @include output {
              @include from-fuchsia-400;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-fuchsia-400, transparent);
            }
          }
        }

        @include it("from-fuchsia-500") {
          @include assert {
            @include output {
              @include from-fuchsia-500;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-fuchsia-500, transparent);
            }
          }
        }

        @include it("from-fuchsia-600") {
          @include assert {
            @include output {
              @include from-fuchsia-600;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-fuchsia-600, transparent);
            }
          }
        }

        @include it("from-fuchsia-700") {
          @include assert {
            @include output {
              @include from-fuchsia-700;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-fuchsia-700, transparent);
            }
          }
        }

        @include it("from-fuchsia-800") {
          @include assert {
            @include output {
              @include from-fuchsia-800;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-fuchsia-800, transparent);
            }
          }
        }

        @include it("from-fuchsia-900") {
          @include assert {
            @include output {
              @include from-fuchsia-900;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-fuchsia-900, transparent);
            }
          }
        }

        @include it("from-fuchsia-950") {
          @include assert {
            @include output {
              @include from-fuchsia-950;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-fuchsia-950, transparent);
            }
          }
        }

        @include it("from-pink-50") {
          @include assert {
            @include output {
              @include from-pink-50;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-pink-50, transparent);
            }
          }
        }

        @include it("from-pink-100") {
          @include assert {
            @include output {
              @include from-pink-100;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-pink-100, transparent);
            }
          }
        }

        @include it("from-pink-200") {
          @include assert {
            @include output {
              @include from-pink-200;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-pink-200, transparent);
            }
          }
        }

        @include it("from-pink-300") {
          @include assert {
            @include output {
              @include from-pink-300;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-pink-300, transparent);
            }
          }
        }

        @include it("from-pink-400") {
          @include assert {
            @include output {
              @include from-pink-400;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-pink-400, transparent);
            }
          }
        }

        @include it("from-pink-500") {
          @include assert {
            @include output {
              @include from-pink-500;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-pink-500, transparent);
            }
          }
        }

        @include it("from-pink-600") {
          @include assert {
            @include output {
              @include from-pink-600;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-pink-600, transparent);
            }
          }
        }

        @include it("from-pink-700") {
          @include assert {
            @include output {
              @include from-pink-700;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-pink-700, transparent);
            }
          }
        }

        @include it("from-pink-800") {
          @include assert {
            @include output {
              @include from-pink-800;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-pink-800, transparent);
            }
          }
        }

        @include it("from-pink-900") {
          @include assert {
            @include output {
              @include from-pink-900;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-pink-900, transparent);
            }
          }
        }

        @include it("from-pink-950") {
          @include assert {
            @include output {
              @include from-pink-950;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-pink-950, transparent);
            }
          }
        }

        @include it("from-rose-50") {
          @include assert {
            @include output {
              @include from-rose-50;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-rose-50, transparent);
            }
          }
        }

        @include it("from-rose-100") {
          @include assert {
            @include output {
              @include from-rose-100;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-rose-100, transparent);
            }
          }
        }

        @include it("from-rose-200") {
          @include assert {
            @include output {
              @include from-rose-200;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-rose-200, transparent);
            }
          }
        }

        @include it("from-rose-300") {
          @include assert {
            @include output {
              @include from-rose-300;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-rose-300, transparent);
            }
          }
        }

        @include it("from-rose-400") {
          @include assert {
            @include output {
              @include from-rose-400;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-rose-400, transparent);
            }
          }
        }

        @include it("from-rose-500") {
          @include assert {
            @include output {
              @include from-rose-500;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-rose-500, transparent);
            }
          }
        }

        @include it("from-rose-600") {
          @include assert {
            @include output {
              @include from-rose-600;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-rose-600, transparent);
            }
          }
        }

        @include it("from-rose-700") {
          @include assert {
            @include output {
              @include from-rose-700;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-rose-700, transparent);
            }
          }
        }

        @include it("from-rose-800") {
          @include assert {
            @include output {
              @include from-rose-800;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-rose-800, transparent);
            }
          }
        }

        @include it("from-rose-900") {
          @include assert {
            @include output {
              @include from-rose-900;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-rose-900, transparent);
            }
          }
        }

        @include it("from-rose-950") {
          @include assert {
            @include output {
              @include from-rose-950;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, $color-rose-950, transparent);
            }
          }
        }

        @include it("from-black(0.11)") {
          @include assert {
            @include output {
              @include from-black(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#000, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-white(0.11)") {
          @include assert {
            @include output {
              @include from-white(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change(#fff, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-slate-50(0.11)") {
          @include assert {
            @include output {
              @include from-slate-50(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-slate-50, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-slate-100(0.11)") {
          @include assert {
            @include output {
              @include from-slate-100(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-slate-100, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-slate-200(0.11)") {
          @include assert {
            @include output {
              @include from-slate-200(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-slate-200, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-slate-300(0.11)") {
          @include assert {
            @include output {
              @include from-slate-300(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-slate-300, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-slate-400(0.11)") {
          @include assert {
            @include output {
              @include from-slate-400(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-slate-400, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-slate-500(0.11)") {
          @include assert {
            @include output {
              @include from-slate-500(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-slate-500, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-slate-600(0.11)") {
          @include assert {
            @include output {
              @include from-slate-600(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-slate-600, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-slate-700(0.11)") {
          @include assert {
            @include output {
              @include from-slate-700(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-slate-700, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-slate-800(0.11)") {
          @include assert {
            @include output {
              @include from-slate-800(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-slate-800, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-slate-900(0.11)") {
          @include assert {
            @include output {
              @include from-slate-900(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-slate-900, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-slate-950(0.11)") {
          @include assert {
            @include output {
              @include from-slate-950(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-slate-950, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-gray-50(0.11)") {
          @include assert {
            @include output {
              @include from-gray-50(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-gray-50, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-gray-100(0.11)") {
          @include assert {
            @include output {
              @include from-gray-100(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-gray-100, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-gray-200(0.11)") {
          @include assert {
            @include output {
              @include from-gray-200(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-gray-200, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-gray-300(0.11)") {
          @include assert {
            @include output {
              @include from-gray-300(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-gray-300, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-gray-400(0.11)") {
          @include assert {
            @include output {
              @include from-gray-400(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-gray-400, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-gray-500(0.11)") {
          @include assert {
            @include output {
              @include from-gray-500(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-gray-500, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-gray-600(0.11)") {
          @include assert {
            @include output {
              @include from-gray-600(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-gray-600, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-gray-700(0.11)") {
          @include assert {
            @include output {
              @include from-gray-700(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-gray-700, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-gray-800(0.11)") {
          @include assert {
            @include output {
              @include from-gray-800(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-gray-800, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-gray-900(0.11)") {
          @include assert {
            @include output {
              @include from-gray-900(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-gray-900, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-gray-950(0.11)") {
          @include assert {
            @include output {
              @include from-gray-950(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-gray-950, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-zinc-50(0.11)") {
          @include assert {
            @include output {
              @include from-zinc-50(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-zinc-50, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-zinc-100(0.11)") {
          @include assert {
            @include output {
              @include from-zinc-100(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-zinc-100, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-zinc-200(0.11)") {
          @include assert {
            @include output {
              @include from-zinc-200(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-zinc-200, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-zinc-300(0.11)") {
          @include assert {
            @include output {
              @include from-zinc-300(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-zinc-300, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-zinc-400(0.11)") {
          @include assert {
            @include output {
              @include from-zinc-400(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-zinc-400, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-zinc-500(0.11)") {
          @include assert {
            @include output {
              @include from-zinc-500(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-zinc-500, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-zinc-600(0.11)") {
          @include assert {
            @include output {
              @include from-zinc-600(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-zinc-600, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-zinc-700(0.11)") {
          @include assert {
            @include output {
              @include from-zinc-700(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-zinc-700, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-zinc-800(0.11)") {
          @include assert {
            @include output {
              @include from-zinc-800(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-zinc-800, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-zinc-900(0.11)") {
          @include assert {
            @include output {
              @include from-zinc-900(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-zinc-900, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-zinc-950(0.11)") {
          @include assert {
            @include output {
              @include from-zinc-950(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-zinc-950, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-neutral-50(0.11)") {
          @include assert {
            @include output {
              @include from-neutral-50(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-neutral-50, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-neutral-100(0.11)") {
          @include assert {
            @include output {
              @include from-neutral-100(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-neutral-100, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-neutral-200(0.11)") {
          @include assert {
            @include output {
              @include from-neutral-200(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-neutral-200, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-neutral-300(0.11)") {
          @include assert {
            @include output {
              @include from-neutral-300(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-neutral-300, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-neutral-400(0.11)") {
          @include assert {
            @include output {
              @include from-neutral-400(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-neutral-400, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-neutral-500(0.11)") {
          @include assert {
            @include output {
              @include from-neutral-500(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-neutral-500, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-neutral-600(0.11)") {
          @include assert {
            @include output {
              @include from-neutral-600(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-neutral-600, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-neutral-700(0.11)") {
          @include assert {
            @include output {
              @include from-neutral-700(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-neutral-700, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-neutral-800(0.11)") {
          @include assert {
            @include output {
              @include from-neutral-800(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-neutral-800, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-neutral-900(0.11)") {
          @include assert {
            @include output {
              @include from-neutral-900(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-neutral-900, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-neutral-950(0.11)") {
          @include assert {
            @include output {
              @include from-neutral-950(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-neutral-950, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-stone-50(0.11)") {
          @include assert {
            @include output {
              @include from-stone-50(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-stone-50, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-stone-100(0.11)") {
          @include assert {
            @include output {
              @include from-stone-100(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-stone-100, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-stone-200(0.11)") {
          @include assert {
            @include output {
              @include from-stone-200(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-stone-200, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-stone-300(0.11)") {
          @include assert {
            @include output {
              @include from-stone-300(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-stone-300, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-stone-400(0.11)") {
          @include assert {
            @include output {
              @include from-stone-400(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-stone-400, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-stone-500(0.11)") {
          @include assert {
            @include output {
              @include from-stone-500(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-stone-500, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-stone-600(0.11)") {
          @include assert {
            @include output {
              @include from-stone-600(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-stone-600, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-stone-700(0.11)") {
          @include assert {
            @include output {
              @include from-stone-700(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-stone-700, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-stone-800(0.11)") {
          @include assert {
            @include output {
              @include from-stone-800(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-stone-800, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-stone-900(0.11)") {
          @include assert {
            @include output {
              @include from-stone-900(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-stone-900, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-stone-950(0.11)") {
          @include assert {
            @include output {
              @include from-stone-950(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-stone-950, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-red-50(0.11)") {
          @include assert {
            @include output {
              @include from-red-50(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-red-50, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-red-100(0.11)") {
          @include assert {
            @include output {
              @include from-red-100(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-red-100, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-red-200(0.11)") {
          @include assert {
            @include output {
              @include from-red-200(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-red-200, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-red-300(0.11)") {
          @include assert {
            @include output {
              @include from-red-300(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-red-300, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-red-400(0.11)") {
          @include assert {
            @include output {
              @include from-red-400(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-red-400, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-red-500(0.11)") {
          @include assert {
            @include output {
              @include from-red-500(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-red-500, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-red-600(0.11)") {
          @include assert {
            @include output {
              @include from-red-600(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-red-600, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-red-700(0.11)") {
          @include assert {
            @include output {
              @include from-red-700(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-red-700, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-red-800(0.11)") {
          @include assert {
            @include output {
              @include from-red-800(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-red-800, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-red-900(0.11)") {
          @include assert {
            @include output {
              @include from-red-900(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-red-900, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-red-950(0.11)") {
          @include assert {
            @include output {
              @include from-red-950(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-red-950, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-orange-50(0.11)") {
          @include assert {
            @include output {
              @include from-orange-50(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-orange-50, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-orange-100(0.11)") {
          @include assert {
            @include output {
              @include from-orange-100(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-orange-100, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-orange-200(0.11)") {
          @include assert {
            @include output {
              @include from-orange-200(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-orange-200, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-orange-300(0.11)") {
          @include assert {
            @include output {
              @include from-orange-300(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-orange-300, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-orange-400(0.11)") {
          @include assert {
            @include output {
              @include from-orange-400(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-orange-400, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-orange-500(0.11)") {
          @include assert {
            @include output {
              @include from-orange-500(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-orange-500, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-orange-600(0.11)") {
          @include assert {
            @include output {
              @include from-orange-600(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-orange-600, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-orange-700(0.11)") {
          @include assert {
            @include output {
              @include from-orange-700(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-orange-700, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-orange-800(0.11)") {
          @include assert {
            @include output {
              @include from-orange-800(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-orange-800, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-orange-900(0.11)") {
          @include assert {
            @include output {
              @include from-orange-900(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-orange-900, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-orange-950(0.11)") {
          @include assert {
            @include output {
              @include from-orange-950(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-orange-950, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-amber-50(0.11)") {
          @include assert {
            @include output {
              @include from-amber-50(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-amber-50, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-amber-100(0.11)") {
          @include assert {
            @include output {
              @include from-amber-100(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-amber-100, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-amber-200(0.11)") {
          @include assert {
            @include output {
              @include from-amber-200(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-amber-200, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-amber-300(0.11)") {
          @include assert {
            @include output {
              @include from-amber-300(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-amber-300, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-amber-400(0.11)") {
          @include assert {
            @include output {
              @include from-amber-400(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-amber-400, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-amber-500(0.11)") {
          @include assert {
            @include output {
              @include from-amber-500(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-amber-500, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-amber-600(0.11)") {
          @include assert {
            @include output {
              @include from-amber-600(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-amber-600, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-amber-700(0.11)") {
          @include assert {
            @include output {
              @include from-amber-700(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-amber-700, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-amber-800(0.11)") {
          @include assert {
            @include output {
              @include from-amber-800(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-amber-800, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-amber-900(0.11)") {
          @include assert {
            @include output {
              @include from-amber-900(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-amber-900, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-amber-950(0.11)") {
          @include assert {
            @include output {
              @include from-amber-950(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-amber-950, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-yellow-50(0.11)") {
          @include assert {
            @include output {
              @include from-yellow-50(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-yellow-50, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-yellow-100(0.11)") {
          @include assert {
            @include output {
              @include from-yellow-100(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-yellow-100, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-yellow-200(0.11)") {
          @include assert {
            @include output {
              @include from-yellow-200(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-yellow-200, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-yellow-300(0.11)") {
          @include assert {
            @include output {
              @include from-yellow-300(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-yellow-300, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-yellow-400(0.11)") {
          @include assert {
            @include output {
              @include from-yellow-400(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-yellow-400, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-yellow-500(0.11)") {
          @include assert {
            @include output {
              @include from-yellow-500(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-yellow-500, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-yellow-600(0.11)") {
          @include assert {
            @include output {
              @include from-yellow-600(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-yellow-600, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-yellow-700(0.11)") {
          @include assert {
            @include output {
              @include from-yellow-700(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-yellow-700, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-yellow-800(0.11)") {
          @include assert {
            @include output {
              @include from-yellow-800(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-yellow-800, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-yellow-900(0.11)") {
          @include assert {
            @include output {
              @include from-yellow-900(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-yellow-900, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-yellow-950(0.11)") {
          @include assert {
            @include output {
              @include from-yellow-950(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-yellow-950, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-lime-50(0.11)") {
          @include assert {
            @include output {
              @include from-lime-50(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-lime-50, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-lime-100(0.11)") {
          @include assert {
            @include output {
              @include from-lime-100(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-lime-100, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-lime-200(0.11)") {
          @include assert {
            @include output {
              @include from-lime-200(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-lime-200, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-lime-300(0.11)") {
          @include assert {
            @include output {
              @include from-lime-300(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-lime-300, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-lime-400(0.11)") {
          @include assert {
            @include output {
              @include from-lime-400(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-lime-400, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-lime-500(0.11)") {
          @include assert {
            @include output {
              @include from-lime-500(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-lime-500, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-lime-600(0.11)") {
          @include assert {
            @include output {
              @include from-lime-600(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-lime-600, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-lime-700(0.11)") {
          @include assert {
            @include output {
              @include from-lime-700(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-lime-700, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-lime-800(0.11)") {
          @include assert {
            @include output {
              @include from-lime-800(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-lime-800, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-lime-900(0.11)") {
          @include assert {
            @include output {
              @include from-lime-900(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-lime-900, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-lime-950(0.11)") {
          @include assert {
            @include output {
              @include from-lime-950(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-lime-950, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-green-50(0.11)") {
          @include assert {
            @include output {
              @include from-green-50(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-green-50, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-green-100(0.11)") {
          @include assert {
            @include output {
              @include from-green-100(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-green-100, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-green-200(0.11)") {
          @include assert {
            @include output {
              @include from-green-200(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-green-200, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-green-300(0.11)") {
          @include assert {
            @include output {
              @include from-green-300(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-green-300, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-green-400(0.11)") {
          @include assert {
            @include output {
              @include from-green-400(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-green-400, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-green-500(0.11)") {
          @include assert {
            @include output {
              @include from-green-500(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-green-500, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-green-600(0.11)") {
          @include assert {
            @include output {
              @include from-green-600(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-green-600, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-green-700(0.11)") {
          @include assert {
            @include output {
              @include from-green-700(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-green-700, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-green-800(0.11)") {
          @include assert {
            @include output {
              @include from-green-800(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-green-800, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-green-900(0.11)") {
          @include assert {
            @include output {
              @include from-green-900(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-green-900, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-green-950(0.11)") {
          @include assert {
            @include output {
              @include from-green-950(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-green-950, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-emerald-50(0.11)") {
          @include assert {
            @include output {
              @include from-emerald-50(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-emerald-50, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-emerald-100(0.11)") {
          @include assert {
            @include output {
              @include from-emerald-100(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-emerald-100, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-emerald-200(0.11)") {
          @include assert {
            @include output {
              @include from-emerald-200(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-emerald-200, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-emerald-300(0.11)") {
          @include assert {
            @include output {
              @include from-emerald-300(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-emerald-300, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-emerald-400(0.11)") {
          @include assert {
            @include output {
              @include from-emerald-400(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-emerald-400, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-emerald-500(0.11)") {
          @include assert {
            @include output {
              @include from-emerald-500(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-emerald-500, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-emerald-600(0.11)") {
          @include assert {
            @include output {
              @include from-emerald-600(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-emerald-600, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-emerald-700(0.11)") {
          @include assert {
            @include output {
              @include from-emerald-700(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-emerald-700, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-emerald-800(0.11)") {
          @include assert {
            @include output {
              @include from-emerald-800(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-emerald-800, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-emerald-900(0.11)") {
          @include assert {
            @include output {
              @include from-emerald-900(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-emerald-900, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-emerald-950(0.11)") {
          @include assert {
            @include output {
              @include from-emerald-950(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-emerald-950, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-teal-50(0.11)") {
          @include assert {
            @include output {
              @include from-teal-50(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-teal-50, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-teal-100(0.11)") {
          @include assert {
            @include output {
              @include from-teal-100(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-teal-100, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-teal-200(0.11)") {
          @include assert {
            @include output {
              @include from-teal-200(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-teal-200, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-teal-300(0.11)") {
          @include assert {
            @include output {
              @include from-teal-300(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-teal-300, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-teal-400(0.11)") {
          @include assert {
            @include output {
              @include from-teal-400(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-teal-400, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-teal-500(0.11)") {
          @include assert {
            @include output {
              @include from-teal-500(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-teal-500, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-teal-600(0.11)") {
          @include assert {
            @include output {
              @include from-teal-600(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-teal-600, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-teal-700(0.11)") {
          @include assert {
            @include output {
              @include from-teal-700(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-teal-700, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-teal-800(0.11)") {
          @include assert {
            @include output {
              @include from-teal-800(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-teal-800, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-teal-900(0.11)") {
          @include assert {
            @include output {
              @include from-teal-900(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-teal-900, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-teal-950(0.11)") {
          @include assert {
            @include output {
              @include from-teal-950(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-teal-950, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-cyan-50(0.11)") {
          @include assert {
            @include output {
              @include from-cyan-50(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-cyan-50, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-cyan-100(0.11)") {
          @include assert {
            @include output {
              @include from-cyan-100(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-cyan-100, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-cyan-200(0.11)") {
          @include assert {
            @include output {
              @include from-cyan-200(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-cyan-200, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-cyan-300(0.11)") {
          @include assert {
            @include output {
              @include from-cyan-300(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-cyan-300, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-cyan-400(0.11)") {
          @include assert {
            @include output {
              @include from-cyan-400(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-cyan-400, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-cyan-500(0.11)") {
          @include assert {
            @include output {
              @include from-cyan-500(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-cyan-500, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-cyan-600(0.11)") {
          @include assert {
            @include output {
              @include from-cyan-600(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-cyan-600, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-cyan-700(0.11)") {
          @include assert {
            @include output {
              @include from-cyan-700(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-cyan-700, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-cyan-800(0.11)") {
          @include assert {
            @include output {
              @include from-cyan-800(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-cyan-800, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-cyan-900(0.11)") {
          @include assert {
            @include output {
              @include from-cyan-900(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-cyan-900, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-cyan-950(0.11)") {
          @include assert {
            @include output {
              @include from-cyan-950(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-cyan-950, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-sky-50(0.11)") {
          @include assert {
            @include output {
              @include from-sky-50(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-sky-50, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-sky-100(0.11)") {
          @include assert {
            @include output {
              @include from-sky-100(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-sky-100, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-sky-200(0.11)") {
          @include assert {
            @include output {
              @include from-sky-200(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-sky-200, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-sky-300(0.11)") {
          @include assert {
            @include output {
              @include from-sky-300(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-sky-300, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-sky-400(0.11)") {
          @include assert {
            @include output {
              @include from-sky-400(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-sky-400, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-sky-500(0.11)") {
          @include assert {
            @include output {
              @include from-sky-500(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-sky-500, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-sky-600(0.11)") {
          @include assert {
            @include output {
              @include from-sky-600(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-sky-600, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-sky-700(0.11)") {
          @include assert {
            @include output {
              @include from-sky-700(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-sky-700, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-sky-800(0.11)") {
          @include assert {
            @include output {
              @include from-sky-800(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-sky-800, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-sky-900(0.11)") {
          @include assert {
            @include output {
              @include from-sky-900(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-sky-900, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-sky-950(0.11)") {
          @include assert {
            @include output {
              @include from-sky-950(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-sky-950, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-blue-50(0.11)") {
          @include assert {
            @include output {
              @include from-blue-50(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-blue-50, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-blue-100(0.11)") {
          @include assert {
            @include output {
              @include from-blue-100(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-blue-100, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-blue-200(0.11)") {
          @include assert {
            @include output {
              @include from-blue-200(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-blue-200, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-blue-300(0.11)") {
          @include assert {
            @include output {
              @include from-blue-300(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-blue-300, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-blue-400(0.11)") {
          @include assert {
            @include output {
              @include from-blue-400(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-blue-400, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-blue-500(0.11)") {
          @include assert {
            @include output {
              @include from-blue-500(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-blue-500, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-blue-600(0.11)") {
          @include assert {
            @include output {
              @include from-blue-600(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-blue-600, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-blue-700(0.11)") {
          @include assert {
            @include output {
              @include from-blue-700(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-blue-700, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-blue-800(0.11)") {
          @include assert {
            @include output {
              @include from-blue-800(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-blue-800, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-blue-900(0.11)") {
          @include assert {
            @include output {
              @include from-blue-900(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-blue-900, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-blue-950(0.11)") {
          @include assert {
            @include output {
              @include from-blue-950(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-blue-950, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-indigo-50(0.11)") {
          @include assert {
            @include output {
              @include from-indigo-50(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-indigo-50, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-indigo-100(0.11)") {
          @include assert {
            @include output {
              @include from-indigo-100(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-indigo-100, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-indigo-200(0.11)") {
          @include assert {
            @include output {
              @include from-indigo-200(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-indigo-200, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-indigo-300(0.11)") {
          @include assert {
            @include output {
              @include from-indigo-300(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-indigo-300, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-indigo-400(0.11)") {
          @include assert {
            @include output {
              @include from-indigo-400(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-indigo-400, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-indigo-500(0.11)") {
          @include assert {
            @include output {
              @include from-indigo-500(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-indigo-500, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-indigo-600(0.11)") {
          @include assert {
            @include output {
              @include from-indigo-600(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-indigo-600, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-indigo-700(0.11)") {
          @include assert {
            @include output {
              @include from-indigo-700(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-indigo-700, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-indigo-800(0.11)") {
          @include assert {
            @include output {
              @include from-indigo-800(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-indigo-800, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-indigo-900(0.11)") {
          @include assert {
            @include output {
              @include from-indigo-900(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-indigo-900, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-indigo-950(0.11)") {
          @include assert {
            @include output {
              @include from-indigo-950(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-indigo-950, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-violet-50(0.11)") {
          @include assert {
            @include output {
              @include from-violet-50(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-violet-50, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-violet-100(0.11)") {
          @include assert {
            @include output {
              @include from-violet-100(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-violet-100, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-violet-200(0.11)") {
          @include assert {
            @include output {
              @include from-violet-200(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-violet-200, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-violet-300(0.11)") {
          @include assert {
            @include output {
              @include from-violet-300(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-violet-300, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-violet-400(0.11)") {
          @include assert {
            @include output {
              @include from-violet-400(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-violet-400, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-violet-500(0.11)") {
          @include assert {
            @include output {
              @include from-violet-500(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-violet-500, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-violet-600(0.11)") {
          @include assert {
            @include output {
              @include from-violet-600(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-violet-600, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-violet-700(0.11)") {
          @include assert {
            @include output {
              @include from-violet-700(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-violet-700, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-violet-800(0.11)") {
          @include assert {
            @include output {
              @include from-violet-800(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-violet-800, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-violet-900(0.11)") {
          @include assert {
            @include output {
              @include from-violet-900(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-violet-900, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-violet-950(0.11)") {
          @include assert {
            @include output {
              @include from-violet-950(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-violet-950, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-purple-50(0.11)") {
          @include assert {
            @include output {
              @include from-purple-50(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-purple-50, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-purple-100(0.11)") {
          @include assert {
            @include output {
              @include from-purple-100(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-purple-100, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-purple-200(0.11)") {
          @include assert {
            @include output {
              @include from-purple-200(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-purple-200, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-purple-300(0.11)") {
          @include assert {
            @include output {
              @include from-purple-300(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-purple-300, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-purple-400(0.11)") {
          @include assert {
            @include output {
              @include from-purple-400(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-purple-400, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-purple-500(0.11)") {
          @include assert {
            @include output {
              @include from-purple-500(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-purple-500, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-purple-600(0.11)") {
          @include assert {
            @include output {
              @include from-purple-600(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-purple-600, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-purple-700(0.11)") {
          @include assert {
            @include output {
              @include from-purple-700(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-purple-700, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-purple-800(0.11)") {
          @include assert {
            @include output {
              @include from-purple-800(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-purple-800, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-purple-900(0.11)") {
          @include assert {
            @include output {
              @include from-purple-900(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-purple-900, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-purple-950(0.11)") {
          @include assert {
            @include output {
              @include from-purple-950(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-purple-950, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-fuchsia-50(0.11)") {
          @include assert {
            @include output {
              @include from-fuchsia-50(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-fuchsia-50, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-fuchsia-100(0.11)") {
          @include assert {
            @include output {
              @include from-fuchsia-100(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-fuchsia-100, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-fuchsia-200(0.11)") {
          @include assert {
            @include output {
              @include from-fuchsia-200(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-fuchsia-200, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-fuchsia-300(0.11)") {
          @include assert {
            @include output {
              @include from-fuchsia-300(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-fuchsia-300, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-fuchsia-400(0.11)") {
          @include assert {
            @include output {
              @include from-fuchsia-400(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-fuchsia-400, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-fuchsia-500(0.11)") {
          @include assert {
            @include output {
              @include from-fuchsia-500(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-fuchsia-500, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-fuchsia-600(0.11)") {
          @include assert {
            @include output {
              @include from-fuchsia-600(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-fuchsia-600, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-fuchsia-700(0.11)") {
          @include assert {
            @include output {
              @include from-fuchsia-700(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-fuchsia-700, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-fuchsia-800(0.11)") {
          @include assert {
            @include output {
              @include from-fuchsia-800(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-fuchsia-800, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-fuchsia-900(0.11)") {
          @include assert {
            @include output {
              @include from-fuchsia-900(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-fuchsia-900, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-fuchsia-950(0.11)") {
          @include assert {
            @include output {
              @include from-fuchsia-950(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-fuchsia-950, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-pink-50(0.11)") {
          @include assert {
            @include output {
              @include from-pink-50(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-pink-50, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-pink-100(0.11)") {
          @include assert {
            @include output {
              @include from-pink-100(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-pink-100, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-pink-200(0.11)") {
          @include assert {
            @include output {
              @include from-pink-200(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-pink-200, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-pink-300(0.11)") {
          @include assert {
            @include output {
              @include from-pink-300(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-pink-300, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-pink-400(0.11)") {
          @include assert {
            @include output {
              @include from-pink-400(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-pink-400, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-pink-500(0.11)") {
          @include assert {
            @include output {
              @include from-pink-500(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-pink-500, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-pink-600(0.11)") {
          @include assert {
            @include output {
              @include from-pink-600(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-pink-600, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-pink-700(0.11)") {
          @include assert {
            @include output {
              @include from-pink-700(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-pink-700, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-pink-800(0.11)") {
          @include assert {
            @include output {
              @include from-pink-800(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-pink-800, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-pink-900(0.11)") {
          @include assert {
            @include output {
              @include from-pink-900(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-pink-900, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-pink-950(0.11)") {
          @include assert {
            @include output {
              @include from-pink-950(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-pink-950, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-rose-50(0.11)") {
          @include assert {
            @include output {
              @include from-rose-50(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-rose-50, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-rose-100(0.11)") {
          @include assert {
            @include output {
              @include from-rose-100(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-rose-100, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-rose-200(0.11)") {
          @include assert {
            @include output {
              @include from-rose-200(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-rose-200, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-rose-300(0.11)") {
          @include assert {
            @include output {
              @include from-rose-300(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-rose-300, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-rose-400(0.11)") {
          @include assert {
            @include output {
              @include from-rose-400(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-rose-400, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-rose-500(0.11)") {
          @include assert {
            @include output {
              @include from-rose-500(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-rose-500, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-rose-600(0.11)") {
          @include assert {
            @include output {
              @include from-rose-600(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-rose-600, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-rose-700(0.11)") {
          @include assert {
            @include output {
              @include from-rose-700(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-rose-700, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-rose-800(0.11)") {
          @include assert {
            @include output {
              @include from-rose-800(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-rose-800, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-rose-900(0.11)") {
          @include assert {
            @include output {
              @include from-rose-900(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-rose-900, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-rose-950(0.11)") {
          @include assert {
            @include output {
              @include from-rose-950(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                color.change($color-rose-950, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("from-0\%") {
          @include assert {
            @include output {
              @include from-0\%;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff 0%, transparent);
            }
          }
        }

        @include it("from-5\%") {
          @include assert {
            @include output {
              @include from-5\%;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff 5%, transparent);
            }
          }
        }

        @include it("from-10\%") {
          @include assert {
            @include output {
              @include from-10\%;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff 10%, transparent);
            }
          }
        }

        @include it("from-15\%") {
          @include assert {
            @include output {
              @include from-15\%;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff 15%, transparent);
            }
          }
        }

        @include it("from-20\%") {
          @include assert {
            @include output {
              @include from-20\%;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff 20%, transparent);
            }
          }
        }

        @include it("from-25\%") {
          @include assert {
            @include output {
              @include from-25\%;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff 25%, transparent);
            }
          }
        }

        @include it("from-30\%") {
          @include assert {
            @include output {
              @include from-30\%;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff 30%, transparent);
            }
          }
        }

        @include it("from-35\%") {
          @include assert {
            @include output {
              @include from-35\%;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff 35%, transparent);
            }
          }
        }

        @include it("from-40\%") {
          @include assert {
            @include output {
              @include from-40\%;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff 40%, transparent);
            }
          }
        }

        @include it("from-45\%") {
          @include assert {
            @include output {
              @include from-45\%;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff 45%, transparent);
            }
          }
        }

        @include it("from-50\%") {
          @include assert {
            @include output {
              @include from-50\%;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff 50%, transparent);
            }
          }
        }

        @include it("from-55\%") {
          @include assert {
            @include output {
              @include from-55\%;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff 55%, transparent);
            }
          }
        }

        @include it("from-60\%") {
          @include assert {
            @include output {
              @include from-60\%;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff 60%, transparent);
            }
          }
        }

        @include it("from-65\%") {
          @include assert {
            @include output {
              @include from-65\%;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff 65%, transparent);
            }
          }
        }

        @include it("from-70\%") {
          @include assert {
            @include output {
              @include from-70\%;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff 70%, transparent);
            }
          }
        }

        @include it("from-75\%") {
          @include assert {
            @include output {
              @include from-75\%;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff 75%, transparent);
            }
          }
        }

        @include it("from-80\%") {
          @include assert {
            @include output {
              @include from-80\%;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff 80%, transparent);
            }
          }
        }

        @include it("from-85\%") {
          @include assert {
            @include output {
              @include from-85\%;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff 85%, transparent);
            }
          }
        }

        @include it("from-90\%") {
          @include assert {
            @include output {
              @include from-90\%;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff 90%, transparent);
            }
          }
        }

        @include it("from-95\%") {
          @include assert {
            @include output {
              @include from-95\%;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff 95%, transparent);
            }
          }
        }

        @include it("from-100\%") {
          @include assert {
            @include output {
              @include from-100\%;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff 100%, transparent);
            }
          }
        }
      }

      @include describe("group-via") {
        @include it("via-inherit") {
          @include assert {
            @include output {
              @include via-inherit;
              @include utils_reset;
            }

            @include expect {
              background-image: inherit !important;
            }
          }
        }

        @include it("via-current") {
          @include assert {
            @include output {
              @include via-current;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, currentColor, transparent);
            }
          }
        }

        @include it("via-transparent") {
          @include assert {
            @include output {
              @include via-transparent;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, transparent, transparent);
            }
          }
        }

        @include it("via-black") {
          @include assert {
            @include output {
              @include via-black;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, black, transparent);
            }
          }
        }

        @include it("via-white") {
          @include assert {
            @include output {
              @include via-white;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, white, transparent);
            }
          }
        }

        @include it("via-slate-50") {
          @include assert {
            @include output {
              @include via-slate-50;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-slate-50, transparent);
            }
          }
        }

        @include it("via-slate-100") {
          @include assert {
            @include output {
              @include via-slate-100;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-slate-100, transparent);
            }
          }
        }

        @include it("via-slate-200") {
          @include assert {
            @include output {
              @include via-slate-200;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-slate-200, transparent);
            }
          }
        }

        @include it("via-slate-300") {
          @include assert {
            @include output {
              @include via-slate-300;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-slate-300, transparent);
            }
          }
        }

        @include it("via-slate-400") {
          @include assert {
            @include output {
              @include via-slate-400;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-slate-400, transparent);
            }
          }
        }

        @include it("via-slate-500") {
          @include assert {
            @include output {
              @include via-slate-500;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-slate-500, transparent);
            }
          }
        }

        @include it("via-slate-600") {
          @include assert {
            @include output {
              @include via-slate-600;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-slate-600, transparent);
            }
          }
        }

        @include it("via-slate-700") {
          @include assert {
            @include output {
              @include via-slate-700;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-slate-700, transparent);
            }
          }
        }

        @include it("via-slate-800") {
          @include assert {
            @include output {
              @include via-slate-800;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-slate-800, transparent);
            }
          }
        }

        @include it("via-slate-900") {
          @include assert {
            @include output {
              @include via-slate-900;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-slate-900, transparent);
            }
          }
        }

        @include it("via-slate-950") {
          @include assert {
            @include output {
              @include via-slate-950;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-slate-950, transparent);
            }
          }
        }

        @include it("via-gray-50") {
          @include assert {
            @include output {
              @include via-gray-50;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-gray-50, transparent);
            }
          }
        }

        @include it("via-gray-100") {
          @include assert {
            @include output {
              @include via-gray-100;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-gray-100, transparent);
            }
          }
        }

        @include it("via-gray-200") {
          @include assert {
            @include output {
              @include via-gray-200;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-gray-200, transparent);
            }
          }
        }

        @include it("via-gray-300") {
          @include assert {
            @include output {
              @include via-gray-300;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-gray-300, transparent);
            }
          }
        }

        @include it("via-gray-400") {
          @include assert {
            @include output {
              @include via-gray-400;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-gray-400, transparent);
            }
          }
        }

        @include it("via-gray-500") {
          @include assert {
            @include output {
              @include via-gray-500;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-gray-500, transparent);
            }
          }
        }

        @include it("via-gray-600") {
          @include assert {
            @include output {
              @include via-gray-600;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-gray-600, transparent);
            }
          }
        }

        @include it("via-gray-700") {
          @include assert {
            @include output {
              @include via-gray-700;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-gray-700, transparent);
            }
          }
        }

        @include it("via-gray-800") {
          @include assert {
            @include output {
              @include via-gray-800;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-gray-800, transparent);
            }
          }
        }

        @include it("via-gray-900") {
          @include assert {
            @include output {
              @include via-gray-900;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-gray-900, transparent);
            }
          }
        }

        @include it("via-gray-950") {
          @include assert {
            @include output {
              @include via-gray-950;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-gray-950, transparent);
            }
          }
        }

        @include it("via-zinc-50") {
          @include assert {
            @include output {
              @include via-zinc-50;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-zinc-50, transparent);
            }
          }
        }

        @include it("via-zinc-100") {
          @include assert {
            @include output {
              @include via-zinc-100;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-zinc-100, transparent);
            }
          }
        }

        @include it("via-zinc-200") {
          @include assert {
            @include output {
              @include via-zinc-200;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-zinc-200, transparent);
            }
          }
        }

        @include it("via-zinc-300") {
          @include assert {
            @include output {
              @include via-zinc-300;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-zinc-300, transparent);
            }
          }
        }

        @include it("via-zinc-400") {
          @include assert {
            @include output {
              @include via-zinc-400;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-zinc-400, transparent);
            }
          }
        }

        @include it("via-zinc-500") {
          @include assert {
            @include output {
              @include via-zinc-500;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-zinc-500, transparent);
            }
          }
        }

        @include it("via-zinc-600") {
          @include assert {
            @include output {
              @include via-zinc-600;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-zinc-600, transparent);
            }
          }
        }

        @include it("via-zinc-700") {
          @include assert {
            @include output {
              @include via-zinc-700;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-zinc-700, transparent);
            }
          }
        }

        @include it("via-zinc-800") {
          @include assert {
            @include output {
              @include via-zinc-800;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-zinc-800, transparent);
            }
          }
        }

        @include it("via-zinc-900") {
          @include assert {
            @include output {
              @include via-zinc-900;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-zinc-900, transparent);
            }
          }
        }

        @include it("via-zinc-950") {
          @include assert {
            @include output {
              @include via-zinc-950;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-zinc-950, transparent);
            }
          }
        }

        @include it("via-neutral-50") {
          @include assert {
            @include output {
              @include via-neutral-50;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-neutral-50, transparent);
            }
          }
        }

        @include it("via-neutral-100") {
          @include assert {
            @include output {
              @include via-neutral-100;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-neutral-100, transparent);
            }
          }
        }

        @include it("via-neutral-200") {
          @include assert {
            @include output {
              @include via-neutral-200;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-neutral-200, transparent);
            }
          }
        }

        @include it("via-neutral-300") {
          @include assert {
            @include output {
              @include via-neutral-300;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-neutral-300, transparent);
            }
          }
        }

        @include it("via-neutral-400") {
          @include assert {
            @include output {
              @include via-neutral-400;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-neutral-400, transparent);
            }
          }
        }

        @include it("via-neutral-500") {
          @include assert {
            @include output {
              @include via-neutral-500;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-neutral-500, transparent);
            }
          }
        }

        @include it("via-neutral-600") {
          @include assert {
            @include output {
              @include via-neutral-600;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-neutral-600, transparent);
            }
          }
        }

        @include it("via-neutral-700") {
          @include assert {
            @include output {
              @include via-neutral-700;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-neutral-700, transparent);
            }
          }
        }

        @include it("via-neutral-800") {
          @include assert {
            @include output {
              @include via-neutral-800;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-neutral-800, transparent);
            }
          }
        }

        @include it("via-neutral-900") {
          @include assert {
            @include output {
              @include via-neutral-900;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-neutral-900, transparent);
            }
          }
        }

        @include it("via-neutral-950") {
          @include assert {
            @include output {
              @include via-neutral-950;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-neutral-950, transparent);
            }
          }
        }

        @include it("via-stone-50") {
          @include assert {
            @include output {
              @include via-stone-50;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-stone-50, transparent);
            }
          }
        }

        @include it("via-stone-100") {
          @include assert {
            @include output {
              @include via-stone-100;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-stone-100, transparent);
            }
          }
        }

        @include it("via-stone-200") {
          @include assert {
            @include output {
              @include via-stone-200;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-stone-200, transparent);
            }
          }
        }

        @include it("via-stone-300") {
          @include assert {
            @include output {
              @include via-stone-300;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-stone-300, transparent);
            }
          }
        }

        @include it("via-stone-400") {
          @include assert {
            @include output {
              @include via-stone-400;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-stone-400, transparent);
            }
          }
        }

        @include it("via-stone-500") {
          @include assert {
            @include output {
              @include via-stone-500;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-stone-500, transparent);
            }
          }
        }

        @include it("via-stone-600") {
          @include assert {
            @include output {
              @include via-stone-600;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-stone-600, transparent);
            }
          }
        }

        @include it("via-stone-700") {
          @include assert {
            @include output {
              @include via-stone-700;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-stone-700, transparent);
            }
          }
        }

        @include it("via-stone-800") {
          @include assert {
            @include output {
              @include via-stone-800;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-stone-800, transparent);
            }
          }
        }

        @include it("via-stone-900") {
          @include assert {
            @include output {
              @include via-stone-900;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-stone-900, transparent);
            }
          }
        }

        @include it("via-stone-950") {
          @include assert {
            @include output {
              @include via-stone-950;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-stone-950, transparent);
            }
          }
        }

        @include it("via-red-50") {
          @include assert {
            @include output {
              @include via-red-50;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-red-50, transparent);
            }
          }
        }

        @include it("via-red-100") {
          @include assert {
            @include output {
              @include via-red-100;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-red-100, transparent);
            }
          }
        }

        @include it("via-red-200") {
          @include assert {
            @include output {
              @include via-red-200;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-red-200, transparent);
            }
          }
        }

        @include it("via-red-300") {
          @include assert {
            @include output {
              @include via-red-300;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-red-300, transparent);
            }
          }
        }

        @include it("via-red-400") {
          @include assert {
            @include output {
              @include via-red-400;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-red-400, transparent);
            }
          }
        }

        @include it("via-red-500") {
          @include assert {
            @include output {
              @include via-red-500;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-red-500, transparent);
            }
          }
        }

        @include it("via-red-600") {
          @include assert {
            @include output {
              @include via-red-600;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-red-600, transparent);
            }
          }
        }

        @include it("via-red-700") {
          @include assert {
            @include output {
              @include via-red-700;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-red-700, transparent);
            }
          }
        }

        @include it("via-red-800") {
          @include assert {
            @include output {
              @include via-red-800;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-red-800, transparent);
            }
          }
        }

        @include it("via-red-900") {
          @include assert {
            @include output {
              @include via-red-900;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-red-900, transparent);
            }
          }
        }

        @include it("via-red-950") {
          @include assert {
            @include output {
              @include via-red-950;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-red-950, transparent);
            }
          }
        }

        @include it("via-orange-50") {
          @include assert {
            @include output {
              @include via-orange-50;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-orange-50, transparent);
            }
          }
        }

        @include it("via-orange-100") {
          @include assert {
            @include output {
              @include via-orange-100;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-orange-100, transparent);
            }
          }
        }

        @include it("via-orange-200") {
          @include assert {
            @include output {
              @include via-orange-200;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-orange-200, transparent);
            }
          }
        }

        @include it("via-orange-300") {
          @include assert {
            @include output {
              @include via-orange-300;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-orange-300, transparent);
            }
          }
        }

        @include it("via-orange-400") {
          @include assert {
            @include output {
              @include via-orange-400;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-orange-400, transparent);
            }
          }
        }

        @include it("via-orange-500") {
          @include assert {
            @include output {
              @include via-orange-500;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-orange-500, transparent);
            }
          }
        }

        @include it("via-orange-600") {
          @include assert {
            @include output {
              @include via-orange-600;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-orange-600, transparent);
            }
          }
        }

        @include it("via-orange-700") {
          @include assert {
            @include output {
              @include via-orange-700;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-orange-700, transparent);
            }
          }
        }

        @include it("via-orange-800") {
          @include assert {
            @include output {
              @include via-orange-800;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-orange-800, transparent);
            }
          }
        }

        @include it("via-orange-900") {
          @include assert {
            @include output {
              @include via-orange-900;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-orange-900, transparent);
            }
          }
        }

        @include it("via-orange-950") {
          @include assert {
            @include output {
              @include via-orange-950;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-orange-950, transparent);
            }
          }
        }

        @include it("via-amber-50") {
          @include assert {
            @include output {
              @include via-amber-50;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-amber-50, transparent);
            }
          }
        }

        @include it("via-amber-100") {
          @include assert {
            @include output {
              @include via-amber-100;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-amber-100, transparent);
            }
          }
        }

        @include it("via-amber-200") {
          @include assert {
            @include output {
              @include via-amber-200;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-amber-200, transparent);
            }
          }
        }

        @include it("via-amber-300") {
          @include assert {
            @include output {
              @include via-amber-300;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-amber-300, transparent);
            }
          }
        }

        @include it("via-amber-400") {
          @include assert {
            @include output {
              @include via-amber-400;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-amber-400, transparent);
            }
          }
        }

        @include it("via-amber-500") {
          @include assert {
            @include output {
              @include via-amber-500;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-amber-500, transparent);
            }
          }
        }

        @include it("via-amber-600") {
          @include assert {
            @include output {
              @include via-amber-600;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-amber-600, transparent);
            }
          }
        }

        @include it("via-amber-700") {
          @include assert {
            @include output {
              @include via-amber-700;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-amber-700, transparent);
            }
          }
        }

        @include it("via-amber-800") {
          @include assert {
            @include output {
              @include via-amber-800;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-amber-800, transparent);
            }
          }
        }

        @include it("via-amber-900") {
          @include assert {
            @include output {
              @include via-amber-900;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-amber-900, transparent);
            }
          }
        }

        @include it("via-amber-950") {
          @include assert {
            @include output {
              @include via-amber-950;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-amber-950, transparent);
            }
          }
        }

        @include it("via-yellow-50") {
          @include assert {
            @include output {
              @include via-yellow-50;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-yellow-50, transparent);
            }
          }
        }

        @include it("via-yellow-100") {
          @include assert {
            @include output {
              @include via-yellow-100;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-yellow-100, transparent);
            }
          }
        }

        @include it("via-yellow-200") {
          @include assert {
            @include output {
              @include via-yellow-200;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-yellow-200, transparent);
            }
          }
        }

        @include it("via-yellow-300") {
          @include assert {
            @include output {
              @include via-yellow-300;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-yellow-300, transparent);
            }
          }
        }

        @include it("via-yellow-400") {
          @include assert {
            @include output {
              @include via-yellow-400;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-yellow-400, transparent);
            }
          }
        }

        @include it("via-yellow-500") {
          @include assert {
            @include output {
              @include via-yellow-500;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-yellow-500, transparent);
            }
          }
        }

        @include it("via-yellow-600") {
          @include assert {
            @include output {
              @include via-yellow-600;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-yellow-600, transparent);
            }
          }
        }

        @include it("via-yellow-700") {
          @include assert {
            @include output {
              @include via-yellow-700;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-yellow-700, transparent);
            }
          }
        }

        @include it("via-yellow-800") {
          @include assert {
            @include output {
              @include via-yellow-800;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-yellow-800, transparent);
            }
          }
        }

        @include it("via-yellow-900") {
          @include assert {
            @include output {
              @include via-yellow-900;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-yellow-900, transparent);
            }
          }
        }

        @include it("via-yellow-950") {
          @include assert {
            @include output {
              @include via-yellow-950;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-yellow-950, transparent);
            }
          }
        }

        @include it("via-lime-50") {
          @include assert {
            @include output {
              @include via-lime-50;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-lime-50, transparent);
            }
          }
        }

        @include it("via-lime-100") {
          @include assert {
            @include output {
              @include via-lime-100;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-lime-100, transparent);
            }
          }
        }

        @include it("via-lime-200") {
          @include assert {
            @include output {
              @include via-lime-200;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-lime-200, transparent);
            }
          }
        }

        @include it("via-lime-300") {
          @include assert {
            @include output {
              @include via-lime-300;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-lime-300, transparent);
            }
          }
        }

        @include it("via-lime-400") {
          @include assert {
            @include output {
              @include via-lime-400;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-lime-400, transparent);
            }
          }
        }

        @include it("via-lime-500") {
          @include assert {
            @include output {
              @include via-lime-500;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-lime-500, transparent);
            }
          }
        }

        @include it("via-lime-600") {
          @include assert {
            @include output {
              @include via-lime-600;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-lime-600, transparent);
            }
          }
        }

        @include it("via-lime-700") {
          @include assert {
            @include output {
              @include via-lime-700;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-lime-700, transparent);
            }
          }
        }

        @include it("via-lime-800") {
          @include assert {
            @include output {
              @include via-lime-800;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-lime-800, transparent);
            }
          }
        }

        @include it("via-lime-900") {
          @include assert {
            @include output {
              @include via-lime-900;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-lime-900, transparent);
            }
          }
        }

        @include it("via-lime-950") {
          @include assert {
            @include output {
              @include via-lime-950;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-lime-950, transparent);
            }
          }
        }

        @include it("via-green-50") {
          @include assert {
            @include output {
              @include via-green-50;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-green-50, transparent);
            }
          }
        }

        @include it("via-green-100") {
          @include assert {
            @include output {
              @include via-green-100;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-green-100, transparent);
            }
          }
        }

        @include it("via-green-200") {
          @include assert {
            @include output {
              @include via-green-200;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-green-200, transparent);
            }
          }
        }

        @include it("via-green-300") {
          @include assert {
            @include output {
              @include via-green-300;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-green-300, transparent);
            }
          }
        }

        @include it("via-green-400") {
          @include assert {
            @include output {
              @include via-green-400;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-green-400, transparent);
            }
          }
        }

        @include it("via-green-500") {
          @include assert {
            @include output {
              @include via-green-500;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-green-500, transparent);
            }
          }
        }

        @include it("via-green-600") {
          @include assert {
            @include output {
              @include via-green-600;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-green-600, transparent);
            }
          }
        }

        @include it("via-green-700") {
          @include assert {
            @include output {
              @include via-green-700;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-green-700, transparent);
            }
          }
        }

        @include it("via-green-800") {
          @include assert {
            @include output {
              @include via-green-800;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-green-800, transparent);
            }
          }
        }

        @include it("via-green-900") {
          @include assert {
            @include output {
              @include via-green-900;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-green-900, transparent);
            }
          }
        }

        @include it("via-green-950") {
          @include assert {
            @include output {
              @include via-green-950;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-green-950, transparent);
            }
          }
        }

        @include it("via-emerald-50") {
          @include assert {
            @include output {
              @include via-emerald-50;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-emerald-50, transparent);
            }
          }
        }

        @include it("via-emerald-100") {
          @include assert {
            @include output {
              @include via-emerald-100;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-emerald-100, transparent);
            }
          }
        }

        @include it("via-emerald-200") {
          @include assert {
            @include output {
              @include via-emerald-200;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-emerald-200, transparent);
            }
          }
        }

        @include it("via-emerald-300") {
          @include assert {
            @include output {
              @include via-emerald-300;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-emerald-300, transparent);
            }
          }
        }

        @include it("via-emerald-400") {
          @include assert {
            @include output {
              @include via-emerald-400;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-emerald-400, transparent);
            }
          }
        }

        @include it("via-emerald-500") {
          @include assert {
            @include output {
              @include via-emerald-500;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-emerald-500, transparent);
            }
          }
        }

        @include it("via-emerald-600") {
          @include assert {
            @include output {
              @include via-emerald-600;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-emerald-600, transparent);
            }
          }
        }

        @include it("via-emerald-700") {
          @include assert {
            @include output {
              @include via-emerald-700;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-emerald-700, transparent);
            }
          }
        }

        @include it("via-emerald-800") {
          @include assert {
            @include output {
              @include via-emerald-800;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-emerald-800, transparent);
            }
          }
        }

        @include it("via-emerald-900") {
          @include assert {
            @include output {
              @include via-emerald-900;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-emerald-900, transparent);
            }
          }
        }

        @include it("via-emerald-950") {
          @include assert {
            @include output {
              @include via-emerald-950;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-emerald-950, transparent);
            }
          }
        }

        @include it("via-teal-50") {
          @include assert {
            @include output {
              @include via-teal-50;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-teal-50, transparent);
            }
          }
        }

        @include it("via-teal-100") {
          @include assert {
            @include output {
              @include via-teal-100;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-teal-100, transparent);
            }
          }
        }

        @include it("via-teal-200") {
          @include assert {
            @include output {
              @include via-teal-200;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-teal-200, transparent);
            }
          }
        }

        @include it("via-teal-300") {
          @include assert {
            @include output {
              @include via-teal-300;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-teal-300, transparent);
            }
          }
        }

        @include it("via-teal-400") {
          @include assert {
            @include output {
              @include via-teal-400;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-teal-400, transparent);
            }
          }
        }

        @include it("via-teal-500") {
          @include assert {
            @include output {
              @include via-teal-500;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-teal-500, transparent);
            }
          }
        }

        @include it("via-teal-600") {
          @include assert {
            @include output {
              @include via-teal-600;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-teal-600, transparent);
            }
          }
        }

        @include it("via-teal-700") {
          @include assert {
            @include output {
              @include via-teal-700;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-teal-700, transparent);
            }
          }
        }

        @include it("via-teal-800") {
          @include assert {
            @include output {
              @include via-teal-800;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-teal-800, transparent);
            }
          }
        }

        @include it("via-teal-900") {
          @include assert {
            @include output {
              @include via-teal-900;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-teal-900, transparent);
            }
          }
        }

        @include it("via-teal-950") {
          @include assert {
            @include output {
              @include via-teal-950;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-teal-950, transparent);
            }
          }
        }

        @include it("via-cyan-50") {
          @include assert {
            @include output {
              @include via-cyan-50;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-cyan-50, transparent);
            }
          }
        }

        @include it("via-cyan-100") {
          @include assert {
            @include output {
              @include via-cyan-100;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-cyan-100, transparent);
            }
          }
        }

        @include it("via-cyan-200") {
          @include assert {
            @include output {
              @include via-cyan-200;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-cyan-200, transparent);
            }
          }
        }

        @include it("via-cyan-300") {
          @include assert {
            @include output {
              @include via-cyan-300;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-cyan-300, transparent);
            }
          }
        }

        @include it("via-cyan-400") {
          @include assert {
            @include output {
              @include via-cyan-400;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-cyan-400, transparent);
            }
          }
        }

        @include it("via-cyan-500") {
          @include assert {
            @include output {
              @include via-cyan-500;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-cyan-500, transparent);
            }
          }
        }

        @include it("via-cyan-600") {
          @include assert {
            @include output {
              @include via-cyan-600;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-cyan-600, transparent);
            }
          }
        }

        @include it("via-cyan-700") {
          @include assert {
            @include output {
              @include via-cyan-700;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-cyan-700, transparent);
            }
          }
        }

        @include it("via-cyan-800") {
          @include assert {
            @include output {
              @include via-cyan-800;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-cyan-800, transparent);
            }
          }
        }

        @include it("via-cyan-900") {
          @include assert {
            @include output {
              @include via-cyan-900;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-cyan-900, transparent);
            }
          }
        }

        @include it("via-cyan-950") {
          @include assert {
            @include output {
              @include via-cyan-950;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-cyan-950, transparent);
            }
          }
        }

        @include it("via-sky-50") {
          @include assert {
            @include output {
              @include via-sky-50;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-sky-50, transparent);
            }
          }
        }

        @include it("via-sky-100") {
          @include assert {
            @include output {
              @include via-sky-100;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-sky-100, transparent);
            }
          }
        }

        @include it("via-sky-200") {
          @include assert {
            @include output {
              @include via-sky-200;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-sky-200, transparent);
            }
          }
        }

        @include it("via-sky-300") {
          @include assert {
            @include output {
              @include via-sky-300;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-sky-300, transparent);
            }
          }
        }

        @include it("via-sky-400") {
          @include assert {
            @include output {
              @include via-sky-400;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-sky-400, transparent);
            }
          }
        }

        @include it("via-sky-500") {
          @include assert {
            @include output {
              @include via-sky-500;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-sky-500, transparent);
            }
          }
        }

        @include it("via-sky-600") {
          @include assert {
            @include output {
              @include via-sky-600;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-sky-600, transparent);
            }
          }
        }

        @include it("via-sky-700") {
          @include assert {
            @include output {
              @include via-sky-700;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-sky-700, transparent);
            }
          }
        }

        @include it("via-sky-800") {
          @include assert {
            @include output {
              @include via-sky-800;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-sky-800, transparent);
            }
          }
        }

        @include it("via-sky-900") {
          @include assert {
            @include output {
              @include via-sky-900;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-sky-900, transparent);
            }
          }
        }

        @include it("via-sky-950") {
          @include assert {
            @include output {
              @include via-sky-950;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-sky-950, transparent);
            }
          }
        }

        @include it("via-blue-50") {
          @include assert {
            @include output {
              @include via-blue-50;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-blue-50, transparent);
            }
          }
        }

        @include it("via-blue-100") {
          @include assert {
            @include output {
              @include via-blue-100;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-blue-100, transparent);
            }
          }
        }

        @include it("via-blue-200") {
          @include assert {
            @include output {
              @include via-blue-200;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-blue-200, transparent);
            }
          }
        }

        @include it("via-blue-300") {
          @include assert {
            @include output {
              @include via-blue-300;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-blue-300, transparent);
            }
          }
        }

        @include it("via-blue-400") {
          @include assert {
            @include output {
              @include via-blue-400;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-blue-400, transparent);
            }
          }
        }

        @include it("via-blue-500") {
          @include assert {
            @include output {
              @include via-blue-500;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-blue-500, transparent);
            }
          }
        }

        @include it("via-blue-600") {
          @include assert {
            @include output {
              @include via-blue-600;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-blue-600, transparent);
            }
          }
        }

        @include it("via-blue-700") {
          @include assert {
            @include output {
              @include via-blue-700;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-blue-700, transparent);
            }
          }
        }

        @include it("via-blue-800") {
          @include assert {
            @include output {
              @include via-blue-800;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-blue-800, transparent);
            }
          }
        }

        @include it("via-blue-900") {
          @include assert {
            @include output {
              @include via-blue-900;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-blue-900, transparent);
            }
          }
        }

        @include it("via-blue-950") {
          @include assert {
            @include output {
              @include via-blue-950;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-blue-950, transparent);
            }
          }
        }

        @include it("via-indigo-50") {
          @include assert {
            @include output {
              @include via-indigo-50;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-indigo-50, transparent);
            }
          }
        }

        @include it("via-indigo-100") {
          @include assert {
            @include output {
              @include via-indigo-100;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-indigo-100, transparent);
            }
          }
        }

        @include it("via-indigo-200") {
          @include assert {
            @include output {
              @include via-indigo-200;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-indigo-200, transparent);
            }
          }
        }

        @include it("via-indigo-300") {
          @include assert {
            @include output {
              @include via-indigo-300;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-indigo-300, transparent);
            }
          }
        }

        @include it("via-indigo-400") {
          @include assert {
            @include output {
              @include via-indigo-400;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-indigo-400, transparent);
            }
          }
        }

        @include it("via-indigo-500") {
          @include assert {
            @include output {
              @include via-indigo-500;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-indigo-500, transparent);
            }
          }
        }

        @include it("via-indigo-600") {
          @include assert {
            @include output {
              @include via-indigo-600;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-indigo-600, transparent);
            }
          }
        }

        @include it("via-indigo-700") {
          @include assert {
            @include output {
              @include via-indigo-700;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-indigo-700, transparent);
            }
          }
        }

        @include it("via-indigo-800") {
          @include assert {
            @include output {
              @include via-indigo-800;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-indigo-800, transparent);
            }
          }
        }

        @include it("via-indigo-900") {
          @include assert {
            @include output {
              @include via-indigo-900;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-indigo-900, transparent);
            }
          }
        }

        @include it("via-indigo-950") {
          @include assert {
            @include output {
              @include via-indigo-950;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-indigo-950, transparent);
            }
          }
        }

        @include it("via-violet-50") {
          @include assert {
            @include output {
              @include via-violet-50;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-violet-50, transparent);
            }
          }
        }

        @include it("via-violet-100") {
          @include assert {
            @include output {
              @include via-violet-100;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-violet-100, transparent);
            }
          }
        }

        @include it("via-violet-200") {
          @include assert {
            @include output {
              @include via-violet-200;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-violet-200, transparent);
            }
          }
        }

        @include it("via-violet-300") {
          @include assert {
            @include output {
              @include via-violet-300;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-violet-300, transparent);
            }
          }
        }

        @include it("via-violet-400") {
          @include assert {
            @include output {
              @include via-violet-400;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-violet-400, transparent);
            }
          }
        }

        @include it("via-violet-500") {
          @include assert {
            @include output {
              @include via-violet-500;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-violet-500, transparent);
            }
          }
        }

        @include it("via-violet-600") {
          @include assert {
            @include output {
              @include via-violet-600;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-violet-600, transparent);
            }
          }
        }

        @include it("via-violet-700") {
          @include assert {
            @include output {
              @include via-violet-700;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-violet-700, transparent);
            }
          }
        }

        @include it("via-violet-800") {
          @include assert {
            @include output {
              @include via-violet-800;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-violet-800, transparent);
            }
          }
        }

        @include it("via-violet-900") {
          @include assert {
            @include output {
              @include via-violet-900;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-violet-900, transparent);
            }
          }
        }

        @include it("via-violet-950") {
          @include assert {
            @include output {
              @include via-violet-950;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-violet-950, transparent);
            }
          }
        }

        @include it("via-purple-50") {
          @include assert {
            @include output {
              @include via-purple-50;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-purple-50, transparent);
            }
          }
        }

        @include it("via-purple-100") {
          @include assert {
            @include output {
              @include via-purple-100;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-purple-100, transparent);
            }
          }
        }

        @include it("via-purple-200") {
          @include assert {
            @include output {
              @include via-purple-200;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-purple-200, transparent);
            }
          }
        }

        @include it("via-purple-300") {
          @include assert {
            @include output {
              @include via-purple-300;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-purple-300, transparent);
            }
          }
        }

        @include it("via-purple-400") {
          @include assert {
            @include output {
              @include via-purple-400;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-purple-400, transparent);
            }
          }
        }

        @include it("via-purple-500") {
          @include assert {
            @include output {
              @include via-purple-500;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-purple-500, transparent);
            }
          }
        }

        @include it("via-purple-600") {
          @include assert {
            @include output {
              @include via-purple-600;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-purple-600, transparent);
            }
          }
        }

        @include it("via-purple-700") {
          @include assert {
            @include output {
              @include via-purple-700;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-purple-700, transparent);
            }
          }
        }

        @include it("via-purple-800") {
          @include assert {
            @include output {
              @include via-purple-800;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-purple-800, transparent);
            }
          }
        }

        @include it("via-purple-900") {
          @include assert {
            @include output {
              @include via-purple-900;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-purple-900, transparent);
            }
          }
        }

        @include it("via-purple-950") {
          @include assert {
            @include output {
              @include via-purple-950;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-purple-950, transparent);
            }
          }
        }

        @include it("via-fuchsia-50") {
          @include assert {
            @include output {
              @include via-fuchsia-50;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-fuchsia-50, transparent);
            }
          }
        }

        @include it("via-fuchsia-100") {
          @include assert {
            @include output {
              @include via-fuchsia-100;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-fuchsia-100, transparent);
            }
          }
        }

        @include it("via-fuchsia-200") {
          @include assert {
            @include output {
              @include via-fuchsia-200;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-fuchsia-200, transparent);
            }
          }
        }

        @include it("via-fuchsia-300") {
          @include assert {
            @include output {
              @include via-fuchsia-300;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-fuchsia-300, transparent);
            }
          }
        }

        @include it("via-fuchsia-400") {
          @include assert {
            @include output {
              @include via-fuchsia-400;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-fuchsia-400, transparent);
            }
          }
        }

        @include it("via-fuchsia-500") {
          @include assert {
            @include output {
              @include via-fuchsia-500;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-fuchsia-500, transparent);
            }
          }
        }

        @include it("via-fuchsia-600") {
          @include assert {
            @include output {
              @include via-fuchsia-600;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-fuchsia-600, transparent);
            }
          }
        }

        @include it("via-fuchsia-700") {
          @include assert {
            @include output {
              @include via-fuchsia-700;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-fuchsia-700, transparent);
            }
          }
        }

        @include it("via-fuchsia-800") {
          @include assert {
            @include output {
              @include via-fuchsia-800;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-fuchsia-800, transparent);
            }
          }
        }

        @include it("via-fuchsia-900") {
          @include assert {
            @include output {
              @include via-fuchsia-900;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-fuchsia-900, transparent);
            }
          }
        }

        @include it("via-fuchsia-950") {
          @include assert {
            @include output {
              @include via-fuchsia-950;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-fuchsia-950, transparent);
            }
          }
        }

        @include it("via-pink-50") {
          @include assert {
            @include output {
              @include via-pink-50;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-pink-50, transparent);
            }
          }
        }

        @include it("via-pink-100") {
          @include assert {
            @include output {
              @include via-pink-100;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-pink-100, transparent);
            }
          }
        }

        @include it("via-pink-200") {
          @include assert {
            @include output {
              @include via-pink-200;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-pink-200, transparent);
            }
          }
        }

        @include it("via-pink-300") {
          @include assert {
            @include output {
              @include via-pink-300;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-pink-300, transparent);
            }
          }
        }

        @include it("via-pink-400") {
          @include assert {
            @include output {
              @include via-pink-400;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-pink-400, transparent);
            }
          }
        }

        @include it("via-pink-500") {
          @include assert {
            @include output {
              @include via-pink-500;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-pink-500, transparent);
            }
          }
        }

        @include it("via-pink-600") {
          @include assert {
            @include output {
              @include via-pink-600;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-pink-600, transparent);
            }
          }
        }

        @include it("via-pink-700") {
          @include assert {
            @include output {
              @include via-pink-700;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-pink-700, transparent);
            }
          }
        }

        @include it("via-pink-800") {
          @include assert {
            @include output {
              @include via-pink-800;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-pink-800, transparent);
            }
          }
        }

        @include it("via-pink-900") {
          @include assert {
            @include output {
              @include via-pink-900;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-pink-900, transparent);
            }
          }
        }

        @include it("via-pink-950") {
          @include assert {
            @include output {
              @include via-pink-950;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-pink-950, transparent);
            }
          }
        }

        @include it("via-rose-50") {
          @include assert {
            @include output {
              @include via-rose-50;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-rose-50, transparent);
            }
          }
        }

        @include it("via-rose-100") {
          @include assert {
            @include output {
              @include via-rose-100;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-rose-100, transparent);
            }
          }
        }

        @include it("via-rose-200") {
          @include assert {
            @include output {
              @include via-rose-200;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-rose-200, transparent);
            }
          }
        }

        @include it("via-rose-300") {
          @include assert {
            @include output {
              @include via-rose-300;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-rose-300, transparent);
            }
          }
        }

        @include it("via-rose-400") {
          @include assert {
            @include output {
              @include via-rose-400;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-rose-400, transparent);
            }
          }
        }

        @include it("via-rose-500") {
          @include assert {
            @include output {
              @include via-rose-500;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-rose-500, transparent);
            }
          }
        }

        @include it("via-rose-600") {
          @include assert {
            @include output {
              @include via-rose-600;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-rose-600, transparent);
            }
          }
        }

        @include it("via-rose-700") {
          @include assert {
            @include output {
              @include via-rose-700;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-rose-700, transparent);
            }
          }
        }

        @include it("via-rose-800") {
          @include assert {
            @include output {
              @include via-rose-800;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-rose-800, transparent);
            }
          }
        }

        @include it("via-rose-900") {
          @include assert {
            @include output {
              @include via-rose-900;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-rose-900, transparent);
            }
          }
        }

        @include it("via-rose-950") {
          @include assert {
            @include output {
              @include via-rose-950;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-rose-950, transparent);
            }
          }
        }

        @include it("via-black(0.11)") {
          @include assert {
            @include output {
              @include via-black(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#000, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-white(0.11)") {
          @include assert {
            @include output {
              @include via-white(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change(#fff, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-slate-50(0.11)") {
          @include assert {
            @include output {
              @include via-slate-50(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-slate-50, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-slate-100(0.11)") {
          @include assert {
            @include output {
              @include via-slate-100(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-slate-100, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-slate-200(0.11)") {
          @include assert {
            @include output {
              @include via-slate-200(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-slate-200, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-slate-300(0.11)") {
          @include assert {
            @include output {
              @include via-slate-300(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-slate-300, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-slate-400(0.11)") {
          @include assert {
            @include output {
              @include via-slate-400(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-slate-400, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-slate-500(0.11)") {
          @include assert {
            @include output {
              @include via-slate-500(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-slate-500, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-slate-600(0.11)") {
          @include assert {
            @include output {
              @include via-slate-600(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-slate-600, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-slate-700(0.11)") {
          @include assert {
            @include output {
              @include via-slate-700(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-slate-700, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-slate-800(0.11)") {
          @include assert {
            @include output {
              @include via-slate-800(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-slate-800, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-slate-900(0.11)") {
          @include assert {
            @include output {
              @include via-slate-900(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-slate-900, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-slate-950(0.11)") {
          @include assert {
            @include output {
              @include via-slate-950(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-slate-950, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-gray-50(0.11)") {
          @include assert {
            @include output {
              @include via-gray-50(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-gray-50, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-gray-100(0.11)") {
          @include assert {
            @include output {
              @include via-gray-100(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-gray-100, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-gray-200(0.11)") {
          @include assert {
            @include output {
              @include via-gray-200(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-gray-200, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-gray-300(0.11)") {
          @include assert {
            @include output {
              @include via-gray-300(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-gray-300, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-gray-400(0.11)") {
          @include assert {
            @include output {
              @include via-gray-400(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-gray-400, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-gray-500(0.11)") {
          @include assert {
            @include output {
              @include via-gray-500(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-gray-500, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-gray-600(0.11)") {
          @include assert {
            @include output {
              @include via-gray-600(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-gray-600, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-gray-700(0.11)") {
          @include assert {
            @include output {
              @include via-gray-700(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-gray-700, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-gray-800(0.11)") {
          @include assert {
            @include output {
              @include via-gray-800(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-gray-800, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-gray-900(0.11)") {
          @include assert {
            @include output {
              @include via-gray-900(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-gray-900, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-gray-950(0.11)") {
          @include assert {
            @include output {
              @include via-gray-950(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-gray-950, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-zinc-50(0.11)") {
          @include assert {
            @include output {
              @include via-zinc-50(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-zinc-50, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-zinc-100(0.11)") {
          @include assert {
            @include output {
              @include via-zinc-100(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-zinc-100, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-zinc-200(0.11)") {
          @include assert {
            @include output {
              @include via-zinc-200(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-zinc-200, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-zinc-300(0.11)") {
          @include assert {
            @include output {
              @include via-zinc-300(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-zinc-300, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-zinc-400(0.11)") {
          @include assert {
            @include output {
              @include via-zinc-400(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-zinc-400, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-zinc-500(0.11)") {
          @include assert {
            @include output {
              @include via-zinc-500(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-zinc-500, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-zinc-600(0.11)") {
          @include assert {
            @include output {
              @include via-zinc-600(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-zinc-600, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-zinc-700(0.11)") {
          @include assert {
            @include output {
              @include via-zinc-700(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-zinc-700, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-zinc-800(0.11)") {
          @include assert {
            @include output {
              @include via-zinc-800(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-zinc-800, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-zinc-900(0.11)") {
          @include assert {
            @include output {
              @include via-zinc-900(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-zinc-900, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-zinc-950(0.11)") {
          @include assert {
            @include output {
              @include via-zinc-950(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-zinc-950, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-neutral-50(0.11)") {
          @include assert {
            @include output {
              @include via-neutral-50(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-neutral-50, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-neutral-100(0.11)") {
          @include assert {
            @include output {
              @include via-neutral-100(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-neutral-100, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-neutral-200(0.11)") {
          @include assert {
            @include output {
              @include via-neutral-200(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-neutral-200, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-neutral-300(0.11)") {
          @include assert {
            @include output {
              @include via-neutral-300(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-neutral-300, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-neutral-400(0.11)") {
          @include assert {
            @include output {
              @include via-neutral-400(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-neutral-400, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-neutral-500(0.11)") {
          @include assert {
            @include output {
              @include via-neutral-500(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-neutral-500, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-neutral-600(0.11)") {
          @include assert {
            @include output {
              @include via-neutral-600(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-neutral-600, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-neutral-700(0.11)") {
          @include assert {
            @include output {
              @include via-neutral-700(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-neutral-700, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-neutral-800(0.11)") {
          @include assert {
            @include output {
              @include via-neutral-800(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-neutral-800, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-neutral-900(0.11)") {
          @include assert {
            @include output {
              @include via-neutral-900(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-neutral-900, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-neutral-950(0.11)") {
          @include assert {
            @include output {
              @include via-neutral-950(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-neutral-950, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-stone-50(0.11)") {
          @include assert {
            @include output {
              @include via-stone-50(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-stone-50, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-stone-100(0.11)") {
          @include assert {
            @include output {
              @include via-stone-100(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-stone-100, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-stone-200(0.11)") {
          @include assert {
            @include output {
              @include via-stone-200(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-stone-200, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-stone-300(0.11)") {
          @include assert {
            @include output {
              @include via-stone-300(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-stone-300, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-stone-400(0.11)") {
          @include assert {
            @include output {
              @include via-stone-400(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-stone-400, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-stone-500(0.11)") {
          @include assert {
            @include output {
              @include via-stone-500(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-stone-500, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-stone-600(0.11)") {
          @include assert {
            @include output {
              @include via-stone-600(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-stone-600, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-stone-700(0.11)") {
          @include assert {
            @include output {
              @include via-stone-700(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-stone-700, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-stone-800(0.11)") {
          @include assert {
            @include output {
              @include via-stone-800(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-stone-800, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-stone-900(0.11)") {
          @include assert {
            @include output {
              @include via-stone-900(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-stone-900, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-stone-950(0.11)") {
          @include assert {
            @include output {
              @include via-stone-950(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-stone-950, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-red-50(0.11)") {
          @include assert {
            @include output {
              @include via-red-50(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-red-50, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-red-100(0.11)") {
          @include assert {
            @include output {
              @include via-red-100(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-red-100, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-red-200(0.11)") {
          @include assert {
            @include output {
              @include via-red-200(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-red-200, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-red-300(0.11)") {
          @include assert {
            @include output {
              @include via-red-300(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-red-300, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-red-400(0.11)") {
          @include assert {
            @include output {
              @include via-red-400(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-red-400, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-red-500(0.11)") {
          @include assert {
            @include output {
              @include via-red-500(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-red-500, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-red-600(0.11)") {
          @include assert {
            @include output {
              @include via-red-600(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-red-600, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-red-700(0.11)") {
          @include assert {
            @include output {
              @include via-red-700(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-red-700, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-red-800(0.11)") {
          @include assert {
            @include output {
              @include via-red-800(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-red-800, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-red-900(0.11)") {
          @include assert {
            @include output {
              @include via-red-900(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-red-900, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-red-950(0.11)") {
          @include assert {
            @include output {
              @include via-red-950(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-red-950, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-orange-50(0.11)") {
          @include assert {
            @include output {
              @include via-orange-50(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-orange-50, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-orange-100(0.11)") {
          @include assert {
            @include output {
              @include via-orange-100(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-orange-100, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-orange-200(0.11)") {
          @include assert {
            @include output {
              @include via-orange-200(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-orange-200, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-orange-300(0.11)") {
          @include assert {
            @include output {
              @include via-orange-300(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-orange-300, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-orange-400(0.11)") {
          @include assert {
            @include output {
              @include via-orange-400(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-orange-400, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-orange-500(0.11)") {
          @include assert {
            @include output {
              @include via-orange-500(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-orange-500, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-orange-600(0.11)") {
          @include assert {
            @include output {
              @include via-orange-600(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-orange-600, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-orange-700(0.11)") {
          @include assert {
            @include output {
              @include via-orange-700(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-orange-700, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-orange-800(0.11)") {
          @include assert {
            @include output {
              @include via-orange-800(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-orange-800, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-orange-900(0.11)") {
          @include assert {
            @include output {
              @include via-orange-900(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-orange-900, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-orange-950(0.11)") {
          @include assert {
            @include output {
              @include via-orange-950(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-orange-950, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-amber-50(0.11)") {
          @include assert {
            @include output {
              @include via-amber-50(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-amber-50, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-amber-100(0.11)") {
          @include assert {
            @include output {
              @include via-amber-100(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-amber-100, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-amber-200(0.11)") {
          @include assert {
            @include output {
              @include via-amber-200(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-amber-200, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-amber-300(0.11)") {
          @include assert {
            @include output {
              @include via-amber-300(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-amber-300, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-amber-400(0.11)") {
          @include assert {
            @include output {
              @include via-amber-400(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-amber-400, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-amber-500(0.11)") {
          @include assert {
            @include output {
              @include via-amber-500(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-amber-500, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-amber-600(0.11)") {
          @include assert {
            @include output {
              @include via-amber-600(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-amber-600, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-amber-700(0.11)") {
          @include assert {
            @include output {
              @include via-amber-700(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-amber-700, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-amber-800(0.11)") {
          @include assert {
            @include output {
              @include via-amber-800(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-amber-800, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-amber-900(0.11)") {
          @include assert {
            @include output {
              @include via-amber-900(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-amber-900, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-amber-950(0.11)") {
          @include assert {
            @include output {
              @include via-amber-950(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-amber-950, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-yellow-50(0.11)") {
          @include assert {
            @include output {
              @include via-yellow-50(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-yellow-50, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-yellow-100(0.11)") {
          @include assert {
            @include output {
              @include via-yellow-100(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-yellow-100, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-yellow-200(0.11)") {
          @include assert {
            @include output {
              @include via-yellow-200(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-yellow-200, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-yellow-300(0.11)") {
          @include assert {
            @include output {
              @include via-yellow-300(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-yellow-300, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-yellow-400(0.11)") {
          @include assert {
            @include output {
              @include via-yellow-400(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-yellow-400, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-yellow-500(0.11)") {
          @include assert {
            @include output {
              @include via-yellow-500(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-yellow-500, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-yellow-600(0.11)") {
          @include assert {
            @include output {
              @include via-yellow-600(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-yellow-600, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-yellow-700(0.11)") {
          @include assert {
            @include output {
              @include via-yellow-700(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-yellow-700, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-yellow-800(0.11)") {
          @include assert {
            @include output {
              @include via-yellow-800(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-yellow-800, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-yellow-900(0.11)") {
          @include assert {
            @include output {
              @include via-yellow-900(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-yellow-900, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-yellow-950(0.11)") {
          @include assert {
            @include output {
              @include via-yellow-950(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-yellow-950, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-lime-50(0.11)") {
          @include assert {
            @include output {
              @include via-lime-50(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-lime-50, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-lime-100(0.11)") {
          @include assert {
            @include output {
              @include via-lime-100(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-lime-100, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-lime-200(0.11)") {
          @include assert {
            @include output {
              @include via-lime-200(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-lime-200, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-lime-300(0.11)") {
          @include assert {
            @include output {
              @include via-lime-300(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-lime-300, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-lime-400(0.11)") {
          @include assert {
            @include output {
              @include via-lime-400(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-lime-400, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-lime-500(0.11)") {
          @include assert {
            @include output {
              @include via-lime-500(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-lime-500, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-lime-600(0.11)") {
          @include assert {
            @include output {
              @include via-lime-600(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-lime-600, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-lime-700(0.11)") {
          @include assert {
            @include output {
              @include via-lime-700(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-lime-700, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-lime-800(0.11)") {
          @include assert {
            @include output {
              @include via-lime-800(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-lime-800, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-lime-900(0.11)") {
          @include assert {
            @include output {
              @include via-lime-900(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-lime-900, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-lime-950(0.11)") {
          @include assert {
            @include output {
              @include via-lime-950(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-lime-950, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-green-50(0.11)") {
          @include assert {
            @include output {
              @include via-green-50(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-green-50, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-green-100(0.11)") {
          @include assert {
            @include output {
              @include via-green-100(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-green-100, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-green-200(0.11)") {
          @include assert {
            @include output {
              @include via-green-200(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-green-200, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-green-300(0.11)") {
          @include assert {
            @include output {
              @include via-green-300(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-green-300, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-green-400(0.11)") {
          @include assert {
            @include output {
              @include via-green-400(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-green-400, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-green-500(0.11)") {
          @include assert {
            @include output {
              @include via-green-500(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-green-500, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-green-600(0.11)") {
          @include assert {
            @include output {
              @include via-green-600(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-green-600, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-green-700(0.11)") {
          @include assert {
            @include output {
              @include via-green-700(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-green-700, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-green-800(0.11)") {
          @include assert {
            @include output {
              @include via-green-800(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-green-800, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-green-900(0.11)") {
          @include assert {
            @include output {
              @include via-green-900(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-green-900, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-green-950(0.11)") {
          @include assert {
            @include output {
              @include via-green-950(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-green-950, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-emerald-50(0.11)") {
          @include assert {
            @include output {
              @include via-emerald-50(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-emerald-50, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-emerald-100(0.11)") {
          @include assert {
            @include output {
              @include via-emerald-100(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-emerald-100, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-emerald-200(0.11)") {
          @include assert {
            @include output {
              @include via-emerald-200(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-emerald-200, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-emerald-300(0.11)") {
          @include assert {
            @include output {
              @include via-emerald-300(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-emerald-300, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-emerald-400(0.11)") {
          @include assert {
            @include output {
              @include via-emerald-400(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-emerald-400, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-emerald-500(0.11)") {
          @include assert {
            @include output {
              @include via-emerald-500(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-emerald-500, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-emerald-600(0.11)") {
          @include assert {
            @include output {
              @include via-emerald-600(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-emerald-600, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-emerald-700(0.11)") {
          @include assert {
            @include output {
              @include via-emerald-700(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-emerald-700, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-emerald-800(0.11)") {
          @include assert {
            @include output {
              @include via-emerald-800(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-emerald-800, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-emerald-900(0.11)") {
          @include assert {
            @include output {
              @include via-emerald-900(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-emerald-900, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-emerald-950(0.11)") {
          @include assert {
            @include output {
              @include via-emerald-950(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-emerald-950, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-teal-50(0.11)") {
          @include assert {
            @include output {
              @include via-teal-50(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-teal-50, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-teal-100(0.11)") {
          @include assert {
            @include output {
              @include via-teal-100(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-teal-100, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-teal-200(0.11)") {
          @include assert {
            @include output {
              @include via-teal-200(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-teal-200, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-teal-300(0.11)") {
          @include assert {
            @include output {
              @include via-teal-300(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-teal-300, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-teal-400(0.11)") {
          @include assert {
            @include output {
              @include via-teal-400(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-teal-400, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-teal-500(0.11)") {
          @include assert {
            @include output {
              @include via-teal-500(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-teal-500, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-teal-600(0.11)") {
          @include assert {
            @include output {
              @include via-teal-600(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-teal-600, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-teal-700(0.11)") {
          @include assert {
            @include output {
              @include via-teal-700(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-teal-700, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-teal-800(0.11)") {
          @include assert {
            @include output {
              @include via-teal-800(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-teal-800, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-teal-900(0.11)") {
          @include assert {
            @include output {
              @include via-teal-900(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-teal-900, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-teal-950(0.11)") {
          @include assert {
            @include output {
              @include via-teal-950(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-teal-950, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-cyan-50(0.11)") {
          @include assert {
            @include output {
              @include via-cyan-50(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-cyan-50, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-cyan-100(0.11)") {
          @include assert {
            @include output {
              @include via-cyan-100(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-cyan-100, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-cyan-200(0.11)") {
          @include assert {
            @include output {
              @include via-cyan-200(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-cyan-200, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-cyan-300(0.11)") {
          @include assert {
            @include output {
              @include via-cyan-300(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-cyan-300, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-cyan-400(0.11)") {
          @include assert {
            @include output {
              @include via-cyan-400(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-cyan-400, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-cyan-500(0.11)") {
          @include assert {
            @include output {
              @include via-cyan-500(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-cyan-500, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-cyan-600(0.11)") {
          @include assert {
            @include output {
              @include via-cyan-600(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-cyan-600, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-cyan-700(0.11)") {
          @include assert {
            @include output {
              @include via-cyan-700(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-cyan-700, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-cyan-800(0.11)") {
          @include assert {
            @include output {
              @include via-cyan-800(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-cyan-800, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-cyan-900(0.11)") {
          @include assert {
            @include output {
              @include via-cyan-900(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-cyan-900, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-cyan-950(0.11)") {
          @include assert {
            @include output {
              @include via-cyan-950(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-cyan-950, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-sky-50(0.11)") {
          @include assert {
            @include output {
              @include via-sky-50(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-sky-50, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-sky-100(0.11)") {
          @include assert {
            @include output {
              @include via-sky-100(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-sky-100, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-sky-200(0.11)") {
          @include assert {
            @include output {
              @include via-sky-200(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-sky-200, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-sky-300(0.11)") {
          @include assert {
            @include output {
              @include via-sky-300(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-sky-300, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-sky-400(0.11)") {
          @include assert {
            @include output {
              @include via-sky-400(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-sky-400, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-sky-500(0.11)") {
          @include assert {
            @include output {
              @include via-sky-500(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-sky-500, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-sky-600(0.11)") {
          @include assert {
            @include output {
              @include via-sky-600(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-sky-600, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-sky-700(0.11)") {
          @include assert {
            @include output {
              @include via-sky-700(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-sky-700, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-sky-800(0.11)") {
          @include assert {
            @include output {
              @include via-sky-800(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-sky-800, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-sky-900(0.11)") {
          @include assert {
            @include output {
              @include via-sky-900(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-sky-900, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-sky-950(0.11)") {
          @include assert {
            @include output {
              @include via-sky-950(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-sky-950, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-blue-50(0.11)") {
          @include assert {
            @include output {
              @include via-blue-50(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-blue-50, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-blue-100(0.11)") {
          @include assert {
            @include output {
              @include via-blue-100(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-blue-100, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-blue-200(0.11)") {
          @include assert {
            @include output {
              @include via-blue-200(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-blue-200, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-blue-300(0.11)") {
          @include assert {
            @include output {
              @include via-blue-300(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-blue-300, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-blue-400(0.11)") {
          @include assert {
            @include output {
              @include via-blue-400(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-blue-400, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-blue-500(0.11)") {
          @include assert {
            @include output {
              @include via-blue-500(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-blue-500, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-blue-600(0.11)") {
          @include assert {
            @include output {
              @include via-blue-600(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-blue-600, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-blue-700(0.11)") {
          @include assert {
            @include output {
              @include via-blue-700(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-blue-700, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-blue-800(0.11)") {
          @include assert {
            @include output {
              @include via-blue-800(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-blue-800, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-blue-900(0.11)") {
          @include assert {
            @include output {
              @include via-blue-900(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-blue-900, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-blue-950(0.11)") {
          @include assert {
            @include output {
              @include via-blue-950(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-blue-950, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-indigo-50(0.11)") {
          @include assert {
            @include output {
              @include via-indigo-50(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-indigo-50, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-indigo-100(0.11)") {
          @include assert {
            @include output {
              @include via-indigo-100(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-indigo-100, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-indigo-200(0.11)") {
          @include assert {
            @include output {
              @include via-indigo-200(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-indigo-200, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-indigo-300(0.11)") {
          @include assert {
            @include output {
              @include via-indigo-300(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-indigo-300, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-indigo-400(0.11)") {
          @include assert {
            @include output {
              @include via-indigo-400(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-indigo-400, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-indigo-500(0.11)") {
          @include assert {
            @include output {
              @include via-indigo-500(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-indigo-500, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-indigo-600(0.11)") {
          @include assert {
            @include output {
              @include via-indigo-600(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-indigo-600, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-indigo-700(0.11)") {
          @include assert {
            @include output {
              @include via-indigo-700(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-indigo-700, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-indigo-800(0.11)") {
          @include assert {
            @include output {
              @include via-indigo-800(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-indigo-800, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-indigo-900(0.11)") {
          @include assert {
            @include output {
              @include via-indigo-900(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-indigo-900, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-indigo-950(0.11)") {
          @include assert {
            @include output {
              @include via-indigo-950(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-indigo-950, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-violet-50(0.11)") {
          @include assert {
            @include output {
              @include via-violet-50(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-violet-50, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-violet-100(0.11)") {
          @include assert {
            @include output {
              @include via-violet-100(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-violet-100, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-violet-200(0.11)") {
          @include assert {
            @include output {
              @include via-violet-200(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-violet-200, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-violet-300(0.11)") {
          @include assert {
            @include output {
              @include via-violet-300(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-violet-300, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-violet-400(0.11)") {
          @include assert {
            @include output {
              @include via-violet-400(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-violet-400, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-violet-500(0.11)") {
          @include assert {
            @include output {
              @include via-violet-500(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-violet-500, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-violet-600(0.11)") {
          @include assert {
            @include output {
              @include via-violet-600(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-violet-600, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-violet-700(0.11)") {
          @include assert {
            @include output {
              @include via-violet-700(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-violet-700, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-violet-800(0.11)") {
          @include assert {
            @include output {
              @include via-violet-800(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-violet-800, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-violet-900(0.11)") {
          @include assert {
            @include output {
              @include via-violet-900(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-violet-900, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-violet-950(0.11)") {
          @include assert {
            @include output {
              @include via-violet-950(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-violet-950, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-purple-50(0.11)") {
          @include assert {
            @include output {
              @include via-purple-50(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-purple-50, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-purple-100(0.11)") {
          @include assert {
            @include output {
              @include via-purple-100(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-purple-100, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-purple-200(0.11)") {
          @include assert {
            @include output {
              @include via-purple-200(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-purple-200, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-purple-300(0.11)") {
          @include assert {
            @include output {
              @include via-purple-300(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-purple-300, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-purple-400(0.11)") {
          @include assert {
            @include output {
              @include via-purple-400(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-purple-400, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-purple-500(0.11)") {
          @include assert {
            @include output {
              @include via-purple-500(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-purple-500, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-purple-600(0.11)") {
          @include assert {
            @include output {
              @include via-purple-600(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-purple-600, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-purple-700(0.11)") {
          @include assert {
            @include output {
              @include via-purple-700(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-purple-700, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-purple-800(0.11)") {
          @include assert {
            @include output {
              @include via-purple-800(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-purple-800, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-purple-900(0.11)") {
          @include assert {
            @include output {
              @include via-purple-900(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-purple-900, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-purple-950(0.11)") {
          @include assert {
            @include output {
              @include via-purple-950(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-purple-950, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-fuchsia-50(0.11)") {
          @include assert {
            @include output {
              @include via-fuchsia-50(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-fuchsia-50, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-fuchsia-100(0.11)") {
          @include assert {
            @include output {
              @include via-fuchsia-100(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-fuchsia-100, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-fuchsia-200(0.11)") {
          @include assert {
            @include output {
              @include via-fuchsia-200(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-fuchsia-200, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-fuchsia-300(0.11)") {
          @include assert {
            @include output {
              @include via-fuchsia-300(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-fuchsia-300, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-fuchsia-400(0.11)") {
          @include assert {
            @include output {
              @include via-fuchsia-400(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-fuchsia-400, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-fuchsia-500(0.11)") {
          @include assert {
            @include output {
              @include via-fuchsia-500(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-fuchsia-500, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-fuchsia-600(0.11)") {
          @include assert {
            @include output {
              @include via-fuchsia-600(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-fuchsia-600, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-fuchsia-700(0.11)") {
          @include assert {
            @include output {
              @include via-fuchsia-700(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-fuchsia-700, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-fuchsia-800(0.11)") {
          @include assert {
            @include output {
              @include via-fuchsia-800(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-fuchsia-800, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-fuchsia-900(0.11)") {
          @include assert {
            @include output {
              @include via-fuchsia-900(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-fuchsia-900, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-fuchsia-950(0.11)") {
          @include assert {
            @include output {
              @include via-fuchsia-950(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-fuchsia-950, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-pink-50(0.11)") {
          @include assert {
            @include output {
              @include via-pink-50(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-pink-50, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-pink-100(0.11)") {
          @include assert {
            @include output {
              @include via-pink-100(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-pink-100, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-pink-200(0.11)") {
          @include assert {
            @include output {
              @include via-pink-200(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-pink-200, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-pink-300(0.11)") {
          @include assert {
            @include output {
              @include via-pink-300(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-pink-300, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-pink-400(0.11)") {
          @include assert {
            @include output {
              @include via-pink-400(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-pink-400, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-pink-500(0.11)") {
          @include assert {
            @include output {
              @include via-pink-500(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-pink-500, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-pink-600(0.11)") {
          @include assert {
            @include output {
              @include via-pink-600(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-pink-600, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-pink-700(0.11)") {
          @include assert {
            @include output {
              @include via-pink-700(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-pink-700, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-pink-800(0.11)") {
          @include assert {
            @include output {
              @include via-pink-800(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-pink-800, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-pink-900(0.11)") {
          @include assert {
            @include output {
              @include via-pink-900(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-pink-900, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-pink-950(0.11)") {
          @include assert {
            @include output {
              @include via-pink-950(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-pink-950, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-rose-50(0.11)") {
          @include assert {
            @include output {
              @include via-rose-50(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-rose-50, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-rose-100(0.11)") {
          @include assert {
            @include output {
              @include via-rose-100(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-rose-100, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-rose-200(0.11)") {
          @include assert {
            @include output {
              @include via-rose-200(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-rose-200, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-rose-300(0.11)") {
          @include assert {
            @include output {
              @include via-rose-300(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-rose-300, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-rose-400(0.11)") {
          @include assert {
            @include output {
              @include via-rose-400(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-rose-400, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-rose-500(0.11)") {
          @include assert {
            @include output {
              @include via-rose-500(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-rose-500, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-rose-600(0.11)") {
          @include assert {
            @include output {
              @include via-rose-600(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-rose-600, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-rose-700(0.11)") {
          @include assert {
            @include output {
              @include via-rose-700(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-rose-700, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-rose-800(0.11)") {
          @include assert {
            @include output {
              @include via-rose-800(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-rose-800, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-rose-900(0.11)") {
          @include assert {
            @include output {
              @include via-rose-900(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-rose-900, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-rose-950(0.11)") {
          @include assert {
            @include output {
              @include via-rose-950(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-rose-950, $alpha: 0.11),
                transparent
              );
            }
          }
        }

        @include it("via-0\%") {
          @include assert {
            @include output {
              @include via-white;
              @include via-0\%;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, white, transparent);

              background-image: linear-gradient(null, #fff, white 0%, transparent);
            }
          }
        }

        @include it("via-5\%") {
          @include assert {
            @include output {
              @include via-white;
              @include via-5\%;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, white, transparent);

              background-image: linear-gradient(null, #fff, white 5%, transparent);
            }
          }
        }

        @include it("via-10\%") {
          @include assert {
            @include output {
              @include via-white;
              @include via-10\%;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, white, transparent);

              background-image: linear-gradient(null, #fff, white 10%, transparent);
            }
          }
        }

        @include it("via-15\%") {
          @include assert {
            @include output {
              @include via-white;
              @include via-15\%;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, white, transparent);

              background-image: linear-gradient(null, #fff, white 15%, transparent);
            }
          }
        }

        @include it("via-20\%") {
          @include assert {
            @include output {
              @include via-white;
              @include via-20\%;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, white, transparent);

              background-image: linear-gradient(null, #fff, white 20%, transparent);
            }
          }
        }

        @include it("via-25\%") {
          @include assert {
            @include output {
              @include via-white;
              @include via-25\%;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, white, transparent);

              background-image: linear-gradient(null, #fff, white 25%, transparent);
            }
          }
        }

        @include it("via-30\%") {
          @include assert {
            @include output {
              @include via-white;
              @include via-30\%;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, white, transparent);

              background-image: linear-gradient(null, #fff, white 30%, transparent);
            }
          }
        }

        @include it("via-35\%") {
          @include assert {
            @include output {
              @include via-white;
              @include via-35\%;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, white, transparent);

              background-image: linear-gradient(null, #fff, white 35%, transparent);
            }
          }
        }

        @include it("via-40\%") {
          @include assert {
            @include output {
              @include via-white;
              @include via-40\%;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, white, transparent);

              background-image: linear-gradient(null, #fff, white 40%, transparent);
            }
          }
        }

        @include it("via-45\%") {
          @include assert {
            @include output {
              @include via-white;
              @include via-45\%;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, white, transparent);

              background-image: linear-gradient(null, #fff, white 45%, transparent);
            }
          }
        }

        @include it("via-50\%") {
          @include assert {
            @include output {
              @include via-white;
              @include via-50\%;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, white, transparent);

              background-image: linear-gradient(null, #fff, white 50%, transparent);
            }
          }
        }

        @include it("via-55\%") {
          @include assert {
            @include output {
              @include via-white;
              @include via-55\%;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, white, transparent);

              background-image: linear-gradient(null, #fff, white 55%, transparent);
            }
          }
        }

        @include it("via-60\%") {
          @include assert {
            @include output {
              @include via-white;
              @include via-60\%;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, white, transparent);

              background-image: linear-gradient(null, #fff, white 60%, transparent);
            }
          }
        }

        @include it("via-65\%") {
          @include assert {
            @include output {
              @include via-white;
              @include via-65\%;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, white, transparent);

              background-image: linear-gradient(null, #fff, white 65%, transparent);
            }
          }
        }

        @include it("via-70\%") {
          @include assert {
            @include output {
              @include via-white;
              @include via-70\%;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, white, transparent);

              background-image: linear-gradient(null, #fff, white 70%, transparent);
            }
          }
        }

        @include it("via-75\%") {
          @include assert {
            @include output {
              @include via-white;
              @include via-75\%;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, white, transparent);

              background-image: linear-gradient(null, #fff, white 75%, transparent);
            }
          }
        }

        @include it("via-80\%") {
          @include assert {
            @include output {
              @include via-white;
              @include via-80\%;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, white, transparent);

              background-image: linear-gradient(null, #fff, white 80%, transparent);
            }
          }
        }

        @include it("via-85\%") {
          @include assert {
            @include output {
              @include via-white;
              @include via-85\%;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, white, transparent);

              background-image: linear-gradient(null, #fff, white 85%, transparent);
            }
          }
        }

        @include it("via-90\%") {
          @include assert {
            @include output {
              @include via-white;
              @include via-90\%;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, white, transparent);

              background-image: linear-gradient(null, #fff, white 90%, transparent);
            }
          }
        }

        @include it("via-95\%") {
          @include assert {
            @include output {
              @include via-white;
              @include via-95\%;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, white, transparent);

              background-image: linear-gradient(null, #fff, white 95%, transparent);
            }
          }
        }

        @include it("via-100\%") {
          @include assert {
            @include output {
              @include via-white;
              @include via-100\%;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, white, transparent);

              background-image: linear-gradient(null, #fff, white 100%, transparent);
            }
          }
        }
      }

      @include describe("group-to") {
        @include it("to-inherit") {
          @include assert {
            @include output {
              @include to-inherit;
              @include utils_reset;
            }

            @include expect {
              background-image: inherit !important;
            }
          }
        }

        @include it("to-current") {
          @include assert {
            @include output {
              @include to-current;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, currentColor);
            }
          }
        }

        @include it("to-transparent") {
          @include assert {
            @include output {
              @include to-transparent;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, transparent);
            }
          }
        }

        @include it("to-black") {
          @include assert {
            @include output {
              @include to-black;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, black);
            }
          }
        }

        @include it("to-white") {
          @include assert {
            @include output {
              @include to-white;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, white);
            }
          }
        }

        @include it("to-slate-50") {
          @include assert {
            @include output {
              @include to-slate-50;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-slate-50);
            }
          }
        }

        @include it("to-slate-100") {
          @include assert {
            @include output {
              @include to-slate-100;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-slate-100);
            }
          }
        }

        @include it("to-slate-200") {
          @include assert {
            @include output {
              @include to-slate-200;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-slate-200);
            }
          }
        }

        @include it("to-slate-300") {
          @include assert {
            @include output {
              @include to-slate-300;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-slate-300);
            }
          }
        }

        @include it("to-slate-400") {
          @include assert {
            @include output {
              @include to-slate-400;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-slate-400);
            }
          }
        }

        @include it("to-slate-500") {
          @include assert {
            @include output {
              @include to-slate-500;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-slate-500);
            }
          }
        }

        @include it("to-slate-600") {
          @include assert {
            @include output {
              @include to-slate-600;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-slate-600);
            }
          }
        }

        @include it("to-slate-700") {
          @include assert {
            @include output {
              @include to-slate-700;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-slate-700);
            }
          }
        }

        @include it("to-slate-800") {
          @include assert {
            @include output {
              @include to-slate-800;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-slate-800);
            }
          }
        }

        @include it("to-slate-900") {
          @include assert {
            @include output {
              @include to-slate-900;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-slate-900);
            }
          }
        }

        @include it("to-slate-950") {
          @include assert {
            @include output {
              @include to-slate-950;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-slate-950);
            }
          }
        }

        @include it("to-gray-50") {
          @include assert {
            @include output {
              @include to-gray-50;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-gray-50);
            }
          }
        }

        @include it("to-gray-100") {
          @include assert {
            @include output {
              @include to-gray-100;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-gray-100);
            }
          }
        }

        @include it("to-gray-200") {
          @include assert {
            @include output {
              @include to-gray-200;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-gray-200);
            }
          }
        }

        @include it("to-gray-300") {
          @include assert {
            @include output {
              @include to-gray-300;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-gray-300);
            }
          }
        }

        @include it("to-gray-400") {
          @include assert {
            @include output {
              @include to-gray-400;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-gray-400);
            }
          }
        }

        @include it("to-gray-500") {
          @include assert {
            @include output {
              @include to-gray-500;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-gray-500);
            }
          }
        }

        @include it("to-gray-600") {
          @include assert {
            @include output {
              @include to-gray-600;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-gray-600);
            }
          }
        }

        @include it("to-gray-700") {
          @include assert {
            @include output {
              @include to-gray-700;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-gray-700);
            }
          }
        }

        @include it("to-gray-800") {
          @include assert {
            @include output {
              @include to-gray-800;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-gray-800);
            }
          }
        }

        @include it("to-gray-900") {
          @include assert {
            @include output {
              @include to-gray-900;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-gray-900);
            }
          }
        }

        @include it("to-gray-950") {
          @include assert {
            @include output {
              @include to-gray-950;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-gray-950);
            }
          }
        }

        @include it("to-zinc-50") {
          @include assert {
            @include output {
              @include to-zinc-50;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-zinc-50);
            }
          }
        }

        @include it("to-zinc-100") {
          @include assert {
            @include output {
              @include to-zinc-100;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-zinc-100);
            }
          }
        }

        @include it("to-zinc-200") {
          @include assert {
            @include output {
              @include to-zinc-200;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-zinc-200);
            }
          }
        }

        @include it("to-zinc-300") {
          @include assert {
            @include output {
              @include to-zinc-300;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-zinc-300);
            }
          }
        }

        @include it("to-zinc-400") {
          @include assert {
            @include output {
              @include to-zinc-400;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-zinc-400);
            }
          }
        }

        @include it("to-zinc-500") {
          @include assert {
            @include output {
              @include to-zinc-500;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-zinc-500);
            }
          }
        }

        @include it("to-zinc-600") {
          @include assert {
            @include output {
              @include to-zinc-600;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-zinc-600);
            }
          }
        }

        @include it("to-zinc-700") {
          @include assert {
            @include output {
              @include to-zinc-700;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-zinc-700);
            }
          }
        }

        @include it("to-zinc-800") {
          @include assert {
            @include output {
              @include to-zinc-800;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-zinc-800);
            }
          }
        }

        @include it("to-zinc-900") {
          @include assert {
            @include output {
              @include to-zinc-900;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-zinc-900);
            }
          }
        }

        @include it("to-zinc-950") {
          @include assert {
            @include output {
              @include to-zinc-950;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-zinc-950);
            }
          }
        }

        @include it("to-neutral-50") {
          @include assert {
            @include output {
              @include to-neutral-50;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-neutral-50);
            }
          }
        }

        @include it("to-neutral-100") {
          @include assert {
            @include output {
              @include to-neutral-100;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-neutral-100);
            }
          }
        }

        @include it("to-neutral-200") {
          @include assert {
            @include output {
              @include to-neutral-200;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-neutral-200);
            }
          }
        }

        @include it("to-neutral-300") {
          @include assert {
            @include output {
              @include to-neutral-300;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-neutral-300);
            }
          }
        }

        @include it("to-neutral-400") {
          @include assert {
            @include output {
              @include to-neutral-400;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-neutral-400);
            }
          }
        }

        @include it("to-neutral-500") {
          @include assert {
            @include output {
              @include to-neutral-500;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-neutral-500);
            }
          }
        }

        @include it("to-neutral-600") {
          @include assert {
            @include output {
              @include to-neutral-600;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-neutral-600);
            }
          }
        }

        @include it("to-neutral-700") {
          @include assert {
            @include output {
              @include to-neutral-700;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-neutral-700);
            }
          }
        }

        @include it("to-neutral-800") {
          @include assert {
            @include output {
              @include to-neutral-800;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-neutral-800);
            }
          }
        }

        @include it("to-neutral-900") {
          @include assert {
            @include output {
              @include to-neutral-900;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-neutral-900);
            }
          }
        }

        @include it("to-neutral-950") {
          @include assert {
            @include output {
              @include to-neutral-950;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-neutral-950);
            }
          }
        }

        @include it("to-stone-50") {
          @include assert {
            @include output {
              @include to-stone-50;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-stone-50);
            }
          }
        }

        @include it("to-stone-100") {
          @include assert {
            @include output {
              @include to-stone-100;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-stone-100);
            }
          }
        }

        @include it("to-stone-200") {
          @include assert {
            @include output {
              @include to-stone-200;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-stone-200);
            }
          }
        }

        @include it("to-stone-300") {
          @include assert {
            @include output {
              @include to-stone-300;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-stone-300);
            }
          }
        }

        @include it("to-stone-400") {
          @include assert {
            @include output {
              @include to-stone-400;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-stone-400);
            }
          }
        }

        @include it("to-stone-500") {
          @include assert {
            @include output {
              @include to-stone-500;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-stone-500);
            }
          }
        }

        @include it("to-stone-600") {
          @include assert {
            @include output {
              @include to-stone-600;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-stone-600);
            }
          }
        }

        @include it("to-stone-700") {
          @include assert {
            @include output {
              @include to-stone-700;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-stone-700);
            }
          }
        }

        @include it("to-stone-800") {
          @include assert {
            @include output {
              @include to-stone-800;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-stone-800);
            }
          }
        }

        @include it("to-stone-900") {
          @include assert {
            @include output {
              @include to-stone-900;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-stone-900);
            }
          }
        }

        @include it("to-stone-950") {
          @include assert {
            @include output {
              @include to-stone-950;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-stone-950);
            }
          }
        }

        @include it("to-red-50") {
          @include assert {
            @include output {
              @include to-red-50;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-red-50);
            }
          }
        }

        @include it("to-red-100") {
          @include assert {
            @include output {
              @include to-red-100;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-red-100);
            }
          }
        }

        @include it("to-red-200") {
          @include assert {
            @include output {
              @include to-red-200;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-red-200);
            }
          }
        }

        @include it("to-red-300") {
          @include assert {
            @include output {
              @include to-red-300;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-red-300);
            }
          }
        }

        @include it("to-red-400") {
          @include assert {
            @include output {
              @include to-red-400;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-red-400);
            }
          }
        }

        @include it("to-red-500") {
          @include assert {
            @include output {
              @include to-red-500;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-red-500);
            }
          }
        }

        @include it("to-red-600") {
          @include assert {
            @include output {
              @include to-red-600;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-red-600);
            }
          }
        }

        @include it("to-red-700") {
          @include assert {
            @include output {
              @include to-red-700;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-red-700);
            }
          }
        }

        @include it("to-red-800") {
          @include assert {
            @include output {
              @include to-red-800;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-red-800);
            }
          }
        }

        @include it("to-red-900") {
          @include assert {
            @include output {
              @include to-red-900;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-red-900);
            }
          }
        }

        @include it("to-red-950") {
          @include assert {
            @include output {
              @include to-red-950;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-red-950);
            }
          }
        }

        @include it("to-orange-50") {
          @include assert {
            @include output {
              @include to-orange-50;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-orange-50);
            }
          }
        }

        @include it("to-orange-100") {
          @include assert {
            @include output {
              @include to-orange-100;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-orange-100);
            }
          }
        }

        @include it("to-orange-200") {
          @include assert {
            @include output {
              @include to-orange-200;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-orange-200);
            }
          }
        }

        @include it("to-orange-300") {
          @include assert {
            @include output {
              @include to-orange-300;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-orange-300);
            }
          }
        }

        @include it("to-orange-400") {
          @include assert {
            @include output {
              @include to-orange-400;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-orange-400);
            }
          }
        }

        @include it("to-orange-500") {
          @include assert {
            @include output {
              @include to-orange-500;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-orange-500);
            }
          }
        }

        @include it("to-orange-600") {
          @include assert {
            @include output {
              @include to-orange-600;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-orange-600);
            }
          }
        }

        @include it("to-orange-700") {
          @include assert {
            @include output {
              @include to-orange-700;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-orange-700);
            }
          }
        }

        @include it("to-orange-800") {
          @include assert {
            @include output {
              @include to-orange-800;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-orange-800);
            }
          }
        }

        @include it("to-orange-900") {
          @include assert {
            @include output {
              @include to-orange-900;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-orange-900);
            }
          }
        }

        @include it("to-orange-950") {
          @include assert {
            @include output {
              @include to-orange-950;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-orange-950);
            }
          }
        }

        @include it("to-amber-50") {
          @include assert {
            @include output {
              @include to-amber-50;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-amber-50);
            }
          }
        }

        @include it("to-amber-100") {
          @include assert {
            @include output {
              @include to-amber-100;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-amber-100);
            }
          }
        }

        @include it("to-amber-200") {
          @include assert {
            @include output {
              @include to-amber-200;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-amber-200);
            }
          }
        }

        @include it("to-amber-300") {
          @include assert {
            @include output {
              @include to-amber-300;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-amber-300);
            }
          }
        }

        @include it("to-amber-400") {
          @include assert {
            @include output {
              @include to-amber-400;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-amber-400);
            }
          }
        }

        @include it("to-amber-500") {
          @include assert {
            @include output {
              @include to-amber-500;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-amber-500);
            }
          }
        }

        @include it("to-amber-600") {
          @include assert {
            @include output {
              @include to-amber-600;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-amber-600);
            }
          }
        }

        @include it("to-amber-700") {
          @include assert {
            @include output {
              @include to-amber-700;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-amber-700);
            }
          }
        }

        @include it("to-amber-800") {
          @include assert {
            @include output {
              @include to-amber-800;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-amber-800);
            }
          }
        }

        @include it("to-amber-900") {
          @include assert {
            @include output {
              @include to-amber-900;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-amber-900);
            }
          }
        }

        @include it("to-amber-950") {
          @include assert {
            @include output {
              @include to-amber-950;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-amber-950);
            }
          }
        }

        @include it("to-yellow-50") {
          @include assert {
            @include output {
              @include to-yellow-50;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-yellow-50);
            }
          }
        }

        @include it("to-yellow-100") {
          @include assert {
            @include output {
              @include to-yellow-100;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-yellow-100);
            }
          }
        }

        @include it("to-yellow-200") {
          @include assert {
            @include output {
              @include to-yellow-200;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-yellow-200);
            }
          }
        }

        @include it("to-yellow-300") {
          @include assert {
            @include output {
              @include to-yellow-300;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-yellow-300);
            }
          }
        }

        @include it("to-yellow-400") {
          @include assert {
            @include output {
              @include to-yellow-400;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-yellow-400);
            }
          }
        }

        @include it("to-yellow-500") {
          @include assert {
            @include output {
              @include to-yellow-500;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-yellow-500);
            }
          }
        }

        @include it("to-yellow-600") {
          @include assert {
            @include output {
              @include to-yellow-600;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-yellow-600);
            }
          }
        }

        @include it("to-yellow-700") {
          @include assert {
            @include output {
              @include to-yellow-700;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-yellow-700);
            }
          }
        }

        @include it("to-yellow-800") {
          @include assert {
            @include output {
              @include to-yellow-800;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-yellow-800);
            }
          }
        }

        @include it("to-yellow-900") {
          @include assert {
            @include output {
              @include to-yellow-900;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-yellow-900);
            }
          }
        }

        @include it("to-yellow-950") {
          @include assert {
            @include output {
              @include to-yellow-950;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-yellow-950);
            }
          }
        }

        @include it("to-lime-50") {
          @include assert {
            @include output {
              @include to-lime-50;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-lime-50);
            }
          }
        }

        @include it("to-lime-100") {
          @include assert {
            @include output {
              @include to-lime-100;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-lime-100);
            }
          }
        }

        @include it("to-lime-200") {
          @include assert {
            @include output {
              @include to-lime-200;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-lime-200);
            }
          }
        }

        @include it("to-lime-300") {
          @include assert {
            @include output {
              @include to-lime-300;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-lime-300);
            }
          }
        }

        @include it("to-lime-400") {
          @include assert {
            @include output {
              @include to-lime-400;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-lime-400);
            }
          }
        }

        @include it("to-lime-500") {
          @include assert {
            @include output {
              @include to-lime-500;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-lime-500);
            }
          }
        }

        @include it("to-lime-600") {
          @include assert {
            @include output {
              @include to-lime-600;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-lime-600);
            }
          }
        }

        @include it("to-lime-700") {
          @include assert {
            @include output {
              @include to-lime-700;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-lime-700);
            }
          }
        }

        @include it("to-lime-800") {
          @include assert {
            @include output {
              @include to-lime-800;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-lime-800);
            }
          }
        }

        @include it("to-lime-900") {
          @include assert {
            @include output {
              @include to-lime-900;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-lime-900);
            }
          }
        }

        @include it("to-lime-950") {
          @include assert {
            @include output {
              @include to-lime-950;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-lime-950);
            }
          }
        }

        @include it("to-green-50") {
          @include assert {
            @include output {
              @include to-green-50;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-green-50);
            }
          }
        }

        @include it("to-green-100") {
          @include assert {
            @include output {
              @include to-green-100;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-green-100);
            }
          }
        }

        @include it("to-green-200") {
          @include assert {
            @include output {
              @include to-green-200;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-green-200);
            }
          }
        }

        @include it("to-green-300") {
          @include assert {
            @include output {
              @include to-green-300;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-green-300);
            }
          }
        }

        @include it("to-green-400") {
          @include assert {
            @include output {
              @include to-green-400;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-green-400);
            }
          }
        }

        @include it("to-green-500") {
          @include assert {
            @include output {
              @include to-green-500;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-green-500);
            }
          }
        }

        @include it("to-green-600") {
          @include assert {
            @include output {
              @include to-green-600;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-green-600);
            }
          }
        }

        @include it("to-green-700") {
          @include assert {
            @include output {
              @include to-green-700;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-green-700);
            }
          }
        }

        @include it("to-green-800") {
          @include assert {
            @include output {
              @include to-green-800;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-green-800);
            }
          }
        }

        @include it("to-green-900") {
          @include assert {
            @include output {
              @include to-green-900;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-green-900);
            }
          }
        }

        @include it("to-green-950") {
          @include assert {
            @include output {
              @include to-green-950;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-green-950);
            }
          }
        }

        @include it("to-emerald-50") {
          @include assert {
            @include output {
              @include to-emerald-50;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-emerald-50);
            }
          }
        }

        @include it("to-emerald-100") {
          @include assert {
            @include output {
              @include to-emerald-100;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-emerald-100);
            }
          }
        }

        @include it("to-emerald-200") {
          @include assert {
            @include output {
              @include to-emerald-200;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-emerald-200);
            }
          }
        }

        @include it("to-emerald-300") {
          @include assert {
            @include output {
              @include to-emerald-300;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-emerald-300);
            }
          }
        }

        @include it("to-emerald-400") {
          @include assert {
            @include output {
              @include to-emerald-400;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-emerald-400);
            }
          }
        }

        @include it("to-emerald-500") {
          @include assert {
            @include output {
              @include to-emerald-500;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-emerald-500);
            }
          }
        }

        @include it("to-emerald-600") {
          @include assert {
            @include output {
              @include to-emerald-600;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-emerald-600);
            }
          }
        }

        @include it("to-emerald-700") {
          @include assert {
            @include output {
              @include to-emerald-700;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-emerald-700);
            }
          }
        }

        @include it("to-emerald-800") {
          @include assert {
            @include output {
              @include to-emerald-800;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-emerald-800);
            }
          }
        }

        @include it("to-emerald-900") {
          @include assert {
            @include output {
              @include to-emerald-900;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-emerald-900);
            }
          }
        }

        @include it("to-emerald-950") {
          @include assert {
            @include output {
              @include to-emerald-950;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-emerald-950);
            }
          }
        }

        @include it("to-teal-50") {
          @include assert {
            @include output {
              @include to-teal-50;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-teal-50);
            }
          }
        }

        @include it("to-teal-100") {
          @include assert {
            @include output {
              @include to-teal-100;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-teal-100);
            }
          }
        }

        @include it("to-teal-200") {
          @include assert {
            @include output {
              @include to-teal-200;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-teal-200);
            }
          }
        }

        @include it("to-teal-300") {
          @include assert {
            @include output {
              @include to-teal-300;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-teal-300);
            }
          }
        }

        @include it("to-teal-400") {
          @include assert {
            @include output {
              @include to-teal-400;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-teal-400);
            }
          }
        }

        @include it("to-teal-500") {
          @include assert {
            @include output {
              @include to-teal-500;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-teal-500);
            }
          }
        }

        @include it("to-teal-600") {
          @include assert {
            @include output {
              @include to-teal-600;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-teal-600);
            }
          }
        }

        @include it("to-teal-700") {
          @include assert {
            @include output {
              @include to-teal-700;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-teal-700);
            }
          }
        }

        @include it("to-teal-800") {
          @include assert {
            @include output {
              @include to-teal-800;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-teal-800);
            }
          }
        }

        @include it("to-teal-900") {
          @include assert {
            @include output {
              @include to-teal-900;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-teal-900);
            }
          }
        }

        @include it("to-teal-950") {
          @include assert {
            @include output {
              @include to-teal-950;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-teal-950);
            }
          }
        }

        @include it("to-cyan-50") {
          @include assert {
            @include output {
              @include to-cyan-50;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-cyan-50);
            }
          }
        }

        @include it("to-cyan-100") {
          @include assert {
            @include output {
              @include to-cyan-100;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-cyan-100);
            }
          }
        }

        @include it("to-cyan-200") {
          @include assert {
            @include output {
              @include to-cyan-200;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-cyan-200);
            }
          }
        }

        @include it("to-cyan-300") {
          @include assert {
            @include output {
              @include to-cyan-300;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-cyan-300);
            }
          }
        }

        @include it("to-cyan-400") {
          @include assert {
            @include output {
              @include to-cyan-400;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-cyan-400);
            }
          }
        }

        @include it("to-cyan-500") {
          @include assert {
            @include output {
              @include to-cyan-500;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-cyan-500);
            }
          }
        }

        @include it("to-cyan-600") {
          @include assert {
            @include output {
              @include to-cyan-600;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-cyan-600);
            }
          }
        }

        @include it("to-cyan-700") {
          @include assert {
            @include output {
              @include to-cyan-700;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-cyan-700);
            }
          }
        }

        @include it("to-cyan-800") {
          @include assert {
            @include output {
              @include to-cyan-800;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-cyan-800);
            }
          }
        }

        @include it("to-cyan-900") {
          @include assert {
            @include output {
              @include to-cyan-900;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-cyan-900);
            }
          }
        }

        @include it("to-cyan-950") {
          @include assert {
            @include output {
              @include to-cyan-950;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-cyan-950);
            }
          }
        }

        @include it("to-sky-50") {
          @include assert {
            @include output {
              @include to-sky-50;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-sky-50);
            }
          }
        }

        @include it("to-sky-100") {
          @include assert {
            @include output {
              @include to-sky-100;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-sky-100);
            }
          }
        }

        @include it("to-sky-200") {
          @include assert {
            @include output {
              @include to-sky-200;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-sky-200);
            }
          }
        }

        @include it("to-sky-300") {
          @include assert {
            @include output {
              @include to-sky-300;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-sky-300);
            }
          }
        }

        @include it("to-sky-400") {
          @include assert {
            @include output {
              @include to-sky-400;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-sky-400);
            }
          }
        }

        @include it("to-sky-500") {
          @include assert {
            @include output {
              @include to-sky-500;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-sky-500);
            }
          }
        }

        @include it("to-sky-600") {
          @include assert {
            @include output {
              @include to-sky-600;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-sky-600);
            }
          }
        }

        @include it("to-sky-700") {
          @include assert {
            @include output {
              @include to-sky-700;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-sky-700);
            }
          }
        }

        @include it("to-sky-800") {
          @include assert {
            @include output {
              @include to-sky-800;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-sky-800);
            }
          }
        }

        @include it("to-sky-900") {
          @include assert {
            @include output {
              @include to-sky-900;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-sky-900);
            }
          }
        }

        @include it("to-sky-950") {
          @include assert {
            @include output {
              @include to-sky-950;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-sky-950);
            }
          }
        }

        @include it("to-blue-50") {
          @include assert {
            @include output {
              @include to-blue-50;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-blue-50);
            }
          }
        }

        @include it("to-blue-100") {
          @include assert {
            @include output {
              @include to-blue-100;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-blue-100);
            }
          }
        }

        @include it("to-blue-200") {
          @include assert {
            @include output {
              @include to-blue-200;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-blue-200);
            }
          }
        }

        @include it("to-blue-300") {
          @include assert {
            @include output {
              @include to-blue-300;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-blue-300);
            }
          }
        }

        @include it("to-blue-400") {
          @include assert {
            @include output {
              @include to-blue-400;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-blue-400);
            }
          }
        }

        @include it("to-blue-500") {
          @include assert {
            @include output {
              @include to-blue-500;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-blue-500);
            }
          }
        }

        @include it("to-blue-600") {
          @include assert {
            @include output {
              @include to-blue-600;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-blue-600);
            }
          }
        }

        @include it("to-blue-700") {
          @include assert {
            @include output {
              @include to-blue-700;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-blue-700);
            }
          }
        }

        @include it("to-blue-800") {
          @include assert {
            @include output {
              @include to-blue-800;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-blue-800);
            }
          }
        }

        @include it("to-blue-900") {
          @include assert {
            @include output {
              @include to-blue-900;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-blue-900);
            }
          }
        }

        @include it("to-blue-950") {
          @include assert {
            @include output {
              @include to-blue-950;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-blue-950);
            }
          }
        }

        @include it("to-indigo-50") {
          @include assert {
            @include output {
              @include to-indigo-50;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-indigo-50);
            }
          }
        }

        @include it("to-indigo-100") {
          @include assert {
            @include output {
              @include to-indigo-100;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-indigo-100);
            }
          }
        }

        @include it("to-indigo-200") {
          @include assert {
            @include output {
              @include to-indigo-200;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-indigo-200);
            }
          }
        }

        @include it("to-indigo-300") {
          @include assert {
            @include output {
              @include to-indigo-300;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-indigo-300);
            }
          }
        }

        @include it("to-indigo-400") {
          @include assert {
            @include output {
              @include to-indigo-400;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-indigo-400);
            }
          }
        }

        @include it("to-indigo-500") {
          @include assert {
            @include output {
              @include to-indigo-500;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-indigo-500);
            }
          }
        }

        @include it("to-indigo-600") {
          @include assert {
            @include output {
              @include to-indigo-600;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-indigo-600);
            }
          }
        }

        @include it("to-indigo-700") {
          @include assert {
            @include output {
              @include to-indigo-700;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-indigo-700);
            }
          }
        }

        @include it("to-indigo-800") {
          @include assert {
            @include output {
              @include to-indigo-800;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-indigo-800);
            }
          }
        }

        @include it("to-indigo-900") {
          @include assert {
            @include output {
              @include to-indigo-900;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-indigo-900);
            }
          }
        }

        @include it("to-indigo-950") {
          @include assert {
            @include output {
              @include to-indigo-950;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-indigo-950);
            }
          }
        }

        @include it("to-violet-50") {
          @include assert {
            @include output {
              @include to-violet-50;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-violet-50);
            }
          }
        }

        @include it("to-violet-100") {
          @include assert {
            @include output {
              @include to-violet-100;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-violet-100);
            }
          }
        }

        @include it("to-violet-200") {
          @include assert {
            @include output {
              @include to-violet-200;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-violet-200);
            }
          }
        }

        @include it("to-violet-300") {
          @include assert {
            @include output {
              @include to-violet-300;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-violet-300);
            }
          }
        }

        @include it("to-violet-400") {
          @include assert {
            @include output {
              @include to-violet-400;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-violet-400);
            }
          }
        }

        @include it("to-violet-500") {
          @include assert {
            @include output {
              @include to-violet-500;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-violet-500);
            }
          }
        }

        @include it("to-violet-600") {
          @include assert {
            @include output {
              @include to-violet-600;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-violet-600);
            }
          }
        }

        @include it("to-violet-700") {
          @include assert {
            @include output {
              @include to-violet-700;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-violet-700);
            }
          }
        }

        @include it("to-violet-800") {
          @include assert {
            @include output {
              @include to-violet-800;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-violet-800);
            }
          }
        }

        @include it("to-violet-900") {
          @include assert {
            @include output {
              @include to-violet-900;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-violet-900);
            }
          }
        }

        @include it("to-violet-950") {
          @include assert {
            @include output {
              @include to-violet-950;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-violet-950);
            }
          }
        }

        @include it("to-purple-50") {
          @include assert {
            @include output {
              @include to-purple-50;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-purple-50);
            }
          }
        }

        @include it("to-purple-100") {
          @include assert {
            @include output {
              @include to-purple-100;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-purple-100);
            }
          }
        }

        @include it("to-purple-200") {
          @include assert {
            @include output {
              @include to-purple-200;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-purple-200);
            }
          }
        }

        @include it("to-purple-300") {
          @include assert {
            @include output {
              @include to-purple-300;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-purple-300);
            }
          }
        }

        @include it("to-purple-400") {
          @include assert {
            @include output {
              @include to-purple-400;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-purple-400);
            }
          }
        }

        @include it("to-purple-500") {
          @include assert {
            @include output {
              @include to-purple-500;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-purple-500);
            }
          }
        }

        @include it("to-purple-600") {
          @include assert {
            @include output {
              @include to-purple-600;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-purple-600);
            }
          }
        }

        @include it("to-purple-700") {
          @include assert {
            @include output {
              @include to-purple-700;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-purple-700);
            }
          }
        }

        @include it("to-purple-800") {
          @include assert {
            @include output {
              @include to-purple-800;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-purple-800);
            }
          }
        }

        @include it("to-purple-900") {
          @include assert {
            @include output {
              @include to-purple-900;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-purple-900);
            }
          }
        }

        @include it("to-purple-950") {
          @include assert {
            @include output {
              @include to-purple-950;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-purple-950);
            }
          }
        }

        @include it("to-fuchsia-50") {
          @include assert {
            @include output {
              @include to-fuchsia-50;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-fuchsia-50);
            }
          }
        }

        @include it("to-fuchsia-100") {
          @include assert {
            @include output {
              @include to-fuchsia-100;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-fuchsia-100);
            }
          }
        }

        @include it("to-fuchsia-200") {
          @include assert {
            @include output {
              @include to-fuchsia-200;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-fuchsia-200);
            }
          }
        }

        @include it("to-fuchsia-300") {
          @include assert {
            @include output {
              @include to-fuchsia-300;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-fuchsia-300);
            }
          }
        }

        @include it("to-fuchsia-400") {
          @include assert {
            @include output {
              @include to-fuchsia-400;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-fuchsia-400);
            }
          }
        }

        @include it("to-fuchsia-500") {
          @include assert {
            @include output {
              @include to-fuchsia-500;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-fuchsia-500);
            }
          }
        }

        @include it("to-fuchsia-600") {
          @include assert {
            @include output {
              @include to-fuchsia-600;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-fuchsia-600);
            }
          }
        }

        @include it("to-fuchsia-700") {
          @include assert {
            @include output {
              @include to-fuchsia-700;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-fuchsia-700);
            }
          }
        }

        @include it("to-fuchsia-800") {
          @include assert {
            @include output {
              @include to-fuchsia-800;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-fuchsia-800);
            }
          }
        }

        @include it("to-fuchsia-900") {
          @include assert {
            @include output {
              @include to-fuchsia-900;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-fuchsia-900);
            }
          }
        }

        @include it("to-fuchsia-950") {
          @include assert {
            @include output {
              @include to-fuchsia-950;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-fuchsia-950);
            }
          }
        }

        @include it("to-pink-50") {
          @include assert {
            @include output {
              @include to-pink-50;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-pink-50);
            }
          }
        }

        @include it("to-pink-100") {
          @include assert {
            @include output {
              @include to-pink-100;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-pink-100);
            }
          }
        }

        @include it("to-pink-200") {
          @include assert {
            @include output {
              @include to-pink-200;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-pink-200);
            }
          }
        }

        @include it("to-pink-300") {
          @include assert {
            @include output {
              @include to-pink-300;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-pink-300);
            }
          }
        }

        @include it("to-pink-400") {
          @include assert {
            @include output {
              @include to-pink-400;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-pink-400);
            }
          }
        }

        @include it("to-pink-500") {
          @include assert {
            @include output {
              @include to-pink-500;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-pink-500);
            }
          }
        }

        @include it("to-pink-600") {
          @include assert {
            @include output {
              @include to-pink-600;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-pink-600);
            }
          }
        }

        @include it("to-pink-700") {
          @include assert {
            @include output {
              @include to-pink-700;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-pink-700);
            }
          }
        }

        @include it("to-pink-800") {
          @include assert {
            @include output {
              @include to-pink-800;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-pink-800);
            }
          }
        }

        @include it("to-pink-900") {
          @include assert {
            @include output {
              @include to-pink-900;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-pink-900);
            }
          }
        }

        @include it("to-pink-950") {
          @include assert {
            @include output {
              @include to-pink-950;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-pink-950);
            }
          }
        }

        @include it("to-rose-50") {
          @include assert {
            @include output {
              @include to-rose-50;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-rose-50);
            }
          }
        }

        @include it("to-rose-100") {
          @include assert {
            @include output {
              @include to-rose-100;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-rose-100);
            }
          }
        }

        @include it("to-rose-200") {
          @include assert {
            @include output {
              @include to-rose-200;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-rose-200);
            }
          }
        }

        @include it("to-rose-300") {
          @include assert {
            @include output {
              @include to-rose-300;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-rose-300);
            }
          }
        }

        @include it("to-rose-400") {
          @include assert {
            @include output {
              @include to-rose-400;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-rose-400);
            }
          }
        }

        @include it("to-rose-500") {
          @include assert {
            @include output {
              @include to-rose-500;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-rose-500);
            }
          }
        }

        @include it("to-rose-600") {
          @include assert {
            @include output {
              @include to-rose-600;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-rose-600);
            }
          }
        }

        @include it("to-rose-700") {
          @include assert {
            @include output {
              @include to-rose-700;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-rose-700);
            }
          }
        }

        @include it("to-rose-800") {
          @include assert {
            @include output {
              @include to-rose-800;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-rose-800);
            }
          }
        }

        @include it("to-rose-900") {
          @include assert {
            @include output {
              @include to-rose-900;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-rose-900);
            }
          }
        }

        @include it("to-rose-950") {
          @include assert {
            @include output {
              @include to-rose-950;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, $color-rose-950);
            }
          }
        }

        @include it("to-black(0.11)") {
          @include assert {
            @include output {
              @include to-black(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#000, $alpha: 0.11));
            }
          }
        }

        @include it("to-white(0.11)") {
          @include assert {
            @include output {
              @include to-white(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, color.change(#fff, $alpha: 0.11));
            }
          }
        }

        @include it("to-slate-50(0.11)") {
          @include assert {
            @include output {
              @include to-slate-50(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-slate-50, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-slate-100(0.11)") {
          @include assert {
            @include output {
              @include to-slate-100(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-slate-100, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-slate-200(0.11)") {
          @include assert {
            @include output {
              @include to-slate-200(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-slate-200, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-slate-300(0.11)") {
          @include assert {
            @include output {
              @include to-slate-300(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-slate-300, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-slate-400(0.11)") {
          @include assert {
            @include output {
              @include to-slate-400(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-slate-400, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-slate-500(0.11)") {
          @include assert {
            @include output {
              @include to-slate-500(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-slate-500, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-slate-600(0.11)") {
          @include assert {
            @include output {
              @include to-slate-600(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-slate-600, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-slate-700(0.11)") {
          @include assert {
            @include output {
              @include to-slate-700(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-slate-700, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-slate-800(0.11)") {
          @include assert {
            @include output {
              @include to-slate-800(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-slate-800, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-slate-900(0.11)") {
          @include assert {
            @include output {
              @include to-slate-900(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-slate-900, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-slate-950(0.11)") {
          @include assert {
            @include output {
              @include to-slate-950(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-slate-950, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-gray-50(0.11)") {
          @include assert {
            @include output {
              @include to-gray-50(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-gray-50, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-gray-100(0.11)") {
          @include assert {
            @include output {
              @include to-gray-100(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-gray-100, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-gray-200(0.11)") {
          @include assert {
            @include output {
              @include to-gray-200(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-gray-200, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-gray-300(0.11)") {
          @include assert {
            @include output {
              @include to-gray-300(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-gray-300, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-gray-400(0.11)") {
          @include assert {
            @include output {
              @include to-gray-400(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-gray-400, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-gray-500(0.11)") {
          @include assert {
            @include output {
              @include to-gray-500(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-gray-500, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-gray-600(0.11)") {
          @include assert {
            @include output {
              @include to-gray-600(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-gray-600, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-gray-700(0.11)") {
          @include assert {
            @include output {
              @include to-gray-700(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-gray-700, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-gray-800(0.11)") {
          @include assert {
            @include output {
              @include to-gray-800(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-gray-800, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-gray-900(0.11)") {
          @include assert {
            @include output {
              @include to-gray-900(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-gray-900, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-gray-950(0.11)") {
          @include assert {
            @include output {
              @include to-gray-950(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-gray-950, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-zinc-50(0.11)") {
          @include assert {
            @include output {
              @include to-zinc-50(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-zinc-50, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-zinc-100(0.11)") {
          @include assert {
            @include output {
              @include to-zinc-100(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-zinc-100, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-zinc-200(0.11)") {
          @include assert {
            @include output {
              @include to-zinc-200(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-zinc-200, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-zinc-300(0.11)") {
          @include assert {
            @include output {
              @include to-zinc-300(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-zinc-300, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-zinc-400(0.11)") {
          @include assert {
            @include output {
              @include to-zinc-400(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-zinc-400, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-zinc-500(0.11)") {
          @include assert {
            @include output {
              @include to-zinc-500(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-zinc-500, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-zinc-600(0.11)") {
          @include assert {
            @include output {
              @include to-zinc-600(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-zinc-600, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-zinc-700(0.11)") {
          @include assert {
            @include output {
              @include to-zinc-700(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-zinc-700, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-zinc-800(0.11)") {
          @include assert {
            @include output {
              @include to-zinc-800(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-zinc-800, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-zinc-900(0.11)") {
          @include assert {
            @include output {
              @include to-zinc-900(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-zinc-900, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-zinc-950(0.11)") {
          @include assert {
            @include output {
              @include to-zinc-950(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-zinc-950, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-neutral-50(0.11)") {
          @include assert {
            @include output {
              @include to-neutral-50(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-neutral-50, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-neutral-100(0.11)") {
          @include assert {
            @include output {
              @include to-neutral-100(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-neutral-100, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-neutral-200(0.11)") {
          @include assert {
            @include output {
              @include to-neutral-200(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-neutral-200, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-neutral-300(0.11)") {
          @include assert {
            @include output {
              @include to-neutral-300(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-neutral-300, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-neutral-400(0.11)") {
          @include assert {
            @include output {
              @include to-neutral-400(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-neutral-400, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-neutral-500(0.11)") {
          @include assert {
            @include output {
              @include to-neutral-500(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-neutral-500, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-neutral-600(0.11)") {
          @include assert {
            @include output {
              @include to-neutral-600(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-neutral-600, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-neutral-700(0.11)") {
          @include assert {
            @include output {
              @include to-neutral-700(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-neutral-700, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-neutral-800(0.11)") {
          @include assert {
            @include output {
              @include to-neutral-800(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-neutral-800, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-neutral-900(0.11)") {
          @include assert {
            @include output {
              @include to-neutral-900(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-neutral-900, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-neutral-950(0.11)") {
          @include assert {
            @include output {
              @include to-neutral-950(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-neutral-950, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-stone-50(0.11)") {
          @include assert {
            @include output {
              @include to-stone-50(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-stone-50, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-stone-100(0.11)") {
          @include assert {
            @include output {
              @include to-stone-100(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-stone-100, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-stone-200(0.11)") {
          @include assert {
            @include output {
              @include to-stone-200(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-stone-200, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-stone-300(0.11)") {
          @include assert {
            @include output {
              @include to-stone-300(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-stone-300, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-stone-400(0.11)") {
          @include assert {
            @include output {
              @include to-stone-400(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-stone-400, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-stone-500(0.11)") {
          @include assert {
            @include output {
              @include to-stone-500(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-stone-500, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-stone-600(0.11)") {
          @include assert {
            @include output {
              @include to-stone-600(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-stone-600, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-stone-700(0.11)") {
          @include assert {
            @include output {
              @include to-stone-700(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-stone-700, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-stone-800(0.11)") {
          @include assert {
            @include output {
              @include to-stone-800(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-stone-800, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-stone-900(0.11)") {
          @include assert {
            @include output {
              @include to-stone-900(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-stone-900, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-stone-950(0.11)") {
          @include assert {
            @include output {
              @include to-stone-950(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-stone-950, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-red-50(0.11)") {
          @include assert {
            @include output {
              @include to-red-50(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-red-50, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-red-100(0.11)") {
          @include assert {
            @include output {
              @include to-red-100(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-red-100, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-red-200(0.11)") {
          @include assert {
            @include output {
              @include to-red-200(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-red-200, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-red-300(0.11)") {
          @include assert {
            @include output {
              @include to-red-300(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-red-300, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-red-400(0.11)") {
          @include assert {
            @include output {
              @include to-red-400(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-red-400, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-red-500(0.11)") {
          @include assert {
            @include output {
              @include to-red-500(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-red-500, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-red-600(0.11)") {
          @include assert {
            @include output {
              @include to-red-600(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-red-600, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-red-700(0.11)") {
          @include assert {
            @include output {
              @include to-red-700(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-red-700, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-red-800(0.11)") {
          @include assert {
            @include output {
              @include to-red-800(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-red-800, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-red-900(0.11)") {
          @include assert {
            @include output {
              @include to-red-900(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-red-900, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-red-950(0.11)") {
          @include assert {
            @include output {
              @include to-red-950(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-red-950, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-orange-50(0.11)") {
          @include assert {
            @include output {
              @include to-orange-50(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-orange-50, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-orange-100(0.11)") {
          @include assert {
            @include output {
              @include to-orange-100(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-orange-100, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-orange-200(0.11)") {
          @include assert {
            @include output {
              @include to-orange-200(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-orange-200, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-orange-300(0.11)") {
          @include assert {
            @include output {
              @include to-orange-300(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-orange-300, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-orange-400(0.11)") {
          @include assert {
            @include output {
              @include to-orange-400(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-orange-400, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-orange-500(0.11)") {
          @include assert {
            @include output {
              @include to-orange-500(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-orange-500, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-orange-600(0.11)") {
          @include assert {
            @include output {
              @include to-orange-600(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-orange-600, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-orange-700(0.11)") {
          @include assert {
            @include output {
              @include to-orange-700(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-orange-700, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-orange-800(0.11)") {
          @include assert {
            @include output {
              @include to-orange-800(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-orange-800, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-orange-900(0.11)") {
          @include assert {
            @include output {
              @include to-orange-900(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-orange-900, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-orange-950(0.11)") {
          @include assert {
            @include output {
              @include to-orange-950(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-orange-950, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-amber-50(0.11)") {
          @include assert {
            @include output {
              @include to-amber-50(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-amber-50, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-amber-100(0.11)") {
          @include assert {
            @include output {
              @include to-amber-100(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-amber-100, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-amber-200(0.11)") {
          @include assert {
            @include output {
              @include to-amber-200(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-amber-200, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-amber-300(0.11)") {
          @include assert {
            @include output {
              @include to-amber-300(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-amber-300, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-amber-400(0.11)") {
          @include assert {
            @include output {
              @include to-amber-400(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-amber-400, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-amber-500(0.11)") {
          @include assert {
            @include output {
              @include to-amber-500(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-amber-500, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-amber-600(0.11)") {
          @include assert {
            @include output {
              @include to-amber-600(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-amber-600, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-amber-700(0.11)") {
          @include assert {
            @include output {
              @include to-amber-700(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-amber-700, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-amber-800(0.11)") {
          @include assert {
            @include output {
              @include to-amber-800(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-amber-800, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-amber-900(0.11)") {
          @include assert {
            @include output {
              @include to-amber-900(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-amber-900, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-amber-950(0.11)") {
          @include assert {
            @include output {
              @include to-amber-950(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-amber-950, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-yellow-50(0.11)") {
          @include assert {
            @include output {
              @include to-yellow-50(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-yellow-50, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-yellow-100(0.11)") {
          @include assert {
            @include output {
              @include to-yellow-100(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-yellow-100, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-yellow-200(0.11)") {
          @include assert {
            @include output {
              @include to-yellow-200(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-yellow-200, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-yellow-300(0.11)") {
          @include assert {
            @include output {
              @include to-yellow-300(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-yellow-300, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-yellow-400(0.11)") {
          @include assert {
            @include output {
              @include to-yellow-400(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-yellow-400, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-yellow-500(0.11)") {
          @include assert {
            @include output {
              @include to-yellow-500(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-yellow-500, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-yellow-600(0.11)") {
          @include assert {
            @include output {
              @include to-yellow-600(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-yellow-600, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-yellow-700(0.11)") {
          @include assert {
            @include output {
              @include to-yellow-700(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-yellow-700, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-yellow-800(0.11)") {
          @include assert {
            @include output {
              @include to-yellow-800(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-yellow-800, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-yellow-900(0.11)") {
          @include assert {
            @include output {
              @include to-yellow-900(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-yellow-900, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-yellow-950(0.11)") {
          @include assert {
            @include output {
              @include to-yellow-950(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-yellow-950, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-lime-50(0.11)") {
          @include assert {
            @include output {
              @include to-lime-50(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-lime-50, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-lime-100(0.11)") {
          @include assert {
            @include output {
              @include to-lime-100(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-lime-100, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-lime-200(0.11)") {
          @include assert {
            @include output {
              @include to-lime-200(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-lime-200, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-lime-300(0.11)") {
          @include assert {
            @include output {
              @include to-lime-300(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-lime-300, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-lime-400(0.11)") {
          @include assert {
            @include output {
              @include to-lime-400(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-lime-400, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-lime-500(0.11)") {
          @include assert {
            @include output {
              @include to-lime-500(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-lime-500, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-lime-600(0.11)") {
          @include assert {
            @include output {
              @include to-lime-600(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-lime-600, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-lime-700(0.11)") {
          @include assert {
            @include output {
              @include to-lime-700(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-lime-700, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-lime-800(0.11)") {
          @include assert {
            @include output {
              @include to-lime-800(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-lime-800, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-lime-900(0.11)") {
          @include assert {
            @include output {
              @include to-lime-900(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-lime-900, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-lime-950(0.11)") {
          @include assert {
            @include output {
              @include to-lime-950(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-lime-950, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-green-50(0.11)") {
          @include assert {
            @include output {
              @include to-green-50(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-green-50, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-green-100(0.11)") {
          @include assert {
            @include output {
              @include to-green-100(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-green-100, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-green-200(0.11)") {
          @include assert {
            @include output {
              @include to-green-200(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-green-200, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-green-300(0.11)") {
          @include assert {
            @include output {
              @include to-green-300(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-green-300, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-green-400(0.11)") {
          @include assert {
            @include output {
              @include to-green-400(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-green-400, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-green-500(0.11)") {
          @include assert {
            @include output {
              @include to-green-500(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-green-500, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-green-600(0.11)") {
          @include assert {
            @include output {
              @include to-green-600(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-green-600, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-green-700(0.11)") {
          @include assert {
            @include output {
              @include to-green-700(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-green-700, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-green-800(0.11)") {
          @include assert {
            @include output {
              @include to-green-800(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-green-800, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-green-900(0.11)") {
          @include assert {
            @include output {
              @include to-green-900(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-green-900, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-green-950(0.11)") {
          @include assert {
            @include output {
              @include to-green-950(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-green-950, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-emerald-50(0.11)") {
          @include assert {
            @include output {
              @include to-emerald-50(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-emerald-50, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-emerald-100(0.11)") {
          @include assert {
            @include output {
              @include to-emerald-100(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-emerald-100, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-emerald-200(0.11)") {
          @include assert {
            @include output {
              @include to-emerald-200(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-emerald-200, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-emerald-300(0.11)") {
          @include assert {
            @include output {
              @include to-emerald-300(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-emerald-300, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-emerald-400(0.11)") {
          @include assert {
            @include output {
              @include to-emerald-400(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-emerald-400, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-emerald-500(0.11)") {
          @include assert {
            @include output {
              @include to-emerald-500(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-emerald-500, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-emerald-600(0.11)") {
          @include assert {
            @include output {
              @include to-emerald-600(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-emerald-600, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-emerald-700(0.11)") {
          @include assert {
            @include output {
              @include to-emerald-700(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-emerald-700, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-emerald-800(0.11)") {
          @include assert {
            @include output {
              @include to-emerald-800(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-emerald-800, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-emerald-900(0.11)") {
          @include assert {
            @include output {
              @include to-emerald-900(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-emerald-900, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-emerald-950(0.11)") {
          @include assert {
            @include output {
              @include to-emerald-950(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-emerald-950, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-teal-50(0.11)") {
          @include assert {
            @include output {
              @include to-teal-50(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-teal-50, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-teal-100(0.11)") {
          @include assert {
            @include output {
              @include to-teal-100(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-teal-100, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-teal-200(0.11)") {
          @include assert {
            @include output {
              @include to-teal-200(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-teal-200, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-teal-300(0.11)") {
          @include assert {
            @include output {
              @include to-teal-300(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-teal-300, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-teal-400(0.11)") {
          @include assert {
            @include output {
              @include to-teal-400(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-teal-400, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-teal-500(0.11)") {
          @include assert {
            @include output {
              @include to-teal-500(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-teal-500, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-teal-600(0.11)") {
          @include assert {
            @include output {
              @include to-teal-600(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-teal-600, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-teal-700(0.11)") {
          @include assert {
            @include output {
              @include to-teal-700(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-teal-700, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-teal-800(0.11)") {
          @include assert {
            @include output {
              @include to-teal-800(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-teal-800, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-teal-900(0.11)") {
          @include assert {
            @include output {
              @include to-teal-900(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-teal-900, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-teal-950(0.11)") {
          @include assert {
            @include output {
              @include to-teal-950(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-teal-950, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-cyan-50(0.11)") {
          @include assert {
            @include output {
              @include to-cyan-50(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-cyan-50, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-cyan-100(0.11)") {
          @include assert {
            @include output {
              @include to-cyan-100(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-cyan-100, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-cyan-200(0.11)") {
          @include assert {
            @include output {
              @include to-cyan-200(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-cyan-200, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-cyan-300(0.11)") {
          @include assert {
            @include output {
              @include to-cyan-300(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-cyan-300, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-cyan-400(0.11)") {
          @include assert {
            @include output {
              @include to-cyan-400(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-cyan-400, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-cyan-500(0.11)") {
          @include assert {
            @include output {
              @include to-cyan-500(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-cyan-500, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-cyan-600(0.11)") {
          @include assert {
            @include output {
              @include to-cyan-600(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-cyan-600, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-cyan-700(0.11)") {
          @include assert {
            @include output {
              @include to-cyan-700(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-cyan-700, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-cyan-800(0.11)") {
          @include assert {
            @include output {
              @include to-cyan-800(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-cyan-800, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-cyan-900(0.11)") {
          @include assert {
            @include output {
              @include to-cyan-900(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-cyan-900, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-cyan-950(0.11)") {
          @include assert {
            @include output {
              @include to-cyan-950(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-cyan-950, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-sky-50(0.11)") {
          @include assert {
            @include output {
              @include to-sky-50(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-sky-50, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-sky-100(0.11)") {
          @include assert {
            @include output {
              @include to-sky-100(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-sky-100, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-sky-200(0.11)") {
          @include assert {
            @include output {
              @include to-sky-200(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-sky-200, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-sky-300(0.11)") {
          @include assert {
            @include output {
              @include to-sky-300(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-sky-300, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-sky-400(0.11)") {
          @include assert {
            @include output {
              @include to-sky-400(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-sky-400, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-sky-500(0.11)") {
          @include assert {
            @include output {
              @include to-sky-500(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-sky-500, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-sky-600(0.11)") {
          @include assert {
            @include output {
              @include to-sky-600(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-sky-600, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-sky-700(0.11)") {
          @include assert {
            @include output {
              @include to-sky-700(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-sky-700, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-sky-800(0.11)") {
          @include assert {
            @include output {
              @include to-sky-800(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-sky-800, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-sky-900(0.11)") {
          @include assert {
            @include output {
              @include to-sky-900(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-sky-900, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-sky-950(0.11)") {
          @include assert {
            @include output {
              @include to-sky-950(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-sky-950, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-blue-50(0.11)") {
          @include assert {
            @include output {
              @include to-blue-50(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-blue-50, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-blue-100(0.11)") {
          @include assert {
            @include output {
              @include to-blue-100(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-blue-100, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-blue-200(0.11)") {
          @include assert {
            @include output {
              @include to-blue-200(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-blue-200, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-blue-300(0.11)") {
          @include assert {
            @include output {
              @include to-blue-300(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-blue-300, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-blue-400(0.11)") {
          @include assert {
            @include output {
              @include to-blue-400(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-blue-400, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-blue-500(0.11)") {
          @include assert {
            @include output {
              @include to-blue-500(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-blue-500, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-blue-600(0.11)") {
          @include assert {
            @include output {
              @include to-blue-600(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-blue-600, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-blue-700(0.11)") {
          @include assert {
            @include output {
              @include to-blue-700(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-blue-700, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-blue-800(0.11)") {
          @include assert {
            @include output {
              @include to-blue-800(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-blue-800, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-blue-900(0.11)") {
          @include assert {
            @include output {
              @include to-blue-900(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-blue-900, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-blue-950(0.11)") {
          @include assert {
            @include output {
              @include to-blue-950(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-blue-950, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-indigo-50(0.11)") {
          @include assert {
            @include output {
              @include to-indigo-50(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-indigo-50, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-indigo-100(0.11)") {
          @include assert {
            @include output {
              @include to-indigo-100(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-indigo-100, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-indigo-200(0.11)") {
          @include assert {
            @include output {
              @include to-indigo-200(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-indigo-200, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-indigo-300(0.11)") {
          @include assert {
            @include output {
              @include to-indigo-300(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-indigo-300, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-indigo-400(0.11)") {
          @include assert {
            @include output {
              @include to-indigo-400(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-indigo-400, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-indigo-500(0.11)") {
          @include assert {
            @include output {
              @include to-indigo-500(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-indigo-500, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-indigo-600(0.11)") {
          @include assert {
            @include output {
              @include to-indigo-600(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-indigo-600, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-indigo-700(0.11)") {
          @include assert {
            @include output {
              @include to-indigo-700(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-indigo-700, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-indigo-800(0.11)") {
          @include assert {
            @include output {
              @include to-indigo-800(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-indigo-800, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-indigo-900(0.11)") {
          @include assert {
            @include output {
              @include to-indigo-900(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-indigo-900, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-indigo-950(0.11)") {
          @include assert {
            @include output {
              @include to-indigo-950(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-indigo-950, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-violet-50(0.11)") {
          @include assert {
            @include output {
              @include to-violet-50(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-violet-50, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-violet-100(0.11)") {
          @include assert {
            @include output {
              @include to-violet-100(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-violet-100, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-violet-200(0.11)") {
          @include assert {
            @include output {
              @include to-violet-200(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-violet-200, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-violet-300(0.11)") {
          @include assert {
            @include output {
              @include to-violet-300(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-violet-300, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-violet-400(0.11)") {
          @include assert {
            @include output {
              @include to-violet-400(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-violet-400, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-violet-500(0.11)") {
          @include assert {
            @include output {
              @include to-violet-500(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-violet-500, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-violet-600(0.11)") {
          @include assert {
            @include output {
              @include to-violet-600(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-violet-600, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-violet-700(0.11)") {
          @include assert {
            @include output {
              @include to-violet-700(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-violet-700, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-violet-800(0.11)") {
          @include assert {
            @include output {
              @include to-violet-800(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-violet-800, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-violet-900(0.11)") {
          @include assert {
            @include output {
              @include to-violet-900(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-violet-900, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-violet-950(0.11)") {
          @include assert {
            @include output {
              @include to-violet-950(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-violet-950, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-purple-50(0.11)") {
          @include assert {
            @include output {
              @include to-purple-50(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-purple-50, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-purple-100(0.11)") {
          @include assert {
            @include output {
              @include to-purple-100(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-purple-100, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-purple-200(0.11)") {
          @include assert {
            @include output {
              @include to-purple-200(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-purple-200, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-purple-300(0.11)") {
          @include assert {
            @include output {
              @include to-purple-300(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-purple-300, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-purple-400(0.11)") {
          @include assert {
            @include output {
              @include to-purple-400(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-purple-400, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-purple-500(0.11)") {
          @include assert {
            @include output {
              @include to-purple-500(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-purple-500, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-purple-600(0.11)") {
          @include assert {
            @include output {
              @include to-purple-600(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-purple-600, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-purple-700(0.11)") {
          @include assert {
            @include output {
              @include to-purple-700(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-purple-700, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-purple-800(0.11)") {
          @include assert {
            @include output {
              @include to-purple-800(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-purple-800, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-purple-900(0.11)") {
          @include assert {
            @include output {
              @include to-purple-900(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-purple-900, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-purple-950(0.11)") {
          @include assert {
            @include output {
              @include to-purple-950(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-purple-950, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-fuchsia-50(0.11)") {
          @include assert {
            @include output {
              @include to-fuchsia-50(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-fuchsia-50, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-fuchsia-100(0.11)") {
          @include assert {
            @include output {
              @include to-fuchsia-100(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-fuchsia-100, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-fuchsia-200(0.11)") {
          @include assert {
            @include output {
              @include to-fuchsia-200(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-fuchsia-200, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-fuchsia-300(0.11)") {
          @include assert {
            @include output {
              @include to-fuchsia-300(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-fuchsia-300, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-fuchsia-400(0.11)") {
          @include assert {
            @include output {
              @include to-fuchsia-400(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-fuchsia-400, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-fuchsia-500(0.11)") {
          @include assert {
            @include output {
              @include to-fuchsia-500(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-fuchsia-500, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-fuchsia-600(0.11)") {
          @include assert {
            @include output {
              @include to-fuchsia-600(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-fuchsia-600, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-fuchsia-700(0.11)") {
          @include assert {
            @include output {
              @include to-fuchsia-700(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-fuchsia-700, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-fuchsia-800(0.11)") {
          @include assert {
            @include output {
              @include to-fuchsia-800(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-fuchsia-800, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-fuchsia-900(0.11)") {
          @include assert {
            @include output {
              @include to-fuchsia-900(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-fuchsia-900, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-fuchsia-950(0.11)") {
          @include assert {
            @include output {
              @include to-fuchsia-950(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-fuchsia-950, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-pink-50(0.11)") {
          @include assert {
            @include output {
              @include to-pink-50(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-pink-50, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-pink-100(0.11)") {
          @include assert {
            @include output {
              @include to-pink-100(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-pink-100, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-pink-200(0.11)") {
          @include assert {
            @include output {
              @include to-pink-200(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-pink-200, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-pink-300(0.11)") {
          @include assert {
            @include output {
              @include to-pink-300(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-pink-300, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-pink-400(0.11)") {
          @include assert {
            @include output {
              @include to-pink-400(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-pink-400, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-pink-500(0.11)") {
          @include assert {
            @include output {
              @include to-pink-500(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-pink-500, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-pink-600(0.11)") {
          @include assert {
            @include output {
              @include to-pink-600(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-pink-600, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-pink-700(0.11)") {
          @include assert {
            @include output {
              @include to-pink-700(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-pink-700, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-pink-800(0.11)") {
          @include assert {
            @include output {
              @include to-pink-800(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-pink-800, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-pink-900(0.11)") {
          @include assert {
            @include output {
              @include to-pink-900(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-pink-900, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-pink-950(0.11)") {
          @include assert {
            @include output {
              @include to-pink-950(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-pink-950, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-rose-50(0.11)") {
          @include assert {
            @include output {
              @include to-rose-50(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-rose-50, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-rose-100(0.11)") {
          @include assert {
            @include output {
              @include to-rose-100(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-rose-100, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-rose-200(0.11)") {
          @include assert {
            @include output {
              @include to-rose-200(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-rose-200, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-rose-300(0.11)") {
          @include assert {
            @include output {
              @include to-rose-300(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-rose-300, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-rose-400(0.11)") {
          @include assert {
            @include output {
              @include to-rose-400(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-rose-400, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-rose-500(0.11)") {
          @include assert {
            @include output {
              @include to-rose-500(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-rose-500, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-rose-600(0.11)") {
          @include assert {
            @include output {
              @include to-rose-600(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-rose-600, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-rose-700(0.11)") {
          @include assert {
            @include output {
              @include to-rose-700(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-rose-700, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-rose-800(0.11)") {
          @include assert {
            @include output {
              @include to-rose-800(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-rose-800, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-rose-900(0.11)") {
          @include assert {
            @include output {
              @include to-rose-900(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-rose-900, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-rose-950(0.11)") {
          @include assert {
            @include output {
              @include to-rose-950(0.11);
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(
                null,
                #fff,
                color.change($color-rose-950, $alpha: 0.11)
              );
            }
          }
        }

        @include it("to-0\%") {
          @include assert {
            @include output {
              @include to-white;
              @include to-0\%;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, white);

              background-image: linear-gradient(null, #fff, white 0%);
            }
          }
        }

        @include it("to-5\%") {
          @include assert {
            @include output {
              @include to-white;
              @include to-5\%;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, white);

              background-image: linear-gradient(null, #fff, white 5%);
            }
          }
        }

        @include it("to-10\%") {
          @include assert {
            @include output {
              @include to-white;
              @include to-10\%;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, white);

              background-image: linear-gradient(null, #fff, white 10%);
            }
          }
        }

        @include it("to-15\%") {
          @include assert {
            @include output {
              @include to-white;
              @include to-15\%;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, white);

              background-image: linear-gradient(null, #fff, white 15%);
            }
          }
        }

        @include it("to-20\%") {
          @include assert {
            @include output {
              @include to-white;
              @include to-20\%;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, white);

              background-image: linear-gradient(null, #fff, white 20%);
            }
          }
        }

        @include it("to-25\%") {
          @include assert {
            @include output {
              @include to-white;
              @include to-25\%;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, white);

              background-image: linear-gradient(null, #fff, white 25%);
            }
          }
        }

        @include it("to-30\%") {
          @include assert {
            @include output {
              @include to-white;
              @include to-30\%;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, white);

              background-image: linear-gradient(null, #fff, white 30%);
            }
          }
        }

        @include it("to-35\%") {
          @include assert {
            @include output {
              @include to-white;
              @include to-35\%;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, white);

              background-image: linear-gradient(null, #fff, white 35%);
            }
          }
        }

        @include it("to-40\%") {
          @include assert {
            @include output {
              @include to-white;
              @include to-40\%;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, white);

              background-image: linear-gradient(null, #fff, white 40%);
            }
          }
        }

        @include it("to-45\%") {
          @include assert {
            @include output {
              @include to-white;
              @include to-45\%;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, white);

              background-image: linear-gradient(null, #fff, white 45%);
            }
          }
        }

        @include it("to-50\%") {
          @include assert {
            @include output {
              @include to-white;
              @include to-50\%;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, white);

              background-image: linear-gradient(null, #fff, white 50%);
            }
          }
        }

        @include it("to-55\%") {
          @include assert {
            @include output {
              @include to-white;
              @include to-55\%;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, white);

              background-image: linear-gradient(null, #fff, white 55%);
            }
          }
        }

        @include it("to-60\%") {
          @include assert {
            @include output {
              @include to-white;
              @include to-60\%;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, white);

              background-image: linear-gradient(null, #fff, white 60%);
            }
          }
        }

        @include it("to-65\%") {
          @include assert {
            @include output {
              @include to-white;
              @include to-65\%;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, white);

              background-image: linear-gradient(null, #fff, white 65%);
            }
          }
        }

        @include it("to-70\%") {
          @include assert {
            @include output {
              @include to-white;
              @include to-70\%;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, white);

              background-image: linear-gradient(null, #fff, white 70%);
            }
          }
        }

        @include it("to-75\%") {
          @include assert {
            @include output {
              @include to-white;
              @include to-75\%;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, white);

              background-image: linear-gradient(null, #fff, white 75%);
            }
          }
        }

        @include it("to-80\%") {
          @include assert {
            @include output {
              @include to-white;
              @include to-80\%;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, white);

              background-image: linear-gradient(null, #fff, white 80%);
            }
          }
        }

        @include it("to-85\%") {
          @include assert {
            @include output {
              @include to-white;
              @include to-85\%;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, white);

              background-image: linear-gradient(null, #fff, white 85%);
            }
          }
        }

        @include it("to-90\%") {
          @include assert {
            @include output {
              @include to-white;
              @include to-90\%;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, white);

              background-image: linear-gradient(null, #fff, white 90%);
            }
          }
        }

        @include it("to-95\%") {
          @include assert {
            @include output {
              @include to-white;
              @include to-95\%;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, white);

              background-image: linear-gradient(null, #fff, white 95%);
            }
          }
        }

        @include it("to-100\%") {
          @include assert {
            @include output {
              @include to-white;
              @include to-100\%;
              @include utils_reset;
            }

            @include expect {
              background-image: linear-gradient(null, #fff, white);

              background-image: linear-gradient(null, #fff, white 100%);
            }
          }
        }
      }
    }

    @include describe("Custom") {
      @include it("from-(#243c5a)") {
        @include assert {
          @include output {
            @include from-(#243c5a);
            @include utils_reset;
          }

          @include expect {
            background-image: linear-gradient(null, #243c5a, transparent);
          }
        }
      }

      @include it("via-(#243c5a)") {
        @include assert {
          @include output {
            @include via-(#243c5a);
            @include utils_reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #243c5a, transparent);
          }
        }
      }

      @include it("to-(#243c5a)") {
        @include assert {
          @include output {
            @include to-(#243c5a);
            @include utils_reset;
          }

          @include expect {
            background-image: linear-gradient(null, #fff, #243c5a);
          }
        }
      }
    }
  }
}
