@include describe('2.Flexbox & Grid') {
  @include describe('Order') {
    @include describe('Basic') {
      @include it('order-1') {
        @include assert {
          @include output {
            @include order-1;
            @include utils_reset-tw;
          }

          @include expect {
            order: 1;
          }
        }
      }

      @include it('order-2') {
        @include assert {
          @include output {
            @include order-2;
            @include utils_reset-tw;
          }

          @include expect {
            order: 2;
          }
        }
      }

      @include it('order-3') {
        @include assert {
          @include output {
            @include order-3;
            @include utils_reset-tw;
          }

          @include expect {
            order: 3;
          }
        }
      }

      @include it('order-4') {
        @include assert {
          @include output {
            @include order-4;
            @include utils_reset-tw;
          }

          @include expect {
            order: 4;
          }
        }
      }

      @include it('order-5') {
        @include assert {
          @include output {
            @include order-5;
            @include utils_reset-tw;
          }

          @include expect {
            order: 5;
          }
        }
      }

      @include it('order-6') {
        @include assert {
          @include output {
            @include order-6;
            @include utils_reset-tw;
          }

          @include expect {
            order: 6;
          }
        }
      }

      @include it('order-7') {
        @include assert {
          @include output {
            @include order-7;
            @include utils_reset-tw;
          }

          @include expect {
            order: 7;
          }
        }
      }

      @include it('order-8') {
        @include assert {
          @include output {
            @include order-8;
            @include utils_reset-tw;
          }

          @include expect {
            order: 8;
          }
        }
      }

      @include it('order-9') {
        @include assert {
          @include output {
            @include order-9;
            @include utils_reset-tw;
          }

          @include expect {
            order: 9;
          }
        }
      }

      @include it('order-10') {
        @include assert {
          @include output {
            @include order-10;
            @include utils_reset-tw;
          }

          @include expect {
            order: 10;
          }
        }
      }

      @include it('order-11') {
        @include assert {
          @include output {
            @include order-11;
            @include utils_reset-tw;
          }

          @include expect {
            order: 11;
          }
        }
      }

      @include it('order-12') {
        @include assert {
          @include output {
            @include order-12;
            @include utils_reset-tw;
          }

          @include expect {
            order: 12;
          }
        }
      }

      @include it('order-first') {
        @include assert {
          @include output {
            @include order-first;
            @include utils_reset-tw;
          }

          @include expect {
            order: -9999;
          }
        }
      }

      @include it('order-last') {
        @include assert {
          @include output {
            @include order-last;
            @include utils_reset-tw;
          }

          @include expect {
            order: 9999;
          }
        }
      }

      @include it('order-none') {
        @include assert {
          @include output {
            @include order-none;
            @include utils_reset-tw;
          }

          @include expect {
            order: 0;
          }
        }
      }
    }

    @include it('-order-1') {
      @include assert {
        @include output {
          @include \-order-1;
          @include utils_reset-tw;
        }

        @include expect {
          order: -1;
        }
      }
    }

    @include it('-order-2') {
      @include assert {
        @include output {
          @include \-order-2;
          @include utils_reset-tw;
        }

        @include expect {
          order: -2;
        }
      }
    }

    @include it('-order-3') {
      @include assert {
        @include output {
          @include \-order-3;
          @include utils_reset-tw;
        }

        @include expect {
          order: -3;
        }
      }
    }

    @include it('-order-4') {
      @include assert {
        @include output {
          @include \-order-4;
          @include utils_reset-tw;
        }

        @include expect {
          order: -4;
        }
      }
    }

    @include it('-order-5') {
      @include assert {
        @include output {
          @include \-order-5;
          @include utils_reset-tw;
        }

        @include expect {
          order: -5;
        }
      }
    }

    @include it('-order-6') {
      @include assert {
        @include output {
          @include \-order-6;
          @include utils_reset-tw;
        }

        @include expect {
          order: -6;
        }
      }
    }

    @include it('-order-7') {
      @include assert {
        @include output {
          @include \-order-7;
          @include utils_reset-tw;
        }

        @include expect {
          order: -7;
        }
      }
    }

    @include it('-order-8') {
      @include assert {
        @include output {
          @include \-order-8;
          @include utils_reset-tw;
        }

        @include expect {
          order: -8;
        }
      }
    }

    @include it('-order-9') {
      @include assert {
        @include output {
          @include \-order-9;
          @include utils_reset-tw;
        }

        @include expect {
          order: -9;
        }
      }
    }

    @include it('-order-10') {
      @include assert {
        @include output {
          @include \-order-10;
          @include utils_reset-tw;
        }

        @include expect {
          order: -10;
        }
      }
    }

    @include it('-order-11') {
      @include assert {
        @include output {
          @include \-order-11;
          @include utils_reset-tw;
        }

        @include expect {
          order: -11;
        }
      }
    }

    @include it('-order-12') {
      @include assert {
        @include output {
          @include \-order-12;
          @include utils_reset-tw;
        }

        @include expect {
          order: -12;
        }
      }
    }

    @include it('-order-first') {
      @include assert {
        @include output {
          @include \-order-first;
          @include utils_reset-tw;
        }

        @include expect {
          order: 9999;
        }
      }
    }

    @include it('-order-last') {
      @include assert {
        @include output {
          @include \-order-last;
          @include utils_reset-tw;
        }

        @include expect {
          order: -9999;
        }
      }
    }

    @include it('-order-none') {
      @include assert {
        @include output {
          @include \-order-none;
          @include utils_reset-tw;
        }

        @include expect {
          order: -0;
        }
      }
    }

    @include describe('Rwd') {
      @include it('sm\:order-1') {
        @include assert {
          @include output {
            @include sm\:order-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              order: 1;
            }
          }
        }
      }

      @include it('sm\:order-2') {
        @include assert {
          @include output {
            @include sm\:order-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              order: 2;
            }
          }
        }
      }

      @include it('sm\:order-3') {
        @include assert {
          @include output {
            @include sm\:order-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              order: 3;
            }
          }
        }
      }

      @include it('sm\:order-4') {
        @include assert {
          @include output {
            @include sm\:order-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              order: 4;
            }
          }
        }
      }

      @include it('sm\:order-5') {
        @include assert {
          @include output {
            @include sm\:order-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              order: 5;
            }
          }
        }
      }

      @include it('sm\:order-6') {
        @include assert {
          @include output {
            @include sm\:order-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              order: 6;
            }
          }
        }
      }

      @include it('sm\:order-7') {
        @include assert {
          @include output {
            @include sm\:order-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              order: 7;
            }
          }
        }
      }

      @include it('sm\:order-8') {
        @include assert {
          @include output {
            @include sm\:order-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              order: 8;
            }
          }
        }
      }

      @include it('sm\:order-9') {
        @include assert {
          @include output {
            @include sm\:order-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              order: 9;
            }
          }
        }
      }

      @include it('sm\:order-10') {
        @include assert {
          @include output {
            @include sm\:order-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              order: 10;
            }
          }
        }
      }

      @include it('sm\:order-11') {
        @include assert {
          @include output {
            @include sm\:order-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              order: 11;
            }
          }
        }
      }

      @include it('sm\:order-12') {
        @include assert {
          @include output {
            @include sm\:order-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              order: 12;
            }
          }
        }
      }

      @include it('sm\:order-first') {
        @include assert {
          @include output {
            @include sm\:order-first;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              order: -9999;
            }
          }
        }
      }

      @include it('sm\:order-last') {
        @include assert {
          @include output {
            @include sm\:order-last;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              order: 9999;
            }
          }
        }
      }

      @include it('sm\:order-none') {
        @include assert {
          @include output {
            @include sm\:order-none;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              order: 0;
            }
          }
        }
      }

      @include it('sm\:-order-1') {
        @include assert {
          @include output {
            @include sm\:-order-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              order: -1;
            }
          }
        }
      }

      @include it('sm\:-order-2') {
        @include assert {
          @include output {
            @include sm\:-order-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              order: -2;
            }
          }
        }
      }

      @include it('sm\:-order-3') {
        @include assert {
          @include output {
            @include sm\:-order-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              order: -3;
            }
          }
        }
      }

      @include it('sm\:-order-4') {
        @include assert {
          @include output {
            @include sm\:-order-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              order: -4;
            }
          }
        }
      }

      @include it('sm\:-order-5') {
        @include assert {
          @include output {
            @include sm\:-order-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              order: -5;
            }
          }
        }
      }

      @include it('sm\:-order-6') {
        @include assert {
          @include output {
            @include sm\:-order-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              order: -6;
            }
          }
        }
      }

      @include it('sm\:-order-7') {
        @include assert {
          @include output {
            @include sm\:-order-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              order: -7;
            }
          }
        }
      }

      @include it('sm\:-order-8') {
        @include assert {
          @include output {
            @include sm\:-order-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              order: -8;
            }
          }
        }
      }

      @include it('sm\:-order-9') {
        @include assert {
          @include output {
            @include sm\:-order-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              order: -9;
            }
          }
        }
      }

      @include it('sm\:-order-10') {
        @include assert {
          @include output {
            @include sm\:-order-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              order: -10;
            }
          }
        }
      }

      @include it('sm\:-order-11') {
        @include assert {
          @include output {
            @include sm\:-order-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              order: -11;
            }
          }
        }
      }

      @include it('sm\:-order-12') {
        @include assert {
          @include output {
            @include sm\:-order-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              order: -12;
            }
          }
        }
      }

      @include it('sm\:-order-first') {
        @include assert {
          @include output {
            @include sm\:-order-first;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              order: 9999;
            }
          }
        }
      }

      @include it('sm\:-order-last') {
        @include assert {
          @include output {
            @include sm\:-order-last;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              order: -9999;
            }
          }
        }
      }

      @include it('sm\:-order-none') {
        @include assert {
          @include output {
            @include sm\:-order-none;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              order: -0;
            }
          }
        }
      }

      @include it('md\:order-1') {
        @include assert {
          @include output {
            @include md\:order-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              order: 1;
            }
          }
        }
      }

      @include it('md\:order-2') {
        @include assert {
          @include output {
            @include md\:order-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              order: 2;
            }
          }
        }
      }

      @include it('md\:order-3') {
        @include assert {
          @include output {
            @include md\:order-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              order: 3;
            }
          }
        }
      }

      @include it('md\:order-4') {
        @include assert {
          @include output {
            @include md\:order-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              order: 4;
            }
          }
        }
      }

      @include it('md\:order-5') {
        @include assert {
          @include output {
            @include md\:order-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              order: 5;
            }
          }
        }
      }

      @include it('md\:order-6') {
        @include assert {
          @include output {
            @include md\:order-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              order: 6;
            }
          }
        }
      }

      @include it('md\:order-7') {
        @include assert {
          @include output {
            @include md\:order-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              order: 7;
            }
          }
        }
      }

      @include it('md\:order-8') {
        @include assert {
          @include output {
            @include md\:order-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              order: 8;
            }
          }
        }
      }

      @include it('md\:order-9') {
        @include assert {
          @include output {
            @include md\:order-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              order: 9;
            }
          }
        }
      }

      @include it('md\:order-10') {
        @include assert {
          @include output {
            @include md\:order-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              order: 10;
            }
          }
        }
      }

      @include it('md\:order-11') {
        @include assert {
          @include output {
            @include md\:order-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              order: 11;
            }
          }
        }
      }

      @include it('md\:order-12') {
        @include assert {
          @include output {
            @include md\:order-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              order: 12;
            }
          }
        }
      }

      @include it('md\:order-first') {
        @include assert {
          @include output {
            @include md\:order-first;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              order: -9999;
            }
          }
        }
      }

      @include it('md\:order-last') {
        @include assert {
          @include output {
            @include md\:order-last;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              order: 9999;
            }
          }
        }
      }

      @include it('md\:order-none') {
        @include assert {
          @include output {
            @include md\:order-none;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              order: 0;
            }
          }
        }
      }

      @include it('md\:-order-1') {
        @include assert {
          @include output {
            @include md\:-order-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              order: -1;
            }
          }
        }
      }

      @include it('md\:-order-2') {
        @include assert {
          @include output {
            @include md\:-order-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              order: -2;
            }
          }
        }
      }

      @include it('md\:-order-3') {
        @include assert {
          @include output {
            @include md\:-order-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              order: -3;
            }
          }
        }
      }

      @include it('md\:-order-4') {
        @include assert {
          @include output {
            @include md\:-order-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              order: -4;
            }
          }
        }
      }

      @include it('md\:-order-5') {
        @include assert {
          @include output {
            @include md\:-order-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              order: -5;
            }
          }
        }
      }

      @include it('md\:-order-6') {
        @include assert {
          @include output {
            @include md\:-order-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              order: -6;
            }
          }
        }
      }

      @include it('md\:-order-7') {
        @include assert {
          @include output {
            @include md\:-order-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              order: -7;
            }
          }
        }
      }

      @include it('md\:-order-8') {
        @include assert {
          @include output {
            @include md\:-order-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              order: -8;
            }
          }
        }
      }

      @include it('md\:-order-9') {
        @include assert {
          @include output {
            @include md\:-order-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              order: -9;
            }
          }
        }
      }

      @include it('md\:-order-10') {
        @include assert {
          @include output {
            @include md\:-order-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              order: -10;
            }
          }
        }
      }

      @include it('md\:-order-11') {
        @include assert {
          @include output {
            @include md\:-order-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              order: -11;
            }
          }
        }
      }

      @include it('md\:-order-12') {
        @include assert {
          @include output {
            @include md\:-order-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              order: -12;
            }
          }
        }
      }

      @include it('md\:-order-first') {
        @include assert {
          @include output {
            @include md\:-order-first;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              order: 9999;
            }
          }
        }
      }

      @include it('md\:-order-last') {
        @include assert {
          @include output {
            @include md\:-order-last;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              order: -9999;
            }
          }
        }
      }

      @include it('md\:-order-none') {
        @include assert {
          @include output {
            @include md\:-order-none;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              order: -0;
            }
          }
        }
      }

      @include it('lg\:order-1') {
        @include assert {
          @include output {
            @include lg\:order-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              order: 1;
            }
          }
        }
      }

      @include it('lg\:order-2') {
        @include assert {
          @include output {
            @include lg\:order-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              order: 2;
            }
          }
        }
      }

      @include it('lg\:order-3') {
        @include assert {
          @include output {
            @include lg\:order-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              order: 3;
            }
          }
        }
      }

      @include it('lg\:order-4') {
        @include assert {
          @include output {
            @include lg\:order-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              order: 4;
            }
          }
        }
      }

      @include it('lg\:order-5') {
        @include assert {
          @include output {
            @include lg\:order-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              order: 5;
            }
          }
        }
      }

      @include it('lg\:order-6') {
        @include assert {
          @include output {
            @include lg\:order-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              order: 6;
            }
          }
        }
      }

      @include it('lg\:order-7') {
        @include assert {
          @include output {
            @include lg\:order-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              order: 7;
            }
          }
        }
      }

      @include it('lg\:order-8') {
        @include assert {
          @include output {
            @include lg\:order-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              order: 8;
            }
          }
        }
      }

      @include it('lg\:order-9') {
        @include assert {
          @include output {
            @include lg\:order-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              order: 9;
            }
          }
        }
      }

      @include it('lg\:order-10') {
        @include assert {
          @include output {
            @include lg\:order-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              order: 10;
            }
          }
        }
      }

      @include it('lg\:order-11') {
        @include assert {
          @include output {
            @include lg\:order-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              order: 11;
            }
          }
        }
      }

      @include it('lg\:order-12') {
        @include assert {
          @include output {
            @include lg\:order-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              order: 12;
            }
          }
        }
      }

      @include it('lg\:order-first') {
        @include assert {
          @include output {
            @include lg\:order-first;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              order: -9999;
            }
          }
        }
      }

      @include it('lg\:order-last') {
        @include assert {
          @include output {
            @include lg\:order-last;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              order: 9999;
            }
          }
        }
      }

      @include it('lg\:order-none') {
        @include assert {
          @include output {
            @include lg\:order-none;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              order: 0;
            }
          }
        }
      }

      @include it('lg\:-order-1') {
        @include assert {
          @include output {
            @include lg\:-order-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              order: -1;
            }
          }
        }
      }

      @include it('lg\:-order-2') {
        @include assert {
          @include output {
            @include lg\:-order-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              order: -2;
            }
          }
        }
      }

      @include it('lg\:-order-3') {
        @include assert {
          @include output {
            @include lg\:-order-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              order: -3;
            }
          }
        }
      }

      @include it('lg\:-order-4') {
        @include assert {
          @include output {
            @include lg\:-order-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              order: -4;
            }
          }
        }
      }

      @include it('lg\:-order-5') {
        @include assert {
          @include output {
            @include lg\:-order-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              order: -5;
            }
          }
        }
      }

      @include it('lg\:-order-6') {
        @include assert {
          @include output {
            @include lg\:-order-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              order: -6;
            }
          }
        }
      }

      @include it('lg\:-order-7') {
        @include assert {
          @include output {
            @include lg\:-order-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              order: -7;
            }
          }
        }
      }

      @include it('lg\:-order-8') {
        @include assert {
          @include output {
            @include lg\:-order-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              order: -8;
            }
          }
        }
      }

      @include it('lg\:-order-9') {
        @include assert {
          @include output {
            @include lg\:-order-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              order: -9;
            }
          }
        }
      }

      @include it('lg\:-order-10') {
        @include assert {
          @include output {
            @include lg\:-order-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              order: -10;
            }
          }
        }
      }

      @include it('lg\:-order-11') {
        @include assert {
          @include output {
            @include lg\:-order-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              order: -11;
            }
          }
        }
      }

      @include it('lg\:-order-12') {
        @include assert {
          @include output {
            @include lg\:-order-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              order: -12;
            }
          }
        }
      }

      @include it('lg\:-order-first') {
        @include assert {
          @include output {
            @include lg\:-order-first;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              order: 9999;
            }
          }
        }
      }

      @include it('lg\:-order-last') {
        @include assert {
          @include output {
            @include lg\:-order-last;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              order: -9999;
            }
          }
        }
      }

      @include it('lg\:-order-none') {
        @include assert {
          @include output {
            @include lg\:-order-none;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              order: -0;
            }
          }
        }
      }

      @include it('xl\:order-1') {
        @include assert {
          @include output {
            @include xl\:order-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              order: 1;
            }
          }
        }
      }

      @include it('xl\:order-2') {
        @include assert {
          @include output {
            @include xl\:order-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              order: 2;
            }
          }
        }
      }

      @include it('xl\:order-3') {
        @include assert {
          @include output {
            @include xl\:order-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              order: 3;
            }
          }
        }
      }

      @include it('xl\:order-4') {
        @include assert {
          @include output {
            @include xl\:order-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              order: 4;
            }
          }
        }
      }

      @include it('xl\:order-5') {
        @include assert {
          @include output {
            @include xl\:order-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              order: 5;
            }
          }
        }
      }

      @include it('xl\:order-6') {
        @include assert {
          @include output {
            @include xl\:order-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              order: 6;
            }
          }
        }
      }

      @include it('xl\:order-7') {
        @include assert {
          @include output {
            @include xl\:order-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              order: 7;
            }
          }
        }
      }

      @include it('xl\:order-8') {
        @include assert {
          @include output {
            @include xl\:order-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              order: 8;
            }
          }
        }
      }

      @include it('xl\:order-9') {
        @include assert {
          @include output {
            @include xl\:order-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              order: 9;
            }
          }
        }
      }

      @include it('xl\:order-10') {
        @include assert {
          @include output {
            @include xl\:order-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              order: 10;
            }
          }
        }
      }

      @include it('xl\:order-11') {
        @include assert {
          @include output {
            @include xl\:order-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              order: 11;
            }
          }
        }
      }

      @include it('xl\:order-12') {
        @include assert {
          @include output {
            @include xl\:order-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              order: 12;
            }
          }
        }
      }

      @include it('xl\:order-first') {
        @include assert {
          @include output {
            @include xl\:order-first;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              order: -9999;
            }
          }
        }
      }

      @include it('xl\:order-last') {
        @include assert {
          @include output {
            @include xl\:order-last;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              order: 9999;
            }
          }
        }
      }

      @include it('xl\:order-none') {
        @include assert {
          @include output {
            @include xl\:order-none;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              order: 0;
            }
          }
        }
      }

      @include it('xl\:-order-1') {
        @include assert {
          @include output {
            @include xl\:-order-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              order: -1;
            }
          }
        }
      }

      @include it('xl\:-order-2') {
        @include assert {
          @include output {
            @include xl\:-order-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              order: -2;
            }
          }
        }
      }

      @include it('xl\:-order-3') {
        @include assert {
          @include output {
            @include xl\:-order-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              order: -3;
            }
          }
        }
      }

      @include it('xl\:-order-4') {
        @include assert {
          @include output {
            @include xl\:-order-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              order: -4;
            }
          }
        }
      }

      @include it('xl\:-order-5') {
        @include assert {
          @include output {
            @include xl\:-order-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              order: -5;
            }
          }
        }
      }

      @include it('xl\:-order-6') {
        @include assert {
          @include output {
            @include xl\:-order-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              order: -6;
            }
          }
        }
      }

      @include it('xl\:-order-7') {
        @include assert {
          @include output {
            @include xl\:-order-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              order: -7;
            }
          }
        }
      }

      @include it('xl\:-order-8') {
        @include assert {
          @include output {
            @include xl\:-order-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              order: -8;
            }
          }
        }
      }

      @include it('xl\:-order-9') {
        @include assert {
          @include output {
            @include xl\:-order-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              order: -9;
            }
          }
        }
      }

      @include it('xl\:-order-10') {
        @include assert {
          @include output {
            @include xl\:-order-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              order: -10;
            }
          }
        }
      }

      @include it('xl\:-order-11') {
        @include assert {
          @include output {
            @include xl\:-order-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              order: -11;
            }
          }
        }
      }

      @include it('xl\:-order-12') {
        @include assert {
          @include output {
            @include xl\:-order-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              order: -12;
            }
          }
        }
      }

      @include it('xl\:-order-first') {
        @include assert {
          @include output {
            @include xl\:-order-first;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              order: 9999;
            }
          }
        }
      }

      @include it('xl\:-order-last') {
        @include assert {
          @include output {
            @include xl\:-order-last;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              order: -9999;
            }
          }
        }
      }

      @include it('xl\:-order-none') {
        @include assert {
          @include output {
            @include xl\:-order-none;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              order: -0;
            }
          }
        }
      }

      @include it('2xl\:order-1') {
        @include assert {
          @include output {
            @include \2xl\:order-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              order: 1;
            }
          }
        }
      }

      @include it('2xl\:order-2') {
        @include assert {
          @include output {
            @include \2xl\:order-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              order: 2;
            }
          }
        }
      }

      @include it('2xl\:order-3') {
        @include assert {
          @include output {
            @include \2xl\:order-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              order: 3;
            }
          }
        }
      }

      @include it('2xl\:order-4') {
        @include assert {
          @include output {
            @include \2xl\:order-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              order: 4;
            }
          }
        }
      }

      @include it('2xl\:order-5') {
        @include assert {
          @include output {
            @include \2xl\:order-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              order: 5;
            }
          }
        }
      }

      @include it('2xl\:order-6') {
        @include assert {
          @include output {
            @include \2xl\:order-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              order: 6;
            }
          }
        }
      }

      @include it('2xl\:order-7') {
        @include assert {
          @include output {
            @include \2xl\:order-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              order: 7;
            }
          }
        }
      }

      @include it('2xl\:order-8') {
        @include assert {
          @include output {
            @include \2xl\:order-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              order: 8;
            }
          }
        }
      }

      @include it('2xl\:order-9') {
        @include assert {
          @include output {
            @include \2xl\:order-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              order: 9;
            }
          }
        }
      }

      @include it('2xl\:order-10') {
        @include assert {
          @include output {
            @include \2xl\:order-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              order: 10;
            }
          }
        }
      }

      @include it('2xl\:order-11') {
        @include assert {
          @include output {
            @include \2xl\:order-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              order: 11;
            }
          }
        }
      }

      @include it('2xl\:order-12') {
        @include assert {
          @include output {
            @include \2xl\:order-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              order: 12;
            }
          }
        }
      }

      @include it('2xl\:order-first') {
        @include assert {
          @include output {
            @include \2xl\:order-first;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              order: -9999;
            }
          }
        }
      }

      @include it('2xl\:order-last') {
        @include assert {
          @include output {
            @include \2xl\:order-last;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              order: 9999;
            }
          }
        }
      }

      @include it('2xl\:order-none') {
        @include assert {
          @include output {
            @include \2xl\:order-none;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              order: 0;
            }
          }
        }
      }

      @include it('2xl\:-order-1') {
        @include assert {
          @include output {
            @include \2xl\:-order-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              order: -1;
            }
          }
        }
      }

      @include it('2xl\:-order-2') {
        @include assert {
          @include output {
            @include \2xl\:-order-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              order: -2;
            }
          }
        }
      }

      @include it('2xl\:-order-3') {
        @include assert {
          @include output {
            @include \2xl\:-order-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              order: -3;
            }
          }
        }
      }

      @include it('2xl\:-order-4') {
        @include assert {
          @include output {
            @include \2xl\:-order-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              order: -4;
            }
          }
        }
      }

      @include it('2xl\:-order-5') {
        @include assert {
          @include output {
            @include \2xl\:-order-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              order: -5;
            }
          }
        }
      }

      @include it('2xl\:-order-6') {
        @include assert {
          @include output {
            @include \2xl\:-order-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              order: -6;
            }
          }
        }
      }

      @include it('2xl\:-order-7') {
        @include assert {
          @include output {
            @include \2xl\:-order-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              order: -7;
            }
          }
        }
      }

      @include it('2xl\:-order-8') {
        @include assert {
          @include output {
            @include \2xl\:-order-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              order: -8;
            }
          }
        }
      }

      @include it('2xl\:-order-9') {
        @include assert {
          @include output {
            @include \2xl\:-order-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              order: -9;
            }
          }
        }
      }

      @include it('2xl\:-order-10') {
        @include assert {
          @include output {
            @include \2xl\:-order-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              order: -10;
            }
          }
        }
      }

      @include it('2xl\:-order-11') {
        @include assert {
          @include output {
            @include \2xl\:-order-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              order: -11;
            }
          }
        }
      }

      @include it('2xl\:-order-12') {
        @include assert {
          @include output {
            @include \2xl\:-order-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              order: -12;
            }
          }
        }
      }

      @include it('2xl\:-order-first') {
        @include assert {
          @include output {
            @include \2xl\:-order-first;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              order: 9999;
            }
          }
        }
      }

      @include it('2xl\:-order-last') {
        @include assert {
          @include output {
            @include \2xl\:-order-last;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              order: -9999;
            }
          }
        }
      }

      @include it('2xl\:-order-none') {
        @include assert {
          @include output {
            @include \2xl\:-order-none;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              order: -0;
            }
          }
        }
      }
    }

    @include describe('Custom') {
      @include it('order-(13)') {
        @include assert {
          @include output {
            @include order-(13);
            @include utils_reset-tw;
          }

          @include expect {
            order: 13;
          }
        }
      }

      @include it('-order-(13)') {
        @include assert {
          @include output {
            @include \-order-(13);
            @include utils_reset-tw;
          }

          @include expect {
            order: -13;
          }
        }
      }
      @include it('sm\:order-(13)') {
        @include assert {
          @include output {
            @include sm\:order-(13);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              order: 13;
            }
          }
        }
      }

      @include it('sm\:-order-(13)') {
        @include assert {
          @include output {
            @include sm\:-order-(13);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              order: -13;
            }
          }
        }
      }
      @include it('md\:order-(13)') {
        @include assert {
          @include output {
            @include md\:order-(13);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              order: 13;
            }
          }
        }
      }

      @include it('md\:-order-(13)') {
        @include assert {
          @include output {
            @include md\:-order-(13);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              order: -13;
            }
          }
        }
      }
      @include it('lg\:order-(13)') {
        @include assert {
          @include output {
            @include lg\:order-(13);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              order: 13;
            }
          }
        }
      }

      @include it('lg\:-order-(13)') {
        @include assert {
          @include output {
            @include lg\:-order-(13);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              order: -13;
            }
          }
        }
      }
      @include it('xl\:order-(13)') {
        @include assert {
          @include output {
            @include xl\:order-(13);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              order: 13;
            }
          }
        }
      }

      @include it('xl\:-order-(13)') {
        @include assert {
          @include output {
            @include xl\:-order-(13);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              order: -13;
            }
          }
        }
      }
      @include it('2xl\:order-(13)') {
        @include assert {
          @include output {
            @include \2xl\:order-(13);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              order: 13;
            }
          }
        }
      }

      @include it('2xl\:-order-(13)') {
        @include assert {
          @include output {
            @include \2xl\:-order-(13);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              order: -13;
            }
          }
        }
      }
    }
  }
}
