@use "true" as *;
@use "../awaken" as *;

@include describe("2.Flexbox & Grid") {
  @include describe("Grid Template Columns") {
    @include describe("Basic") {
      @include it("grid-cols-1") {
        @include assert {
          @include output {
            @include grid-cols-1;
            @include utils_reset-tw;
          }

          @include expect {
            grid-template-columns: repeat(1, minmax(0, 1fr));
          }
        }
      }

      @include it("grid-cols-2") {
        @include assert {
          @include output {
            @include grid-cols-2;
            @include utils_reset-tw;
          }

          @include expect {
            grid-template-columns: repeat(2, minmax(0, 1fr));
          }
        }
      }

      @include it("grid-cols-3") {
        @include assert {
          @include output {
            @include grid-cols-3;
            @include utils_reset-tw;
          }

          @include expect {
            grid-template-columns: repeat(3, minmax(0, 1fr));
          }
        }
      }

      @include it("grid-cols-4") {
        @include assert {
          @include output {
            @include grid-cols-4;
            @include utils_reset-tw;
          }

          @include expect {
            grid-template-columns: repeat(4, minmax(0, 1fr));
          }
        }
      }

      @include it("grid-cols-5") {
        @include assert {
          @include output {
            @include grid-cols-5;
            @include utils_reset-tw;
          }

          @include expect {
            grid-template-columns: repeat(5, minmax(0, 1fr));
          }
        }
      }

      @include it("grid-cols-6") {
        @include assert {
          @include output {
            @include grid-cols-6;
            @include utils_reset-tw;
          }

          @include expect {
            grid-template-columns: repeat(6, minmax(0, 1fr));
          }
        }
      }

      @include it("grid-cols-7") {
        @include assert {
          @include output {
            @include grid-cols-7;
            @include utils_reset-tw;
          }

          @include expect {
            grid-template-columns: repeat(7, minmax(0, 1fr));
          }
        }
      }

      @include it("grid-cols-8") {
        @include assert {
          @include output {
            @include grid-cols-8;
            @include utils_reset-tw;
          }

          @include expect {
            grid-template-columns: repeat(8, minmax(0, 1fr));
          }
        }
      }

      @include it("grid-cols-9") {
        @include assert {
          @include output {
            @include grid-cols-9;
            @include utils_reset-tw;
          }

          @include expect {
            grid-template-columns: repeat(9, minmax(0, 1fr));
          }
        }
      }

      @include it("grid-cols-10") {
        @include assert {
          @include output {
            @include grid-cols-10;
            @include utils_reset-tw;
          }

          @include expect {
            grid-template-columns: repeat(10, minmax(0, 1fr));
          }
        }
      }

      @include it("grid-cols-11") {
        @include assert {
          @include output {
            @include grid-cols-11;
            @include utils_reset-tw;
          }

          @include expect {
            grid-template-columns: repeat(11, minmax(0, 1fr));
          }
        }
      }

      @include it("grid-cols-12") {
        @include assert {
          @include output {
            @include grid-cols-12;
            @include utils_reset-tw;
          }

          @include expect {
            grid-template-columns: repeat(12, minmax(0, 1fr));
          }
        }
      }

      @include it("grid-cols-none") {
        @include assert {
          @include output {
            @include grid-cols-none;
            @include utils_reset-tw;
          }

          @include expect {
            grid-template-columns: none;
          }
        }
      }

      @include it("grid-cols-subgrid") {
        @include assert {
          @include output {
            @include grid-cols-subgrid;
            @include utils_reset-tw;
          }

          @include expect {
            grid-template-columns: subgrid;
          }
        }
      }
    }

    @include describe("Custom") {
      @include it("grid-cols-(200px minmax(900px, 1fr) 100px)") {
        @include assert {
          @include output {
            @include grid-cols-(200px minmax(900px, 1fr) 100px);
            @include utils_reset-tw;
          }

          @include expect {
            grid-template-columns: 200px minmax(900px, 1fr) 100px;
          }
        }
      }
    }
  }
}
