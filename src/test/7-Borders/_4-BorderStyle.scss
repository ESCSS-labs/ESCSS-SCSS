@use "true" as *;
@use "../style" as *;

@include describe("7-Borders") {
  @include describe("4-Border Style") {
    @include describe("Basic") {
      @include it("border-solid") {
        @include assert {
          @include output {
            @include border-solid;
          }

          @include expect {
            --tw-border-style: solid;
            border-style: solid;
          }
        }
      }

      @include it("border-dashed") {
        @include assert {
          @include output {
            @include border-dashed;
          }

          @include expect {
            --tw-border-style: dashed;
            border-style: dashed;
          }
        }
      }

      @include it("border-dotted") {
        @include assert {
          @include output {
            @include border-dotted;
          }

          @include expect {
            --tw-border-style: dotted;
            border-style: dotted;
          }
        }
      }

      @include it("border-double") {
        @include assert {
          @include output {
            @include border-double;
          }

          @include expect {
            --tw-border-style: double;
            border-style: double;
          }
        }
      }

      @include it("border-hidden") {
        @include assert {
          @include output {
            @include border-hidden;
          }

          @include expect {
            --tw-border-style: hidden;
            border-style: hidden;
          }
        }
      }

      @include it("border-none") {
        @include assert {
          @include output {
            @include border-none;
          }

          @include expect {
            --tw-border-style: none;
            border-style: none;
          }
        }
      }

      @include it("divide-solid") {
        @include assert {
          @include output {
            @include divide-solid;
          }

          @include expect {
            :where(& > :not(:last-child)) {
              --tw-border-style: solid;
              border-style: solid;
            }
          }
        }
      }

      @include it("divide-dashed") {
        @include assert {
          @include output {
            @include divide-dashed;
          }

          @include expect {
            :where(& > :not(:last-child)) {
              --tw-border-style: dashed;
              border-style: dashed;
            }
          }
        }
      }

      @include it("divide-dotted") {
        @include assert {
          @include output {
            @include divide-dotted;
          }

          @include expect {
            :where(& > :not(:last-child)) {
              --tw-border-style: dotted;
              border-style: dotted;
            }
          }
        }
      }

      @include it("divide-double") {
        @include assert {
          @include output {
            @include divide-double;
          }

          @include expect {
            :where(& > :not(:last-child)) {
              --tw-border-style: double;
              border-style: double;
            }
          }
        }
      }

      @include it("divide-none") {
        @include assert {
          @include output {
            @include divide-none;
          }

          @include expect {
            :where(& > :not(:last-child)) {
              --tw-border-style: none;
              border-style: none;
            }
          }
        }
      }
    }
  }
}
