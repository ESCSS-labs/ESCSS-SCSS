@use "true" as *;
@use "../awaken" as *;

@include describe("7-Borders") {
  @include describe("1-Border Radius") {
    @include describe("Basic") {
      @include it("rounded-none") {
        @include assert {
          @include output {
            @include rounded-none;
          }

          @include expect {
            border-radius: 0px;
          }
        }
      }

      @include it("rounded-sm") {
        @include assert {
          @include output {
            @include rounded-sm;
          }

          @include expect {
            border-radius: 0.125rem;
          }
        }
      }

      @include it("rounded") {
        @include assert {
          @include output {
            @include rounded;
          }

          @include expect {
            border-radius: 0.25rem;
          }
        }
      }

      @include it("rounded-md") {
        @include assert {
          @include output {
            @include rounded-md;
          }

          @include expect {
            border-radius: 0.375rem;
          }
        }
      }

      @include it("rounded-lg") {
        @include assert {
          @include output {
            @include rounded-lg;
          }

          @include expect {
            border-radius: 0.5rem;
          }
        }
      }

      @include it("rounded-xl") {
        @include assert {
          @include output {
            @include rounded-xl;
          }

          @include expect {
            border-radius: 0.75rem;
          }
        }
      }

      @include it("rounded-2xl") {
        @include assert {
          @include output {
            @include rounded-2xl;
          }

          @include expect {
            border-radius: 1rem;
          }
        }
      }

      @include it("rounded-3xl") {
        @include assert {
          @include output {
            @include rounded-3xl;
          }

          @include expect {
            border-radius: 1.5rem;
          }
        }
      }

      @include it("rounded-full") {
        @include assert {
          @include output {
            @include rounded-full;
          }

          @include expect {
            border-radius: calc(infinity * 1px);
          }
        }
      }

      @include it("rounded-s-none") {
        @include assert {
          @include output {
            @include rounded-s-none;
          }

          @include expect {
            border-start-start-radius: 0px;

            border-end-start-radius: 0px;
          }
        }
      }

      @include it("rounded-s-sm") {
        @include assert {
          @include output {
            @include rounded-s-sm;
          }

          @include expect {
            border-start-start-radius: 0.125rem;

            border-end-start-radius: 0.125rem;
          }
        }
      }

      @include it("rounded-s") {
        @include assert {
          @include output {
            @include rounded-s;
          }

          @include expect {
            border-start-start-radius: 0.25rem;

            border-end-start-radius: 0.25rem;
          }
        }
      }

      @include it("rounded-s-md") {
        @include assert {
          @include output {
            @include rounded-s-md;
          }

          @include expect {
            border-start-start-radius: 0.375rem;

            border-end-start-radius: 0.375rem;
          }
        }
      }

      @include it("rounded-s-lg") {
        @include assert {
          @include output {
            @include rounded-s-lg;
          }

          @include expect {
            border-start-start-radius: 0.5rem;

            border-end-start-radius: 0.5rem;
          }
        }
      }

      @include it("rounded-s-xl") {
        @include assert {
          @include output {
            @include rounded-s-xl;
          }

          @include expect {
            border-start-start-radius: 0.75rem;

            border-end-start-radius: 0.75rem;
          }
        }
      }

      @include it("rounded-s-2xl") {
        @include assert {
          @include output {
            @include rounded-s-2xl;
          }

          @include expect {
            border-start-start-radius: 1rem;

            border-end-start-radius: 1rem;
          }
        }
      }

      @include it("rounded-s-3xl") {
        @include assert {
          @include output {
            @include rounded-s-3xl;
          }

          @include expect {
            border-start-start-radius: 1.5rem;

            border-end-start-radius: 1.5rem;
          }
        }
      }

      @include it("rounded-s-full") {
        @include assert {
          @include output {
            @include rounded-s-full;
          }

          @include expect {
            border-start-start-radius: calc(infinity * 1px);

            border-end-start-radius: calc(infinity * 1px);
          }
        }
      }

      @include it("rounded-e-none") {
        @include assert {
          @include output {
            @include rounded-e-none;
          }

          @include expect {
            border-start-end-radius: 0px;

            border-end-end-radius: 0px;
          }
        }
      }

      @include it("rounded-e-sm") {
        @include assert {
          @include output {
            @include rounded-e-sm;
          }

          @include expect {
            border-start-end-radius: 0.125rem;

            border-end-end-radius: 0.125rem;
          }
        }
      }

      @include it("rounded-e") {
        @include assert {
          @include output {
            @include rounded-e;
          }

          @include expect {
            border-start-end-radius: 0.25rem;

            border-end-end-radius: 0.25rem;
          }
        }
      }

      @include it("rounded-e-md") {
        @include assert {
          @include output {
            @include rounded-e-md;
          }

          @include expect {
            border-start-end-radius: 0.375rem;

            border-end-end-radius: 0.375rem;
          }
        }
      }

      @include it("rounded-e-lg") {
        @include assert {
          @include output {
            @include rounded-e-lg;
          }

          @include expect {
            border-start-end-radius: 0.5rem;

            border-end-end-radius: 0.5rem;
          }
        }
      }

      @include it("rounded-e-xl") {
        @include assert {
          @include output {
            @include rounded-e-xl;
          }

          @include expect {
            border-start-end-radius: 0.75rem;

            border-end-end-radius: 0.75rem;
          }
        }
      }

      @include it("rounded-e-2xl") {
        @include assert {
          @include output {
            @include rounded-e-2xl;
          }

          @include expect {
            border-start-end-radius: 1rem;

            border-end-end-radius: 1rem;
          }
        }
      }

      @include it("rounded-e-3xl") {
        @include assert {
          @include output {
            @include rounded-e-3xl;
          }

          @include expect {
            border-start-end-radius: 1.5rem;

            border-end-end-radius: 1.5rem;
          }
        }
      }

      @include it("rounded-e-full") {
        @include assert {
          @include output {
            @include rounded-e-full;
          }

          @include expect {
            border-start-end-radius: calc(infinity * 1px);

            border-end-end-radius: calc(infinity * 1px);
          }
        }
      }

      @include it("rounded-t-none") {
        @include assert {
          @include output {
            @include rounded-t-none;
          }

          @include expect {
            border-top-left-radius: 0px;

            border-top-right-radius: 0px;
          }
        }
      }

      @include it("rounded-t-sm") {
        @include assert {
          @include output {
            @include rounded-t-sm;
          }

          @include expect {
            border-top-left-radius: 0.125rem;

            border-top-right-radius: 0.125rem;
          }
        }
      }

      @include it("rounded-t") {
        @include assert {
          @include output {
            @include rounded-t;
          }

          @include expect {
            border-top-left-radius: 0.25rem;

            border-top-right-radius: 0.25rem;
          }
        }
      }

      @include it("rounded-t-md") {
        @include assert {
          @include output {
            @include rounded-t-md;
          }

          @include expect {
            border-top-left-radius: 0.375rem;

            border-top-right-radius: 0.375rem;
          }
        }
      }

      @include it("rounded-t-lg") {
        @include assert {
          @include output {
            @include rounded-t-lg;
          }

          @include expect {
            border-top-left-radius: 0.5rem;

            border-top-right-radius: 0.5rem;
          }
        }
      }

      @include it("rounded-t-xl") {
        @include assert {
          @include output {
            @include rounded-t-xl;
          }

          @include expect {
            border-top-left-radius: 0.75rem;

            border-top-right-radius: 0.75rem;
          }
        }
      }

      @include it("rounded-t-2xl") {
        @include assert {
          @include output {
            @include rounded-t-2xl;
          }

          @include expect {
            border-top-left-radius: 1rem;

            border-top-right-radius: 1rem;
          }
        }
      }

      @include it("rounded-t-3xl") {
        @include assert {
          @include output {
            @include rounded-t-3xl;
          }

          @include expect {
            border-top-left-radius: 1.5rem;

            border-top-right-radius: 1.5rem;
          }
        }
      }

      @include it("rounded-t-full") {
        @include assert {
          @include output {
            @include rounded-t-full;
          }

          @include expect {
            border-top-left-radius: calc(infinity * 1px);

            border-top-right-radius: calc(infinity * 1px);
          }
        }
      }

      @include it("rounded-r-none") {
        @include assert {
          @include output {
            @include rounded-r-none;
          }

          @include expect {
            border-top-right-radius: 0px;

            border-bottom-right-radius: 0px;
          }
        }
      }

      @include it("rounded-r-sm") {
        @include assert {
          @include output {
            @include rounded-r-sm;
          }

          @include expect {
            border-top-right-radius: 0.125rem;

            border-bottom-right-radius: 0.125rem;
          }
        }
      }

      @include it("rounded-r") {
        @include assert {
          @include output {
            @include rounded-r;
          }

          @include expect {
            border-top-right-radius: 0.25rem;

            border-bottom-right-radius: 0.25rem;
          }
        }
      }

      @include it("rounded-r-md") {
        @include assert {
          @include output {
            @include rounded-r-md;
          }

          @include expect {
            border-top-right-radius: 0.375rem;

            border-bottom-right-radius: 0.375rem;
          }
        }
      }

      @include it("rounded-r-lg") {
        @include assert {
          @include output {
            @include rounded-r-lg;
          }

          @include expect {
            border-top-right-radius: 0.5rem;

            border-bottom-right-radius: 0.5rem;
          }
        }
      }

      @include it("rounded-r-xl") {
        @include assert {
          @include output {
            @include rounded-r-xl;
          }

          @include expect {
            border-top-right-radius: 0.75rem;

            border-bottom-right-radius: 0.75rem;
          }
        }
      }

      @include it("rounded-r-2xl") {
        @include assert {
          @include output {
            @include rounded-r-2xl;
          }

          @include expect {
            border-top-right-radius: 1rem;

            border-bottom-right-radius: 1rem;
          }
        }
      }

      @include it("rounded-r-3xl") {
        @include assert {
          @include output {
            @include rounded-r-3xl;
          }

          @include expect {
            border-top-right-radius: 1.5rem;

            border-bottom-right-radius: 1.5rem;
          }
        }
      }

      @include it("rounded-r-full") {
        @include assert {
          @include output {
            @include rounded-r-full;
          }

          @include expect {
            border-top-right-radius: calc(infinity * 1px);

            border-bottom-right-radius: calc(infinity * 1px);
          }
        }
      }

      @include it("rounded-b-none") {
        @include assert {
          @include output {
            @include rounded-b-none;
          }

          @include expect {
            border-bottom-right-radius: 0px;

            border-bottom-left-radius: 0px;
          }
        }
      }

      @include it("rounded-b-sm") {
        @include assert {
          @include output {
            @include rounded-b-sm;
          }

          @include expect {
            border-bottom-right-radius: 0.125rem;

            border-bottom-left-radius: 0.125rem;
          }
        }
      }

      @include it("rounded-b") {
        @include assert {
          @include output {
            @include rounded-b;
          }

          @include expect {
            border-bottom-right-radius: 0.25rem;

            border-bottom-left-radius: 0.25rem;
          }
        }
      }

      @include it("rounded-b-md") {
        @include assert {
          @include output {
            @include rounded-b-md;
          }

          @include expect {
            border-bottom-right-radius: 0.375rem;

            border-bottom-left-radius: 0.375rem;
          }
        }
      }

      @include it("rounded-b-lg") {
        @include assert {
          @include output {
            @include rounded-b-lg;
          }

          @include expect {
            border-bottom-right-radius: 0.5rem;

            border-bottom-left-radius: 0.5rem;
          }
        }
      }

      @include it("rounded-b-xl") {
        @include assert {
          @include output {
            @include rounded-b-xl;
          }

          @include expect {
            border-bottom-right-radius: 0.75rem;

            border-bottom-left-radius: 0.75rem;
          }
        }
      }

      @include it("rounded-b-2xl") {
        @include assert {
          @include output {
            @include rounded-b-2xl;
          }

          @include expect {
            border-bottom-right-radius: 1rem;

            border-bottom-left-radius: 1rem;
          }
        }
      }

      @include it("rounded-b-3xl") {
        @include assert {
          @include output {
            @include rounded-b-3xl;
          }

          @include expect {
            border-bottom-right-radius: 1.5rem;

            border-bottom-left-radius: 1.5rem;
          }
        }
      }

      @include it("rounded-b-full") {
        @include assert {
          @include output {
            @include rounded-b-full;
          }

          @include expect {
            border-bottom-right-radius: calc(infinity * 1px);

            border-bottom-left-radius: calc(infinity * 1px);
          }
        }
      }

      @include it("rounded-l-none") {
        @include assert {
          @include output {
            @include rounded-l-none;
          }

          @include expect {
            border-top-left-radius: 0px;

            border-bottom-left-radius: 0px;
          }
        }
      }

      @include it("rounded-l-sm") {
        @include assert {
          @include output {
            @include rounded-l-sm;
          }

          @include expect {
            border-top-left-radius: 0.125rem;

            border-bottom-left-radius: 0.125rem;
          }
        }
      }

      @include it("rounded-l") {
        @include assert {
          @include output {
            @include rounded-l;
          }

          @include expect {
            border-top-left-radius: 0.25rem;

            border-bottom-left-radius: 0.25rem;
          }
        }
      }

      @include it("rounded-l-md") {
        @include assert {
          @include output {
            @include rounded-l-md;
          }

          @include expect {
            border-top-left-radius: 0.375rem;

            border-bottom-left-radius: 0.375rem;
          }
        }
      }

      @include it("rounded-l-lg") {
        @include assert {
          @include output {
            @include rounded-l-lg;
          }

          @include expect {
            border-top-left-radius: 0.5rem;

            border-bottom-left-radius: 0.5rem;
          }
        }
      }

      @include it("rounded-l-xl") {
        @include assert {
          @include output {
            @include rounded-l-xl;
          }

          @include expect {
            border-top-left-radius: 0.75rem;

            border-bottom-left-radius: 0.75rem;
          }
        }
      }

      @include it("rounded-l-2xl") {
        @include assert {
          @include output {
            @include rounded-l-2xl;
          }

          @include expect {
            border-top-left-radius: 1rem;

            border-bottom-left-radius: 1rem;
          }
        }
      }

      @include it("rounded-l-3xl") {
        @include assert {
          @include output {
            @include rounded-l-3xl;
          }

          @include expect {
            border-top-left-radius: 1.5rem;

            border-bottom-left-radius: 1.5rem;
          }
        }
      }

      @include it("rounded-l-full") {
        @include assert {
          @include output {
            @include rounded-l-full;
          }

          @include expect {
            border-top-left-radius: calc(infinity * 1px);

            border-bottom-left-radius: calc(infinity * 1px);
          }
        }
      }

      @include it("rounded-ss-none") {
        @include assert {
          @include output {
            @include rounded-ss-none;
          }

          @include expect {
            border-start-start-radius: 0px;
          }
        }
      }

      @include it("rounded-ss-sm") {
        @include assert {
          @include output {
            @include rounded-ss-sm;
          }

          @include expect {
            border-start-start-radius: 0.125rem;
          }
        }
      }

      @include it("rounded-ss") {
        @include assert {
          @include output {
            @include rounded-ss;
          }

          @include expect {
            border-start-start-radius: 0.25rem;
          }
        }
      }

      @include it("rounded-ss-md") {
        @include assert {
          @include output {
            @include rounded-ss-md;
          }

          @include expect {
            border-start-start-radius: 0.375rem;
          }
        }
      }

      @include it("rounded-ss-lg") {
        @include assert {
          @include output {
            @include rounded-ss-lg;
          }

          @include expect {
            border-start-start-radius: 0.5rem;
          }
        }
      }

      @include it("rounded-ss-xl") {
        @include assert {
          @include output {
            @include rounded-ss-xl;
          }

          @include expect {
            border-start-start-radius: 0.75rem;
          }
        }
      }

      @include it("rounded-ss-2xl") {
        @include assert {
          @include output {
            @include rounded-ss-2xl;
          }

          @include expect {
            border-start-start-radius: 1rem;
          }
        }
      }

      @include it("rounded-ss-3xl") {
        @include assert {
          @include output {
            @include rounded-ss-3xl;
          }

          @include expect {
            border-start-start-radius: 1.5rem;
          }
        }
      }

      @include it("rounded-ss-full") {
        @include assert {
          @include output {
            @include rounded-ss-full;
          }

          @include expect {
            border-start-start-radius: calc(infinity * 1px);
          }
        }
      }

      @include it("rounded-se-none") {
        @include assert {
          @include output {
            @include rounded-se-none;
          }

          @include expect {
            border-start-end-radius: 0px;
          }
        }
      }

      @include it("rounded-se-sm") {
        @include assert {
          @include output {
            @include rounded-se-sm;
          }

          @include expect {
            border-start-end-radius: 0.125rem;
          }
        }
      }

      @include it("rounded-se") {
        @include assert {
          @include output {
            @include rounded-se;
          }

          @include expect {
            border-start-end-radius: 0.25rem;
          }
        }
      }

      @include it("rounded-se-md") {
        @include assert {
          @include output {
            @include rounded-se-md;
          }

          @include expect {
            border-start-end-radius: 0.375rem;
          }
        }
      }

      @include it("rounded-se-lg") {
        @include assert {
          @include output {
            @include rounded-se-lg;
          }

          @include expect {
            border-start-end-radius: 0.5rem;
          }
        }
      }

      @include it("rounded-se-xl") {
        @include assert {
          @include output {
            @include rounded-se-xl;
          }

          @include expect {
            border-start-end-radius: 0.75rem;
          }
        }
      }

      @include it("rounded-se-2xl") {
        @include assert {
          @include output {
            @include rounded-se-2xl;
          }

          @include expect {
            border-start-end-radius: 1rem;
          }
        }
      }

      @include it("rounded-se-3xl") {
        @include assert {
          @include output {
            @include rounded-se-3xl;
          }

          @include expect {
            border-start-end-radius: 1.5rem;
          }
        }
      }

      @include it("rounded-se-full") {
        @include assert {
          @include output {
            @include rounded-se-full;
          }

          @include expect {
            border-start-end-radius: calc(infinity * 1px);
          }
        }
      }

      @include it("rounded-ee-none") {
        @include assert {
          @include output {
            @include rounded-ee-none;
          }

          @include expect {
            border-end-end-radius: 0px;
          }
        }
      }

      @include it("rounded-ee-sm") {
        @include assert {
          @include output {
            @include rounded-ee-sm;
          }

          @include expect {
            border-end-end-radius: 0.125rem;
          }
        }
      }

      @include it("rounded-ee") {
        @include assert {
          @include output {
            @include rounded-ee;
          }

          @include expect {
            border-end-end-radius: 0.25rem;
          }
        }
      }

      @include it("rounded-ee-md") {
        @include assert {
          @include output {
            @include rounded-ee-md;
          }

          @include expect {
            border-end-end-radius: 0.375rem;
          }
        }
      }

      @include it("rounded-ee-lg") {
        @include assert {
          @include output {
            @include rounded-ee-lg;
          }

          @include expect {
            border-end-end-radius: 0.5rem;
          }
        }
      }

      @include it("rounded-ee-xl") {
        @include assert {
          @include output {
            @include rounded-ee-xl;
          }

          @include expect {
            border-end-end-radius: 0.75rem;
          }
        }
      }

      @include it("rounded-ee-2xl") {
        @include assert {
          @include output {
            @include rounded-ee-2xl;
          }

          @include expect {
            border-end-end-radius: 1rem;
          }
        }
      }

      @include it("rounded-ee-3xl") {
        @include assert {
          @include output {
            @include rounded-ee-3xl;
          }

          @include expect {
            border-end-end-radius: 1.5rem;
          }
        }
      }

      @include it("rounded-ee-full") {
        @include assert {
          @include output {
            @include rounded-ee-full;
          }

          @include expect {
            border-end-end-radius: calc(infinity * 1px);
          }
        }
      }

      @include it("rounded-es-none") {
        @include assert {
          @include output {
            @include rounded-es-none;
          }

          @include expect {
            border-end-start-radius: 0px;
          }
        }
      }

      @include it("rounded-es-sm") {
        @include assert {
          @include output {
            @include rounded-es-sm;
          }

          @include expect {
            border-end-start-radius: 0.125rem;
          }
        }
      }

      @include it("rounded-es") {
        @include assert {
          @include output {
            @include rounded-es;
          }

          @include expect {
            border-end-start-radius: 0.25rem;
          }
        }
      }

      @include it("rounded-es-md") {
        @include assert {
          @include output {
            @include rounded-es-md;
          }

          @include expect {
            border-end-start-radius: 0.375rem;
          }
        }
      }

      @include it("rounded-es-lg") {
        @include assert {
          @include output {
            @include rounded-es-lg;
          }

          @include expect {
            border-end-start-radius: 0.5rem;
          }
        }
      }

      @include it("rounded-es-xl") {
        @include assert {
          @include output {
            @include rounded-es-xl;
          }

          @include expect {
            border-end-start-radius: 0.75rem;
          }
        }
      }

      @include it("rounded-es-2xl") {
        @include assert {
          @include output {
            @include rounded-es-2xl;
          }

          @include expect {
            border-end-start-radius: 1rem;
          }
        }
      }

      @include it("rounded-es-3xl") {
        @include assert {
          @include output {
            @include rounded-es-3xl;
          }

          @include expect {
            border-end-start-radius: 1.5rem;
          }
        }
      }

      @include it("rounded-es-full") {
        @include assert {
          @include output {
            @include rounded-es-full;
          }

          @include expect {
            border-end-start-radius: calc(infinity * 1px);
          }
        }
      }

      @include it("rounded-tl-none") {
        @include assert {
          @include output {
            @include rounded-tl-none;
          }

          @include expect {
            border-top-left-radius: 0px;
          }
        }
      }

      @include it("rounded-tl-sm") {
        @include assert {
          @include output {
            @include rounded-tl-sm;
          }

          @include expect {
            border-top-left-radius: 0.125rem;
          }
        }
      }

      @include it("rounded-tl") {
        @include assert {
          @include output {
            @include rounded-tl;
          }

          @include expect {
            border-top-left-radius: 0.25rem;
          }
        }
      }

      @include it("rounded-tl-md") {
        @include assert {
          @include output {
            @include rounded-tl-md;
          }

          @include expect {
            border-top-left-radius: 0.375rem;
          }
        }
      }

      @include it("rounded-tl-lg") {
        @include assert {
          @include output {
            @include rounded-tl-lg;
          }

          @include expect {
            border-top-left-radius: 0.5rem;
          }
        }
      }

      @include it("rounded-tl-xl") {
        @include assert {
          @include output {
            @include rounded-tl-xl;
          }

          @include expect {
            border-top-left-radius: 0.75rem;
          }
        }
      }

      @include it("rounded-tl-2xl") {
        @include assert {
          @include output {
            @include rounded-tl-2xl;
          }

          @include expect {
            border-top-left-radius: 1rem;
          }
        }
      }

      @include it("rounded-tl-3xl") {
        @include assert {
          @include output {
            @include rounded-tl-3xl;
          }

          @include expect {
            border-top-left-radius: 1.5rem;
          }
        }
      }

      @include it("rounded-tl-full") {
        @include assert {
          @include output {
            @include rounded-tl-full;
          }

          @include expect {
            border-top-left-radius: calc(infinity * 1px);
          }
        }
      }

      @include it("rounded-tr-none") {
        @include assert {
          @include output {
            @include rounded-tr-none;
          }

          @include expect {
            border-top-right-radius: 0px;
          }
        }
      }

      @include it("rounded-tr-sm") {
        @include assert {
          @include output {
            @include rounded-tr-sm;
          }

          @include expect {
            border-top-right-radius: 0.125rem;
          }
        }
      }

      @include it("rounded-tr") {
        @include assert {
          @include output {
            @include rounded-tr;
          }

          @include expect {
            border-top-right-radius: 0.25rem;
          }
        }
      }

      @include it("rounded-tr-md") {
        @include assert {
          @include output {
            @include rounded-tr-md;
          }

          @include expect {
            border-top-right-radius: 0.375rem;
          }
        }
      }

      @include it("rounded-tr-lg") {
        @include assert {
          @include output {
            @include rounded-tr-lg;
          }

          @include expect {
            border-top-right-radius: 0.5rem;
          }
        }
      }

      @include it("rounded-tr-xl") {
        @include assert {
          @include output {
            @include rounded-tr-xl;
          }

          @include expect {
            border-top-right-radius: 0.75rem;
          }
        }
      }

      @include it("rounded-tr-2xl") {
        @include assert {
          @include output {
            @include rounded-tr-2xl;
          }

          @include expect {
            border-top-right-radius: 1rem;
          }
        }
      }

      @include it("rounded-tr-3xl") {
        @include assert {
          @include output {
            @include rounded-tr-3xl;
          }

          @include expect {
            border-top-right-radius: 1.5rem;
          }
        }
      }

      @include it("rounded-tr-full") {
        @include assert {
          @include output {
            @include rounded-tr-full;
          }

          @include expect {
            border-top-right-radius: calc(infinity * 1px);
          }
        }
      }

      @include it("rounded-br-none") {
        @include assert {
          @include output {
            @include rounded-br-none;
          }

          @include expect {
            border-bottom-right-radius: 0px;
          }
        }
      }

      @include it("rounded-br-sm") {
        @include assert {
          @include output {
            @include rounded-br-sm;
          }

          @include expect {
            border-bottom-right-radius: 0.125rem;
          }
        }
      }

      @include it("rounded-br") {
        @include assert {
          @include output {
            @include rounded-br;
          }

          @include expect {
            border-bottom-right-radius: 0.25rem;
          }
        }
      }

      @include it("rounded-br-md") {
        @include assert {
          @include output {
            @include rounded-br-md;
          }

          @include expect {
            border-bottom-right-radius: 0.375rem;
          }
        }
      }

      @include it("rounded-br-lg") {
        @include assert {
          @include output {
            @include rounded-br-lg;
          }

          @include expect {
            border-bottom-right-radius: 0.5rem;
          }
        }
      }

      @include it("rounded-br-xl") {
        @include assert {
          @include output {
            @include rounded-br-xl;
          }

          @include expect {
            border-bottom-right-radius: 0.75rem;
          }
        }
      }

      @include it("rounded-br-2xl") {
        @include assert {
          @include output {
            @include rounded-br-2xl;
          }

          @include expect {
            border-bottom-right-radius: 1rem;
          }
        }
      }

      @include it("rounded-br-3xl") {
        @include assert {
          @include output {
            @include rounded-br-3xl;
          }

          @include expect {
            border-bottom-right-radius: 1.5rem;
          }
        }
      }

      @include it("rounded-br-full") {
        @include assert {
          @include output {
            @include rounded-br-full;
          }

          @include expect {
            border-bottom-right-radius: calc(infinity * 1px);
          }
        }
      }

      @include it("rounded-bl-none") {
        @include assert {
          @include output {
            @include rounded-bl-none;
          }

          @include expect {
            border-bottom-left-radius: 0px;
          }
        }
      }

      @include it("rounded-bl-sm") {
        @include assert {
          @include output {
            @include rounded-bl-sm;
          }

          @include expect {
            border-bottom-left-radius: 0.125rem;
          }
        }
      }

      @include it("rounded-bl") {
        @include assert {
          @include output {
            @include rounded-bl;
          }

          @include expect {
            border-bottom-left-radius: 0.25rem;
          }
        }
      }

      @include it("rounded-bl-md") {
        @include assert {
          @include output {
            @include rounded-bl-md;
          }

          @include expect {
            border-bottom-left-radius: 0.375rem;
          }
        }
      }

      @include it("rounded-bl-lg") {
        @include assert {
          @include output {
            @include rounded-bl-lg;
          }

          @include expect {
            border-bottom-left-radius: 0.5rem;
          }
        }
      }

      @include it("rounded-bl-xl") {
        @include assert {
          @include output {
            @include rounded-bl-xl;
          }

          @include expect {
            border-bottom-left-radius: 0.75rem;
          }
        }
      }

      @include it("rounded-bl-2xl") {
        @include assert {
          @include output {
            @include rounded-bl-2xl;
          }

          @include expect {
            border-bottom-left-radius: 1rem;
          }
        }
      }

      @include it("rounded-bl-3xl") {
        @include assert {
          @include output {
            @include rounded-bl-3xl;
          }

          @include expect {
            border-bottom-left-radius: 1.5rem;
          }
        }
      }

      @include it("rounded-bl-full") {
        @include assert {
          @include output {
            @include rounded-bl-full;
          }

          @include expect {
            border-bottom-left-radius: calc(infinity * 1px);
          }
        }
      }
    }

    @include describe("Custom") {
      @include it("rounded-(12px)") {
        @include assert {
          @include output {
            @include rounded-(12px);
          }

          @include expect {
            border-radius: 12px;
          }
        }
      }

      @include it("rounded-s-(12px)") {
        @include assert {
          @include output {
            @include rounded-s-(12px);
          }

          @include expect {
            border-start-start-radius: 12px;

            border-end-start-radius: 12px;
          }
        }
      }

      @include it("rounded-e-(12px)") {
        @include assert {
          @include output {
            @include rounded-e-(12px);
          }

          @include expect {
            border-start-end-radius: 12px;

            border-end-end-radius: 12px;
          }
        }
      }

      @include it("rounded-t-(12px)") {
        @include assert {
          @include output {
            @include rounded-t-(12px);
          }

          @include expect {
            border-top-left-radius: 12px;

            border-top-right-radius: 12px;
          }
        }
      }

      @include it("rounded-r-(12px)") {
        @include assert {
          @include output {
            @include rounded-r-(12px);
          }

          @include expect {
            border-top-right-radius: 12px;

            border-bottom-right-radius: 12px;
          }
        }
      }

      @include it("rounded-b-(12px)") {
        @include assert {
          @include output {
            @include rounded-b-(12px);
          }

          @include expect {
            border-bottom-right-radius: 12px;

            border-bottom-left-radius: 12px;
          }
        }
      }

      @include it("rounded-l-(12px)") {
        @include assert {
          @include output {
            @include rounded-l-(12px);
          }

          @include expect {
            border-top-left-radius: 12px;

            border-bottom-left-radius: 12px;
          }
        }
      }

      @include it("rounded-ss-(12px)") {
        @include assert {
          @include output {
            @include rounded-ss-(12px);
          }

          @include expect {
            border-start-start-radius: 12px;
          }
        }
      }

      @include it("rounded-se-(12px)") {
        @include assert {
          @include output {
            @include rounded-se-(12px);
          }

          @include expect {
            border-start-end-radius: 12px;
          }
        }
      }

      @include it("rounded-ee-(12px)") {
        @include assert {
          @include output {
            @include rounded-ee-(12px);
          }

          @include expect {
            border-end-end-radius: 12px;
          }
        }
      }

      @include it("rounded-es-(12px)") {
        @include assert {
          @include output {
            @include rounded-es-(12px);
          }

          @include expect {
            border-end-start-radius: 12px;
          }
        }
      }

      @include it("rounded-tl-(12px)") {
        @include assert {
          @include output {
            @include rounded-tl-(12px);
          }

          @include expect {
            border-top-left-radius: 12px;
          }
        }
      }

      @include it("rounded-tr-(12px)") {
        @include assert {
          @include output {
            @include rounded-tr-(12px);
          }

          @include expect {
            border-top-right-radius: 12px;
          }
        }
      }

      @include it("rounded-br-(12px)") {
        @include assert {
          @include output {
            @include rounded-br-(12px);
          }

          @include expect {
            border-bottom-right-radius: 12px;
          }
        }
      }

      @include it("rounded-bl-(12px)") {
        @include assert {
          @include output {
            @include rounded-bl-(12px);
          }

          @include expect {
            border-bottom-left-radius: 12px;
          }
        }
      }
    }
  }
}
