@use "sass:color";
@use "true" as *;
@use "../awaken" as *;

@include describe("7.Borders") {
  @include describe("Ring Offset Color") {
    @include describe("Basic") {
      @include it("ring-offset-inherit") {
        @include assert {
          @include output {
            @include ring-offset-inherit;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 inherit,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-current") {
        @include assert {
          @include output {
            @include ring-offset-current;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 currentColor,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-transparent") {
        @include assert {
          @include output {
            @include ring-offset-transparent;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 transparent,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-black") {
        @include assert {
          @include output {
            @include ring-offset-black;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 black,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }
      @include it("ring-offset-white") {
        @include assert {
          @include output {
            @include ring-offset-white;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 white,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }
      @include it("ring-offset-slate-50") {
        @include assert {
          @include output {
            @include ring-offset-slate-50;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #f8fafc,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-slate-100") {
        @include assert {
          @include output {
            @include ring-offset-slate-100;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #f1f5f9,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-slate-200") {
        @include assert {
          @include output {
            @include ring-offset-slate-200;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #e2e8f0,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-slate-300") {
        @include assert {
          @include output {
            @include ring-offset-slate-300;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #cbd5e1,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-slate-400") {
        @include assert {
          @include output {
            @include ring-offset-slate-400;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #94a3b8,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-slate-500") {
        @include assert {
          @include output {
            @include ring-offset-slate-500;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #64748b,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-slate-600") {
        @include assert {
          @include output {
            @include ring-offset-slate-600;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #475569,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-slate-700") {
        @include assert {
          @include output {
            @include ring-offset-slate-700;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #334155,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-slate-800") {
        @include assert {
          @include output {
            @include ring-offset-slate-800;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #1e293b,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-slate-900") {
        @include assert {
          @include output {
            @include ring-offset-slate-900;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #0f172a,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-slate-950") {
        @include assert {
          @include output {
            @include ring-offset-slate-950;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #020617,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-gray-50") {
        @include assert {
          @include output {
            @include ring-offset-gray-50;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #f9fafb,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-gray-100") {
        @include assert {
          @include output {
            @include ring-offset-gray-100;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #f3f4f6,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-gray-200") {
        @include assert {
          @include output {
            @include ring-offset-gray-200;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #e5e7eb,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-gray-300") {
        @include assert {
          @include output {
            @include ring-offset-gray-300;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #d1d5db,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-gray-400") {
        @include assert {
          @include output {
            @include ring-offset-gray-400;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #9ca3af,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-gray-500") {
        @include assert {
          @include output {
            @include ring-offset-gray-500;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #6b7280,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-gray-600") {
        @include assert {
          @include output {
            @include ring-offset-gray-600;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #4b5563,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-gray-700") {
        @include assert {
          @include output {
            @include ring-offset-gray-700;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #374151,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-gray-800") {
        @include assert {
          @include output {
            @include ring-offset-gray-800;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #1f2937,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-gray-900") {
        @include assert {
          @include output {
            @include ring-offset-gray-900;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #111827,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-gray-950") {
        @include assert {
          @include output {
            @include ring-offset-gray-950;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #030712,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-zinc-50") {
        @include assert {
          @include output {
            @include ring-offset-zinc-50;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fafafa,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-zinc-100") {
        @include assert {
          @include output {
            @include ring-offset-zinc-100;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #f4f4f5,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-zinc-200") {
        @include assert {
          @include output {
            @include ring-offset-zinc-200;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #e4e4e7,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-zinc-300") {
        @include assert {
          @include output {
            @include ring-offset-zinc-300;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #d4d4d8,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-zinc-400") {
        @include assert {
          @include output {
            @include ring-offset-zinc-400;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #a1a1aa,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-zinc-500") {
        @include assert {
          @include output {
            @include ring-offset-zinc-500;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #71717a,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-zinc-600") {
        @include assert {
          @include output {
            @include ring-offset-zinc-600;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #52525b,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-zinc-700") {
        @include assert {
          @include output {
            @include ring-offset-zinc-700;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #3f3f46,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-zinc-800") {
        @include assert {
          @include output {
            @include ring-offset-zinc-800;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #27272a,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-zinc-900") {
        @include assert {
          @include output {
            @include ring-offset-zinc-900;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #18181b,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-zinc-950") {
        @include assert {
          @include output {
            @include ring-offset-zinc-950;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #09090b,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-neutral-50") {
        @include assert {
          @include output {
            @include ring-offset-neutral-50;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fafafa,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-neutral-100") {
        @include assert {
          @include output {
            @include ring-offset-neutral-100;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 whitesmoke,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-neutral-200") {
        @include assert {
          @include output {
            @include ring-offset-neutral-200;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #e5e5e5,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-neutral-300") {
        @include assert {
          @include output {
            @include ring-offset-neutral-300;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #d4d4d4,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-neutral-400") {
        @include assert {
          @include output {
            @include ring-offset-neutral-400;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #a3a3a3,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-neutral-500") {
        @include assert {
          @include output {
            @include ring-offset-neutral-500;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #737373,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-neutral-600") {
        @include assert {
          @include output {
            @include ring-offset-neutral-600;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #525252,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-neutral-700") {
        @include assert {
          @include output {
            @include ring-offset-neutral-700;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #404040,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-neutral-800") {
        @include assert {
          @include output {
            @include ring-offset-neutral-800;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #262626,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-neutral-900") {
        @include assert {
          @include output {
            @include ring-offset-neutral-900;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #171717,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-neutral-950") {
        @include assert {
          @include output {
            @include ring-offset-neutral-950;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #0a0a0a,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-stone-50") {
        @include assert {
          @include output {
            @include ring-offset-stone-50;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fafaf9,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-stone-100") {
        @include assert {
          @include output {
            @include ring-offset-stone-100;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #f5f5f4,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-stone-200") {
        @include assert {
          @include output {
            @include ring-offset-stone-200;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #e7e5e4,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-stone-300") {
        @include assert {
          @include output {
            @include ring-offset-stone-300;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #d6d3d1,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-stone-400") {
        @include assert {
          @include output {
            @include ring-offset-stone-400;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #a8a29e,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-stone-500") {
        @include assert {
          @include output {
            @include ring-offset-stone-500;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #78716c,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-stone-600") {
        @include assert {
          @include output {
            @include ring-offset-stone-600;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #57534e,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-stone-700") {
        @include assert {
          @include output {
            @include ring-offset-stone-700;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #44403c,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-stone-800") {
        @include assert {
          @include output {
            @include ring-offset-stone-800;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #292524,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-stone-900") {
        @include assert {
          @include output {
            @include ring-offset-stone-900;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #1c1917,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-stone-950") {
        @include assert {
          @include output {
            @include ring-offset-stone-950;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #0c0a09,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-red-50") {
        @include assert {
          @include output {
            @include ring-offset-red-50;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fef2f2,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-red-100") {
        @include assert {
          @include output {
            @include ring-offset-red-100;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fee2e2,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-red-200") {
        @include assert {
          @include output {
            @include ring-offset-red-200;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fecaca,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-red-300") {
        @include assert {
          @include output {
            @include ring-offset-red-300;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fca5a5,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-red-400") {
        @include assert {
          @include output {
            @include ring-offset-red-400;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #f87171,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-red-500") {
        @include assert {
          @include output {
            @include ring-offset-red-500;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #ef4444,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-red-600") {
        @include assert {
          @include output {
            @include ring-offset-red-600;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #dc2626,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-red-700") {
        @include assert {
          @include output {
            @include ring-offset-red-700;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #b91c1c,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-red-800") {
        @include assert {
          @include output {
            @include ring-offset-red-800;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #991b1b,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-red-900") {
        @include assert {
          @include output {
            @include ring-offset-red-900;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #7f1d1d,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-red-950") {
        @include assert {
          @include output {
            @include ring-offset-red-950;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #450a0a,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-orange-50") {
        @include assert {
          @include output {
            @include ring-offset-orange-50;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff7ed,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-orange-100") {
        @include assert {
          @include output {
            @include ring-offset-orange-100;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #ffedd5,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-orange-200") {
        @include assert {
          @include output {
            @include ring-offset-orange-200;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fed7aa,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-orange-300") {
        @include assert {
          @include output {
            @include ring-offset-orange-300;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fdba74,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-orange-400") {
        @include assert {
          @include output {
            @include ring-offset-orange-400;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fb923c,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-orange-500") {
        @include assert {
          @include output {
            @include ring-offset-orange-500;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #f97316,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-orange-600") {
        @include assert {
          @include output {
            @include ring-offset-orange-600;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #ea580c,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-orange-700") {
        @include assert {
          @include output {
            @include ring-offset-orange-700;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #c2410c,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-orange-800") {
        @include assert {
          @include output {
            @include ring-offset-orange-800;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #9a3412,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-orange-900") {
        @include assert {
          @include output {
            @include ring-offset-orange-900;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #7c2d12,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-orange-950") {
        @include assert {
          @include output {
            @include ring-offset-orange-950;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #431407,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-amber-50") {
        @include assert {
          @include output {
            @include ring-offset-amber-50;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fffbeb,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-amber-100") {
        @include assert {
          @include output {
            @include ring-offset-amber-100;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fef3c7,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-amber-200") {
        @include assert {
          @include output {
            @include ring-offset-amber-200;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fde68a,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-amber-300") {
        @include assert {
          @include output {
            @include ring-offset-amber-300;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fcd34d,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-amber-400") {
        @include assert {
          @include output {
            @include ring-offset-amber-400;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fbbf24,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-amber-500") {
        @include assert {
          @include output {
            @include ring-offset-amber-500;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #f59e0b,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-amber-600") {
        @include assert {
          @include output {
            @include ring-offset-amber-600;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #d97706,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-amber-700") {
        @include assert {
          @include output {
            @include ring-offset-amber-700;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #b45309,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-amber-800") {
        @include assert {
          @include output {
            @include ring-offset-amber-800;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #92400e,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-amber-900") {
        @include assert {
          @include output {
            @include ring-offset-amber-900;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #78350f,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-amber-950") {
        @include assert {
          @include output {
            @include ring-offset-amber-950;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #451a03,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-yellow-50") {
        @include assert {
          @include output {
            @include ring-offset-yellow-50;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fefce8,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-yellow-100") {
        @include assert {
          @include output {
            @include ring-offset-yellow-100;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fef9c3,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-yellow-200") {
        @include assert {
          @include output {
            @include ring-offset-yellow-200;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fef08a,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-yellow-300") {
        @include assert {
          @include output {
            @include ring-offset-yellow-300;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fde047,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-yellow-400") {
        @include assert {
          @include output {
            @include ring-offset-yellow-400;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #facc15,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-yellow-500") {
        @include assert {
          @include output {
            @include ring-offset-yellow-500;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #eab308,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-yellow-600") {
        @include assert {
          @include output {
            @include ring-offset-yellow-600;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #ca8a04,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-yellow-700") {
        @include assert {
          @include output {
            @include ring-offset-yellow-700;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #a16207,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-yellow-800") {
        @include assert {
          @include output {
            @include ring-offset-yellow-800;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #854d0e,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-yellow-900") {
        @include assert {
          @include output {
            @include ring-offset-yellow-900;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #713f12,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-yellow-950") {
        @include assert {
          @include output {
            @include ring-offset-yellow-950;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #422006,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-lime-50") {
        @include assert {
          @include output {
            @include ring-offset-lime-50;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #f7fee7,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-lime-100") {
        @include assert {
          @include output {
            @include ring-offset-lime-100;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #ecfccb,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-lime-200") {
        @include assert {
          @include output {
            @include ring-offset-lime-200;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #d9f99d,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-lime-300") {
        @include assert {
          @include output {
            @include ring-offset-lime-300;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #bef264,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-lime-400") {
        @include assert {
          @include output {
            @include ring-offset-lime-400;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #a3e635,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-lime-500") {
        @include assert {
          @include output {
            @include ring-offset-lime-500;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #84cc16,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-lime-600") {
        @include assert {
          @include output {
            @include ring-offset-lime-600;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #65a30d,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-lime-700") {
        @include assert {
          @include output {
            @include ring-offset-lime-700;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #4d7c0f,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-lime-800") {
        @include assert {
          @include output {
            @include ring-offset-lime-800;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #3f6212,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-lime-900") {
        @include assert {
          @include output {
            @include ring-offset-lime-900;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #365314,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-lime-950") {
        @include assert {
          @include output {
            @include ring-offset-lime-950;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #1a2e05,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-green-50") {
        @include assert {
          @include output {
            @include ring-offset-green-50;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #f0fdf4,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-green-100") {
        @include assert {
          @include output {
            @include ring-offset-green-100;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #dcfce7,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-green-200") {
        @include assert {
          @include output {
            @include ring-offset-green-200;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #bbf7d0,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-green-300") {
        @include assert {
          @include output {
            @include ring-offset-green-300;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #86efac,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-green-400") {
        @include assert {
          @include output {
            @include ring-offset-green-400;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #4ade80,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-green-500") {
        @include assert {
          @include output {
            @include ring-offset-green-500;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #22c55e,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-green-600") {
        @include assert {
          @include output {
            @include ring-offset-green-600;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #16a34a,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-green-700") {
        @include assert {
          @include output {
            @include ring-offset-green-700;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #15803d,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-green-800") {
        @include assert {
          @include output {
            @include ring-offset-green-800;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #166534,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-green-900") {
        @include assert {
          @include output {
            @include ring-offset-green-900;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #14532d,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-green-950") {
        @include assert {
          @include output {
            @include ring-offset-green-950;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #052e16,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-emerald-50") {
        @include assert {
          @include output {
            @include ring-offset-emerald-50;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #ecfdf5,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-emerald-100") {
        @include assert {
          @include output {
            @include ring-offset-emerald-100;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #d1fae5,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-emerald-200") {
        @include assert {
          @include output {
            @include ring-offset-emerald-200;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #a7f3d0,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-emerald-300") {
        @include assert {
          @include output {
            @include ring-offset-emerald-300;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #6ee7b7,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-emerald-400") {
        @include assert {
          @include output {
            @include ring-offset-emerald-400;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #34d399,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-emerald-500") {
        @include assert {
          @include output {
            @include ring-offset-emerald-500;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #10b981,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-emerald-600") {
        @include assert {
          @include output {
            @include ring-offset-emerald-600;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #059669,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-emerald-700") {
        @include assert {
          @include output {
            @include ring-offset-emerald-700;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #047857,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-emerald-800") {
        @include assert {
          @include output {
            @include ring-offset-emerald-800;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #065f46,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-emerald-900") {
        @include assert {
          @include output {
            @include ring-offset-emerald-900;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #064e3b,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-emerald-950") {
        @include assert {
          @include output {
            @include ring-offset-emerald-950;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #022c22,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-teal-50") {
        @include assert {
          @include output {
            @include ring-offset-teal-50;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #f0fdfa,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-teal-100") {
        @include assert {
          @include output {
            @include ring-offset-teal-100;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #ccfbf1,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-teal-200") {
        @include assert {
          @include output {
            @include ring-offset-teal-200;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #99f6e4,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-teal-300") {
        @include assert {
          @include output {
            @include ring-offset-teal-300;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #5eead4,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-teal-400") {
        @include assert {
          @include output {
            @include ring-offset-teal-400;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #2dd4bf,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-teal-500") {
        @include assert {
          @include output {
            @include ring-offset-teal-500;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #14b8a6,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-teal-600") {
        @include assert {
          @include output {
            @include ring-offset-teal-600;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #0d9488,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-teal-700") {
        @include assert {
          @include output {
            @include ring-offset-teal-700;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #0f766e,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-teal-800") {
        @include assert {
          @include output {
            @include ring-offset-teal-800;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #115e59,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-teal-900") {
        @include assert {
          @include output {
            @include ring-offset-teal-900;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #134e4a,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-teal-950") {
        @include assert {
          @include output {
            @include ring-offset-teal-950;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #042f2e,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-cyan-50") {
        @include assert {
          @include output {
            @include ring-offset-cyan-50;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #ecfeff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-cyan-100") {
        @include assert {
          @include output {
            @include ring-offset-cyan-100;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #cffafe,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-cyan-200") {
        @include assert {
          @include output {
            @include ring-offset-cyan-200;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #a5f3fc,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-cyan-300") {
        @include assert {
          @include output {
            @include ring-offset-cyan-300;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #67e8f9,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-cyan-400") {
        @include assert {
          @include output {
            @include ring-offset-cyan-400;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #22d3ee,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-cyan-500") {
        @include assert {
          @include output {
            @include ring-offset-cyan-500;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #06b6d4,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-cyan-600") {
        @include assert {
          @include output {
            @include ring-offset-cyan-600;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #0891b2,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-cyan-700") {
        @include assert {
          @include output {
            @include ring-offset-cyan-700;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #0e7490,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-cyan-800") {
        @include assert {
          @include output {
            @include ring-offset-cyan-800;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #155e75,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-cyan-900") {
        @include assert {
          @include output {
            @include ring-offset-cyan-900;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #164e63,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-cyan-950") {
        @include assert {
          @include output {
            @include ring-offset-cyan-950;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #083344,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-sky-50") {
        @include assert {
          @include output {
            @include ring-offset-sky-50;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #f0f9ff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-sky-100") {
        @include assert {
          @include output {
            @include ring-offset-sky-100;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #e0f2fe,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-sky-200") {
        @include assert {
          @include output {
            @include ring-offset-sky-200;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #bae6fd,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-sky-300") {
        @include assert {
          @include output {
            @include ring-offset-sky-300;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #7dd3fc,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-sky-400") {
        @include assert {
          @include output {
            @include ring-offset-sky-400;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #38bdf8,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-sky-500") {
        @include assert {
          @include output {
            @include ring-offset-sky-500;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #0ea5e9,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-sky-600") {
        @include assert {
          @include output {
            @include ring-offset-sky-600;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #0284c7,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-sky-700") {
        @include assert {
          @include output {
            @include ring-offset-sky-700;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #0369a1,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-sky-800") {
        @include assert {
          @include output {
            @include ring-offset-sky-800;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #075985,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-sky-900") {
        @include assert {
          @include output {
            @include ring-offset-sky-900;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #0c4a6e,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-sky-950") {
        @include assert {
          @include output {
            @include ring-offset-sky-950;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #082f49,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-blue-50") {
        @include assert {
          @include output {
            @include ring-offset-blue-50;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #eff6ff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-blue-100") {
        @include assert {
          @include output {
            @include ring-offset-blue-100;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #dbeafe,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-blue-200") {
        @include assert {
          @include output {
            @include ring-offset-blue-200;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #bfdbfe,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-blue-300") {
        @include assert {
          @include output {
            @include ring-offset-blue-300;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #93c5fd,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-blue-400") {
        @include assert {
          @include output {
            @include ring-offset-blue-400;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #60a5fa,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-blue-500") {
        @include assert {
          @include output {
            @include ring-offset-blue-500;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #3b82f6,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-blue-600") {
        @include assert {
          @include output {
            @include ring-offset-blue-600;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #2563eb,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-blue-700") {
        @include assert {
          @include output {
            @include ring-offset-blue-700;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #1d4ed8,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-blue-800") {
        @include assert {
          @include output {
            @include ring-offset-blue-800;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #1e40af,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-blue-900") {
        @include assert {
          @include output {
            @include ring-offset-blue-900;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #1e3a8a,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-blue-950") {
        @include assert {
          @include output {
            @include ring-offset-blue-950;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #172554,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-indigo-50") {
        @include assert {
          @include output {
            @include ring-offset-indigo-50;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #eef2ff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-indigo-100") {
        @include assert {
          @include output {
            @include ring-offset-indigo-100;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #e0e7ff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-indigo-200") {
        @include assert {
          @include output {
            @include ring-offset-indigo-200;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #c7d2fe,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-indigo-300") {
        @include assert {
          @include output {
            @include ring-offset-indigo-300;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #a5b4fc,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-indigo-400") {
        @include assert {
          @include output {
            @include ring-offset-indigo-400;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #818cf8,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-indigo-500") {
        @include assert {
          @include output {
            @include ring-offset-indigo-500;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #6366f1,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-indigo-600") {
        @include assert {
          @include output {
            @include ring-offset-indigo-600;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #4f46e5,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-indigo-700") {
        @include assert {
          @include output {
            @include ring-offset-indigo-700;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #4338ca,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-indigo-800") {
        @include assert {
          @include output {
            @include ring-offset-indigo-800;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #3730a3,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-indigo-900") {
        @include assert {
          @include output {
            @include ring-offset-indigo-900;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #312e81,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-indigo-950") {
        @include assert {
          @include output {
            @include ring-offset-indigo-950;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #1e1b4b,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-violet-50") {
        @include assert {
          @include output {
            @include ring-offset-violet-50;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #f5f3ff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-violet-100") {
        @include assert {
          @include output {
            @include ring-offset-violet-100;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #ede9fe,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-violet-200") {
        @include assert {
          @include output {
            @include ring-offset-violet-200;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #ddd6fe,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-violet-300") {
        @include assert {
          @include output {
            @include ring-offset-violet-300;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #c4b5fd,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-violet-400") {
        @include assert {
          @include output {
            @include ring-offset-violet-400;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #a78bfa,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-violet-500") {
        @include assert {
          @include output {
            @include ring-offset-violet-500;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #8b5cf6,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-violet-600") {
        @include assert {
          @include output {
            @include ring-offset-violet-600;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #7c3aed,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-violet-700") {
        @include assert {
          @include output {
            @include ring-offset-violet-700;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #6d28d9,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-violet-800") {
        @include assert {
          @include output {
            @include ring-offset-violet-800;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #5b21b6,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-violet-900") {
        @include assert {
          @include output {
            @include ring-offset-violet-900;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #4c1d95,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-violet-950") {
        @include assert {
          @include output {
            @include ring-offset-violet-950;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #2e1065,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-purple-50") {
        @include assert {
          @include output {
            @include ring-offset-purple-50;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #faf5ff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-purple-100") {
        @include assert {
          @include output {
            @include ring-offset-purple-100;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #f3e8ff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-purple-200") {
        @include assert {
          @include output {
            @include ring-offset-purple-200;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #e9d5ff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-purple-300") {
        @include assert {
          @include output {
            @include ring-offset-purple-300;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #d8b4fe,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-purple-400") {
        @include assert {
          @include output {
            @include ring-offset-purple-400;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #c084fc,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-purple-500") {
        @include assert {
          @include output {
            @include ring-offset-purple-500;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #a855f7,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-purple-600") {
        @include assert {
          @include output {
            @include ring-offset-purple-600;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #9333ea,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-purple-700") {
        @include assert {
          @include output {
            @include ring-offset-purple-700;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #7e22ce,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-purple-800") {
        @include assert {
          @include output {
            @include ring-offset-purple-800;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #6b21a8,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-purple-900") {
        @include assert {
          @include output {
            @include ring-offset-purple-900;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #581c87,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-purple-950") {
        @include assert {
          @include output {
            @include ring-offset-purple-950;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #3b0764,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-fuchsia-50") {
        @include assert {
          @include output {
            @include ring-offset-fuchsia-50;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fdf4ff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-fuchsia-100") {
        @include assert {
          @include output {
            @include ring-offset-fuchsia-100;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fae8ff,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-fuchsia-200") {
        @include assert {
          @include output {
            @include ring-offset-fuchsia-200;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #f5d0fe,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-fuchsia-300") {
        @include assert {
          @include output {
            @include ring-offset-fuchsia-300;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #f0abfc,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-fuchsia-400") {
        @include assert {
          @include output {
            @include ring-offset-fuchsia-400;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #e879f9,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-fuchsia-500") {
        @include assert {
          @include output {
            @include ring-offset-fuchsia-500;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #d946ef,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-fuchsia-600") {
        @include assert {
          @include output {
            @include ring-offset-fuchsia-600;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #c026d3,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-fuchsia-700") {
        @include assert {
          @include output {
            @include ring-offset-fuchsia-700;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #a21caf,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-fuchsia-800") {
        @include assert {
          @include output {
            @include ring-offset-fuchsia-800;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #86198f,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-fuchsia-900") {
        @include assert {
          @include output {
            @include ring-offset-fuchsia-900;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #701a75,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-fuchsia-950") {
        @include assert {
          @include output {
            @include ring-offset-fuchsia-950;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #4a044e,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-pink-50") {
        @include assert {
          @include output {
            @include ring-offset-pink-50;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fdf2f8,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-pink-100") {
        @include assert {
          @include output {
            @include ring-offset-pink-100;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fce7f3,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-pink-200") {
        @include assert {
          @include output {
            @include ring-offset-pink-200;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fbcfe8,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-pink-300") {
        @include assert {
          @include output {
            @include ring-offset-pink-300;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #f9a8d4,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-pink-400") {
        @include assert {
          @include output {
            @include ring-offset-pink-400;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #f472b6,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-pink-500") {
        @include assert {
          @include output {
            @include ring-offset-pink-500;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #ec4899,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-pink-600") {
        @include assert {
          @include output {
            @include ring-offset-pink-600;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #db2777,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-pink-700") {
        @include assert {
          @include output {
            @include ring-offset-pink-700;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #be185d,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-pink-800") {
        @include assert {
          @include output {
            @include ring-offset-pink-800;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #9d174d,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-pink-900") {
        @include assert {
          @include output {
            @include ring-offset-pink-900;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #831843,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-pink-950") {
        @include assert {
          @include output {
            @include ring-offset-pink-950;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #500724,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-rose-50") {
        @include assert {
          @include output {
            @include ring-offset-rose-50;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fff1f2,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-rose-100") {
        @include assert {
          @include output {
            @include ring-offset-rose-100;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #ffe4e6,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-rose-200") {
        @include assert {
          @include output {
            @include ring-offset-rose-200;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fecdd3,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-rose-300") {
        @include assert {
          @include output {
            @include ring-offset-rose-300;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fda4af,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-rose-400") {
        @include assert {
          @include output {
            @include ring-offset-rose-400;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #fb7185,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-rose-500") {
        @include assert {
          @include output {
            @include ring-offset-rose-500;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #f43f5e,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-rose-600") {
        @include assert {
          @include output {
            @include ring-offset-rose-600;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #e11d48,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-rose-700") {
        @include assert {
          @include output {
            @include ring-offset-rose-700;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #be123c,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-rose-800") {
        @include assert {
          @include output {
            @include ring-offset-rose-800;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #9f1239,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-rose-900") {
        @include assert {
          @include output {
            @include ring-offset-rose-900;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #881337,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-rose-950") {
        @include assert {
          @include output {
            @include ring-offset-rose-950;
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #4c0519,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-black(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-black(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#000, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }
      @include it("ring-offset-white(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-white(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#fff, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }
      @include it("ring-offset-slate-50(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-slate-50(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#f8fafc, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-slate-100(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-slate-100(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#f1f5f9, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-slate-200(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-slate-200(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#e2e8f0, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-slate-300(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-slate-300(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#cbd5e1, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-slate-400(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-slate-400(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#94a3b8, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-slate-500(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-slate-500(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#64748b, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-slate-600(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-slate-600(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#475569, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-slate-700(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-slate-700(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#334155, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-slate-800(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-slate-800(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#1e293b, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-slate-900(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-slate-900(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#0f172a, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-slate-950(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-slate-950(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#020617, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-gray-50(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-gray-50(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#f9fafb, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-gray-100(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-gray-100(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#f3f4f6, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-gray-200(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-gray-200(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#e5e7eb, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-gray-300(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-gray-300(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#d1d5db, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-gray-400(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-gray-400(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#9ca3af, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-gray-500(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-gray-500(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#6b7280, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-gray-600(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-gray-600(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#4b5563, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-gray-700(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-gray-700(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#374151, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-gray-800(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-gray-800(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#1f2937, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-gray-900(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-gray-900(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#111827, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-gray-950(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-gray-950(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#030712, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-zinc-50(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-zinc-50(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#fafafa, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-zinc-100(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-zinc-100(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#f4f4f5, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-zinc-200(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-zinc-200(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#e4e4e7, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-zinc-300(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-zinc-300(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#d4d4d8, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-zinc-400(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-zinc-400(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#a1a1aa, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-zinc-500(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-zinc-500(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#71717a, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-zinc-600(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-zinc-600(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#52525b, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-zinc-700(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-zinc-700(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#3f3f46, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-zinc-800(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-zinc-800(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#27272a, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-zinc-900(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-zinc-900(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#18181b, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-zinc-950(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-zinc-950(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#09090b, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-neutral-50(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-neutral-50(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#fafafa, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-neutral-100(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-neutral-100(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#f5f5f5, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-neutral-200(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-neutral-200(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#e5e5e5, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-neutral-300(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-neutral-300(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#d4d4d4, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-neutral-400(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-neutral-400(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#a3a3a3, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-neutral-500(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-neutral-500(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#737373, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-neutral-600(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-neutral-600(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#525252, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-neutral-700(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-neutral-700(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#404040, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-neutral-800(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-neutral-800(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#262626, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-neutral-900(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-neutral-900(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#171717, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-neutral-950(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-neutral-950(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#0a0a0a, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-stone-50(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-stone-50(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#fafaf9, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-stone-100(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-stone-100(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#f5f5f4, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-stone-200(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-stone-200(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#e7e5e4, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-stone-300(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-stone-300(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#d6d3d1, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-stone-400(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-stone-400(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#a8a29e, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-stone-500(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-stone-500(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#78716c, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-stone-600(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-stone-600(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#57534e, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-stone-700(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-stone-700(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#44403c, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-stone-800(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-stone-800(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#292524, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-stone-900(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-stone-900(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#1c1917, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-stone-950(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-stone-950(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#0c0a09, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-red-50(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-red-50(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#fef2f2, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-red-100(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-red-100(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#fee2e2, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-red-200(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-red-200(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#fecaca, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-red-300(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-red-300(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#fca5a5, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-red-400(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-red-400(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#f87171, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-red-500(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-red-500(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#ef4444, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-red-600(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-red-600(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#dc2626, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-red-700(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-red-700(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#b91c1c, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-red-800(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-red-800(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#991b1b, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-red-900(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-red-900(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#7f1d1d, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-red-950(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-red-950(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#450a0a, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-orange-50(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-orange-50(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#fff7ed, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-orange-100(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-orange-100(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#ffedd5, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-orange-200(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-orange-200(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#fed7aa, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-orange-300(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-orange-300(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#fdba74, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-orange-400(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-orange-400(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#fb923c, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-orange-500(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-orange-500(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#f97316, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-orange-600(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-orange-600(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#ea580c, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-orange-700(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-orange-700(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#c2410c, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-orange-800(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-orange-800(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#9a3412, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-orange-900(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-orange-900(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#7c2d12, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-orange-950(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-orange-950(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#431407, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-amber-50(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-amber-50(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#fffbeb, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-amber-100(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-amber-100(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#fef3c7, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-amber-200(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-amber-200(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#fde68a, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-amber-300(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-amber-300(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#fcd34d, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-amber-400(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-amber-400(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#fbbf24, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-amber-500(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-amber-500(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#f59e0b, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-amber-600(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-amber-600(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#d97706, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-amber-700(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-amber-700(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#b45309, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-amber-800(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-amber-800(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#92400e, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-amber-900(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-amber-900(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#78350f, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-amber-950(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-amber-950(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#451a03, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-yellow-50(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-yellow-50(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#fefce8, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-yellow-100(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-yellow-100(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#fef9c3, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-yellow-200(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-yellow-200(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#fef08a, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-yellow-300(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-yellow-300(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#fde047, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-yellow-400(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-yellow-400(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#facc15, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-yellow-500(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-yellow-500(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#eab308, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-yellow-600(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-yellow-600(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#ca8a04, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-yellow-700(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-yellow-700(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#a16207, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-yellow-800(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-yellow-800(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#854d0e, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-yellow-900(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-yellow-900(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#713f12, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-yellow-950(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-yellow-950(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#422006, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-lime-50(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-lime-50(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#f7fee7, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-lime-100(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-lime-100(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#ecfccb, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-lime-200(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-lime-200(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#d9f99d, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-lime-300(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-lime-300(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#bef264, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-lime-400(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-lime-400(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#a3e635, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-lime-500(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-lime-500(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#84cc16, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-lime-600(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-lime-600(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#65a30d, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-lime-700(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-lime-700(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#4d7c0f, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-lime-800(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-lime-800(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#3f6212, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-lime-900(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-lime-900(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#365314, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-lime-950(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-lime-950(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#1a2e05, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-green-50(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-green-50(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#f0fdf4, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-green-100(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-green-100(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#dcfce7, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-green-200(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-green-200(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#bbf7d0, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-green-300(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-green-300(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#86efac, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-green-400(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-green-400(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#4ade80, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-green-500(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-green-500(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#22c55e, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-green-600(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-green-600(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#16a34a, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-green-700(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-green-700(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#15803d, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-green-800(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-green-800(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#166534, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-green-900(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-green-900(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#14532d, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-green-950(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-green-950(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#052e16, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-emerald-50(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-emerald-50(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#ecfdf5, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-emerald-100(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-emerald-100(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#d1fae5, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-emerald-200(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-emerald-200(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#a7f3d0, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-emerald-300(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-emerald-300(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#6ee7b7, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-emerald-400(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-emerald-400(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#34d399, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-emerald-500(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-emerald-500(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#10b981, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-emerald-600(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-emerald-600(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#059669, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-emerald-700(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-emerald-700(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#047857, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-emerald-800(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-emerald-800(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#065f46, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-emerald-900(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-emerald-900(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#064e3b, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-emerald-950(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-emerald-950(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#022c22, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-teal-50(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-teal-50(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#f0fdfa, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-teal-100(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-teal-100(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#ccfbf1, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-teal-200(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-teal-200(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#99f6e4, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-teal-300(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-teal-300(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#5eead4, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-teal-400(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-teal-400(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#2dd4bf, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-teal-500(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-teal-500(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#14b8a6, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-teal-600(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-teal-600(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#0d9488, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-teal-700(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-teal-700(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#0f766e, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-teal-800(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-teal-800(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#115e59, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-teal-900(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-teal-900(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#134e4a, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-teal-950(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-teal-950(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#042f2e, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-cyan-50(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-cyan-50(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#ecfeff, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-cyan-100(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-cyan-100(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#cffafe, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-cyan-200(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-cyan-200(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#a5f3fc, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-cyan-300(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-cyan-300(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#67e8f9, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-cyan-400(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-cyan-400(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#22d3ee, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-cyan-500(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-cyan-500(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#06b6d4, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-cyan-600(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-cyan-600(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#0891b2, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-cyan-700(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-cyan-700(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#0e7490, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-cyan-800(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-cyan-800(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#155e75, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-cyan-900(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-cyan-900(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#164e63, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-cyan-950(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-cyan-950(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#083344, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-sky-50(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-sky-50(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#f0f9ff, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-sky-100(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-sky-100(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#e0f2fe, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-sky-200(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-sky-200(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#bae6fd, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-sky-300(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-sky-300(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#7dd3fc, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-sky-400(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-sky-400(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#38bdf8, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-sky-500(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-sky-500(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#0ea5e9, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-sky-600(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-sky-600(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#0284c7, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-sky-700(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-sky-700(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#0369a1, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-sky-800(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-sky-800(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#075985, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-sky-900(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-sky-900(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#0c4a6e, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-sky-950(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-sky-950(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#082f49, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-blue-50(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-blue-50(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#eff6ff, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-blue-100(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-blue-100(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#dbeafe, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-blue-200(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-blue-200(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#bfdbfe, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-blue-300(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-blue-300(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#93c5fd, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-blue-400(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-blue-400(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#60a5fa, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-blue-500(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-blue-500(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#3b82f6, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-blue-600(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-blue-600(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#2563eb, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-blue-700(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-blue-700(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#1d4ed8, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-blue-800(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-blue-800(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#1e40af, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-blue-900(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-blue-900(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#1e3a8a, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-blue-950(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-blue-950(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#172554, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-indigo-50(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-indigo-50(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#eef2ff, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-indigo-100(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-indigo-100(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#e0e7ff, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-indigo-200(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-indigo-200(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#c7d2fe, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-indigo-300(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-indigo-300(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#a5b4fc, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-indigo-400(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-indigo-400(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#818cf8, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-indigo-500(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-indigo-500(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#6366f1, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-indigo-600(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-indigo-600(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#4f46e5, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-indigo-700(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-indigo-700(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#4338ca, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-indigo-800(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-indigo-800(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#3730a3, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-indigo-900(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-indigo-900(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#312e81, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-indigo-950(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-indigo-950(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#1e1b4b, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-violet-50(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-violet-50(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#f5f3ff, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-violet-100(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-violet-100(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#ede9fe, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-violet-200(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-violet-200(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#ddd6fe, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-violet-300(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-violet-300(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#c4b5fd, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-violet-400(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-violet-400(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#a78bfa, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-violet-500(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-violet-500(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#8b5cf6, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-violet-600(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-violet-600(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#7c3aed, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-violet-700(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-violet-700(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#6d28d9, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-violet-800(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-violet-800(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#5b21b6, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-violet-900(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-violet-900(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#4c1d95, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-violet-950(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-violet-950(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#2e1065, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-purple-50(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-purple-50(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#faf5ff, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-purple-100(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-purple-100(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#f3e8ff, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-purple-200(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-purple-200(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#e9d5ff, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-purple-300(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-purple-300(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#d8b4fe, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-purple-400(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-purple-400(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#c084fc, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-purple-500(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-purple-500(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#a855f7, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-purple-600(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-purple-600(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#9333ea, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-purple-700(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-purple-700(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#7e22ce, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-purple-800(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-purple-800(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#6b21a8, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-purple-900(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-purple-900(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#581c87, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-purple-950(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-purple-950(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#3b0764, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-fuchsia-50(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-fuchsia-50(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#fdf4ff, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-fuchsia-100(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-fuchsia-100(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#fae8ff, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-fuchsia-200(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-fuchsia-200(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#f5d0fe, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-fuchsia-300(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-fuchsia-300(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#f0abfc, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-fuchsia-400(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-fuchsia-400(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#e879f9, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-fuchsia-500(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-fuchsia-500(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#d946ef, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-fuchsia-600(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-fuchsia-600(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#c026d3, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-fuchsia-700(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-fuchsia-700(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#a21caf, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-fuchsia-800(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-fuchsia-800(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#86198f, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-fuchsia-900(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-fuchsia-900(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#701a75, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-fuchsia-950(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-fuchsia-950(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#4a044e, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-pink-50(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-pink-50(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#fdf2f8, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-pink-100(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-pink-100(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#fce7f3, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-pink-200(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-pink-200(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#fbcfe8, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-pink-300(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-pink-300(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#f9a8d4, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-pink-400(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-pink-400(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#f472b6, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-pink-500(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-pink-500(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#ec4899, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-pink-600(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-pink-600(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#db2777, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-pink-700(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-pink-700(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#be185d, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-pink-800(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-pink-800(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#9d174d, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-pink-900(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-pink-900(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#831843, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-pink-950(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-pink-950(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#500724, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-rose-50(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-rose-50(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#fff1f2, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-rose-100(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-rose-100(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#ffe4e6, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-rose-200(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-rose-200(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#fecdd3, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-rose-300(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-rose-300(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#fda4af, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-rose-400(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-rose-400(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#fb7185, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-rose-500(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-rose-500(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#f43f5e, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-rose-600(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-rose-600(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#e11d48, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-rose-700(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-rose-700(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#be123c, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-rose-800(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-rose-800(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#9f1239, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-rose-900(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-rose-900(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#881337, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }

      @include it("ring-offset-rose-950(0.11)") {
        @include assert {
          @include output {
            @include ring-offset-rose-950(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 color.change(#4c0519, $alpha: 0.11),
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }
    }

    @include describe("Custom") {
      @include it("ring-offset-(#50d71e)") {
        @include assert {
          @include output {
            @include ring-offset-(#50d71e);
            @include utils_reset-tw;
          }

          @include expect {
            box-shadow:
              0 0 0 0 #50d71e,
              0 0 0 0 rgba(59, 130, 246, 0.5),
              0 0 0 0 #fff;
          }
        }
      }
    }
  }
}
