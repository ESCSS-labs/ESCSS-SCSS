@use "sass:color";
@use "true" as *;
@use "../awaken" as *;

@include describe("7.Borders") {
  @include describe("Outline Color") {
    @include describe("Basic") {
      @include it("outline-inherit") {
        @include assert {
          @include output {
            @include outline-inherit;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: inherit;
          }
        }
      }

      @include it("outline-current") {
        @include assert {
          @include output {
            @include outline-current;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: currentColor;
          }
        }
      }

      @include it("outline-transparent") {
        @include assert {
          @include output {
            @include outline-transparent;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: transparent;
          }
        }
      }

      @include it("outline-black") {
        @include assert {
          @include output {
            @include outline-black;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: black;
          }
        }
      }

      @include it("outline-white") {
        @include assert {
          @include output {
            @include outline-white;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: white;
          }
        }
      }

      @include it("outline-slate-50") {
        @include assert {
          @include output {
            @include outline-slate-50;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $slate-50;
          }
        }
      }

      @include it("outline-slate-100") {
        @include assert {
          @include output {
            @include outline-slate-100;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $slate-100;
          }
        }
      }

      @include it("outline-slate-200") {
        @include assert {
          @include output {
            @include outline-slate-200;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $slate-200;
          }
        }
      }

      @include it("outline-slate-300") {
        @include assert {
          @include output {
            @include outline-slate-300;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $slate-300;
          }
        }
      }

      @include it("outline-slate-400") {
        @include assert {
          @include output {
            @include outline-slate-400;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $slate-400;
          }
        }
      }

      @include it("outline-slate-500") {
        @include assert {
          @include output {
            @include outline-slate-500;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $slate-500;
          }
        }
      }

      @include it("outline-slate-600") {
        @include assert {
          @include output {
            @include outline-slate-600;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $slate-600;
          }
        }
      }

      @include it("outline-slate-700") {
        @include assert {
          @include output {
            @include outline-slate-700;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $slate-700;
          }
        }
      }

      @include it("outline-slate-800") {
        @include assert {
          @include output {
            @include outline-slate-800;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $slate-800;
          }
        }
      }

      @include it("outline-slate-900") {
        @include assert {
          @include output {
            @include outline-slate-900;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $slate-900;
          }
        }
      }

      @include it("outline-slate-950") {
        @include assert {
          @include output {
            @include outline-slate-950;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $slate-950;
          }
        }
      }

      @include it("outline-gray-50") {
        @include assert {
          @include output {
            @include outline-gray-50;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $gray-50;
          }
        }
      }

      @include it("outline-gray-100") {
        @include assert {
          @include output {
            @include outline-gray-100;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $gray-100;
          }
        }
      }

      @include it("outline-gray-200") {
        @include assert {
          @include output {
            @include outline-gray-200;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $gray-200;
          }
        }
      }

      @include it("outline-gray-300") {
        @include assert {
          @include output {
            @include outline-gray-300;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $gray-300;
          }
        }
      }

      @include it("outline-gray-400") {
        @include assert {
          @include output {
            @include outline-gray-400;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $gray-400;
          }
        }
      }

      @include it("outline-gray-500") {
        @include assert {
          @include output {
            @include outline-gray-500;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $gray-500;
          }
        }
      }

      @include it("outline-gray-600") {
        @include assert {
          @include output {
            @include outline-gray-600;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $gray-600;
          }
        }
      }

      @include it("outline-gray-700") {
        @include assert {
          @include output {
            @include outline-gray-700;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $gray-700;
          }
        }
      }

      @include it("outline-gray-800") {
        @include assert {
          @include output {
            @include outline-gray-800;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $gray-800;
          }
        }
      }

      @include it("outline-gray-900") {
        @include assert {
          @include output {
            @include outline-gray-900;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $gray-900;
          }
        }
      }

      @include it("outline-gray-950") {
        @include assert {
          @include output {
            @include outline-gray-950;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $gray-950;
          }
        }
      }

      @include it("outline-zinc-50") {
        @include assert {
          @include output {
            @include outline-zinc-50;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $zinc-50;
          }
        }
      }

      @include it("outline-zinc-100") {
        @include assert {
          @include output {
            @include outline-zinc-100;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $zinc-100;
          }
        }
      }

      @include it("outline-zinc-200") {
        @include assert {
          @include output {
            @include outline-zinc-200;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $zinc-200;
          }
        }
      }

      @include it("outline-zinc-300") {
        @include assert {
          @include output {
            @include outline-zinc-300;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $zinc-300;
          }
        }
      }

      @include it("outline-zinc-400") {
        @include assert {
          @include output {
            @include outline-zinc-400;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $zinc-400;
          }
        }
      }

      @include it("outline-zinc-500") {
        @include assert {
          @include output {
            @include outline-zinc-500;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $zinc-500;
          }
        }
      }

      @include it("outline-zinc-600") {
        @include assert {
          @include output {
            @include outline-zinc-600;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $zinc-600;
          }
        }
      }

      @include it("outline-zinc-700") {
        @include assert {
          @include output {
            @include outline-zinc-700;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $zinc-700;
          }
        }
      }

      @include it("outline-zinc-800") {
        @include assert {
          @include output {
            @include outline-zinc-800;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $zinc-800;
          }
        }
      }

      @include it("outline-zinc-900") {
        @include assert {
          @include output {
            @include outline-zinc-900;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $zinc-900;
          }
        }
      }

      @include it("outline-zinc-950") {
        @include assert {
          @include output {
            @include outline-zinc-950;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $zinc-950;
          }
        }
      }

      @include it("outline-neutral-50") {
        @include assert {
          @include output {
            @include outline-neutral-50;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $neutral-50;
          }
        }
      }

      @include it("outline-neutral-100") {
        @include assert {
          @include output {
            @include outline-neutral-100;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $neutral-100;
          }
        }
      }

      @include it("outline-neutral-200") {
        @include assert {
          @include output {
            @include outline-neutral-200;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $neutral-200;
          }
        }
      }

      @include it("outline-neutral-300") {
        @include assert {
          @include output {
            @include outline-neutral-300;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $neutral-300;
          }
        }
      }

      @include it("outline-neutral-400") {
        @include assert {
          @include output {
            @include outline-neutral-400;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $neutral-400;
          }
        }
      }

      @include it("outline-neutral-500") {
        @include assert {
          @include output {
            @include outline-neutral-500;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $neutral-500;
          }
        }
      }

      @include it("outline-neutral-600") {
        @include assert {
          @include output {
            @include outline-neutral-600;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $neutral-600;
          }
        }
      }

      @include it("outline-neutral-700") {
        @include assert {
          @include output {
            @include outline-neutral-700;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $neutral-700;
          }
        }
      }

      @include it("outline-neutral-800") {
        @include assert {
          @include output {
            @include outline-neutral-800;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $neutral-800;
          }
        }
      }

      @include it("outline-neutral-900") {
        @include assert {
          @include output {
            @include outline-neutral-900;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $neutral-900;
          }
        }
      }

      @include it("outline-neutral-950") {
        @include assert {
          @include output {
            @include outline-neutral-950;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $neutral-950;
          }
        }
      }

      @include it("outline-stone-50") {
        @include assert {
          @include output {
            @include outline-stone-50;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $stone-50;
          }
        }
      }

      @include it("outline-stone-100") {
        @include assert {
          @include output {
            @include outline-stone-100;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $stone-100;
          }
        }
      }

      @include it("outline-stone-200") {
        @include assert {
          @include output {
            @include outline-stone-200;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $stone-200;
          }
        }
      }

      @include it("outline-stone-300") {
        @include assert {
          @include output {
            @include outline-stone-300;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $stone-300;
          }
        }
      }

      @include it("outline-stone-400") {
        @include assert {
          @include output {
            @include outline-stone-400;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $stone-400;
          }
        }
      }

      @include it("outline-stone-500") {
        @include assert {
          @include output {
            @include outline-stone-500;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $stone-500;
          }
        }
      }

      @include it("outline-stone-600") {
        @include assert {
          @include output {
            @include outline-stone-600;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $stone-600;
          }
        }
      }

      @include it("outline-stone-700") {
        @include assert {
          @include output {
            @include outline-stone-700;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $stone-700;
          }
        }
      }

      @include it("outline-stone-800") {
        @include assert {
          @include output {
            @include outline-stone-800;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $stone-800;
          }
        }
      }

      @include it("outline-stone-900") {
        @include assert {
          @include output {
            @include outline-stone-900;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $stone-900;
          }
        }
      }

      @include it("outline-stone-950") {
        @include assert {
          @include output {
            @include outline-stone-950;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $stone-950;
          }
        }
      }

      @include it("outline-red-50") {
        @include assert {
          @include output {
            @include outline-red-50;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $red-50;
          }
        }
      }

      @include it("outline-red-100") {
        @include assert {
          @include output {
            @include outline-red-100;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $red-100;
          }
        }
      }

      @include it("outline-red-200") {
        @include assert {
          @include output {
            @include outline-red-200;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $red-200;
          }
        }
      }

      @include it("outline-red-300") {
        @include assert {
          @include output {
            @include outline-red-300;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $red-300;
          }
        }
      }

      @include it("outline-red-400") {
        @include assert {
          @include output {
            @include outline-red-400;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $red-400;
          }
        }
      }

      @include it("outline-red-500") {
        @include assert {
          @include output {
            @include outline-red-500;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $red-500;
          }
        }
      }

      @include it("outline-red-600") {
        @include assert {
          @include output {
            @include outline-red-600;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $red-600;
          }
        }
      }

      @include it("outline-red-700") {
        @include assert {
          @include output {
            @include outline-red-700;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $red-700;
          }
        }
      }

      @include it("outline-red-800") {
        @include assert {
          @include output {
            @include outline-red-800;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $red-800;
          }
        }
      }

      @include it("outline-red-900") {
        @include assert {
          @include output {
            @include outline-red-900;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $red-900;
          }
        }
      }

      @include it("outline-red-950") {
        @include assert {
          @include output {
            @include outline-red-950;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $red-950;
          }
        }
      }

      @include it("outline-orange-50") {
        @include assert {
          @include output {
            @include outline-orange-50;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $orange-50;
          }
        }
      }

      @include it("outline-orange-100") {
        @include assert {
          @include output {
            @include outline-orange-100;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $orange-100;
          }
        }
      }

      @include it("outline-orange-200") {
        @include assert {
          @include output {
            @include outline-orange-200;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $orange-200;
          }
        }
      }

      @include it("outline-orange-300") {
        @include assert {
          @include output {
            @include outline-orange-300;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $orange-300;
          }
        }
      }

      @include it("outline-orange-400") {
        @include assert {
          @include output {
            @include outline-orange-400;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $orange-400;
          }
        }
      }

      @include it("outline-orange-500") {
        @include assert {
          @include output {
            @include outline-orange-500;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $orange-500;
          }
        }
      }

      @include it("outline-orange-600") {
        @include assert {
          @include output {
            @include outline-orange-600;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $orange-600;
          }
        }
      }

      @include it("outline-orange-700") {
        @include assert {
          @include output {
            @include outline-orange-700;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $orange-700;
          }
        }
      }

      @include it("outline-orange-800") {
        @include assert {
          @include output {
            @include outline-orange-800;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $orange-800;
          }
        }
      }

      @include it("outline-orange-900") {
        @include assert {
          @include output {
            @include outline-orange-900;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $orange-900;
          }
        }
      }

      @include it("outline-orange-950") {
        @include assert {
          @include output {
            @include outline-orange-950;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $orange-950;
          }
        }
      }

      @include it("outline-amber-50") {
        @include assert {
          @include output {
            @include outline-amber-50;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $amber-50;
          }
        }
      }

      @include it("outline-amber-100") {
        @include assert {
          @include output {
            @include outline-amber-100;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $amber-100;
          }
        }
      }

      @include it("outline-amber-200") {
        @include assert {
          @include output {
            @include outline-amber-200;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $amber-200;
          }
        }
      }

      @include it("outline-amber-300") {
        @include assert {
          @include output {
            @include outline-amber-300;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $amber-300;
          }
        }
      }

      @include it("outline-amber-400") {
        @include assert {
          @include output {
            @include outline-amber-400;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $amber-400;
          }
        }
      }

      @include it("outline-amber-500") {
        @include assert {
          @include output {
            @include outline-amber-500;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $amber-500;
          }
        }
      }

      @include it("outline-amber-600") {
        @include assert {
          @include output {
            @include outline-amber-600;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $amber-600;
          }
        }
      }

      @include it("outline-amber-700") {
        @include assert {
          @include output {
            @include outline-amber-700;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $amber-700;
          }
        }
      }

      @include it("outline-amber-800") {
        @include assert {
          @include output {
            @include outline-amber-800;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $amber-800;
          }
        }
      }

      @include it("outline-amber-900") {
        @include assert {
          @include output {
            @include outline-amber-900;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $amber-900;
          }
        }
      }

      @include it("outline-amber-950") {
        @include assert {
          @include output {
            @include outline-amber-950;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $amber-950;
          }
        }
      }

      @include it("outline-yellow-50") {
        @include assert {
          @include output {
            @include outline-yellow-50;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $yellow-50;
          }
        }
      }

      @include it("outline-yellow-100") {
        @include assert {
          @include output {
            @include outline-yellow-100;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $yellow-100;
          }
        }
      }

      @include it("outline-yellow-200") {
        @include assert {
          @include output {
            @include outline-yellow-200;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $yellow-200;
          }
        }
      }

      @include it("outline-yellow-300") {
        @include assert {
          @include output {
            @include outline-yellow-300;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $yellow-300;
          }
        }
      }

      @include it("outline-yellow-400") {
        @include assert {
          @include output {
            @include outline-yellow-400;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $yellow-400;
          }
        }
      }

      @include it("outline-yellow-500") {
        @include assert {
          @include output {
            @include outline-yellow-500;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $yellow-500;
          }
        }
      }

      @include it("outline-yellow-600") {
        @include assert {
          @include output {
            @include outline-yellow-600;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $yellow-600;
          }
        }
      }

      @include it("outline-yellow-700") {
        @include assert {
          @include output {
            @include outline-yellow-700;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $yellow-700;
          }
        }
      }

      @include it("outline-yellow-800") {
        @include assert {
          @include output {
            @include outline-yellow-800;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $yellow-800;
          }
        }
      }

      @include it("outline-yellow-900") {
        @include assert {
          @include output {
            @include outline-yellow-900;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $yellow-900;
          }
        }
      }

      @include it("outline-yellow-950") {
        @include assert {
          @include output {
            @include outline-yellow-950;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $yellow-950;
          }
        }
      }

      @include it("outline-lime-50") {
        @include assert {
          @include output {
            @include outline-lime-50;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $lime-50;
          }
        }
      }

      @include it("outline-lime-100") {
        @include assert {
          @include output {
            @include outline-lime-100;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $lime-100;
          }
        }
      }

      @include it("outline-lime-200") {
        @include assert {
          @include output {
            @include outline-lime-200;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $lime-200;
          }
        }
      }

      @include it("outline-lime-300") {
        @include assert {
          @include output {
            @include outline-lime-300;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $lime-300;
          }
        }
      }

      @include it("outline-lime-400") {
        @include assert {
          @include output {
            @include outline-lime-400;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $lime-400;
          }
        }
      }

      @include it("outline-lime-500") {
        @include assert {
          @include output {
            @include outline-lime-500;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $lime-500;
          }
        }
      }

      @include it("outline-lime-600") {
        @include assert {
          @include output {
            @include outline-lime-600;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $lime-600;
          }
        }
      }

      @include it("outline-lime-700") {
        @include assert {
          @include output {
            @include outline-lime-700;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $lime-700;
          }
        }
      }

      @include it("outline-lime-800") {
        @include assert {
          @include output {
            @include outline-lime-800;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $lime-800;
          }
        }
      }

      @include it("outline-lime-900") {
        @include assert {
          @include output {
            @include outline-lime-900;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $lime-900;
          }
        }
      }

      @include it("outline-lime-950") {
        @include assert {
          @include output {
            @include outline-lime-950;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $lime-950;
          }
        }
      }

      @include it("outline-green-50") {
        @include assert {
          @include output {
            @include outline-green-50;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $green-50;
          }
        }
      }

      @include it("outline-green-100") {
        @include assert {
          @include output {
            @include outline-green-100;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $green-100;
          }
        }
      }

      @include it("outline-green-200") {
        @include assert {
          @include output {
            @include outline-green-200;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $green-200;
          }
        }
      }

      @include it("outline-green-300") {
        @include assert {
          @include output {
            @include outline-green-300;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $green-300;
          }
        }
      }

      @include it("outline-green-400") {
        @include assert {
          @include output {
            @include outline-green-400;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $green-400;
          }
        }
      }

      @include it("outline-green-500") {
        @include assert {
          @include output {
            @include outline-green-500;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $green-500;
          }
        }
      }

      @include it("outline-green-600") {
        @include assert {
          @include output {
            @include outline-green-600;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $green-600;
          }
        }
      }

      @include it("outline-green-700") {
        @include assert {
          @include output {
            @include outline-green-700;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $green-700;
          }
        }
      }

      @include it("outline-green-800") {
        @include assert {
          @include output {
            @include outline-green-800;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $green-800;
          }
        }
      }

      @include it("outline-green-900") {
        @include assert {
          @include output {
            @include outline-green-900;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $green-900;
          }
        }
      }

      @include it("outline-green-950") {
        @include assert {
          @include output {
            @include outline-green-950;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $green-950;
          }
        }
      }

      @include it("outline-emerald-50") {
        @include assert {
          @include output {
            @include outline-emerald-50;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $emerald-50;
          }
        }
      }

      @include it("outline-emerald-100") {
        @include assert {
          @include output {
            @include outline-emerald-100;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $emerald-100;
          }
        }
      }

      @include it("outline-emerald-200") {
        @include assert {
          @include output {
            @include outline-emerald-200;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $emerald-200;
          }
        }
      }

      @include it("outline-emerald-300") {
        @include assert {
          @include output {
            @include outline-emerald-300;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $emerald-300;
          }
        }
      }

      @include it("outline-emerald-400") {
        @include assert {
          @include output {
            @include outline-emerald-400;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $emerald-400;
          }
        }
      }

      @include it("outline-emerald-500") {
        @include assert {
          @include output {
            @include outline-emerald-500;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $emerald-500;
          }
        }
      }

      @include it("outline-emerald-600") {
        @include assert {
          @include output {
            @include outline-emerald-600;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $emerald-600;
          }
        }
      }

      @include it("outline-emerald-700") {
        @include assert {
          @include output {
            @include outline-emerald-700;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $emerald-700;
          }
        }
      }

      @include it("outline-emerald-800") {
        @include assert {
          @include output {
            @include outline-emerald-800;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $emerald-800;
          }
        }
      }

      @include it("outline-emerald-900") {
        @include assert {
          @include output {
            @include outline-emerald-900;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $emerald-900;
          }
        }
      }

      @include it("outline-emerald-950") {
        @include assert {
          @include output {
            @include outline-emerald-950;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $emerald-950;
          }
        }
      }

      @include it("outline-teal-50") {
        @include assert {
          @include output {
            @include outline-teal-50;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $teal-50;
          }
        }
      }

      @include it("outline-teal-100") {
        @include assert {
          @include output {
            @include outline-teal-100;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $teal-100;
          }
        }
      }

      @include it("outline-teal-200") {
        @include assert {
          @include output {
            @include outline-teal-200;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $teal-200;
          }
        }
      }

      @include it("outline-teal-300") {
        @include assert {
          @include output {
            @include outline-teal-300;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $teal-300;
          }
        }
      }

      @include it("outline-teal-400") {
        @include assert {
          @include output {
            @include outline-teal-400;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $teal-400;
          }
        }
      }

      @include it("outline-teal-500") {
        @include assert {
          @include output {
            @include outline-teal-500;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $teal-500;
          }
        }
      }

      @include it("outline-teal-600") {
        @include assert {
          @include output {
            @include outline-teal-600;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $teal-600;
          }
        }
      }

      @include it("outline-teal-700") {
        @include assert {
          @include output {
            @include outline-teal-700;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $teal-700;
          }
        }
      }

      @include it("outline-teal-800") {
        @include assert {
          @include output {
            @include outline-teal-800;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $teal-800;
          }
        }
      }

      @include it("outline-teal-900") {
        @include assert {
          @include output {
            @include outline-teal-900;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $teal-900;
          }
        }
      }

      @include it("outline-teal-950") {
        @include assert {
          @include output {
            @include outline-teal-950;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $teal-950;
          }
        }
      }

      @include it("outline-cyan-50") {
        @include assert {
          @include output {
            @include outline-cyan-50;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $cyan-50;
          }
        }
      }

      @include it("outline-cyan-100") {
        @include assert {
          @include output {
            @include outline-cyan-100;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $cyan-100;
          }
        }
      }

      @include it("outline-cyan-200") {
        @include assert {
          @include output {
            @include outline-cyan-200;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $cyan-200;
          }
        }
      }

      @include it("outline-cyan-300") {
        @include assert {
          @include output {
            @include outline-cyan-300;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $cyan-300;
          }
        }
      }

      @include it("outline-cyan-400") {
        @include assert {
          @include output {
            @include outline-cyan-400;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $cyan-400;
          }
        }
      }

      @include it("outline-cyan-500") {
        @include assert {
          @include output {
            @include outline-cyan-500;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $cyan-500;
          }
        }
      }

      @include it("outline-cyan-600") {
        @include assert {
          @include output {
            @include outline-cyan-600;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $cyan-600;
          }
        }
      }

      @include it("outline-cyan-700") {
        @include assert {
          @include output {
            @include outline-cyan-700;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $cyan-700;
          }
        }
      }

      @include it("outline-cyan-800") {
        @include assert {
          @include output {
            @include outline-cyan-800;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $cyan-800;
          }
        }
      }

      @include it("outline-cyan-900") {
        @include assert {
          @include output {
            @include outline-cyan-900;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $cyan-900;
          }
        }
      }

      @include it("outline-cyan-950") {
        @include assert {
          @include output {
            @include outline-cyan-950;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $cyan-950;
          }
        }
      }

      @include it("outline-sky-50") {
        @include assert {
          @include output {
            @include outline-sky-50;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $sky-50;
          }
        }
      }

      @include it("outline-sky-100") {
        @include assert {
          @include output {
            @include outline-sky-100;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $sky-100;
          }
        }
      }

      @include it("outline-sky-200") {
        @include assert {
          @include output {
            @include outline-sky-200;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $sky-200;
          }
        }
      }

      @include it("outline-sky-300") {
        @include assert {
          @include output {
            @include outline-sky-300;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $sky-300;
          }
        }
      }

      @include it("outline-sky-400") {
        @include assert {
          @include output {
            @include outline-sky-400;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $sky-400;
          }
        }
      }

      @include it("outline-sky-500") {
        @include assert {
          @include output {
            @include outline-sky-500;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $sky-500;
          }
        }
      }

      @include it("outline-sky-600") {
        @include assert {
          @include output {
            @include outline-sky-600;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $sky-600;
          }
        }
      }

      @include it("outline-sky-700") {
        @include assert {
          @include output {
            @include outline-sky-700;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $sky-700;
          }
        }
      }

      @include it("outline-sky-800") {
        @include assert {
          @include output {
            @include outline-sky-800;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $sky-800;
          }
        }
      }

      @include it("outline-sky-900") {
        @include assert {
          @include output {
            @include outline-sky-900;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $sky-900;
          }
        }
      }

      @include it("outline-sky-950") {
        @include assert {
          @include output {
            @include outline-sky-950;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $sky-950;
          }
        }
      }

      @include it("outline-blue-50") {
        @include assert {
          @include output {
            @include outline-blue-50;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $blue-50;
          }
        }
      }

      @include it("outline-blue-100") {
        @include assert {
          @include output {
            @include outline-blue-100;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $blue-100;
          }
        }
      }

      @include it("outline-blue-200") {
        @include assert {
          @include output {
            @include outline-blue-200;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $blue-200;
          }
        }
      }

      @include it("outline-blue-300") {
        @include assert {
          @include output {
            @include outline-blue-300;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $blue-300;
          }
        }
      }

      @include it("outline-blue-400") {
        @include assert {
          @include output {
            @include outline-blue-400;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $blue-400;
          }
        }
      }

      @include it("outline-blue-500") {
        @include assert {
          @include output {
            @include outline-blue-500;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $blue-500;
          }
        }
      }

      @include it("outline-blue-600") {
        @include assert {
          @include output {
            @include outline-blue-600;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $blue-600;
          }
        }
      }

      @include it("outline-blue-700") {
        @include assert {
          @include output {
            @include outline-blue-700;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $blue-700;
          }
        }
      }

      @include it("outline-blue-800") {
        @include assert {
          @include output {
            @include outline-blue-800;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $blue-800;
          }
        }
      }

      @include it("outline-blue-900") {
        @include assert {
          @include output {
            @include outline-blue-900;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $blue-900;
          }
        }
      }

      @include it("outline-blue-950") {
        @include assert {
          @include output {
            @include outline-blue-950;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $blue-950;
          }
        }
      }

      @include it("outline-indigo-50") {
        @include assert {
          @include output {
            @include outline-indigo-50;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $indigo-50;
          }
        }
      }

      @include it("outline-indigo-100") {
        @include assert {
          @include output {
            @include outline-indigo-100;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $indigo-100;
          }
        }
      }

      @include it("outline-indigo-200") {
        @include assert {
          @include output {
            @include outline-indigo-200;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $indigo-200;
          }
        }
      }

      @include it("outline-indigo-300") {
        @include assert {
          @include output {
            @include outline-indigo-300;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $indigo-300;
          }
        }
      }

      @include it("outline-indigo-400") {
        @include assert {
          @include output {
            @include outline-indigo-400;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $indigo-400;
          }
        }
      }

      @include it("outline-indigo-500") {
        @include assert {
          @include output {
            @include outline-indigo-500;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $indigo-500;
          }
        }
      }

      @include it("outline-indigo-600") {
        @include assert {
          @include output {
            @include outline-indigo-600;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $indigo-600;
          }
        }
      }

      @include it("outline-indigo-700") {
        @include assert {
          @include output {
            @include outline-indigo-700;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $indigo-700;
          }
        }
      }

      @include it("outline-indigo-800") {
        @include assert {
          @include output {
            @include outline-indigo-800;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $indigo-800;
          }
        }
      }

      @include it("outline-indigo-900") {
        @include assert {
          @include output {
            @include outline-indigo-900;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $indigo-900;
          }
        }
      }

      @include it("outline-indigo-950") {
        @include assert {
          @include output {
            @include outline-indigo-950;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $indigo-950;
          }
        }
      }

      @include it("outline-violet-50") {
        @include assert {
          @include output {
            @include outline-violet-50;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $violet-50;
          }
        }
      }

      @include it("outline-violet-100") {
        @include assert {
          @include output {
            @include outline-violet-100;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $violet-100;
          }
        }
      }

      @include it("outline-violet-200") {
        @include assert {
          @include output {
            @include outline-violet-200;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $violet-200;
          }
        }
      }

      @include it("outline-violet-300") {
        @include assert {
          @include output {
            @include outline-violet-300;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $violet-300;
          }
        }
      }

      @include it("outline-violet-400") {
        @include assert {
          @include output {
            @include outline-violet-400;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $violet-400;
          }
        }
      }

      @include it("outline-violet-500") {
        @include assert {
          @include output {
            @include outline-violet-500;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $violet-500;
          }
        }
      }

      @include it("outline-violet-600") {
        @include assert {
          @include output {
            @include outline-violet-600;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $violet-600;
          }
        }
      }

      @include it("outline-violet-700") {
        @include assert {
          @include output {
            @include outline-violet-700;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $violet-700;
          }
        }
      }

      @include it("outline-violet-800") {
        @include assert {
          @include output {
            @include outline-violet-800;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $violet-800;
          }
        }
      }

      @include it("outline-violet-900") {
        @include assert {
          @include output {
            @include outline-violet-900;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $violet-900;
          }
        }
      }

      @include it("outline-violet-950") {
        @include assert {
          @include output {
            @include outline-violet-950;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $violet-950;
          }
        }
      }

      @include it("outline-purple-50") {
        @include assert {
          @include output {
            @include outline-purple-50;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $purple-50;
          }
        }
      }

      @include it("outline-purple-100") {
        @include assert {
          @include output {
            @include outline-purple-100;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $purple-100;
          }
        }
      }

      @include it("outline-purple-200") {
        @include assert {
          @include output {
            @include outline-purple-200;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $purple-200;
          }
        }
      }

      @include it("outline-purple-300") {
        @include assert {
          @include output {
            @include outline-purple-300;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $purple-300;
          }
        }
      }

      @include it("outline-purple-400") {
        @include assert {
          @include output {
            @include outline-purple-400;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $purple-400;
          }
        }
      }

      @include it("outline-purple-500") {
        @include assert {
          @include output {
            @include outline-purple-500;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $purple-500;
          }
        }
      }

      @include it("outline-purple-600") {
        @include assert {
          @include output {
            @include outline-purple-600;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $purple-600;
          }
        }
      }

      @include it("outline-purple-700") {
        @include assert {
          @include output {
            @include outline-purple-700;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $purple-700;
          }
        }
      }

      @include it("outline-purple-800") {
        @include assert {
          @include output {
            @include outline-purple-800;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $purple-800;
          }
        }
      }

      @include it("outline-purple-900") {
        @include assert {
          @include output {
            @include outline-purple-900;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $purple-900;
          }
        }
      }

      @include it("outline-purple-950") {
        @include assert {
          @include output {
            @include outline-purple-950;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $purple-950;
          }
        }
      }

      @include it("outline-fuchsia-50") {
        @include assert {
          @include output {
            @include outline-fuchsia-50;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $fuchsia-50;
          }
        }
      }

      @include it("outline-fuchsia-100") {
        @include assert {
          @include output {
            @include outline-fuchsia-100;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $fuchsia-100;
          }
        }
      }

      @include it("outline-fuchsia-200") {
        @include assert {
          @include output {
            @include outline-fuchsia-200;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $fuchsia-200;
          }
        }
      }

      @include it("outline-fuchsia-300") {
        @include assert {
          @include output {
            @include outline-fuchsia-300;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $fuchsia-300;
          }
        }
      }

      @include it("outline-fuchsia-400") {
        @include assert {
          @include output {
            @include outline-fuchsia-400;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $fuchsia-400;
          }
        }
      }

      @include it("outline-fuchsia-500") {
        @include assert {
          @include output {
            @include outline-fuchsia-500;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $fuchsia-500;
          }
        }
      }

      @include it("outline-fuchsia-600") {
        @include assert {
          @include output {
            @include outline-fuchsia-600;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $fuchsia-600;
          }
        }
      }

      @include it("outline-fuchsia-700") {
        @include assert {
          @include output {
            @include outline-fuchsia-700;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $fuchsia-700;
          }
        }
      }

      @include it("outline-fuchsia-800") {
        @include assert {
          @include output {
            @include outline-fuchsia-800;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $fuchsia-800;
          }
        }
      }

      @include it("outline-fuchsia-900") {
        @include assert {
          @include output {
            @include outline-fuchsia-900;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $fuchsia-900;
          }
        }
      }

      @include it("outline-fuchsia-950") {
        @include assert {
          @include output {
            @include outline-fuchsia-950;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $fuchsia-950;
          }
        }
      }

      @include it("outline-pink-50") {
        @include assert {
          @include output {
            @include outline-pink-50;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $pink-50;
          }
        }
      }

      @include it("outline-pink-100") {
        @include assert {
          @include output {
            @include outline-pink-100;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $pink-100;
          }
        }
      }

      @include it("outline-pink-200") {
        @include assert {
          @include output {
            @include outline-pink-200;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $pink-200;
          }
        }
      }

      @include it("outline-pink-300") {
        @include assert {
          @include output {
            @include outline-pink-300;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $pink-300;
          }
        }
      }

      @include it("outline-pink-400") {
        @include assert {
          @include output {
            @include outline-pink-400;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $pink-400;
          }
        }
      }

      @include it("outline-pink-500") {
        @include assert {
          @include output {
            @include outline-pink-500;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $pink-500;
          }
        }
      }

      @include it("outline-pink-600") {
        @include assert {
          @include output {
            @include outline-pink-600;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $pink-600;
          }
        }
      }

      @include it("outline-pink-700") {
        @include assert {
          @include output {
            @include outline-pink-700;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $pink-700;
          }
        }
      }

      @include it("outline-pink-800") {
        @include assert {
          @include output {
            @include outline-pink-800;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $pink-800;
          }
        }
      }

      @include it("outline-pink-900") {
        @include assert {
          @include output {
            @include outline-pink-900;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $pink-900;
          }
        }
      }

      @include it("outline-pink-950") {
        @include assert {
          @include output {
            @include outline-pink-950;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $pink-950;
          }
        }
      }

      @include it("outline-rose-50") {
        @include assert {
          @include output {
            @include outline-rose-50;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $rose-50;
          }
        }
      }

      @include it("outline-rose-100") {
        @include assert {
          @include output {
            @include outline-rose-100;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $rose-100;
          }
        }
      }

      @include it("outline-rose-200") {
        @include assert {
          @include output {
            @include outline-rose-200;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $rose-200;
          }
        }
      }

      @include it("outline-rose-300") {
        @include assert {
          @include output {
            @include outline-rose-300;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $rose-300;
          }
        }
      }

      @include it("outline-rose-400") {
        @include assert {
          @include output {
            @include outline-rose-400;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $rose-400;
          }
        }
      }

      @include it("outline-rose-500") {
        @include assert {
          @include output {
            @include outline-rose-500;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $rose-500;
          }
        }
      }

      @include it("outline-rose-600") {
        @include assert {
          @include output {
            @include outline-rose-600;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $rose-600;
          }
        }
      }

      @include it("outline-rose-700") {
        @include assert {
          @include output {
            @include outline-rose-700;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $rose-700;
          }
        }
      }

      @include it("outline-rose-800") {
        @include assert {
          @include output {
            @include outline-rose-800;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $rose-800;
          }
        }
      }

      @include it("outline-rose-900") {
        @include assert {
          @include output {
            @include outline-rose-900;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $rose-900;
          }
        }
      }

      @include it("outline-rose-950") {
        @include assert {
          @include output {
            @include outline-rose-950;
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: $rose-950;
          }
        }
      }

      @include it("outline-black(0.11)") {
        @include assert {
          @include output {
            @include outline-black(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change(#000, $alpha: 0.11);
          }
        }
      }

      @include it("outline-white(0.11)") {
        @include assert {
          @include output {
            @include outline-white(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change(#fff, $alpha: 0.11);
          }
        }
      }

      @include it("outline-slate-50(0.11)") {
        @include assert {
          @include output {
            @include outline-slate-50(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($slate-50, $alpha: 0.11);
          }
        }
      }

      @include it("outline-slate-100(0.11)") {
        @include assert {
          @include output {
            @include outline-slate-100(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($slate-100, $alpha: 0.11);
          }
        }
      }

      @include it("outline-slate-200(0.11)") {
        @include assert {
          @include output {
            @include outline-slate-200(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($slate-200, $alpha: 0.11);
          }
        }
      }

      @include it("outline-slate-300(0.11)") {
        @include assert {
          @include output {
            @include outline-slate-300(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($slate-300, $alpha: 0.11);
          }
        }
      }

      @include it("outline-slate-400(0.11)") {
        @include assert {
          @include output {
            @include outline-slate-400(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($slate-400, $alpha: 0.11);
          }
        }
      }

      @include it("outline-slate-500(0.11)") {
        @include assert {
          @include output {
            @include outline-slate-500(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($slate-500, $alpha: 0.11);
          }
        }
      }

      @include it("outline-slate-600(0.11)") {
        @include assert {
          @include output {
            @include outline-slate-600(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($slate-600, $alpha: 0.11);
          }
        }
      }

      @include it("outline-slate-700(0.11)") {
        @include assert {
          @include output {
            @include outline-slate-700(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($slate-700, $alpha: 0.11);
          }
        }
      }

      @include it("outline-slate-800(0.11)") {
        @include assert {
          @include output {
            @include outline-slate-800(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($slate-800, $alpha: 0.11);
          }
        }
      }

      @include it("outline-slate-900(0.11)") {
        @include assert {
          @include output {
            @include outline-slate-900(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($slate-900, $alpha: 0.11);
          }
        }
      }

      @include it("outline-slate-950(0.11)") {
        @include assert {
          @include output {
            @include outline-slate-950(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($slate-950, $alpha: 0.11);
          }
        }
      }

      @include it("outline-gray-50(0.11)") {
        @include assert {
          @include output {
            @include outline-gray-50(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($gray-50, $alpha: 0.11);
          }
        }
      }

      @include it("outline-gray-100(0.11)") {
        @include assert {
          @include output {
            @include outline-gray-100(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($gray-100, $alpha: 0.11);
          }
        }
      }

      @include it("outline-gray-200(0.11)") {
        @include assert {
          @include output {
            @include outline-gray-200(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($gray-200, $alpha: 0.11);
          }
        }
      }

      @include it("outline-gray-300(0.11)") {
        @include assert {
          @include output {
            @include outline-gray-300(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($gray-300, $alpha: 0.11);
          }
        }
      }

      @include it("outline-gray-400(0.11)") {
        @include assert {
          @include output {
            @include outline-gray-400(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($gray-400, $alpha: 0.11);
          }
        }
      }

      @include it("outline-gray-500(0.11)") {
        @include assert {
          @include output {
            @include outline-gray-500(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($gray-500, $alpha: 0.11);
          }
        }
      }

      @include it("outline-gray-600(0.11)") {
        @include assert {
          @include output {
            @include outline-gray-600(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($gray-600, $alpha: 0.11);
          }
        }
      }

      @include it("outline-gray-700(0.11)") {
        @include assert {
          @include output {
            @include outline-gray-700(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($gray-700, $alpha: 0.11);
          }
        }
      }

      @include it("outline-gray-800(0.11)") {
        @include assert {
          @include output {
            @include outline-gray-800(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($gray-800, $alpha: 0.11);
          }
        }
      }

      @include it("outline-gray-900(0.11)") {
        @include assert {
          @include output {
            @include outline-gray-900(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($gray-900, $alpha: 0.11);
          }
        }
      }

      @include it("outline-gray-950(0.11)") {
        @include assert {
          @include output {
            @include outline-gray-950(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($gray-950, $alpha: 0.11);
          }
        }
      }

      @include it("outline-zinc-50(0.11)") {
        @include assert {
          @include output {
            @include outline-zinc-50(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($zinc-50, $alpha: 0.11);
          }
        }
      }

      @include it("outline-zinc-100(0.11)") {
        @include assert {
          @include output {
            @include outline-zinc-100(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($zinc-100, $alpha: 0.11);
          }
        }
      }

      @include it("outline-zinc-200(0.11)") {
        @include assert {
          @include output {
            @include outline-zinc-200(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($zinc-200, $alpha: 0.11);
          }
        }
      }

      @include it("outline-zinc-300(0.11)") {
        @include assert {
          @include output {
            @include outline-zinc-300(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($zinc-300, $alpha: 0.11);
          }
        }
      }

      @include it("outline-zinc-400(0.11)") {
        @include assert {
          @include output {
            @include outline-zinc-400(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($zinc-400, $alpha: 0.11);
          }
        }
      }

      @include it("outline-zinc-500(0.11)") {
        @include assert {
          @include output {
            @include outline-zinc-500(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($zinc-500, $alpha: 0.11);
          }
        }
      }

      @include it("outline-zinc-600(0.11)") {
        @include assert {
          @include output {
            @include outline-zinc-600(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($zinc-600, $alpha: 0.11);
          }
        }
      }

      @include it("outline-zinc-700(0.11)") {
        @include assert {
          @include output {
            @include outline-zinc-700(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($zinc-700, $alpha: 0.11);
          }
        }
      }

      @include it("outline-zinc-800(0.11)") {
        @include assert {
          @include output {
            @include outline-zinc-800(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($zinc-800, $alpha: 0.11);
          }
        }
      }

      @include it("outline-zinc-900(0.11)") {
        @include assert {
          @include output {
            @include outline-zinc-900(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($zinc-900, $alpha: 0.11);
          }
        }
      }

      @include it("outline-zinc-950(0.11)") {
        @include assert {
          @include output {
            @include outline-zinc-950(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($zinc-950, $alpha: 0.11);
          }
        }
      }

      @include it("outline-neutral-50(0.11)") {
        @include assert {
          @include output {
            @include outline-neutral-50(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($neutral-50, $alpha: 0.11);
          }
        }
      }

      @include it("outline-neutral-100(0.11)") {
        @include assert {
          @include output {
            @include outline-neutral-100(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($neutral-100, $alpha: 0.11);
          }
        }
      }

      @include it("outline-neutral-200(0.11)") {
        @include assert {
          @include output {
            @include outline-neutral-200(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($neutral-200, $alpha: 0.11);
          }
        }
      }

      @include it("outline-neutral-300(0.11)") {
        @include assert {
          @include output {
            @include outline-neutral-300(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($neutral-300, $alpha: 0.11);
          }
        }
      }

      @include it("outline-neutral-400(0.11)") {
        @include assert {
          @include output {
            @include outline-neutral-400(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($neutral-400, $alpha: 0.11);
          }
        }
      }

      @include it("outline-neutral-500(0.11)") {
        @include assert {
          @include output {
            @include outline-neutral-500(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($neutral-500, $alpha: 0.11);
          }
        }
      }

      @include it("outline-neutral-600(0.11)") {
        @include assert {
          @include output {
            @include outline-neutral-600(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($neutral-600, $alpha: 0.11);
          }
        }
      }

      @include it("outline-neutral-700(0.11)") {
        @include assert {
          @include output {
            @include outline-neutral-700(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($neutral-700, $alpha: 0.11);
          }
        }
      }

      @include it("outline-neutral-800(0.11)") {
        @include assert {
          @include output {
            @include outline-neutral-800(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($neutral-800, $alpha: 0.11);
          }
        }
      }

      @include it("outline-neutral-900(0.11)") {
        @include assert {
          @include output {
            @include outline-neutral-900(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($neutral-900, $alpha: 0.11);
          }
        }
      }

      @include it("outline-neutral-950(0.11)") {
        @include assert {
          @include output {
            @include outline-neutral-950(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($neutral-950, $alpha: 0.11);
          }
        }
      }

      @include it("outline-stone-50(0.11)") {
        @include assert {
          @include output {
            @include outline-stone-50(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($stone-50, $alpha: 0.11);
          }
        }
      }

      @include it("outline-stone-100(0.11)") {
        @include assert {
          @include output {
            @include outline-stone-100(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($stone-100, $alpha: 0.11);
          }
        }
      }

      @include it("outline-stone-200(0.11)") {
        @include assert {
          @include output {
            @include outline-stone-200(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($stone-200, $alpha: 0.11);
          }
        }
      }

      @include it("outline-stone-300(0.11)") {
        @include assert {
          @include output {
            @include outline-stone-300(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($stone-300, $alpha: 0.11);
          }
        }
      }

      @include it("outline-stone-400(0.11)") {
        @include assert {
          @include output {
            @include outline-stone-400(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($stone-400, $alpha: 0.11);
          }
        }
      }

      @include it("outline-stone-500(0.11)") {
        @include assert {
          @include output {
            @include outline-stone-500(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($stone-500, $alpha: 0.11);
          }
        }
      }

      @include it("outline-stone-600(0.11)") {
        @include assert {
          @include output {
            @include outline-stone-600(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($stone-600, $alpha: 0.11);
          }
        }
      }

      @include it("outline-stone-700(0.11)") {
        @include assert {
          @include output {
            @include outline-stone-700(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($stone-700, $alpha: 0.11);
          }
        }
      }

      @include it("outline-stone-800(0.11)") {
        @include assert {
          @include output {
            @include outline-stone-800(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($stone-800, $alpha: 0.11);
          }
        }
      }

      @include it("outline-stone-900(0.11)") {
        @include assert {
          @include output {
            @include outline-stone-900(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($stone-900, $alpha: 0.11);
          }
        }
      }

      @include it("outline-stone-950(0.11)") {
        @include assert {
          @include output {
            @include outline-stone-950(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($stone-950, $alpha: 0.11);
          }
        }
      }

      @include it("outline-red-50(0.11)") {
        @include assert {
          @include output {
            @include outline-red-50(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($red-50, $alpha: 0.11);
          }
        }
      }

      @include it("outline-red-100(0.11)") {
        @include assert {
          @include output {
            @include outline-red-100(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($red-100, $alpha: 0.11);
          }
        }
      }

      @include it("outline-red-200(0.11)") {
        @include assert {
          @include output {
            @include outline-red-200(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($red-200, $alpha: 0.11);
          }
        }
      }

      @include it("outline-red-300(0.11)") {
        @include assert {
          @include output {
            @include outline-red-300(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($red-300, $alpha: 0.11);
          }
        }
      }

      @include it("outline-red-400(0.11)") {
        @include assert {
          @include output {
            @include outline-red-400(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($red-400, $alpha: 0.11);
          }
        }
      }

      @include it("outline-red-500(0.11)") {
        @include assert {
          @include output {
            @include outline-red-500(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($red-500, $alpha: 0.11);
          }
        }
      }

      @include it("outline-red-600(0.11)") {
        @include assert {
          @include output {
            @include outline-red-600(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($red-600, $alpha: 0.11);
          }
        }
      }

      @include it("outline-red-700(0.11)") {
        @include assert {
          @include output {
            @include outline-red-700(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($red-700, $alpha: 0.11);
          }
        }
      }

      @include it("outline-red-800(0.11)") {
        @include assert {
          @include output {
            @include outline-red-800(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($red-800, $alpha: 0.11);
          }
        }
      }

      @include it("outline-red-900(0.11)") {
        @include assert {
          @include output {
            @include outline-red-900(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($red-900, $alpha: 0.11);
          }
        }
      }

      @include it("outline-red-950(0.11)") {
        @include assert {
          @include output {
            @include outline-red-950(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($red-950, $alpha: 0.11);
          }
        }
      }

      @include it("outline-orange-50(0.11)") {
        @include assert {
          @include output {
            @include outline-orange-50(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($orange-50, $alpha: 0.11);
          }
        }
      }

      @include it("outline-orange-100(0.11)") {
        @include assert {
          @include output {
            @include outline-orange-100(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($orange-100, $alpha: 0.11);
          }
        }
      }

      @include it("outline-orange-200(0.11)") {
        @include assert {
          @include output {
            @include outline-orange-200(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($orange-200, $alpha: 0.11);
          }
        }
      }

      @include it("outline-orange-300(0.11)") {
        @include assert {
          @include output {
            @include outline-orange-300(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($orange-300, $alpha: 0.11);
          }
        }
      }

      @include it("outline-orange-400(0.11)") {
        @include assert {
          @include output {
            @include outline-orange-400(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($orange-400, $alpha: 0.11);
          }
        }
      }

      @include it("outline-orange-500(0.11)") {
        @include assert {
          @include output {
            @include outline-orange-500(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($orange-500, $alpha: 0.11);
          }
        }
      }

      @include it("outline-orange-600(0.11)") {
        @include assert {
          @include output {
            @include outline-orange-600(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($orange-600, $alpha: 0.11);
          }
        }
      }

      @include it("outline-orange-700(0.11)") {
        @include assert {
          @include output {
            @include outline-orange-700(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($orange-700, $alpha: 0.11);
          }
        }
      }

      @include it("outline-orange-800(0.11)") {
        @include assert {
          @include output {
            @include outline-orange-800(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($orange-800, $alpha: 0.11);
          }
        }
      }

      @include it("outline-orange-900(0.11)") {
        @include assert {
          @include output {
            @include outline-orange-900(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($orange-900, $alpha: 0.11);
          }
        }
      }

      @include it("outline-orange-950(0.11)") {
        @include assert {
          @include output {
            @include outline-orange-950(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($orange-950, $alpha: 0.11);
          }
        }
      }

      @include it("outline-amber-50(0.11)") {
        @include assert {
          @include output {
            @include outline-amber-50(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($amber-50, $alpha: 0.11);
          }
        }
      }

      @include it("outline-amber-100(0.11)") {
        @include assert {
          @include output {
            @include outline-amber-100(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($amber-100, $alpha: 0.11);
          }
        }
      }

      @include it("outline-amber-200(0.11)") {
        @include assert {
          @include output {
            @include outline-amber-200(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($amber-200, $alpha: 0.11);
          }
        }
      }

      @include it("outline-amber-300(0.11)") {
        @include assert {
          @include output {
            @include outline-amber-300(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($amber-300, $alpha: 0.11);
          }
        }
      }

      @include it("outline-amber-400(0.11)") {
        @include assert {
          @include output {
            @include outline-amber-400(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($amber-400, $alpha: 0.11);
          }
        }
      }

      @include it("outline-amber-500(0.11)") {
        @include assert {
          @include output {
            @include outline-amber-500(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($amber-500, $alpha: 0.11);
          }
        }
      }

      @include it("outline-amber-600(0.11)") {
        @include assert {
          @include output {
            @include outline-amber-600(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($amber-600, $alpha: 0.11);
          }
        }
      }

      @include it("outline-amber-700(0.11)") {
        @include assert {
          @include output {
            @include outline-amber-700(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($amber-700, $alpha: 0.11);
          }
        }
      }

      @include it("outline-amber-800(0.11)") {
        @include assert {
          @include output {
            @include outline-amber-800(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($amber-800, $alpha: 0.11);
          }
        }
      }

      @include it("outline-amber-900(0.11)") {
        @include assert {
          @include output {
            @include outline-amber-900(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($amber-900, $alpha: 0.11);
          }
        }
      }

      @include it("outline-amber-950(0.11)") {
        @include assert {
          @include output {
            @include outline-amber-950(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($amber-950, $alpha: 0.11);
          }
        }
      }

      @include it("outline-yellow-50(0.11)") {
        @include assert {
          @include output {
            @include outline-yellow-50(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($yellow-50, $alpha: 0.11);
          }
        }
      }

      @include it("outline-yellow-100(0.11)") {
        @include assert {
          @include output {
            @include outline-yellow-100(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($yellow-100, $alpha: 0.11);
          }
        }
      }

      @include it("outline-yellow-200(0.11)") {
        @include assert {
          @include output {
            @include outline-yellow-200(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($yellow-200, $alpha: 0.11);
          }
        }
      }

      @include it("outline-yellow-300(0.11)") {
        @include assert {
          @include output {
            @include outline-yellow-300(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($yellow-300, $alpha: 0.11);
          }
        }
      }

      @include it("outline-yellow-400(0.11)") {
        @include assert {
          @include output {
            @include outline-yellow-400(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($yellow-400, $alpha: 0.11);
          }
        }
      }

      @include it("outline-yellow-500(0.11)") {
        @include assert {
          @include output {
            @include outline-yellow-500(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($yellow-500, $alpha: 0.11);
          }
        }
      }

      @include it("outline-yellow-600(0.11)") {
        @include assert {
          @include output {
            @include outline-yellow-600(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($yellow-600, $alpha: 0.11);
          }
        }
      }

      @include it("outline-yellow-700(0.11)") {
        @include assert {
          @include output {
            @include outline-yellow-700(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($yellow-700, $alpha: 0.11);
          }
        }
      }

      @include it("outline-yellow-800(0.11)") {
        @include assert {
          @include output {
            @include outline-yellow-800(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($yellow-800, $alpha: 0.11);
          }
        }
      }

      @include it("outline-yellow-900(0.11)") {
        @include assert {
          @include output {
            @include outline-yellow-900(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($yellow-900, $alpha: 0.11);
          }
        }
      }

      @include it("outline-yellow-950(0.11)") {
        @include assert {
          @include output {
            @include outline-yellow-950(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($yellow-950, $alpha: 0.11);
          }
        }
      }

      @include it("outline-lime-50(0.11)") {
        @include assert {
          @include output {
            @include outline-lime-50(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($lime-50, $alpha: 0.11);
          }
        }
      }

      @include it("outline-lime-100(0.11)") {
        @include assert {
          @include output {
            @include outline-lime-100(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($lime-100, $alpha: 0.11);
          }
        }
      }

      @include it("outline-lime-200(0.11)") {
        @include assert {
          @include output {
            @include outline-lime-200(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($lime-200, $alpha: 0.11);
          }
        }
      }

      @include it("outline-lime-300(0.11)") {
        @include assert {
          @include output {
            @include outline-lime-300(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($lime-300, $alpha: 0.11);
          }
        }
      }

      @include it("outline-lime-400(0.11)") {
        @include assert {
          @include output {
            @include outline-lime-400(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($lime-400, $alpha: 0.11);
          }
        }
      }

      @include it("outline-lime-500(0.11)") {
        @include assert {
          @include output {
            @include outline-lime-500(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($lime-500, $alpha: 0.11);
          }
        }
      }

      @include it("outline-lime-600(0.11)") {
        @include assert {
          @include output {
            @include outline-lime-600(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($lime-600, $alpha: 0.11);
          }
        }
      }

      @include it("outline-lime-700(0.11)") {
        @include assert {
          @include output {
            @include outline-lime-700(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($lime-700, $alpha: 0.11);
          }
        }
      }

      @include it("outline-lime-800(0.11)") {
        @include assert {
          @include output {
            @include outline-lime-800(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($lime-800, $alpha: 0.11);
          }
        }
      }

      @include it("outline-lime-900(0.11)") {
        @include assert {
          @include output {
            @include outline-lime-900(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($lime-900, $alpha: 0.11);
          }
        }
      }

      @include it("outline-lime-950(0.11)") {
        @include assert {
          @include output {
            @include outline-lime-950(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($lime-950, $alpha: 0.11);
          }
        }
      }

      @include it("outline-green-50(0.11)") {
        @include assert {
          @include output {
            @include outline-green-50(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($green-50, $alpha: 0.11);
          }
        }
      }

      @include it("outline-green-100(0.11)") {
        @include assert {
          @include output {
            @include outline-green-100(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($green-100, $alpha: 0.11);
          }
        }
      }

      @include it("outline-green-200(0.11)") {
        @include assert {
          @include output {
            @include outline-green-200(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($green-200, $alpha: 0.11);
          }
        }
      }

      @include it("outline-green-300(0.11)") {
        @include assert {
          @include output {
            @include outline-green-300(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($green-300, $alpha: 0.11);
          }
        }
      }

      @include it("outline-green-400(0.11)") {
        @include assert {
          @include output {
            @include outline-green-400(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($green-400, $alpha: 0.11);
          }
        }
      }

      @include it("outline-green-500(0.11)") {
        @include assert {
          @include output {
            @include outline-green-500(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($green-500, $alpha: 0.11);
          }
        }
      }

      @include it("outline-green-600(0.11)") {
        @include assert {
          @include output {
            @include outline-green-600(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($green-600, $alpha: 0.11);
          }
        }
      }

      @include it("outline-green-700(0.11)") {
        @include assert {
          @include output {
            @include outline-green-700(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($green-700, $alpha: 0.11);
          }
        }
      }

      @include it("outline-green-800(0.11)") {
        @include assert {
          @include output {
            @include outline-green-800(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($green-800, $alpha: 0.11);
          }
        }
      }

      @include it("outline-green-900(0.11)") {
        @include assert {
          @include output {
            @include outline-green-900(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($green-900, $alpha: 0.11);
          }
        }
      }

      @include it("outline-green-950(0.11)") {
        @include assert {
          @include output {
            @include outline-green-950(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($green-950, $alpha: 0.11);
          }
        }
      }

      @include it("outline-emerald-50(0.11)") {
        @include assert {
          @include output {
            @include outline-emerald-50(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($emerald-50, $alpha: 0.11);
          }
        }
      }

      @include it("outline-emerald-100(0.11)") {
        @include assert {
          @include output {
            @include outline-emerald-100(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($emerald-100, $alpha: 0.11);
          }
        }
      }

      @include it("outline-emerald-200(0.11)") {
        @include assert {
          @include output {
            @include outline-emerald-200(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($emerald-200, $alpha: 0.11);
          }
        }
      }

      @include it("outline-emerald-300(0.11)") {
        @include assert {
          @include output {
            @include outline-emerald-300(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($emerald-300, $alpha: 0.11);
          }
        }
      }

      @include it("outline-emerald-400(0.11)") {
        @include assert {
          @include output {
            @include outline-emerald-400(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($emerald-400, $alpha: 0.11);
          }
        }
      }

      @include it("outline-emerald-500(0.11)") {
        @include assert {
          @include output {
            @include outline-emerald-500(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($emerald-500, $alpha: 0.11);
          }
        }
      }

      @include it("outline-emerald-600(0.11)") {
        @include assert {
          @include output {
            @include outline-emerald-600(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($emerald-600, $alpha: 0.11);
          }
        }
      }

      @include it("outline-emerald-700(0.11)") {
        @include assert {
          @include output {
            @include outline-emerald-700(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($emerald-700, $alpha: 0.11);
          }
        }
      }

      @include it("outline-emerald-800(0.11)") {
        @include assert {
          @include output {
            @include outline-emerald-800(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($emerald-800, $alpha: 0.11);
          }
        }
      }

      @include it("outline-emerald-900(0.11)") {
        @include assert {
          @include output {
            @include outline-emerald-900(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($emerald-900, $alpha: 0.11);
          }
        }
      }

      @include it("outline-emerald-950(0.11)") {
        @include assert {
          @include output {
            @include outline-emerald-950(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($emerald-950, $alpha: 0.11);
          }
        }
      }

      @include it("outline-teal-50(0.11)") {
        @include assert {
          @include output {
            @include outline-teal-50(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($teal-50, $alpha: 0.11);
          }
        }
      }

      @include it("outline-teal-100(0.11)") {
        @include assert {
          @include output {
            @include outline-teal-100(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($teal-100, $alpha: 0.11);
          }
        }
      }

      @include it("outline-teal-200(0.11)") {
        @include assert {
          @include output {
            @include outline-teal-200(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($teal-200, $alpha: 0.11);
          }
        }
      }

      @include it("outline-teal-300(0.11)") {
        @include assert {
          @include output {
            @include outline-teal-300(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($teal-300, $alpha: 0.11);
          }
        }
      }

      @include it("outline-teal-400(0.11)") {
        @include assert {
          @include output {
            @include outline-teal-400(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($teal-400, $alpha: 0.11);
          }
        }
      }

      @include it("outline-teal-500(0.11)") {
        @include assert {
          @include output {
            @include outline-teal-500(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($teal-500, $alpha: 0.11);
          }
        }
      }

      @include it("outline-teal-600(0.11)") {
        @include assert {
          @include output {
            @include outline-teal-600(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($teal-600, $alpha: 0.11);
          }
        }
      }

      @include it("outline-teal-700(0.11)") {
        @include assert {
          @include output {
            @include outline-teal-700(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($teal-700, $alpha: 0.11);
          }
        }
      }

      @include it("outline-teal-800(0.11)") {
        @include assert {
          @include output {
            @include outline-teal-800(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($teal-800, $alpha: 0.11);
          }
        }
      }

      @include it("outline-teal-900(0.11)") {
        @include assert {
          @include output {
            @include outline-teal-900(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($teal-900, $alpha: 0.11);
          }
        }
      }

      @include it("outline-teal-950(0.11)") {
        @include assert {
          @include output {
            @include outline-teal-950(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($teal-950, $alpha: 0.11);
          }
        }
      }

      @include it("outline-cyan-50(0.11)") {
        @include assert {
          @include output {
            @include outline-cyan-50(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($cyan-50, $alpha: 0.11);
          }
        }
      }

      @include it("outline-cyan-100(0.11)") {
        @include assert {
          @include output {
            @include outline-cyan-100(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($cyan-100, $alpha: 0.11);
          }
        }
      }

      @include it("outline-cyan-200(0.11)") {
        @include assert {
          @include output {
            @include outline-cyan-200(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($cyan-200, $alpha: 0.11);
          }
        }
      }

      @include it("outline-cyan-300(0.11)") {
        @include assert {
          @include output {
            @include outline-cyan-300(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($cyan-300, $alpha: 0.11);
          }
        }
      }

      @include it("outline-cyan-400(0.11)") {
        @include assert {
          @include output {
            @include outline-cyan-400(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($cyan-400, $alpha: 0.11);
          }
        }
      }

      @include it("outline-cyan-500(0.11)") {
        @include assert {
          @include output {
            @include outline-cyan-500(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($cyan-500, $alpha: 0.11);
          }
        }
      }

      @include it("outline-cyan-600(0.11)") {
        @include assert {
          @include output {
            @include outline-cyan-600(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($cyan-600, $alpha: 0.11);
          }
        }
      }

      @include it("outline-cyan-700(0.11)") {
        @include assert {
          @include output {
            @include outline-cyan-700(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($cyan-700, $alpha: 0.11);
          }
        }
      }

      @include it("outline-cyan-800(0.11)") {
        @include assert {
          @include output {
            @include outline-cyan-800(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($cyan-800, $alpha: 0.11);
          }
        }
      }

      @include it("outline-cyan-900(0.11)") {
        @include assert {
          @include output {
            @include outline-cyan-900(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($cyan-900, $alpha: 0.11);
          }
        }
      }

      @include it("outline-cyan-950(0.11)") {
        @include assert {
          @include output {
            @include outline-cyan-950(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($cyan-950, $alpha: 0.11);
          }
        }
      }

      @include it("outline-sky-50(0.11)") {
        @include assert {
          @include output {
            @include outline-sky-50(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($sky-50, $alpha: 0.11);
          }
        }
      }

      @include it("outline-sky-100(0.11)") {
        @include assert {
          @include output {
            @include outline-sky-100(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($sky-100, $alpha: 0.11);
          }
        }
      }

      @include it("outline-sky-200(0.11)") {
        @include assert {
          @include output {
            @include outline-sky-200(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($sky-200, $alpha: 0.11);
          }
        }
      }

      @include it("outline-sky-300(0.11)") {
        @include assert {
          @include output {
            @include outline-sky-300(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($sky-300, $alpha: 0.11);
          }
        }
      }

      @include it("outline-sky-400(0.11)") {
        @include assert {
          @include output {
            @include outline-sky-400(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($sky-400, $alpha: 0.11);
          }
        }
      }

      @include it("outline-sky-500(0.11)") {
        @include assert {
          @include output {
            @include outline-sky-500(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($sky-500, $alpha: 0.11);
          }
        }
      }

      @include it("outline-sky-600(0.11)") {
        @include assert {
          @include output {
            @include outline-sky-600(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($sky-600, $alpha: 0.11);
          }
        }
      }

      @include it("outline-sky-700(0.11)") {
        @include assert {
          @include output {
            @include outline-sky-700(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($sky-700, $alpha: 0.11);
          }
        }
      }

      @include it("outline-sky-800(0.11)") {
        @include assert {
          @include output {
            @include outline-sky-800(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($sky-800, $alpha: 0.11);
          }
        }
      }

      @include it("outline-sky-900(0.11)") {
        @include assert {
          @include output {
            @include outline-sky-900(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($sky-900, $alpha: 0.11);
          }
        }
      }

      @include it("outline-sky-950(0.11)") {
        @include assert {
          @include output {
            @include outline-sky-950(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($sky-950, $alpha: 0.11);
          }
        }
      }

      @include it("outline-blue-50(0.11)") {
        @include assert {
          @include output {
            @include outline-blue-50(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($blue-50, $alpha: 0.11);
          }
        }
      }

      @include it("outline-blue-100(0.11)") {
        @include assert {
          @include output {
            @include outline-blue-100(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($blue-100, $alpha: 0.11);
          }
        }
      }

      @include it("outline-blue-200(0.11)") {
        @include assert {
          @include output {
            @include outline-blue-200(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($blue-200, $alpha: 0.11);
          }
        }
      }

      @include it("outline-blue-300(0.11)") {
        @include assert {
          @include output {
            @include outline-blue-300(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($blue-300, $alpha: 0.11);
          }
        }
      }

      @include it("outline-blue-400(0.11)") {
        @include assert {
          @include output {
            @include outline-blue-400(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($blue-400, $alpha: 0.11);
          }
        }
      }

      @include it("outline-blue-500(0.11)") {
        @include assert {
          @include output {
            @include outline-blue-500(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($blue-500, $alpha: 0.11);
          }
        }
      }

      @include it("outline-blue-600(0.11)") {
        @include assert {
          @include output {
            @include outline-blue-600(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($blue-600, $alpha: 0.11);
          }
        }
      }

      @include it("outline-blue-700(0.11)") {
        @include assert {
          @include output {
            @include outline-blue-700(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($blue-700, $alpha: 0.11);
          }
        }
      }

      @include it("outline-blue-800(0.11)") {
        @include assert {
          @include output {
            @include outline-blue-800(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($blue-800, $alpha: 0.11);
          }
        }
      }

      @include it("outline-blue-900(0.11)") {
        @include assert {
          @include output {
            @include outline-blue-900(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($blue-900, $alpha: 0.11);
          }
        }
      }

      @include it("outline-blue-950(0.11)") {
        @include assert {
          @include output {
            @include outline-blue-950(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($blue-950, $alpha: 0.11);
          }
        }
      }

      @include it("outline-indigo-50(0.11)") {
        @include assert {
          @include output {
            @include outline-indigo-50(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($indigo-50, $alpha: 0.11);
          }
        }
      }

      @include it("outline-indigo-100(0.11)") {
        @include assert {
          @include output {
            @include outline-indigo-100(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($indigo-100, $alpha: 0.11);
          }
        }
      }

      @include it("outline-indigo-200(0.11)") {
        @include assert {
          @include output {
            @include outline-indigo-200(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($indigo-200, $alpha: 0.11);
          }
        }
      }

      @include it("outline-indigo-300(0.11)") {
        @include assert {
          @include output {
            @include outline-indigo-300(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($indigo-300, $alpha: 0.11);
          }
        }
      }

      @include it("outline-indigo-400(0.11)") {
        @include assert {
          @include output {
            @include outline-indigo-400(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($indigo-400, $alpha: 0.11);
          }
        }
      }

      @include it("outline-indigo-500(0.11)") {
        @include assert {
          @include output {
            @include outline-indigo-500(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($indigo-500, $alpha: 0.11);
          }
        }
      }

      @include it("outline-indigo-600(0.11)") {
        @include assert {
          @include output {
            @include outline-indigo-600(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($indigo-600, $alpha: 0.11);
          }
        }
      }

      @include it("outline-indigo-700(0.11)") {
        @include assert {
          @include output {
            @include outline-indigo-700(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($indigo-700, $alpha: 0.11);
          }
        }
      }

      @include it("outline-indigo-800(0.11)") {
        @include assert {
          @include output {
            @include outline-indigo-800(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($indigo-800, $alpha: 0.11);
          }
        }
      }

      @include it("outline-indigo-900(0.11)") {
        @include assert {
          @include output {
            @include outline-indigo-900(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($indigo-900, $alpha: 0.11);
          }
        }
      }

      @include it("outline-indigo-950(0.11)") {
        @include assert {
          @include output {
            @include outline-indigo-950(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($indigo-950, $alpha: 0.11);
          }
        }
      }

      @include it("outline-violet-50(0.11)") {
        @include assert {
          @include output {
            @include outline-violet-50(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($violet-50, $alpha: 0.11);
          }
        }
      }

      @include it("outline-violet-100(0.11)") {
        @include assert {
          @include output {
            @include outline-violet-100(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($violet-100, $alpha: 0.11);
          }
        }
      }

      @include it("outline-violet-200(0.11)") {
        @include assert {
          @include output {
            @include outline-violet-200(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($violet-200, $alpha: 0.11);
          }
        }
      }

      @include it("outline-violet-300(0.11)") {
        @include assert {
          @include output {
            @include outline-violet-300(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($violet-300, $alpha: 0.11);
          }
        }
      }

      @include it("outline-violet-400(0.11)") {
        @include assert {
          @include output {
            @include outline-violet-400(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($violet-400, $alpha: 0.11);
          }
        }
      }

      @include it("outline-violet-500(0.11)") {
        @include assert {
          @include output {
            @include outline-violet-500(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($violet-500, $alpha: 0.11);
          }
        }
      }

      @include it("outline-violet-600(0.11)") {
        @include assert {
          @include output {
            @include outline-violet-600(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($violet-600, $alpha: 0.11);
          }
        }
      }

      @include it("outline-violet-700(0.11)") {
        @include assert {
          @include output {
            @include outline-violet-700(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($violet-700, $alpha: 0.11);
          }
        }
      }

      @include it("outline-violet-800(0.11)") {
        @include assert {
          @include output {
            @include outline-violet-800(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($violet-800, $alpha: 0.11);
          }
        }
      }

      @include it("outline-violet-900(0.11)") {
        @include assert {
          @include output {
            @include outline-violet-900(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($violet-900, $alpha: 0.11);
          }
        }
      }

      @include it("outline-violet-950(0.11)") {
        @include assert {
          @include output {
            @include outline-violet-950(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($violet-950, $alpha: 0.11);
          }
        }
      }

      @include it("outline-purple-50(0.11)") {
        @include assert {
          @include output {
            @include outline-purple-50(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($purple-50, $alpha: 0.11);
          }
        }
      }

      @include it("outline-purple-100(0.11)") {
        @include assert {
          @include output {
            @include outline-purple-100(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($purple-100, $alpha: 0.11);
          }
        }
      }

      @include it("outline-purple-200(0.11)") {
        @include assert {
          @include output {
            @include outline-purple-200(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($purple-200, $alpha: 0.11);
          }
        }
      }

      @include it("outline-purple-300(0.11)") {
        @include assert {
          @include output {
            @include outline-purple-300(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($purple-300, $alpha: 0.11);
          }
        }
      }

      @include it("outline-purple-400(0.11)") {
        @include assert {
          @include output {
            @include outline-purple-400(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($purple-400, $alpha: 0.11);
          }
        }
      }

      @include it("outline-purple-500(0.11)") {
        @include assert {
          @include output {
            @include outline-purple-500(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($purple-500, $alpha: 0.11);
          }
        }
      }

      @include it("outline-purple-600(0.11)") {
        @include assert {
          @include output {
            @include outline-purple-600(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($purple-600, $alpha: 0.11);
          }
        }
      }

      @include it("outline-purple-700(0.11)") {
        @include assert {
          @include output {
            @include outline-purple-700(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($purple-700, $alpha: 0.11);
          }
        }
      }

      @include it("outline-purple-800(0.11)") {
        @include assert {
          @include output {
            @include outline-purple-800(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($purple-800, $alpha: 0.11);
          }
        }
      }

      @include it("outline-purple-900(0.11)") {
        @include assert {
          @include output {
            @include outline-purple-900(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($purple-900, $alpha: 0.11);
          }
        }
      }

      @include it("outline-purple-950(0.11)") {
        @include assert {
          @include output {
            @include outline-purple-950(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($purple-950, $alpha: 0.11);
          }
        }
      }

      @include it("outline-fuchsia-50(0.11)") {
        @include assert {
          @include output {
            @include outline-fuchsia-50(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($fuchsia-50, $alpha: 0.11);
          }
        }
      }

      @include it("outline-fuchsia-100(0.11)") {
        @include assert {
          @include output {
            @include outline-fuchsia-100(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($fuchsia-100, $alpha: 0.11);
          }
        }
      }

      @include it("outline-fuchsia-200(0.11)") {
        @include assert {
          @include output {
            @include outline-fuchsia-200(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($fuchsia-200, $alpha: 0.11);
          }
        }
      }

      @include it("outline-fuchsia-300(0.11)") {
        @include assert {
          @include output {
            @include outline-fuchsia-300(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($fuchsia-300, $alpha: 0.11);
          }
        }
      }

      @include it("outline-fuchsia-400(0.11)") {
        @include assert {
          @include output {
            @include outline-fuchsia-400(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($fuchsia-400, $alpha: 0.11);
          }
        }
      }

      @include it("outline-fuchsia-500(0.11)") {
        @include assert {
          @include output {
            @include outline-fuchsia-500(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($fuchsia-500, $alpha: 0.11);
          }
        }
      }

      @include it("outline-fuchsia-600(0.11)") {
        @include assert {
          @include output {
            @include outline-fuchsia-600(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($fuchsia-600, $alpha: 0.11);
          }
        }
      }

      @include it("outline-fuchsia-700(0.11)") {
        @include assert {
          @include output {
            @include outline-fuchsia-700(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($fuchsia-700, $alpha: 0.11);
          }
        }
      }

      @include it("outline-fuchsia-800(0.11)") {
        @include assert {
          @include output {
            @include outline-fuchsia-800(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($fuchsia-800, $alpha: 0.11);
          }
        }
      }

      @include it("outline-fuchsia-900(0.11)") {
        @include assert {
          @include output {
            @include outline-fuchsia-900(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($fuchsia-900, $alpha: 0.11);
          }
        }
      }

      @include it("outline-fuchsia-950(0.11)") {
        @include assert {
          @include output {
            @include outline-fuchsia-950(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($fuchsia-950, $alpha: 0.11);
          }
        }
      }

      @include it("outline-pink-50(0.11)") {
        @include assert {
          @include output {
            @include outline-pink-50(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($pink-50, $alpha: 0.11);
          }
        }
      }

      @include it("outline-pink-100(0.11)") {
        @include assert {
          @include output {
            @include outline-pink-100(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($pink-100, $alpha: 0.11);
          }
        }
      }

      @include it("outline-pink-200(0.11)") {
        @include assert {
          @include output {
            @include outline-pink-200(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($pink-200, $alpha: 0.11);
          }
        }
      }

      @include it("outline-pink-300(0.11)") {
        @include assert {
          @include output {
            @include outline-pink-300(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($pink-300, $alpha: 0.11);
          }
        }
      }

      @include it("outline-pink-400(0.11)") {
        @include assert {
          @include output {
            @include outline-pink-400(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($pink-400, $alpha: 0.11);
          }
        }
      }

      @include it("outline-pink-500(0.11)") {
        @include assert {
          @include output {
            @include outline-pink-500(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($pink-500, $alpha: 0.11);
          }
        }
      }

      @include it("outline-pink-600(0.11)") {
        @include assert {
          @include output {
            @include outline-pink-600(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($pink-600, $alpha: 0.11);
          }
        }
      }

      @include it("outline-pink-700(0.11)") {
        @include assert {
          @include output {
            @include outline-pink-700(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($pink-700, $alpha: 0.11);
          }
        }
      }

      @include it("outline-pink-800(0.11)") {
        @include assert {
          @include output {
            @include outline-pink-800(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($pink-800, $alpha: 0.11);
          }
        }
      }

      @include it("outline-pink-900(0.11)") {
        @include assert {
          @include output {
            @include outline-pink-900(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($pink-900, $alpha: 0.11);
          }
        }
      }

      @include it("outline-pink-950(0.11)") {
        @include assert {
          @include output {
            @include outline-pink-950(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($pink-950, $alpha: 0.11);
          }
        }
      }

      @include it("outline-rose-50(0.11)") {
        @include assert {
          @include output {
            @include outline-rose-50(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($rose-50, $alpha: 0.11);
          }
        }
      }

      @include it("outline-rose-100(0.11)") {
        @include assert {
          @include output {
            @include outline-rose-100(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($rose-100, $alpha: 0.11);
          }
        }
      }

      @include it("outline-rose-200(0.11)") {
        @include assert {
          @include output {
            @include outline-rose-200(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($rose-200, $alpha: 0.11);
          }
        }
      }

      @include it("outline-rose-300(0.11)") {
        @include assert {
          @include output {
            @include outline-rose-300(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($rose-300, $alpha: 0.11);
          }
        }
      }

      @include it("outline-rose-400(0.11)") {
        @include assert {
          @include output {
            @include outline-rose-400(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($rose-400, $alpha: 0.11);
          }
        }
      }

      @include it("outline-rose-500(0.11)") {
        @include assert {
          @include output {
            @include outline-rose-500(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($rose-500, $alpha: 0.11);
          }
        }
      }

      @include it("outline-rose-600(0.11)") {
        @include assert {
          @include output {
            @include outline-rose-600(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($rose-600, $alpha: 0.11);
          }
        }
      }

      @include it("outline-rose-700(0.11)") {
        @include assert {
          @include output {
            @include outline-rose-700(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($rose-700, $alpha: 0.11);
          }
        }
      }

      @include it("outline-rose-800(0.11)") {
        @include assert {
          @include output {
            @include outline-rose-800(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($rose-800, $alpha: 0.11);
          }
        }
      }

      @include it("outline-rose-900(0.11)") {
        @include assert {
          @include output {
            @include outline-rose-900(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($rose-900, $alpha: 0.11);
          }
        }
      }

      @include it("outline-rose-950(0.11)") {
        @include assert {
          @include output {
            @include outline-rose-950(0.11);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: color.change($rose-950, $alpha: 0.11);
          }
        }
      }
    }

    @include describe("Custom") {
      @include it("outline-(#50d71e)") {
        @include assert {
          @include output {
            @include outline-(#50d71e);
            @include utils_reset-tw;
          }

          @include expect {
            outline-color: #50d71e;
          }
        }
      }
    }
  }
}
