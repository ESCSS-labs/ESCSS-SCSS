@include describe('1.Layout') {
  @include describe('Top / Right / Bottom / Left') {
    @include describe('Basic') {
      @include it('inset-0') {
        @include assert {
          @include output {
            @include inset-0;
            @include utils_reset-tw;
          }

          @include expect {
            inset: 0px;
          }
        }
      }

      @include it('inset-x-0') {
        @include assert {
          @include output {
            @include inset-x-0;
            @include utils_reset-tw;
          }

          @include expect {
            left: 0px;
            right: 0px;
          }
        }
      }

      @include it('inset-y-0') {
        @include assert {
          @include output {
            @include inset-y-0;
            @include utils_reset-tw;
          }

          @include expect {
            top: 0px;
            bottom: 0px;
          }
        }
      }

      @include it('start-0') {
        @include assert {
          @include output {
            @include start-0;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: 0px;
          }
        }
      }

      @include it('end-0') {
        @include assert {
          @include output {
            @include end-0;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: 0px;
          }
        }
      }

      @include it('top-0') {
        @include assert {
          @include output {
            @include top-0;
            @include utils_reset-tw;
          }

          @include expect {
            top: 0px;
          }
        }
      }

      @include it('right-0') {
        @include assert {
          @include output {
            @include right-0;
            @include utils_reset-tw;
          }

          @include expect {
            right: 0px;
          }
        }
      }

      @include it('bottom-0') {
        @include assert {
          @include output {
            @include bottom-0;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: 0px;
          }
        }
      }

      @include it('left-0') {
        @include assert {
          @include output {
            @include left-0;
            @include utils_reset-tw;
          }

          @include expect {
            left: 0px;
          }
        }
      }

      @include it('inset-px') {
        @include assert {
          @include output {
            @include inset-px;
            @include utils_reset-tw;
          }

          @include expect {
            inset: 1px;
          }
        }
      }

      @include it('inset-x-px') {
        @include assert {
          @include output {
            @include inset-x-px;
            @include utils_reset-tw;
          }

          @include expect {
            left: 1px;
            right: 1px;
          }
        }
      }

      @include it('inset-y-px') {
        @include assert {
          @include output {
            @include inset-y-px;
            @include utils_reset-tw;
          }

          @include expect {
            top: 1px;
            bottom: 1px;
          }
        }
      }

      @include it('start-px') {
        @include assert {
          @include output {
            @include start-px;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: 1px;
          }
        }
      }

      @include it('end-px') {
        @include assert {
          @include output {
            @include end-px;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: 1px;
          }
        }
      }

      @include it('top-px') {
        @include assert {
          @include output {
            @include top-px;
            @include utils_reset-tw;
          }

          @include expect {
            top: 1px;
          }
        }
      }

      @include it('right-px') {
        @include assert {
          @include output {
            @include right-px;
            @include utils_reset-tw;
          }

          @include expect {
            right: 1px;
          }
        }
      }

      @include it('bottom-px') {
        @include assert {
          @include output {
            @include bottom-px;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: 1px;
          }
        }
      }

      @include it('left-px') {
        @include assert {
          @include output {
            @include left-px;
            @include utils_reset-tw;
          }

          @include expect {
            left: 1px;
          }
        }
      }

      @include it('inset-0\.5') {
        @include assert {
          @include output {
            @include inset-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            inset: 0.125rem;
          }
        }
      }

      @include it('inset-x-0\.5') {
        @include assert {
          @include output {
            @include inset-x-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            left: 0.125rem;
            right: 0.125rem;
          }
        }
      }

      @include it('inset-y-0\.5') {
        @include assert {
          @include output {
            @include inset-y-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            top: 0.125rem;
            bottom: 0.125rem;
          }
        }
      }

      @include it('start-0\.5') {
        @include assert {
          @include output {
            @include start-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: 0.125rem;
          }
        }
      }

      @include it('end-0\.5') {
        @include assert {
          @include output {
            @include end-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: 0.125rem;
          }
        }
      }

      @include it('top-0\.5') {
        @include assert {
          @include output {
            @include top-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            top: 0.125rem;
          }
        }
      }

      @include it('right-0\.5') {
        @include assert {
          @include output {
            @include right-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            right: 0.125rem;
          }
        }
      }

      @include it('bottom-0\.5') {
        @include assert {
          @include output {
            @include bottom-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: 0.125rem;
          }
        }
      }

      @include it('left-0\.5') {
        @include assert {
          @include output {
            @include left-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            left: 0.125rem;
          }
        }
      }

      @include it('inset-1') {
        @include assert {
          @include output {
            @include inset-1;
            @include utils_reset-tw;
          }

          @include expect {
            inset: 0.25rem;
          }
        }
      }

      @include it('inset-x-1') {
        @include assert {
          @include output {
            @include inset-x-1;
            @include utils_reset-tw;
          }

          @include expect {
            left: 0.25rem;
            right: 0.25rem;
          }
        }
      }

      @include it('inset-y-1') {
        @include assert {
          @include output {
            @include inset-y-1;
            @include utils_reset-tw;
          }

          @include expect {
            top: 0.25rem;
            bottom: 0.25rem;
          }
        }
      }

      @include it('start-1') {
        @include assert {
          @include output {
            @include start-1;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: 0.25rem;
          }
        }
      }

      @include it('end-1') {
        @include assert {
          @include output {
            @include end-1;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: 0.25rem;
          }
        }
      }

      @include it('top-1') {
        @include assert {
          @include output {
            @include top-1;
            @include utils_reset-tw;
          }

          @include expect {
            top: 0.25rem;
          }
        }
      }

      @include it('right-1') {
        @include assert {
          @include output {
            @include right-1;
            @include utils_reset-tw;
          }

          @include expect {
            right: 0.25rem;
          }
        }
      }

      @include it('bottom-1') {
        @include assert {
          @include output {
            @include bottom-1;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: 0.25rem;
          }
        }
      }

      @include it('left-1') {
        @include assert {
          @include output {
            @include left-1;
            @include utils_reset-tw;
          }

          @include expect {
            left: 0.25rem;
          }
        }
      }

      @include it('inset-1\.5') {
        @include assert {
          @include output {
            @include inset-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            inset: 0.375rem;
          }
        }
      }

      @include it('inset-x-1\.5') {
        @include assert {
          @include output {
            @include inset-x-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            left: 0.375rem;
            right: 0.375rem;
          }
        }
      }

      @include it('inset-y-1\.5') {
        @include assert {
          @include output {
            @include inset-y-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            top: 0.375rem;
            bottom: 0.375rem;
          }
        }
      }

      @include it('start-1\.5') {
        @include assert {
          @include output {
            @include start-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: 0.375rem;
          }
        }
      }

      @include it('end-1\.5') {
        @include assert {
          @include output {
            @include end-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: 0.375rem;
          }
        }
      }

      @include it('top-1\.5') {
        @include assert {
          @include output {
            @include top-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            top: 0.375rem;
          }
        }
      }

      @include it('right-1\.5') {
        @include assert {
          @include output {
            @include right-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            right: 0.375rem;
          }
        }
      }

      @include it('bottom-1\.5') {
        @include assert {
          @include output {
            @include bottom-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: 0.375rem;
          }
        }
      }

      @include it('left-1\.5') {
        @include assert {
          @include output {
            @include left-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            left: 0.375rem;
          }
        }
      }

      @include it('inset-2') {
        @include assert {
          @include output {
            @include inset-2;
            @include utils_reset-tw;
          }

          @include expect {
            inset: 0.5rem;
          }
        }
      }

      @include it('inset-x-2') {
        @include assert {
          @include output {
            @include inset-x-2;
            @include utils_reset-tw;
          }

          @include expect {
            left: 0.5rem;
            right: 0.5rem;
          }
        }
      }

      @include it('inset-y-2') {
        @include assert {
          @include output {
            @include inset-y-2;
            @include utils_reset-tw;
          }

          @include expect {
            top: 0.5rem;
            bottom: 0.5rem;
          }
        }
      }

      @include it('start-2') {
        @include assert {
          @include output {
            @include start-2;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: 0.5rem;
          }
        }
      }

      @include it('end-2') {
        @include assert {
          @include output {
            @include end-2;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: 0.5rem;
          }
        }
      }

      @include it('top-2') {
        @include assert {
          @include output {
            @include top-2;
            @include utils_reset-tw;
          }

          @include expect {
            top: 0.5rem;
          }
        }
      }

      @include it('right-2') {
        @include assert {
          @include output {
            @include right-2;
            @include utils_reset-tw;
          }

          @include expect {
            right: 0.5rem;
          }
        }
      }

      @include it('bottom-2') {
        @include assert {
          @include output {
            @include bottom-2;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: 0.5rem;
          }
        }
      }

      @include it('left-2') {
        @include assert {
          @include output {
            @include left-2;
            @include utils_reset-tw;
          }

          @include expect {
            left: 0.5rem;
          }
        }
      }

      @include it('inset-2\.5') {
        @include assert {
          @include output {
            @include inset-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            inset: 0.625rem;
          }
        }
      }

      @include it('inset-x-2\.5') {
        @include assert {
          @include output {
            @include inset-x-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            left: 0.625rem;
            right: 0.625rem;
          }
        }
      }

      @include it('inset-y-2\.5') {
        @include assert {
          @include output {
            @include inset-y-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            top: 0.625rem;
            bottom: 0.625rem;
          }
        }
      }

      @include it('start-2\.5') {
        @include assert {
          @include output {
            @include start-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: 0.625rem;
          }
        }
      }

      @include it('end-2\.5') {
        @include assert {
          @include output {
            @include end-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: 0.625rem;
          }
        }
      }

      @include it('top-2\.5') {
        @include assert {
          @include output {
            @include top-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            top: 0.625rem;
          }
        }
      }

      @include it('right-2\.5') {
        @include assert {
          @include output {
            @include right-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            right: 0.625rem;
          }
        }
      }

      @include it('bottom-2\.5') {
        @include assert {
          @include output {
            @include bottom-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: 0.625rem;
          }
        }
      }

      @include it('left-2\.5') {
        @include assert {
          @include output {
            @include left-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            left: 0.625rem;
          }
        }
      }

      @include it('inset-3') {
        @include assert {
          @include output {
            @include inset-3;
            @include utils_reset-tw;
          }

          @include expect {
            inset: 0.75rem;
          }
        }
      }

      @include it('inset-x-3') {
        @include assert {
          @include output {
            @include inset-x-3;
            @include utils_reset-tw;
          }

          @include expect {
            left: 0.75rem;
            right: 0.75rem;
          }
        }
      }

      @include it('inset-y-3') {
        @include assert {
          @include output {
            @include inset-y-3;
            @include utils_reset-tw;
          }

          @include expect {
            top: 0.75rem;
            bottom: 0.75rem;
          }
        }
      }

      @include it('start-3') {
        @include assert {
          @include output {
            @include start-3;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: 0.75rem;
          }
        }
      }

      @include it('end-3') {
        @include assert {
          @include output {
            @include end-3;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: 0.75rem;
          }
        }
      }

      @include it('top-3') {
        @include assert {
          @include output {
            @include top-3;
            @include utils_reset-tw;
          }

          @include expect {
            top: 0.75rem;
          }
        }
      }

      @include it('right-3') {
        @include assert {
          @include output {
            @include right-3;
            @include utils_reset-tw;
          }

          @include expect {
            right: 0.75rem;
          }
        }
      }

      @include it('bottom-3') {
        @include assert {
          @include output {
            @include bottom-3;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: 0.75rem;
          }
        }
      }

      @include it('left-3') {
        @include assert {
          @include output {
            @include left-3;
            @include utils_reset-tw;
          }

          @include expect {
            left: 0.75rem;
          }
        }
      }

      @include it('inset-3\.5') {
        @include assert {
          @include output {
            @include inset-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            inset: 0.875rem;
          }
        }
      }

      @include it('inset-x-3\.5') {
        @include assert {
          @include output {
            @include inset-x-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            left: 0.875rem;
            right: 0.875rem;
          }
        }
      }

      @include it('inset-y-3\.5') {
        @include assert {
          @include output {
            @include inset-y-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            top: 0.875rem;
            bottom: 0.875rem;
          }
        }
      }

      @include it('start-3\.5') {
        @include assert {
          @include output {
            @include start-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: 0.875rem;
          }
        }
      }

      @include it('end-3\.5') {
        @include assert {
          @include output {
            @include end-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: 0.875rem;
          }
        }
      }

      @include it('top-3\.5') {
        @include assert {
          @include output {
            @include top-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            top: 0.875rem;
          }
        }
      }

      @include it('right-3\.5') {
        @include assert {
          @include output {
            @include right-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            right: 0.875rem;
          }
        }
      }

      @include it('bottom-3\.5') {
        @include assert {
          @include output {
            @include bottom-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: 0.875rem;
          }
        }
      }

      @include it('left-3\.5') {
        @include assert {
          @include output {
            @include left-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            left: 0.875rem;
          }
        }
      }

      @include it('inset-4') {
        @include assert {
          @include output {
            @include inset-4;
            @include utils_reset-tw;
          }

          @include expect {
            inset: 1rem;
          }
        }
      }

      @include it('inset-x-4') {
        @include assert {
          @include output {
            @include inset-x-4;
            @include utils_reset-tw;
          }

          @include expect {
            left: 1rem;
            right: 1rem;
          }
        }
      }

      @include it('inset-y-4') {
        @include assert {
          @include output {
            @include inset-y-4;
            @include utils_reset-tw;
          }

          @include expect {
            top: 1rem;
            bottom: 1rem;
          }
        }
      }

      @include it('start-4') {
        @include assert {
          @include output {
            @include start-4;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: 1rem;
          }
        }
      }

      @include it('end-4') {
        @include assert {
          @include output {
            @include end-4;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: 1rem;
          }
        }
      }

      @include it('top-4') {
        @include assert {
          @include output {
            @include top-4;
            @include utils_reset-tw;
          }

          @include expect {
            top: 1rem;
          }
        }
      }

      @include it('right-4') {
        @include assert {
          @include output {
            @include right-4;
            @include utils_reset-tw;
          }

          @include expect {
            right: 1rem;
          }
        }
      }

      @include it('bottom-4') {
        @include assert {
          @include output {
            @include bottom-4;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: 1rem;
          }
        }
      }

      @include it('left-4') {
        @include assert {
          @include output {
            @include left-4;
            @include utils_reset-tw;
          }

          @include expect {
            left: 1rem;
          }
        }
      }

      @include it('inset-5') {
        @include assert {
          @include output {
            @include inset-5;
            @include utils_reset-tw;
          }

          @include expect {
            inset: 1.25rem;
          }
        }
      }

      @include it('inset-x-5') {
        @include assert {
          @include output {
            @include inset-x-5;
            @include utils_reset-tw;
          }

          @include expect {
            left: 1.25rem;
            right: 1.25rem;
          }
        }
      }

      @include it('inset-y-5') {
        @include assert {
          @include output {
            @include inset-y-5;
            @include utils_reset-tw;
          }

          @include expect {
            top: 1.25rem;
            bottom: 1.25rem;
          }
        }
      }

      @include it('start-5') {
        @include assert {
          @include output {
            @include start-5;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: 1.25rem;
          }
        }
      }

      @include it('end-5') {
        @include assert {
          @include output {
            @include end-5;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: 1.25rem;
          }
        }
      }

      @include it('top-5') {
        @include assert {
          @include output {
            @include top-5;
            @include utils_reset-tw;
          }

          @include expect {
            top: 1.25rem;
          }
        }
      }

      @include it('right-5') {
        @include assert {
          @include output {
            @include right-5;
            @include utils_reset-tw;
          }

          @include expect {
            right: 1.25rem;
          }
        }
      }

      @include it('bottom-5') {
        @include assert {
          @include output {
            @include bottom-5;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: 1.25rem;
          }
        }
      }

      @include it('left-5') {
        @include assert {
          @include output {
            @include left-5;
            @include utils_reset-tw;
          }

          @include expect {
            left: 1.25rem;
          }
        }
      }

      @include it('inset-6') {
        @include assert {
          @include output {
            @include inset-6;
            @include utils_reset-tw;
          }

          @include expect {
            inset: 1.5rem;
          }
        }
      }

      @include it('inset-x-6') {
        @include assert {
          @include output {
            @include inset-x-6;
            @include utils_reset-tw;
          }

          @include expect {
            left: 1.5rem;
            right: 1.5rem;
          }
        }
      }

      @include it('inset-y-6') {
        @include assert {
          @include output {
            @include inset-y-6;
            @include utils_reset-tw;
          }

          @include expect {
            top: 1.5rem;
            bottom: 1.5rem;
          }
        }
      }

      @include it('start-6') {
        @include assert {
          @include output {
            @include start-6;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: 1.5rem;
          }
        }
      }

      @include it('end-6') {
        @include assert {
          @include output {
            @include end-6;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: 1.5rem;
          }
        }
      }

      @include it('top-6') {
        @include assert {
          @include output {
            @include top-6;
            @include utils_reset-tw;
          }

          @include expect {
            top: 1.5rem;
          }
        }
      }

      @include it('right-6') {
        @include assert {
          @include output {
            @include right-6;
            @include utils_reset-tw;
          }

          @include expect {
            right: 1.5rem;
          }
        }
      }

      @include it('bottom-6') {
        @include assert {
          @include output {
            @include bottom-6;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: 1.5rem;
          }
        }
      }

      @include it('left-6') {
        @include assert {
          @include output {
            @include left-6;
            @include utils_reset-tw;
          }

          @include expect {
            left: 1.5rem;
          }
        }
      }

      @include it('inset-7') {
        @include assert {
          @include output {
            @include inset-7;
            @include utils_reset-tw;
          }

          @include expect {
            inset: 1.75rem;
          }
        }
      }

      @include it('inset-x-7') {
        @include assert {
          @include output {
            @include inset-x-7;
            @include utils_reset-tw;
          }

          @include expect {
            left: 1.75rem;
            right: 1.75rem;
          }
        }
      }

      @include it('inset-y-7') {
        @include assert {
          @include output {
            @include inset-y-7;
            @include utils_reset-tw;
          }

          @include expect {
            top: 1.75rem;
            bottom: 1.75rem;
          }
        }
      }

      @include it('start-7') {
        @include assert {
          @include output {
            @include start-7;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: 1.75rem;
          }
        }
      }

      @include it('end-7') {
        @include assert {
          @include output {
            @include end-7;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: 1.75rem;
          }
        }
      }

      @include it('top-7') {
        @include assert {
          @include output {
            @include top-7;
            @include utils_reset-tw;
          }

          @include expect {
            top: 1.75rem;
          }
        }
      }

      @include it('right-7') {
        @include assert {
          @include output {
            @include right-7;
            @include utils_reset-tw;
          }

          @include expect {
            right: 1.75rem;
          }
        }
      }

      @include it('bottom-7') {
        @include assert {
          @include output {
            @include bottom-7;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: 1.75rem;
          }
        }
      }

      @include it('left-7') {
        @include assert {
          @include output {
            @include left-7;
            @include utils_reset-tw;
          }

          @include expect {
            left: 1.75rem;
          }
        }
      }

      @include it('inset-8') {
        @include assert {
          @include output {
            @include inset-8;
            @include utils_reset-tw;
          }

          @include expect {
            inset: 2rem;
          }
        }
      }

      @include it('inset-x-8') {
        @include assert {
          @include output {
            @include inset-x-8;
            @include utils_reset-tw;
          }

          @include expect {
            left: 2rem;
            right: 2rem;
          }
        }
      }

      @include it('inset-y-8') {
        @include assert {
          @include output {
            @include inset-y-8;
            @include utils_reset-tw;
          }

          @include expect {
            top: 2rem;
            bottom: 2rem;
          }
        }
      }

      @include it('start-8') {
        @include assert {
          @include output {
            @include start-8;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: 2rem;
          }
        }
      }

      @include it('end-8') {
        @include assert {
          @include output {
            @include end-8;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: 2rem;
          }
        }
      }

      @include it('top-8') {
        @include assert {
          @include output {
            @include top-8;
            @include utils_reset-tw;
          }

          @include expect {
            top: 2rem;
          }
        }
      }

      @include it('right-8') {
        @include assert {
          @include output {
            @include right-8;
            @include utils_reset-tw;
          }

          @include expect {
            right: 2rem;
          }
        }
      }

      @include it('bottom-8') {
        @include assert {
          @include output {
            @include bottom-8;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: 2rem;
          }
        }
      }

      @include it('left-8') {
        @include assert {
          @include output {
            @include left-8;
            @include utils_reset-tw;
          }

          @include expect {
            left: 2rem;
          }
        }
      }

      @include it('inset-9') {
        @include assert {
          @include output {
            @include inset-9;
            @include utils_reset-tw;
          }

          @include expect {
            inset: 2.25rem;
          }
        }
      }

      @include it('inset-x-9') {
        @include assert {
          @include output {
            @include inset-x-9;
            @include utils_reset-tw;
          }

          @include expect {
            left: 2.25rem;
            right: 2.25rem;
          }
        }
      }

      @include it('inset-y-9') {
        @include assert {
          @include output {
            @include inset-y-9;
            @include utils_reset-tw;
          }

          @include expect {
            top: 2.25rem;
            bottom: 2.25rem;
          }
        }
      }

      @include it('start-9') {
        @include assert {
          @include output {
            @include start-9;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: 2.25rem;
          }
        }
      }

      @include it('end-9') {
        @include assert {
          @include output {
            @include end-9;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: 2.25rem;
          }
        }
      }

      @include it('top-9') {
        @include assert {
          @include output {
            @include top-9;
            @include utils_reset-tw;
          }

          @include expect {
            top: 2.25rem;
          }
        }
      }

      @include it('right-9') {
        @include assert {
          @include output {
            @include right-9;
            @include utils_reset-tw;
          }

          @include expect {
            right: 2.25rem;
          }
        }
      }

      @include it('bottom-9') {
        @include assert {
          @include output {
            @include bottom-9;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: 2.25rem;
          }
        }
      }

      @include it('left-9') {
        @include assert {
          @include output {
            @include left-9;
            @include utils_reset-tw;
          }

          @include expect {
            left: 2.25rem;
          }
        }
      }

      @include it('inset-10') {
        @include assert {
          @include output {
            @include inset-10;
            @include utils_reset-tw;
          }

          @include expect {
            inset: 2.5rem;
          }
        }
      }

      @include it('inset-x-10') {
        @include assert {
          @include output {
            @include inset-x-10;
            @include utils_reset-tw;
          }

          @include expect {
            left: 2.5rem;
            right: 2.5rem;
          }
        }
      }

      @include it('inset-y-10') {
        @include assert {
          @include output {
            @include inset-y-10;
            @include utils_reset-tw;
          }

          @include expect {
            top: 2.5rem;
            bottom: 2.5rem;
          }
        }
      }

      @include it('start-10') {
        @include assert {
          @include output {
            @include start-10;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: 2.5rem;
          }
        }
      }

      @include it('end-10') {
        @include assert {
          @include output {
            @include end-10;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: 2.5rem;
          }
        }
      }

      @include it('top-10') {
        @include assert {
          @include output {
            @include top-10;
            @include utils_reset-tw;
          }

          @include expect {
            top: 2.5rem;
          }
        }
      }

      @include it('right-10') {
        @include assert {
          @include output {
            @include right-10;
            @include utils_reset-tw;
          }

          @include expect {
            right: 2.5rem;
          }
        }
      }

      @include it('bottom-10') {
        @include assert {
          @include output {
            @include bottom-10;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: 2.5rem;
          }
        }
      }

      @include it('left-10') {
        @include assert {
          @include output {
            @include left-10;
            @include utils_reset-tw;
          }

          @include expect {
            left: 2.5rem;
          }
        }
      }

      @include it('inset-11') {
        @include assert {
          @include output {
            @include inset-11;
            @include utils_reset-tw;
          }

          @include expect {
            inset: 2.75rem;
          }
        }
      }

      @include it('inset-x-11') {
        @include assert {
          @include output {
            @include inset-x-11;
            @include utils_reset-tw;
          }

          @include expect {
            left: 2.75rem;
            right: 2.75rem;
          }
        }
      }

      @include it('inset-y-11') {
        @include assert {
          @include output {
            @include inset-y-11;
            @include utils_reset-tw;
          }

          @include expect {
            top: 2.75rem;
            bottom: 2.75rem;
          }
        }
      }

      @include it('start-11') {
        @include assert {
          @include output {
            @include start-11;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: 2.75rem;
          }
        }
      }

      @include it('end-11') {
        @include assert {
          @include output {
            @include end-11;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: 2.75rem;
          }
        }
      }

      @include it('top-11') {
        @include assert {
          @include output {
            @include top-11;
            @include utils_reset-tw;
          }

          @include expect {
            top: 2.75rem;
          }
        }
      }

      @include it('right-11') {
        @include assert {
          @include output {
            @include right-11;
            @include utils_reset-tw;
          }

          @include expect {
            right: 2.75rem;
          }
        }
      }

      @include it('bottom-11') {
        @include assert {
          @include output {
            @include bottom-11;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: 2.75rem;
          }
        }
      }

      @include it('left-11') {
        @include assert {
          @include output {
            @include left-11;
            @include utils_reset-tw;
          }

          @include expect {
            left: 2.75rem;
          }
        }
      }

      @include it('inset-12') {
        @include assert {
          @include output {
            @include inset-12;
            @include utils_reset-tw;
          }

          @include expect {
            inset: 3rem;
          }
        }
      }

      @include it('inset-x-12') {
        @include assert {
          @include output {
            @include inset-x-12;
            @include utils_reset-tw;
          }

          @include expect {
            left: 3rem;
            right: 3rem;
          }
        }
      }

      @include it('inset-y-12') {
        @include assert {
          @include output {
            @include inset-y-12;
            @include utils_reset-tw;
          }

          @include expect {
            top: 3rem;
            bottom: 3rem;
          }
        }
      }

      @include it('start-12') {
        @include assert {
          @include output {
            @include start-12;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: 3rem;
          }
        }
      }

      @include it('end-12') {
        @include assert {
          @include output {
            @include end-12;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: 3rem;
          }
        }
      }

      @include it('top-12') {
        @include assert {
          @include output {
            @include top-12;
            @include utils_reset-tw;
          }

          @include expect {
            top: 3rem;
          }
        }
      }

      @include it('right-12') {
        @include assert {
          @include output {
            @include right-12;
            @include utils_reset-tw;
          }

          @include expect {
            right: 3rem;
          }
        }
      }

      @include it('bottom-12') {
        @include assert {
          @include output {
            @include bottom-12;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: 3rem;
          }
        }
      }

      @include it('left-12') {
        @include assert {
          @include output {
            @include left-12;
            @include utils_reset-tw;
          }

          @include expect {
            left: 3rem;
          }
        }
      }

      @include it('inset-14') {
        @include assert {
          @include output {
            @include inset-14;
            @include utils_reset-tw;
          }

          @include expect {
            inset: 3.5rem;
          }
        }
      }

      @include it('inset-x-14') {
        @include assert {
          @include output {
            @include inset-x-14;
            @include utils_reset-tw;
          }

          @include expect {
            left: 3.5rem;
            right: 3.5rem;
          }
        }
      }

      @include it('inset-y-14') {
        @include assert {
          @include output {
            @include inset-y-14;
            @include utils_reset-tw;
          }

          @include expect {
            top: 3.5rem;
            bottom: 3.5rem;
          }
        }
      }

      @include it('start-14') {
        @include assert {
          @include output {
            @include start-14;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: 3.5rem;
          }
        }
      }

      @include it('end-14') {
        @include assert {
          @include output {
            @include end-14;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: 3.5rem;
          }
        }
      }

      @include it('top-14') {
        @include assert {
          @include output {
            @include top-14;
            @include utils_reset-tw;
          }

          @include expect {
            top: 3.5rem;
          }
        }
      }

      @include it('right-14') {
        @include assert {
          @include output {
            @include right-14;
            @include utils_reset-tw;
          }

          @include expect {
            right: 3.5rem;
          }
        }
      }

      @include it('bottom-14') {
        @include assert {
          @include output {
            @include bottom-14;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: 3.5rem;
          }
        }
      }

      @include it('left-14') {
        @include assert {
          @include output {
            @include left-14;
            @include utils_reset-tw;
          }

          @include expect {
            left: 3.5rem;
          }
        }
      }

      @include it('inset-16') {
        @include assert {
          @include output {
            @include inset-16;
            @include utils_reset-tw;
          }

          @include expect {
            inset: 4rem;
          }
        }
      }

      @include it('inset-x-16') {
        @include assert {
          @include output {
            @include inset-x-16;
            @include utils_reset-tw;
          }

          @include expect {
            left: 4rem;
            right: 4rem;
          }
        }
      }

      @include it('inset-y-16') {
        @include assert {
          @include output {
            @include inset-y-16;
            @include utils_reset-tw;
          }

          @include expect {
            top: 4rem;
            bottom: 4rem;
          }
        }
      }

      @include it('start-16') {
        @include assert {
          @include output {
            @include start-16;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: 4rem;
          }
        }
      }

      @include it('end-16') {
        @include assert {
          @include output {
            @include end-16;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: 4rem;
          }
        }
      }

      @include it('top-16') {
        @include assert {
          @include output {
            @include top-16;
            @include utils_reset-tw;
          }

          @include expect {
            top: 4rem;
          }
        }
      }

      @include it('right-16') {
        @include assert {
          @include output {
            @include right-16;
            @include utils_reset-tw;
          }

          @include expect {
            right: 4rem;
          }
        }
      }

      @include it('bottom-16') {
        @include assert {
          @include output {
            @include bottom-16;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: 4rem;
          }
        }
      }

      @include it('left-16') {
        @include assert {
          @include output {
            @include left-16;
            @include utils_reset-tw;
          }

          @include expect {
            left: 4rem;
          }
        }
      }

      @include it('inset-20') {
        @include assert {
          @include output {
            @include inset-20;
            @include utils_reset-tw;
          }

          @include expect {
            inset: 5rem;
          }
        }
      }

      @include it('inset-x-20') {
        @include assert {
          @include output {
            @include inset-x-20;
            @include utils_reset-tw;
          }

          @include expect {
            left: 5rem;
            right: 5rem;
          }
        }
      }

      @include it('inset-y-20') {
        @include assert {
          @include output {
            @include inset-y-20;
            @include utils_reset-tw;
          }

          @include expect {
            top: 5rem;
            bottom: 5rem;
          }
        }
      }

      @include it('start-20') {
        @include assert {
          @include output {
            @include start-20;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: 5rem;
          }
        }
      }

      @include it('end-20') {
        @include assert {
          @include output {
            @include end-20;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: 5rem;
          }
        }
      }

      @include it('top-20') {
        @include assert {
          @include output {
            @include top-20;
            @include utils_reset-tw;
          }

          @include expect {
            top: 5rem;
          }
        }
      }

      @include it('right-20') {
        @include assert {
          @include output {
            @include right-20;
            @include utils_reset-tw;
          }

          @include expect {
            right: 5rem;
          }
        }
      }

      @include it('bottom-20') {
        @include assert {
          @include output {
            @include bottom-20;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: 5rem;
          }
        }
      }

      @include it('left-20') {
        @include assert {
          @include output {
            @include left-20;
            @include utils_reset-tw;
          }

          @include expect {
            left: 5rem;
          }
        }
      }

      @include it('inset-24') {
        @include assert {
          @include output {
            @include inset-24;
            @include utils_reset-tw;
          }

          @include expect {
            inset: 6rem;
          }
        }
      }

      @include it('inset-x-24') {
        @include assert {
          @include output {
            @include inset-x-24;
            @include utils_reset-tw;
          }

          @include expect {
            left: 6rem;
            right: 6rem;
          }
        }
      }

      @include it('inset-y-24') {
        @include assert {
          @include output {
            @include inset-y-24;
            @include utils_reset-tw;
          }

          @include expect {
            top: 6rem;
            bottom: 6rem;
          }
        }
      }

      @include it('start-24') {
        @include assert {
          @include output {
            @include start-24;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: 6rem;
          }
        }
      }

      @include it('end-24') {
        @include assert {
          @include output {
            @include end-24;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: 6rem;
          }
        }
      }

      @include it('top-24') {
        @include assert {
          @include output {
            @include top-24;
            @include utils_reset-tw;
          }

          @include expect {
            top: 6rem;
          }
        }
      }

      @include it('right-24') {
        @include assert {
          @include output {
            @include right-24;
            @include utils_reset-tw;
          }

          @include expect {
            right: 6rem;
          }
        }
      }

      @include it('bottom-24') {
        @include assert {
          @include output {
            @include bottom-24;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: 6rem;
          }
        }
      }

      @include it('left-24') {
        @include assert {
          @include output {
            @include left-24;
            @include utils_reset-tw;
          }

          @include expect {
            left: 6rem;
          }
        }
      }

      @include it('inset-28') {
        @include assert {
          @include output {
            @include inset-28;
            @include utils_reset-tw;
          }

          @include expect {
            inset: 7rem;
          }
        }
      }

      @include it('inset-x-28') {
        @include assert {
          @include output {
            @include inset-x-28;
            @include utils_reset-tw;
          }

          @include expect {
            left: 7rem;
            right: 7rem;
          }
        }
      }

      @include it('inset-y-28') {
        @include assert {
          @include output {
            @include inset-y-28;
            @include utils_reset-tw;
          }

          @include expect {
            top: 7rem;
            bottom: 7rem;
          }
        }
      }

      @include it('start-28') {
        @include assert {
          @include output {
            @include start-28;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: 7rem;
          }
        }
      }

      @include it('end-28') {
        @include assert {
          @include output {
            @include end-28;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: 7rem;
          }
        }
      }

      @include it('top-28') {
        @include assert {
          @include output {
            @include top-28;
            @include utils_reset-tw;
          }

          @include expect {
            top: 7rem;
          }
        }
      }

      @include it('right-28') {
        @include assert {
          @include output {
            @include right-28;
            @include utils_reset-tw;
          }

          @include expect {
            right: 7rem;
          }
        }
      }

      @include it('bottom-28') {
        @include assert {
          @include output {
            @include bottom-28;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: 7rem;
          }
        }
      }

      @include it('left-28') {
        @include assert {
          @include output {
            @include left-28;
            @include utils_reset-tw;
          }

          @include expect {
            left: 7rem;
          }
        }
      }

      @include it('inset-32') {
        @include assert {
          @include output {
            @include inset-32;
            @include utils_reset-tw;
          }

          @include expect {
            inset: 8rem;
          }
        }
      }

      @include it('inset-x-32') {
        @include assert {
          @include output {
            @include inset-x-32;
            @include utils_reset-tw;
          }

          @include expect {
            left: 8rem;
            right: 8rem;
          }
        }
      }

      @include it('inset-y-32') {
        @include assert {
          @include output {
            @include inset-y-32;
            @include utils_reset-tw;
          }

          @include expect {
            top: 8rem;
            bottom: 8rem;
          }
        }
      }

      @include it('start-32') {
        @include assert {
          @include output {
            @include start-32;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: 8rem;
          }
        }
      }

      @include it('end-32') {
        @include assert {
          @include output {
            @include end-32;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: 8rem;
          }
        }
      }

      @include it('top-32') {
        @include assert {
          @include output {
            @include top-32;
            @include utils_reset-tw;
          }

          @include expect {
            top: 8rem;
          }
        }
      }

      @include it('right-32') {
        @include assert {
          @include output {
            @include right-32;
            @include utils_reset-tw;
          }

          @include expect {
            right: 8rem;
          }
        }
      }

      @include it('bottom-32') {
        @include assert {
          @include output {
            @include bottom-32;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: 8rem;
          }
        }
      }

      @include it('left-32') {
        @include assert {
          @include output {
            @include left-32;
            @include utils_reset-tw;
          }

          @include expect {
            left: 8rem;
          }
        }
      }

      @include it('inset-36') {
        @include assert {
          @include output {
            @include inset-36;
            @include utils_reset-tw;
          }

          @include expect {
            inset: 9rem;
          }
        }
      }

      @include it('inset-x-36') {
        @include assert {
          @include output {
            @include inset-x-36;
            @include utils_reset-tw;
          }

          @include expect {
            left: 9rem;
            right: 9rem;
          }
        }
      }

      @include it('inset-y-36') {
        @include assert {
          @include output {
            @include inset-y-36;
            @include utils_reset-tw;
          }

          @include expect {
            top: 9rem;
            bottom: 9rem;
          }
        }
      }

      @include it('start-36') {
        @include assert {
          @include output {
            @include start-36;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: 9rem;
          }
        }
      }

      @include it('end-36') {
        @include assert {
          @include output {
            @include end-36;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: 9rem;
          }
        }
      }

      @include it('top-36') {
        @include assert {
          @include output {
            @include top-36;
            @include utils_reset-tw;
          }

          @include expect {
            top: 9rem;
          }
        }
      }

      @include it('right-36') {
        @include assert {
          @include output {
            @include right-36;
            @include utils_reset-tw;
          }

          @include expect {
            right: 9rem;
          }
        }
      }

      @include it('bottom-36') {
        @include assert {
          @include output {
            @include bottom-36;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: 9rem;
          }
        }
      }

      @include it('left-36') {
        @include assert {
          @include output {
            @include left-36;
            @include utils_reset-tw;
          }

          @include expect {
            left: 9rem;
          }
        }
      }

      @include it('inset-40') {
        @include assert {
          @include output {
            @include inset-40;
            @include utils_reset-tw;
          }

          @include expect {
            inset: 10rem;
          }
        }
      }

      @include it('inset-x-40') {
        @include assert {
          @include output {
            @include inset-x-40;
            @include utils_reset-tw;
          }

          @include expect {
            left: 10rem;
            right: 10rem;
          }
        }
      }

      @include it('inset-y-40') {
        @include assert {
          @include output {
            @include inset-y-40;
            @include utils_reset-tw;
          }

          @include expect {
            top: 10rem;
            bottom: 10rem;
          }
        }
      }

      @include it('start-40') {
        @include assert {
          @include output {
            @include start-40;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: 10rem;
          }
        }
      }

      @include it('end-40') {
        @include assert {
          @include output {
            @include end-40;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: 10rem;
          }
        }
      }

      @include it('top-40') {
        @include assert {
          @include output {
            @include top-40;
            @include utils_reset-tw;
          }

          @include expect {
            top: 10rem;
          }
        }
      }

      @include it('right-40') {
        @include assert {
          @include output {
            @include right-40;
            @include utils_reset-tw;
          }

          @include expect {
            right: 10rem;
          }
        }
      }

      @include it('bottom-40') {
        @include assert {
          @include output {
            @include bottom-40;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: 10rem;
          }
        }
      }

      @include it('left-40') {
        @include assert {
          @include output {
            @include left-40;
            @include utils_reset-tw;
          }

          @include expect {
            left: 10rem;
          }
        }
      }

      @include it('inset-44') {
        @include assert {
          @include output {
            @include inset-44;
            @include utils_reset-tw;
          }

          @include expect {
            inset: 11rem;
          }
        }
      }

      @include it('inset-x-44') {
        @include assert {
          @include output {
            @include inset-x-44;
            @include utils_reset-tw;
          }

          @include expect {
            left: 11rem;
            right: 11rem;
          }
        }
      }

      @include it('inset-y-44') {
        @include assert {
          @include output {
            @include inset-y-44;
            @include utils_reset-tw;
          }

          @include expect {
            top: 11rem;
            bottom: 11rem;
          }
        }
      }

      @include it('start-44') {
        @include assert {
          @include output {
            @include start-44;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: 11rem;
          }
        }
      }

      @include it('end-44') {
        @include assert {
          @include output {
            @include end-44;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: 11rem;
          }
        }
      }

      @include it('top-44') {
        @include assert {
          @include output {
            @include top-44;
            @include utils_reset-tw;
          }

          @include expect {
            top: 11rem;
          }
        }
      }

      @include it('right-44') {
        @include assert {
          @include output {
            @include right-44;
            @include utils_reset-tw;
          }

          @include expect {
            right: 11rem;
          }
        }
      }

      @include it('bottom-44') {
        @include assert {
          @include output {
            @include bottom-44;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: 11rem;
          }
        }
      }

      @include it('left-44') {
        @include assert {
          @include output {
            @include left-44;
            @include utils_reset-tw;
          }

          @include expect {
            left: 11rem;
          }
        }
      }

      @include it('inset-48') {
        @include assert {
          @include output {
            @include inset-48;
            @include utils_reset-tw;
          }

          @include expect {
            inset: 12rem;
          }
        }
      }

      @include it('inset-x-48') {
        @include assert {
          @include output {
            @include inset-x-48;
            @include utils_reset-tw;
          }

          @include expect {
            left: 12rem;
            right: 12rem;
          }
        }
      }

      @include it('inset-y-48') {
        @include assert {
          @include output {
            @include inset-y-48;
            @include utils_reset-tw;
          }

          @include expect {
            top: 12rem;
            bottom: 12rem;
          }
        }
      }

      @include it('start-48') {
        @include assert {
          @include output {
            @include start-48;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: 12rem;
          }
        }
      }

      @include it('end-48') {
        @include assert {
          @include output {
            @include end-48;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: 12rem;
          }
        }
      }

      @include it('top-48') {
        @include assert {
          @include output {
            @include top-48;
            @include utils_reset-tw;
          }

          @include expect {
            top: 12rem;
          }
        }
      }

      @include it('right-48') {
        @include assert {
          @include output {
            @include right-48;
            @include utils_reset-tw;
          }

          @include expect {
            right: 12rem;
          }
        }
      }

      @include it('bottom-48') {
        @include assert {
          @include output {
            @include bottom-48;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: 12rem;
          }
        }
      }

      @include it('left-48') {
        @include assert {
          @include output {
            @include left-48;
            @include utils_reset-tw;
          }

          @include expect {
            left: 12rem;
          }
        }
      }

      @include it('inset-52') {
        @include assert {
          @include output {
            @include inset-52;
            @include utils_reset-tw;
          }

          @include expect {
            inset: 13rem;
          }
        }
      }

      @include it('inset-x-52') {
        @include assert {
          @include output {
            @include inset-x-52;
            @include utils_reset-tw;
          }

          @include expect {
            left: 13rem;
            right: 13rem;
          }
        }
      }

      @include it('inset-y-52') {
        @include assert {
          @include output {
            @include inset-y-52;
            @include utils_reset-tw;
          }

          @include expect {
            top: 13rem;
            bottom: 13rem;
          }
        }
      }

      @include it('start-52') {
        @include assert {
          @include output {
            @include start-52;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: 13rem;
          }
        }
      }

      @include it('end-52') {
        @include assert {
          @include output {
            @include end-52;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: 13rem;
          }
        }
      }

      @include it('top-52') {
        @include assert {
          @include output {
            @include top-52;
            @include utils_reset-tw;
          }

          @include expect {
            top: 13rem;
          }
        }
      }

      @include it('right-52') {
        @include assert {
          @include output {
            @include right-52;
            @include utils_reset-tw;
          }

          @include expect {
            right: 13rem;
          }
        }
      }

      @include it('bottom-52') {
        @include assert {
          @include output {
            @include bottom-52;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: 13rem;
          }
        }
      }

      @include it('left-52') {
        @include assert {
          @include output {
            @include left-52;
            @include utils_reset-tw;
          }

          @include expect {
            left: 13rem;
          }
        }
      }

      @include it('inset-56') {
        @include assert {
          @include output {
            @include inset-56;
            @include utils_reset-tw;
          }

          @include expect {
            inset: 14rem;
          }
        }
      }

      @include it('inset-x-56') {
        @include assert {
          @include output {
            @include inset-x-56;
            @include utils_reset-tw;
          }

          @include expect {
            left: 14rem;
            right: 14rem;
          }
        }
      }

      @include it('inset-y-56') {
        @include assert {
          @include output {
            @include inset-y-56;
            @include utils_reset-tw;
          }

          @include expect {
            top: 14rem;
            bottom: 14rem;
          }
        }
      }

      @include it('start-56') {
        @include assert {
          @include output {
            @include start-56;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: 14rem;
          }
        }
      }

      @include it('end-56') {
        @include assert {
          @include output {
            @include end-56;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: 14rem;
          }
        }
      }

      @include it('top-56') {
        @include assert {
          @include output {
            @include top-56;
            @include utils_reset-tw;
          }

          @include expect {
            top: 14rem;
          }
        }
      }

      @include it('right-56') {
        @include assert {
          @include output {
            @include right-56;
            @include utils_reset-tw;
          }

          @include expect {
            right: 14rem;
          }
        }
      }

      @include it('bottom-56') {
        @include assert {
          @include output {
            @include bottom-56;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: 14rem;
          }
        }
      }

      @include it('left-56') {
        @include assert {
          @include output {
            @include left-56;
            @include utils_reset-tw;
          }

          @include expect {
            left: 14rem;
          }
        }
      }

      @include it('inset-60') {
        @include assert {
          @include output {
            @include inset-60;
            @include utils_reset-tw;
          }

          @include expect {
            inset: 15rem;
          }
        }
      }

      @include it('inset-x-60') {
        @include assert {
          @include output {
            @include inset-x-60;
            @include utils_reset-tw;
          }

          @include expect {
            left: 15rem;
            right: 15rem;
          }
        }
      }

      @include it('inset-y-60') {
        @include assert {
          @include output {
            @include inset-y-60;
            @include utils_reset-tw;
          }

          @include expect {
            top: 15rem;
            bottom: 15rem;
          }
        }
      }

      @include it('start-60') {
        @include assert {
          @include output {
            @include start-60;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: 15rem;
          }
        }
      }

      @include it('end-60') {
        @include assert {
          @include output {
            @include end-60;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: 15rem;
          }
        }
      }

      @include it('top-60') {
        @include assert {
          @include output {
            @include top-60;
            @include utils_reset-tw;
          }

          @include expect {
            top: 15rem;
          }
        }
      }

      @include it('right-60') {
        @include assert {
          @include output {
            @include right-60;
            @include utils_reset-tw;
          }

          @include expect {
            right: 15rem;
          }
        }
      }

      @include it('bottom-60') {
        @include assert {
          @include output {
            @include bottom-60;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: 15rem;
          }
        }
      }

      @include it('left-60') {
        @include assert {
          @include output {
            @include left-60;
            @include utils_reset-tw;
          }

          @include expect {
            left: 15rem;
          }
        }
      }

      @include it('inset-64') {
        @include assert {
          @include output {
            @include inset-64;
            @include utils_reset-tw;
          }

          @include expect {
            inset: 16rem;
          }
        }
      }

      @include it('inset-x-64') {
        @include assert {
          @include output {
            @include inset-x-64;
            @include utils_reset-tw;
          }

          @include expect {
            left: 16rem;
            right: 16rem;
          }
        }
      }

      @include it('inset-y-64') {
        @include assert {
          @include output {
            @include inset-y-64;
            @include utils_reset-tw;
          }

          @include expect {
            top: 16rem;
            bottom: 16rem;
          }
        }
      }

      @include it('start-64') {
        @include assert {
          @include output {
            @include start-64;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: 16rem;
          }
        }
      }

      @include it('end-64') {
        @include assert {
          @include output {
            @include end-64;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: 16rem;
          }
        }
      }

      @include it('top-64') {
        @include assert {
          @include output {
            @include top-64;
            @include utils_reset-tw;
          }

          @include expect {
            top: 16rem;
          }
        }
      }

      @include it('right-64') {
        @include assert {
          @include output {
            @include right-64;
            @include utils_reset-tw;
          }

          @include expect {
            right: 16rem;
          }
        }
      }

      @include it('bottom-64') {
        @include assert {
          @include output {
            @include bottom-64;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: 16rem;
          }
        }
      }

      @include it('left-64') {
        @include assert {
          @include output {
            @include left-64;
            @include utils_reset-tw;
          }

          @include expect {
            left: 16rem;
          }
        }
      }

      @include it('inset-72') {
        @include assert {
          @include output {
            @include inset-72;
            @include utils_reset-tw;
          }

          @include expect {
            inset: 18rem;
          }
        }
      }

      @include it('inset-x-72') {
        @include assert {
          @include output {
            @include inset-x-72;
            @include utils_reset-tw;
          }

          @include expect {
            left: 18rem;
            right: 18rem;
          }
        }
      }

      @include it('inset-y-72') {
        @include assert {
          @include output {
            @include inset-y-72;
            @include utils_reset-tw;
          }

          @include expect {
            top: 18rem;
            bottom: 18rem;
          }
        }
      }

      @include it('start-72') {
        @include assert {
          @include output {
            @include start-72;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: 18rem;
          }
        }
      }

      @include it('end-72') {
        @include assert {
          @include output {
            @include end-72;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: 18rem;
          }
        }
      }

      @include it('top-72') {
        @include assert {
          @include output {
            @include top-72;
            @include utils_reset-tw;
          }

          @include expect {
            top: 18rem;
          }
        }
      }

      @include it('right-72') {
        @include assert {
          @include output {
            @include right-72;
            @include utils_reset-tw;
          }

          @include expect {
            right: 18rem;
          }
        }
      }

      @include it('bottom-72') {
        @include assert {
          @include output {
            @include bottom-72;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: 18rem;
          }
        }
      }

      @include it('left-72') {
        @include assert {
          @include output {
            @include left-72;
            @include utils_reset-tw;
          }

          @include expect {
            left: 18rem;
          }
        }
      }

      @include it('inset-80') {
        @include assert {
          @include output {
            @include inset-80;
            @include utils_reset-tw;
          }

          @include expect {
            inset: 20rem;
          }
        }
      }

      @include it('inset-x-80') {
        @include assert {
          @include output {
            @include inset-x-80;
            @include utils_reset-tw;
          }

          @include expect {
            left: 20rem;
            right: 20rem;
          }
        }
      }

      @include it('inset-y-80') {
        @include assert {
          @include output {
            @include inset-y-80;
            @include utils_reset-tw;
          }

          @include expect {
            top: 20rem;
            bottom: 20rem;
          }
        }
      }

      @include it('start-80') {
        @include assert {
          @include output {
            @include start-80;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: 20rem;
          }
        }
      }

      @include it('end-80') {
        @include assert {
          @include output {
            @include end-80;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: 20rem;
          }
        }
      }

      @include it('top-80') {
        @include assert {
          @include output {
            @include top-80;
            @include utils_reset-tw;
          }

          @include expect {
            top: 20rem;
          }
        }
      }

      @include it('right-80') {
        @include assert {
          @include output {
            @include right-80;
            @include utils_reset-tw;
          }

          @include expect {
            right: 20rem;
          }
        }
      }

      @include it('bottom-80') {
        @include assert {
          @include output {
            @include bottom-80;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: 20rem;
          }
        }
      }

      @include it('left-80') {
        @include assert {
          @include output {
            @include left-80;
            @include utils_reset-tw;
          }

          @include expect {
            left: 20rem;
          }
        }
      }

      @include it('inset-96') {
        @include assert {
          @include output {
            @include inset-96;
            @include utils_reset-tw;
          }

          @include expect {
            inset: 24rem;
          }
        }
      }

      @include it('inset-x-96') {
        @include assert {
          @include output {
            @include inset-x-96;
            @include utils_reset-tw;
          }

          @include expect {
            left: 24rem;
            right: 24rem;
          }
        }
      }

      @include it('inset-y-96') {
        @include assert {
          @include output {
            @include inset-y-96;
            @include utils_reset-tw;
          }

          @include expect {
            top: 24rem;
            bottom: 24rem;
          }
        }
      }

      @include it('start-96') {
        @include assert {
          @include output {
            @include start-96;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: 24rem;
          }
        }
      }

      @include it('end-96') {
        @include assert {
          @include output {
            @include end-96;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: 24rem;
          }
        }
      }

      @include it('top-96') {
        @include assert {
          @include output {
            @include top-96;
            @include utils_reset-tw;
          }

          @include expect {
            top: 24rem;
          }
        }
      }

      @include it('right-96') {
        @include assert {
          @include output {
            @include right-96;
            @include utils_reset-tw;
          }

          @include expect {
            right: 24rem;
          }
        }
      }

      @include it('bottom-96') {
        @include assert {
          @include output {
            @include bottom-96;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: 24rem;
          }
        }
      }

      @include it('left-96') {
        @include assert {
          @include output {
            @include left-96;
            @include utils_reset-tw;
          }

          @include expect {
            left: 24rem;
          }
        }
      }

      @include it('inset-auto') {
        @include assert {
          @include output {
            @include inset-auto;
            @include utils_reset-tw;
          }

          @include expect {
            inset: auto;
          }
        }
      }

      @include it('inset-1\/2') {
        @include assert {
          @include output {
            @include inset-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            inset: 50%;
          }
        }
      }

      @include it('inset-1\/3') {
        @include assert {
          @include output {
            @include inset-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            inset: 33.333333%;
          }
        }
      }

      @include it('inset-2\/3') {
        @include assert {
          @include output {
            @include inset-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            inset: 66.666667%;
          }
        }
      }

      @include it('inset-1\/4') {
        @include assert {
          @include output {
            @include inset-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            inset: 25%;
          }
        }
      }

      @include it('inset-2\/4') {
        @include assert {
          @include output {
            @include inset-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            inset: 50%;
          }
        }
      }

      @include it('inset-3\/4') {
        @include assert {
          @include output {
            @include inset-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            inset: 75%;
          }
        }
      }

      @include it('inset-full') {
        @include assert {
          @include output {
            @include inset-full;
            @include utils_reset-tw;
          }

          @include expect {
            inset: 100%;
          }
        }
      }

      @include it('inset-x-auto') {
        @include assert {
          @include output {
            @include inset-x-auto;
            @include utils_reset-tw;
          }

          @include expect {
            left: auto;
            right: auto;
          }
        }
      }

      @include it('inset-x-1\/2') {
        @include assert {
          @include output {
            @include inset-x-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            left: 50%;
            right: 50%;
          }
        }
      }

      @include it('inset-x-1\/3') {
        @include assert {
          @include output {
            @include inset-x-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            left: 33.333333%;
            right: 33.333333%;
          }
        }
      }

      @include it('inset-x-2\/3') {
        @include assert {
          @include output {
            @include inset-x-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            left: 66.666667%;
            right: 66.666667%;
          }
        }
      }

      @include it('inset-x-1\/4') {
        @include assert {
          @include output {
            @include inset-x-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            left: 25%;
            right: 25%;
          }
        }
      }

      @include it('inset-x-2\/4') {
        @include assert {
          @include output {
            @include inset-x-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            left: 50%;
            right: 50%;
          }
        }
      }

      @include it('inset-x-3\/4') {
        @include assert {
          @include output {
            @include inset-x-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            left: 75%;
            right: 75%;
          }
        }
      }

      @include it('inset-x-full') {
        @include assert {
          @include output {
            @include inset-x-full;
            @include utils_reset-tw;
          }

          @include expect {
            left: 100%;
            right: 100%;
          }
        }
      }

      @include it('inset-y-auto') {
        @include assert {
          @include output {
            @include inset-y-auto;
            @include utils_reset-tw;
          }

          @include expect {
            top: auto;
            bottom: auto;
          }
        }
      }

      @include it('inset-y-1\/2') {
        @include assert {
          @include output {
            @include inset-y-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            top: 50%;
            bottom: 50%;
          }
        }
      }

      @include it('inset-y-1\/3') {
        @include assert {
          @include output {
            @include inset-y-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            top: 33.333333%;
            bottom: 33.333333%;
          }
        }
      }

      @include it('inset-y-2\/3') {
        @include assert {
          @include output {
            @include inset-y-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            top: 66.666667%;
            bottom: 66.666667%;
          }
        }
      }

      @include it('inset-y-1\/4') {
        @include assert {
          @include output {
            @include inset-y-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            top: 25%;
            bottom: 25%;
          }
        }
      }

      @include it('inset-y-2\/4') {
        @include assert {
          @include output {
            @include inset-y-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            top: 50%;
            bottom: 50%;
          }
        }
      }

      @include it('inset-y-3\/4') {
        @include assert {
          @include output {
            @include inset-y-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            top: 75%;
            bottom: 75%;
          }
        }
      }

      @include it('inset-y-full') {
        @include assert {
          @include output {
            @include inset-y-full;
            @include utils_reset-tw;
          }

          @include expect {
            top: 100%;
            bottom: 100%;
          }
        }
      }

      @include it('start-auto') {
        @include assert {
          @include output {
            @include start-auto;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: auto;
          }
        }
      }

      @include it('start-1\/2') {
        @include assert {
          @include output {
            @include start-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: 50%;
          }
        }
      }

      @include it('start-1\/3') {
        @include assert {
          @include output {
            @include start-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: 33.333333%;
          }
        }
      }

      @include it('start-2\/3') {
        @include assert {
          @include output {
            @include start-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: 66.666667%;
          }
        }
      }

      @include it('start-1\/4') {
        @include assert {
          @include output {
            @include start-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: 25%;
          }
        }
      }

      @include it('start-2\/4') {
        @include assert {
          @include output {
            @include start-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: 50%;
          }
        }
      }

      @include it('start-3\/4') {
        @include assert {
          @include output {
            @include start-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: 75%;
          }
        }
      }

      @include it('start-full') {
        @include assert {
          @include output {
            @include start-full;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: 100%;
          }
        }
      }

      @include it('end-auto') {
        @include assert {
          @include output {
            @include end-auto;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: auto;
          }
        }
      }

      @include it('end-1\/2') {
        @include assert {
          @include output {
            @include end-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: 50%;
          }
        }
      }

      @include it('end-1\/3') {
        @include assert {
          @include output {
            @include end-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: 33.333333%;
          }
        }
      }

      @include it('end-2\/3') {
        @include assert {
          @include output {
            @include end-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: 66.666667%;
          }
        }
      }

      @include it('end-1\/4') {
        @include assert {
          @include output {
            @include end-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: 25%;
          }
        }
      }

      @include it('end-2\/4') {
        @include assert {
          @include output {
            @include end-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: 50%;
          }
        }
      }

      @include it('end-3\/4') {
        @include assert {
          @include output {
            @include end-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: 75%;
          }
        }
      }

      @include it('end-full') {
        @include assert {
          @include output {
            @include end-full;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: 100%;
          }
        }
      }

      @include it('top-auto') {
        @include assert {
          @include output {
            @include top-auto;
            @include utils_reset-tw;
          }

          @include expect {
            top: auto;
          }
        }
      }

      @include it('top-1\/2') {
        @include assert {
          @include output {
            @include top-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            top: 50%;
          }
        }
      }

      @include it('top-1\/3') {
        @include assert {
          @include output {
            @include top-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            top: 33.333333%;
          }
        }
      }

      @include it('top-2\/3') {
        @include assert {
          @include output {
            @include top-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            top: 66.666667%;
          }
        }
      }

      @include it('top-1\/4') {
        @include assert {
          @include output {
            @include top-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            top: 25%;
          }
        }
      }

      @include it('top-2\/4') {
        @include assert {
          @include output {
            @include top-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            top: 50%;
          }
        }
      }

      @include it('top-3\/4') {
        @include assert {
          @include output {
            @include top-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            top: 75%;
          }
        }
      }

      @include it('top-full') {
        @include assert {
          @include output {
            @include top-full;
            @include utils_reset-tw;
          }

          @include expect {
            top: 100%;
          }
        }
      }

      @include it('right-auto') {
        @include assert {
          @include output {
            @include right-auto;
            @include utils_reset-tw;
          }

          @include expect {
            right: auto;
          }
        }
      }

      @include it('right-1\/2') {
        @include assert {
          @include output {
            @include right-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            right: 50%;
          }
        }
      }

      @include it('right-1\/3') {
        @include assert {
          @include output {
            @include right-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            right: 33.333333%;
          }
        }
      }

      @include it('right-2\/3') {
        @include assert {
          @include output {
            @include right-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            right: 66.666667%;
          }
        }
      }

      @include it('right-1\/4') {
        @include assert {
          @include output {
            @include right-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            right: 25%;
          }
        }
      }

      @include it('right-2\/4') {
        @include assert {
          @include output {
            @include right-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            right: 50%;
          }
        }
      }

      @include it('right-3\/4') {
        @include assert {
          @include output {
            @include right-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            right: 75%;
          }
        }
      }

      @include it('right-full') {
        @include assert {
          @include output {
            @include right-full;
            @include utils_reset-tw;
          }

          @include expect {
            right: 100%;
          }
        }
      }

      @include it('bottom-auto') {
        @include assert {
          @include output {
            @include bottom-auto;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: auto;
          }
        }
      }

      @include it('bottom-1\/2') {
        @include assert {
          @include output {
            @include bottom-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: 50%;
          }
        }
      }

      @include it('bottom-1\/3') {
        @include assert {
          @include output {
            @include bottom-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: 33.333333%;
          }
        }
      }

      @include it('bottom-2\/3') {
        @include assert {
          @include output {
            @include bottom-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: 66.666667%;
          }
        }
      }

      @include it('bottom-1\/4') {
        @include assert {
          @include output {
            @include bottom-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: 25%;
          }
        }
      }

      @include it('bottom-2\/4') {
        @include assert {
          @include output {
            @include bottom-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: 50%;
          }
        }
      }

      @include it('bottom-3\/4') {
        @include assert {
          @include output {
            @include bottom-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: 75%;
          }
        }
      }

      @include it('bottom-full') {
        @include assert {
          @include output {
            @include bottom-full;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: 100%;
          }
        }
      }

      @include it('left-auto') {
        @include assert {
          @include output {
            @include left-auto;
            @include utils_reset-tw;
          }

          @include expect {
            left: auto;
          }
        }
      }

      @include it('left-1\/2') {
        @include assert {
          @include output {
            @include left-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            left: 50%;
          }
        }
      }

      @include it('left-1\/3') {
        @include assert {
          @include output {
            @include left-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            left: 33.333333%;
          }
        }
      }

      @include it('left-2\/3') {
        @include assert {
          @include output {
            @include left-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            left: 66.666667%;
          }
        }
      }

      @include it('left-1\/4') {
        @include assert {
          @include output {
            @include left-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            left: 25%;
          }
        }
      }

      @include it('left-2\/4') {
        @include assert {
          @include output {
            @include left-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            left: 50%;
          }
        }
      }

      @include it('left-3\/4') {
        @include assert {
          @include output {
            @include left-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            left: 75%;
          }
        }
      }

      @include it('left-full') {
        @include assert {
          @include output {
            @include left-full;
            @include utils_reset-tw;
          }

          @include expect {
            left: 100%;
          }
        }
      }

      @include it('-inset-0') {
        @include assert {
          @include output {
            @include \-inset-0;
            @include utils_reset-tw;
          }

          @include expect {
            inset: 0px;
          }
        }
      }

      @include it('-inset-x-0') {
        @include assert {
          @include output {
            @include \-inset-x-0;
            @include utils_reset-tw;
          }

          @include expect {
            left: 0px;
            right: 0px;
          }
        }
      }

      @include it('-inset-y-0') {
        @include assert {
          @include output {
            @include \-inset-y-0;
            @include utils_reset-tw;
          }

          @include expect {
            top: 0px;
            bottom: 0px;
          }
        }
      }

      @include it('-start-0') {
        @include assert {
          @include output {
            @include \-start-0;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: 0px;
          }
        }
      }

      @include it('-end-0') {
        @include assert {
          @include output {
            @include \-end-0;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: 0px;
          }
        }
      }

      @include it('-top-0') {
        @include assert {
          @include output {
            @include \-top-0;
            @include utils_reset-tw;
          }

          @include expect {
            top: 0px;
          }
        }
      }

      @include it('-right-0') {
        @include assert {
          @include output {
            @include \-right-0;
            @include utils_reset-tw;
          }

          @include expect {
            right: 0px;
          }
        }
      }

      @include it('-bottom-0') {
        @include assert {
          @include output {
            @include \-bottom-0;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: 0px;
          }
        }
      }

      @include it('-left-0') {
        @include assert {
          @include output {
            @include \-left-0;
            @include utils_reset-tw;
          }

          @include expect {
            left: 0px;
          }
        }
      }

      @include it('-inset-px') {
        @include assert {
          @include output {
            @include \-inset-px;
            @include utils_reset-tw;
          }

          @include expect {
            inset: -1px;
          }
        }
      }

      @include it('-inset-x-px') {
        @include assert {
          @include output {
            @include \-inset-x-px;
            @include utils_reset-tw;
          }

          @include expect {
            left: -1px;
            right: -1px;
          }
        }
      }

      @include it('-inset-y-px') {
        @include assert {
          @include output {
            @include \-inset-y-px;
            @include utils_reset-tw;
          }

          @include expect {
            top: -1px;
            bottom: -1px;
          }
        }
      }

      @include it('-start-px') {
        @include assert {
          @include output {
            @include \-start-px;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: -1px;
          }
        }
      }

      @include it('-end-px') {
        @include assert {
          @include output {
            @include \-end-px;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: -1px;
          }
        }
      }

      @include it('-top-px') {
        @include assert {
          @include output {
            @include \-top-px;
            @include utils_reset-tw;
          }

          @include expect {
            top: -1px;
          }
        }
      }

      @include it('-right-px') {
        @include assert {
          @include output {
            @include \-right-px;
            @include utils_reset-tw;
          }

          @include expect {
            right: -1px;
          }
        }
      }

      @include it('-bottom-px') {
        @include assert {
          @include output {
            @include \-bottom-px;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: -1px;
          }
        }
      }

      @include it('-left-px') {
        @include assert {
          @include output {
            @include \-left-px;
            @include utils_reset-tw;
          }

          @include expect {
            left: -1px;
          }
        }
      }

      @include it('-inset-0\.5') {
        @include assert {
          @include output {
            @include \-inset-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            inset: -0.125rem;
          }
        }
      }

      @include it('-inset-x-0\.5') {
        @include assert {
          @include output {
            @include \-inset-x-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            left: -0.125rem;
            right: -0.125rem;
          }
        }
      }

      @include it('-inset-y-0\.5') {
        @include assert {
          @include output {
            @include \-inset-y-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            top: -0.125rem;
            bottom: -0.125rem;
          }
        }
      }

      @include it('-start-0\.5') {
        @include assert {
          @include output {
            @include \-start-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: -0.125rem;
          }
        }
      }

      @include it('-end-0\.5') {
        @include assert {
          @include output {
            @include \-end-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: -0.125rem;
          }
        }
      }

      @include it('-top-0\.5') {
        @include assert {
          @include output {
            @include \-top-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            top: -0.125rem;
          }
        }
      }

      @include it('-right-0\.5') {
        @include assert {
          @include output {
            @include \-right-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            right: -0.125rem;
          }
        }
      }

      @include it('-bottom-0\.5') {
        @include assert {
          @include output {
            @include \-bottom-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: -0.125rem;
          }
        }
      }

      @include it('-left-0\.5') {
        @include assert {
          @include output {
            @include \-left-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            left: -0.125rem;
          }
        }
      }

      @include it('-inset-1') {
        @include assert {
          @include output {
            @include \-inset-1;
            @include utils_reset-tw;
          }

          @include expect {
            inset: -0.25rem;
          }
        }
      }

      @include it('-inset-x-1') {
        @include assert {
          @include output {
            @include \-inset-x-1;
            @include utils_reset-tw;
          }

          @include expect {
            left: -0.25rem;
            right: -0.25rem;
          }
        }
      }

      @include it('-inset-y-1') {
        @include assert {
          @include output {
            @include \-inset-y-1;
            @include utils_reset-tw;
          }

          @include expect {
            top: -0.25rem;
            bottom: -0.25rem;
          }
        }
      }

      @include it('-start-1') {
        @include assert {
          @include output {
            @include \-start-1;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: -0.25rem;
          }
        }
      }

      @include it('-end-1') {
        @include assert {
          @include output {
            @include \-end-1;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: -0.25rem;
          }
        }
      }

      @include it('-top-1') {
        @include assert {
          @include output {
            @include \-top-1;
            @include utils_reset-tw;
          }

          @include expect {
            top: -0.25rem;
          }
        }
      }

      @include it('-right-1') {
        @include assert {
          @include output {
            @include \-right-1;
            @include utils_reset-tw;
          }

          @include expect {
            right: -0.25rem;
          }
        }
      }

      @include it('-bottom-1') {
        @include assert {
          @include output {
            @include \-bottom-1;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: -0.25rem;
          }
        }
      }

      @include it('-left-1') {
        @include assert {
          @include output {
            @include \-left-1;
            @include utils_reset-tw;
          }

          @include expect {
            left: -0.25rem;
          }
        }
      }

      @include it('-inset-1\.5') {
        @include assert {
          @include output {
            @include \-inset-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            inset: -0.375rem;
          }
        }
      }

      @include it('-inset-x-1\.5') {
        @include assert {
          @include output {
            @include \-inset-x-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            left: -0.375rem;
            right: -0.375rem;
          }
        }
      }

      @include it('-inset-y-1\.5') {
        @include assert {
          @include output {
            @include \-inset-y-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            top: -0.375rem;
            bottom: -0.375rem;
          }
        }
      }

      @include it('-start-1\.5') {
        @include assert {
          @include output {
            @include \-start-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: -0.375rem;
          }
        }
      }

      @include it('-end-1\.5') {
        @include assert {
          @include output {
            @include \-end-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: -0.375rem;
          }
        }
      }

      @include it('-top-1\.5') {
        @include assert {
          @include output {
            @include \-top-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            top: -0.375rem;
          }
        }
      }

      @include it('-right-1\.5') {
        @include assert {
          @include output {
            @include \-right-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            right: -0.375rem;
          }
        }
      }

      @include it('-bottom-1\.5') {
        @include assert {
          @include output {
            @include \-bottom-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: -0.375rem;
          }
        }
      }

      @include it('-left-1\.5') {
        @include assert {
          @include output {
            @include \-left-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            left: -0.375rem;
          }
        }
      }

      @include it('-inset-2') {
        @include assert {
          @include output {
            @include \-inset-2;
            @include utils_reset-tw;
          }

          @include expect {
            inset: -0.5rem;
          }
        }
      }

      @include it('-inset-x-2') {
        @include assert {
          @include output {
            @include \-inset-x-2;
            @include utils_reset-tw;
          }

          @include expect {
            left: -0.5rem;
            right: -0.5rem;
          }
        }
      }

      @include it('-inset-y-2') {
        @include assert {
          @include output {
            @include \-inset-y-2;
            @include utils_reset-tw;
          }

          @include expect {
            top: -0.5rem;
            bottom: -0.5rem;
          }
        }
      }

      @include it('-start-2') {
        @include assert {
          @include output {
            @include \-start-2;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: -0.5rem;
          }
        }
      }

      @include it('-end-2') {
        @include assert {
          @include output {
            @include \-end-2;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: -0.5rem;
          }
        }
      }

      @include it('-top-2') {
        @include assert {
          @include output {
            @include \-top-2;
            @include utils_reset-tw;
          }

          @include expect {
            top: -0.5rem;
          }
        }
      }

      @include it('-right-2') {
        @include assert {
          @include output {
            @include \-right-2;
            @include utils_reset-tw;
          }

          @include expect {
            right: -0.5rem;
          }
        }
      }

      @include it('-bottom-2') {
        @include assert {
          @include output {
            @include \-bottom-2;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: -0.5rem;
          }
        }
      }

      @include it('-left-2') {
        @include assert {
          @include output {
            @include \-left-2;
            @include utils_reset-tw;
          }

          @include expect {
            left: -0.5rem;
          }
        }
      }

      @include it('-inset-2\.5') {
        @include assert {
          @include output {
            @include \-inset-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            inset: -0.625rem;
          }
        }
      }

      @include it('-inset-x-2\.5') {
        @include assert {
          @include output {
            @include \-inset-x-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            left: -0.625rem;
            right: -0.625rem;
          }
        }
      }

      @include it('-inset-y-2\.5') {
        @include assert {
          @include output {
            @include \-inset-y-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            top: -0.625rem;
            bottom: -0.625rem;
          }
        }
      }

      @include it('-start-2\.5') {
        @include assert {
          @include output {
            @include \-start-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: -0.625rem;
          }
        }
      }

      @include it('-end-2\.5') {
        @include assert {
          @include output {
            @include \-end-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: -0.625rem;
          }
        }
      }

      @include it('-top-2\.5') {
        @include assert {
          @include output {
            @include \-top-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            top: -0.625rem;
          }
        }
      }

      @include it('-right-2\.5') {
        @include assert {
          @include output {
            @include \-right-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            right: -0.625rem;
          }
        }
      }

      @include it('-bottom-2\.5') {
        @include assert {
          @include output {
            @include \-bottom-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: -0.625rem;
          }
        }
      }

      @include it('-left-2\.5') {
        @include assert {
          @include output {
            @include \-left-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            left: -0.625rem;
          }
        }
      }

      @include it('-inset-3') {
        @include assert {
          @include output {
            @include \-inset-3;
            @include utils_reset-tw;
          }

          @include expect {
            inset: -0.75rem;
          }
        }
      }

      @include it('-inset-x-3') {
        @include assert {
          @include output {
            @include \-inset-x-3;
            @include utils_reset-tw;
          }

          @include expect {
            left: -0.75rem;
            right: -0.75rem;
          }
        }
      }

      @include it('-inset-y-3') {
        @include assert {
          @include output {
            @include \-inset-y-3;
            @include utils_reset-tw;
          }

          @include expect {
            top: -0.75rem;
            bottom: -0.75rem;
          }
        }
      }

      @include it('-start-3') {
        @include assert {
          @include output {
            @include \-start-3;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: -0.75rem;
          }
        }
      }

      @include it('-end-3') {
        @include assert {
          @include output {
            @include \-end-3;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: -0.75rem;
          }
        }
      }

      @include it('-top-3') {
        @include assert {
          @include output {
            @include \-top-3;
            @include utils_reset-tw;
          }

          @include expect {
            top: -0.75rem;
          }
        }
      }

      @include it('-right-3') {
        @include assert {
          @include output {
            @include \-right-3;
            @include utils_reset-tw;
          }

          @include expect {
            right: -0.75rem;
          }
        }
      }

      @include it('-bottom-3') {
        @include assert {
          @include output {
            @include \-bottom-3;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: -0.75rem;
          }
        }
      }

      @include it('-left-3') {
        @include assert {
          @include output {
            @include \-left-3;
            @include utils_reset-tw;
          }

          @include expect {
            left: -0.75rem;
          }
        }
      }

      @include it('-inset-3\.5') {
        @include assert {
          @include output {
            @include \-inset-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            inset: -0.875rem;
          }
        }
      }

      @include it('-inset-x-3\.5') {
        @include assert {
          @include output {
            @include \-inset-x-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            left: -0.875rem;
            right: -0.875rem;
          }
        }
      }

      @include it('-inset-y-3\.5') {
        @include assert {
          @include output {
            @include \-inset-y-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            top: -0.875rem;
            bottom: -0.875rem;
          }
        }
      }

      @include it('-start-3\.5') {
        @include assert {
          @include output {
            @include \-start-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: -0.875rem;
          }
        }
      }

      @include it('-end-3\.5') {
        @include assert {
          @include output {
            @include \-end-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: -0.875rem;
          }
        }
      }

      @include it('-top-3\.5') {
        @include assert {
          @include output {
            @include \-top-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            top: -0.875rem;
          }
        }
      }

      @include it('-right-3\.5') {
        @include assert {
          @include output {
            @include \-right-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            right: -0.875rem;
          }
        }
      }

      @include it('-bottom-3\.5') {
        @include assert {
          @include output {
            @include \-bottom-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: -0.875rem;
          }
        }
      }

      @include it('-left-3\.5') {
        @include assert {
          @include output {
            @include \-left-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            left: -0.875rem;
          }
        }
      }

      @include it('-inset-4') {
        @include assert {
          @include output {
            @include \-inset-4;
            @include utils_reset-tw;
          }

          @include expect {
            inset: -1rem;
          }
        }
      }

      @include it('-inset-x-4') {
        @include assert {
          @include output {
            @include \-inset-x-4;
            @include utils_reset-tw;
          }

          @include expect {
            left: -1rem;
            right: -1rem;
          }
        }
      }

      @include it('-inset-y-4') {
        @include assert {
          @include output {
            @include \-inset-y-4;
            @include utils_reset-tw;
          }

          @include expect {
            top: -1rem;
            bottom: -1rem;
          }
        }
      }

      @include it('-start-4') {
        @include assert {
          @include output {
            @include \-start-4;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: -1rem;
          }
        }
      }

      @include it('-end-4') {
        @include assert {
          @include output {
            @include \-end-4;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: -1rem;
          }
        }
      }

      @include it('-top-4') {
        @include assert {
          @include output {
            @include \-top-4;
            @include utils_reset-tw;
          }

          @include expect {
            top: -1rem;
          }
        }
      }

      @include it('-right-4') {
        @include assert {
          @include output {
            @include \-right-4;
            @include utils_reset-tw;
          }

          @include expect {
            right: -1rem;
          }
        }
      }

      @include it('-bottom-4') {
        @include assert {
          @include output {
            @include \-bottom-4;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: -1rem;
          }
        }
      }

      @include it('-left-4') {
        @include assert {
          @include output {
            @include \-left-4;
            @include utils_reset-tw;
          }

          @include expect {
            left: -1rem;
          }
        }
      }

      @include it('-inset-5') {
        @include assert {
          @include output {
            @include \-inset-5;
            @include utils_reset-tw;
          }

          @include expect {
            inset: -1.25rem;
          }
        }
      }

      @include it('-inset-x-5') {
        @include assert {
          @include output {
            @include \-inset-x-5;
            @include utils_reset-tw;
          }

          @include expect {
            left: -1.25rem;
            right: -1.25rem;
          }
        }
      }

      @include it('-inset-y-5') {
        @include assert {
          @include output {
            @include \-inset-y-5;
            @include utils_reset-tw;
          }

          @include expect {
            top: -1.25rem;
            bottom: -1.25rem;
          }
        }
      }

      @include it('-start-5') {
        @include assert {
          @include output {
            @include \-start-5;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: -1.25rem;
          }
        }
      }

      @include it('-end-5') {
        @include assert {
          @include output {
            @include \-end-5;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: -1.25rem;
          }
        }
      }

      @include it('-top-5') {
        @include assert {
          @include output {
            @include \-top-5;
            @include utils_reset-tw;
          }

          @include expect {
            top: -1.25rem;
          }
        }
      }

      @include it('-right-5') {
        @include assert {
          @include output {
            @include \-right-5;
            @include utils_reset-tw;
          }

          @include expect {
            right: -1.25rem;
          }
        }
      }

      @include it('-bottom-5') {
        @include assert {
          @include output {
            @include \-bottom-5;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: -1.25rem;
          }
        }
      }

      @include it('-left-5') {
        @include assert {
          @include output {
            @include \-left-5;
            @include utils_reset-tw;
          }

          @include expect {
            left: -1.25rem;
          }
        }
      }

      @include it('-inset-6') {
        @include assert {
          @include output {
            @include \-inset-6;
            @include utils_reset-tw;
          }

          @include expect {
            inset: -1.5rem;
          }
        }
      }

      @include it('-inset-x-6') {
        @include assert {
          @include output {
            @include \-inset-x-6;
            @include utils_reset-tw;
          }

          @include expect {
            left: -1.5rem;
            right: -1.5rem;
          }
        }
      }

      @include it('-inset-y-6') {
        @include assert {
          @include output {
            @include \-inset-y-6;
            @include utils_reset-tw;
          }

          @include expect {
            top: -1.5rem;
            bottom: -1.5rem;
          }
        }
      }

      @include it('-start-6') {
        @include assert {
          @include output {
            @include \-start-6;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: -1.5rem;
          }
        }
      }

      @include it('-end-6') {
        @include assert {
          @include output {
            @include \-end-6;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: -1.5rem;
          }
        }
      }

      @include it('-top-6') {
        @include assert {
          @include output {
            @include \-top-6;
            @include utils_reset-tw;
          }

          @include expect {
            top: -1.5rem;
          }
        }
      }

      @include it('-right-6') {
        @include assert {
          @include output {
            @include \-right-6;
            @include utils_reset-tw;
          }

          @include expect {
            right: -1.5rem;
          }
        }
      }

      @include it('-bottom-6') {
        @include assert {
          @include output {
            @include \-bottom-6;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: -1.5rem;
          }
        }
      }

      @include it('-left-6') {
        @include assert {
          @include output {
            @include \-left-6;
            @include utils_reset-tw;
          }

          @include expect {
            left: -1.5rem;
          }
        }
      }

      @include it('-inset-7') {
        @include assert {
          @include output {
            @include \-inset-7;
            @include utils_reset-tw;
          }

          @include expect {
            inset: -1.75rem;
          }
        }
      }

      @include it('-inset-x-7') {
        @include assert {
          @include output {
            @include \-inset-x-7;
            @include utils_reset-tw;
          }

          @include expect {
            left: -1.75rem;
            right: -1.75rem;
          }
        }
      }

      @include it('-inset-y-7') {
        @include assert {
          @include output {
            @include \-inset-y-7;
            @include utils_reset-tw;
          }

          @include expect {
            top: -1.75rem;
            bottom: -1.75rem;
          }
        }
      }

      @include it('-start-7') {
        @include assert {
          @include output {
            @include \-start-7;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: -1.75rem;
          }
        }
      }

      @include it('-end-7') {
        @include assert {
          @include output {
            @include \-end-7;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: -1.75rem;
          }
        }
      }

      @include it('-top-7') {
        @include assert {
          @include output {
            @include \-top-7;
            @include utils_reset-tw;
          }

          @include expect {
            top: -1.75rem;
          }
        }
      }

      @include it('-right-7') {
        @include assert {
          @include output {
            @include \-right-7;
            @include utils_reset-tw;
          }

          @include expect {
            right: -1.75rem;
          }
        }
      }

      @include it('-bottom-7') {
        @include assert {
          @include output {
            @include \-bottom-7;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: -1.75rem;
          }
        }
      }

      @include it('-left-7') {
        @include assert {
          @include output {
            @include \-left-7;
            @include utils_reset-tw;
          }

          @include expect {
            left: -1.75rem;
          }
        }
      }

      @include it('-inset-8') {
        @include assert {
          @include output {
            @include \-inset-8;
            @include utils_reset-tw;
          }

          @include expect {
            inset: -2rem;
          }
        }
      }

      @include it('-inset-x-8') {
        @include assert {
          @include output {
            @include \-inset-x-8;
            @include utils_reset-tw;
          }

          @include expect {
            left: -2rem;
            right: -2rem;
          }
        }
      }

      @include it('-inset-y-8') {
        @include assert {
          @include output {
            @include \-inset-y-8;
            @include utils_reset-tw;
          }

          @include expect {
            top: -2rem;
            bottom: -2rem;
          }
        }
      }

      @include it('-start-8') {
        @include assert {
          @include output {
            @include \-start-8;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: -2rem;
          }
        }
      }

      @include it('-end-8') {
        @include assert {
          @include output {
            @include \-end-8;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: -2rem;
          }
        }
      }

      @include it('-top-8') {
        @include assert {
          @include output {
            @include \-top-8;
            @include utils_reset-tw;
          }

          @include expect {
            top: -2rem;
          }
        }
      }

      @include it('-right-8') {
        @include assert {
          @include output {
            @include \-right-8;
            @include utils_reset-tw;
          }

          @include expect {
            right: -2rem;
          }
        }
      }

      @include it('-bottom-8') {
        @include assert {
          @include output {
            @include \-bottom-8;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: -2rem;
          }
        }
      }

      @include it('-left-8') {
        @include assert {
          @include output {
            @include \-left-8;
            @include utils_reset-tw;
          }

          @include expect {
            left: -2rem;
          }
        }
      }

      @include it('-inset-9') {
        @include assert {
          @include output {
            @include \-inset-9;
            @include utils_reset-tw;
          }

          @include expect {
            inset: -2.25rem;
          }
        }
      }

      @include it('-inset-x-9') {
        @include assert {
          @include output {
            @include \-inset-x-9;
            @include utils_reset-tw;
          }

          @include expect {
            left: -2.25rem;
            right: -2.25rem;
          }
        }
      }

      @include it('-inset-y-9') {
        @include assert {
          @include output {
            @include \-inset-y-9;
            @include utils_reset-tw;
          }

          @include expect {
            top: -2.25rem;
            bottom: -2.25rem;
          }
        }
      }

      @include it('-start-9') {
        @include assert {
          @include output {
            @include \-start-9;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: -2.25rem;
          }
        }
      }

      @include it('-end-9') {
        @include assert {
          @include output {
            @include \-end-9;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: -2.25rem;
          }
        }
      }

      @include it('-top-9') {
        @include assert {
          @include output {
            @include \-top-9;
            @include utils_reset-tw;
          }

          @include expect {
            top: -2.25rem;
          }
        }
      }

      @include it('-right-9') {
        @include assert {
          @include output {
            @include \-right-9;
            @include utils_reset-tw;
          }

          @include expect {
            right: -2.25rem;
          }
        }
      }

      @include it('-bottom-9') {
        @include assert {
          @include output {
            @include \-bottom-9;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: -2.25rem;
          }
        }
      }

      @include it('-left-9') {
        @include assert {
          @include output {
            @include \-left-9;
            @include utils_reset-tw;
          }

          @include expect {
            left: -2.25rem;
          }
        }
      }

      @include it('-inset-10') {
        @include assert {
          @include output {
            @include \-inset-10;
            @include utils_reset-tw;
          }

          @include expect {
            inset: -2.5rem;
          }
        }
      }

      @include it('-inset-x-10') {
        @include assert {
          @include output {
            @include \-inset-x-10;
            @include utils_reset-tw;
          }

          @include expect {
            left: -2.5rem;
            right: -2.5rem;
          }
        }
      }

      @include it('-inset-y-10') {
        @include assert {
          @include output {
            @include \-inset-y-10;
            @include utils_reset-tw;
          }

          @include expect {
            top: -2.5rem;
            bottom: -2.5rem;
          }
        }
      }

      @include it('-start-10') {
        @include assert {
          @include output {
            @include \-start-10;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: -2.5rem;
          }
        }
      }

      @include it('-end-10') {
        @include assert {
          @include output {
            @include \-end-10;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: -2.5rem;
          }
        }
      }

      @include it('-top-10') {
        @include assert {
          @include output {
            @include \-top-10;
            @include utils_reset-tw;
          }

          @include expect {
            top: -2.5rem;
          }
        }
      }

      @include it('-right-10') {
        @include assert {
          @include output {
            @include \-right-10;
            @include utils_reset-tw;
          }

          @include expect {
            right: -2.5rem;
          }
        }
      }

      @include it('-bottom-10') {
        @include assert {
          @include output {
            @include \-bottom-10;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: -2.5rem;
          }
        }
      }

      @include it('-left-10') {
        @include assert {
          @include output {
            @include \-left-10;
            @include utils_reset-tw;
          }

          @include expect {
            left: -2.5rem;
          }
        }
      }

      @include it('-inset-11') {
        @include assert {
          @include output {
            @include \-inset-11;
            @include utils_reset-tw;
          }

          @include expect {
            inset: -2.75rem;
          }
        }
      }

      @include it('-inset-x-11') {
        @include assert {
          @include output {
            @include \-inset-x-11;
            @include utils_reset-tw;
          }

          @include expect {
            left: -2.75rem;
            right: -2.75rem;
          }
        }
      }

      @include it('-inset-y-11') {
        @include assert {
          @include output {
            @include \-inset-y-11;
            @include utils_reset-tw;
          }

          @include expect {
            top: -2.75rem;
            bottom: -2.75rem;
          }
        }
      }

      @include it('-start-11') {
        @include assert {
          @include output {
            @include \-start-11;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: -2.75rem;
          }
        }
      }

      @include it('-end-11') {
        @include assert {
          @include output {
            @include \-end-11;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: -2.75rem;
          }
        }
      }

      @include it('-top-11') {
        @include assert {
          @include output {
            @include \-top-11;
            @include utils_reset-tw;
          }

          @include expect {
            top: -2.75rem;
          }
        }
      }

      @include it('-right-11') {
        @include assert {
          @include output {
            @include \-right-11;
            @include utils_reset-tw;
          }

          @include expect {
            right: -2.75rem;
          }
        }
      }

      @include it('-bottom-11') {
        @include assert {
          @include output {
            @include \-bottom-11;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: -2.75rem;
          }
        }
      }

      @include it('-left-11') {
        @include assert {
          @include output {
            @include \-left-11;
            @include utils_reset-tw;
          }

          @include expect {
            left: -2.75rem;
          }
        }
      }

      @include it('-inset-12') {
        @include assert {
          @include output {
            @include \-inset-12;
            @include utils_reset-tw;
          }

          @include expect {
            inset: -3rem;
          }
        }
      }

      @include it('-inset-x-12') {
        @include assert {
          @include output {
            @include \-inset-x-12;
            @include utils_reset-tw;
          }

          @include expect {
            left: -3rem;
            right: -3rem;
          }
        }
      }

      @include it('-inset-y-12') {
        @include assert {
          @include output {
            @include \-inset-y-12;
            @include utils_reset-tw;
          }

          @include expect {
            top: -3rem;
            bottom: -3rem;
          }
        }
      }

      @include it('-start-12') {
        @include assert {
          @include output {
            @include \-start-12;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: -3rem;
          }
        }
      }

      @include it('-end-12') {
        @include assert {
          @include output {
            @include \-end-12;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: -3rem;
          }
        }
      }

      @include it('-top-12') {
        @include assert {
          @include output {
            @include \-top-12;
            @include utils_reset-tw;
          }

          @include expect {
            top: -3rem;
          }
        }
      }

      @include it('-right-12') {
        @include assert {
          @include output {
            @include \-right-12;
            @include utils_reset-tw;
          }

          @include expect {
            right: -3rem;
          }
        }
      }

      @include it('-bottom-12') {
        @include assert {
          @include output {
            @include \-bottom-12;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: -3rem;
          }
        }
      }

      @include it('-left-12') {
        @include assert {
          @include output {
            @include \-left-12;
            @include utils_reset-tw;
          }

          @include expect {
            left: -3rem;
          }
        }
      }

      @include it('-inset-14') {
        @include assert {
          @include output {
            @include \-inset-14;
            @include utils_reset-tw;
          }

          @include expect {
            inset: -3.5rem;
          }
        }
      }

      @include it('-inset-x-14') {
        @include assert {
          @include output {
            @include \-inset-x-14;
            @include utils_reset-tw;
          }

          @include expect {
            left: -3.5rem;
            right: -3.5rem;
          }
        }
      }

      @include it('-inset-y-14') {
        @include assert {
          @include output {
            @include \-inset-y-14;
            @include utils_reset-tw;
          }

          @include expect {
            top: -3.5rem;
            bottom: -3.5rem;
          }
        }
      }

      @include it('-start-14') {
        @include assert {
          @include output {
            @include \-start-14;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: -3.5rem;
          }
        }
      }

      @include it('-end-14') {
        @include assert {
          @include output {
            @include \-end-14;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: -3.5rem;
          }
        }
      }

      @include it('-top-14') {
        @include assert {
          @include output {
            @include \-top-14;
            @include utils_reset-tw;
          }

          @include expect {
            top: -3.5rem;
          }
        }
      }

      @include it('-right-14') {
        @include assert {
          @include output {
            @include \-right-14;
            @include utils_reset-tw;
          }

          @include expect {
            right: -3.5rem;
          }
        }
      }

      @include it('-bottom-14') {
        @include assert {
          @include output {
            @include \-bottom-14;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: -3.5rem;
          }
        }
      }

      @include it('-left-14') {
        @include assert {
          @include output {
            @include \-left-14;
            @include utils_reset-tw;
          }

          @include expect {
            left: -3.5rem;
          }
        }
      }

      @include it('-inset-16') {
        @include assert {
          @include output {
            @include \-inset-16;
            @include utils_reset-tw;
          }

          @include expect {
            inset: -4rem;
          }
        }
      }

      @include it('-inset-x-16') {
        @include assert {
          @include output {
            @include \-inset-x-16;
            @include utils_reset-tw;
          }

          @include expect {
            left: -4rem;
            right: -4rem;
          }
        }
      }

      @include it('-inset-y-16') {
        @include assert {
          @include output {
            @include \-inset-y-16;
            @include utils_reset-tw;
          }

          @include expect {
            top: -4rem;
            bottom: -4rem;
          }
        }
      }

      @include it('-start-16') {
        @include assert {
          @include output {
            @include \-start-16;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: -4rem;
          }
        }
      }

      @include it('-end-16') {
        @include assert {
          @include output {
            @include \-end-16;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: -4rem;
          }
        }
      }

      @include it('-top-16') {
        @include assert {
          @include output {
            @include \-top-16;
            @include utils_reset-tw;
          }

          @include expect {
            top: -4rem;
          }
        }
      }

      @include it('-right-16') {
        @include assert {
          @include output {
            @include \-right-16;
            @include utils_reset-tw;
          }

          @include expect {
            right: -4rem;
          }
        }
      }

      @include it('-bottom-16') {
        @include assert {
          @include output {
            @include \-bottom-16;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: -4rem;
          }
        }
      }

      @include it('-left-16') {
        @include assert {
          @include output {
            @include \-left-16;
            @include utils_reset-tw;
          }

          @include expect {
            left: -4rem;
          }
        }
      }

      @include it('-inset-20') {
        @include assert {
          @include output {
            @include \-inset-20;
            @include utils_reset-tw;
          }

          @include expect {
            inset: -5rem;
          }
        }
      }

      @include it('-inset-x-20') {
        @include assert {
          @include output {
            @include \-inset-x-20;
            @include utils_reset-tw;
          }

          @include expect {
            left: -5rem;
            right: -5rem;
          }
        }
      }

      @include it('-inset-y-20') {
        @include assert {
          @include output {
            @include \-inset-y-20;
            @include utils_reset-tw;
          }

          @include expect {
            top: -5rem;
            bottom: -5rem;
          }
        }
      }

      @include it('-start-20') {
        @include assert {
          @include output {
            @include \-start-20;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: -5rem;
          }
        }
      }

      @include it('-end-20') {
        @include assert {
          @include output {
            @include \-end-20;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: -5rem;
          }
        }
      }

      @include it('-top-20') {
        @include assert {
          @include output {
            @include \-top-20;
            @include utils_reset-tw;
          }

          @include expect {
            top: -5rem;
          }
        }
      }

      @include it('-right-20') {
        @include assert {
          @include output {
            @include \-right-20;
            @include utils_reset-tw;
          }

          @include expect {
            right: -5rem;
          }
        }
      }

      @include it('-bottom-20') {
        @include assert {
          @include output {
            @include \-bottom-20;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: -5rem;
          }
        }
      }

      @include it('-left-20') {
        @include assert {
          @include output {
            @include \-left-20;
            @include utils_reset-tw;
          }

          @include expect {
            left: -5rem;
          }
        }
      }

      @include it('-inset-24') {
        @include assert {
          @include output {
            @include \-inset-24;
            @include utils_reset-tw;
          }

          @include expect {
            inset: -6rem;
          }
        }
      }

      @include it('-inset-x-24') {
        @include assert {
          @include output {
            @include \-inset-x-24;
            @include utils_reset-tw;
          }

          @include expect {
            left: -6rem;
            right: -6rem;
          }
        }
      }

      @include it('-inset-y-24') {
        @include assert {
          @include output {
            @include \-inset-y-24;
            @include utils_reset-tw;
          }

          @include expect {
            top: -6rem;
            bottom: -6rem;
          }
        }
      }

      @include it('-start-24') {
        @include assert {
          @include output {
            @include \-start-24;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: -6rem;
          }
        }
      }

      @include it('-end-24') {
        @include assert {
          @include output {
            @include \-end-24;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: -6rem;
          }
        }
      }

      @include it('-top-24') {
        @include assert {
          @include output {
            @include \-top-24;
            @include utils_reset-tw;
          }

          @include expect {
            top: -6rem;
          }
        }
      }

      @include it('-right-24') {
        @include assert {
          @include output {
            @include \-right-24;
            @include utils_reset-tw;
          }

          @include expect {
            right: -6rem;
          }
        }
      }

      @include it('-bottom-24') {
        @include assert {
          @include output {
            @include \-bottom-24;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: -6rem;
          }
        }
      }

      @include it('-left-24') {
        @include assert {
          @include output {
            @include \-left-24;
            @include utils_reset-tw;
          }

          @include expect {
            left: -6rem;
          }
        }
      }

      @include it('-inset-28') {
        @include assert {
          @include output {
            @include \-inset-28;
            @include utils_reset-tw;
          }

          @include expect {
            inset: -7rem;
          }
        }
      }

      @include it('-inset-x-28') {
        @include assert {
          @include output {
            @include \-inset-x-28;
            @include utils_reset-tw;
          }

          @include expect {
            left: -7rem;
            right: -7rem;
          }
        }
      }

      @include it('-inset-y-28') {
        @include assert {
          @include output {
            @include \-inset-y-28;
            @include utils_reset-tw;
          }

          @include expect {
            top: -7rem;
            bottom: -7rem;
          }
        }
      }

      @include it('-start-28') {
        @include assert {
          @include output {
            @include \-start-28;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: -7rem;
          }
        }
      }

      @include it('-end-28') {
        @include assert {
          @include output {
            @include \-end-28;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: -7rem;
          }
        }
      }

      @include it('-top-28') {
        @include assert {
          @include output {
            @include \-top-28;
            @include utils_reset-tw;
          }

          @include expect {
            top: -7rem;
          }
        }
      }

      @include it('-right-28') {
        @include assert {
          @include output {
            @include \-right-28;
            @include utils_reset-tw;
          }

          @include expect {
            right: -7rem;
          }
        }
      }

      @include it('-bottom-28') {
        @include assert {
          @include output {
            @include \-bottom-28;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: -7rem;
          }
        }
      }

      @include it('-left-28') {
        @include assert {
          @include output {
            @include \-left-28;
            @include utils_reset-tw;
          }

          @include expect {
            left: -7rem;
          }
        }
      }

      @include it('-inset-32') {
        @include assert {
          @include output {
            @include \-inset-32;
            @include utils_reset-tw;
          }

          @include expect {
            inset: -8rem;
          }
        }
      }

      @include it('-inset-x-32') {
        @include assert {
          @include output {
            @include \-inset-x-32;
            @include utils_reset-tw;
          }

          @include expect {
            left: -8rem;
            right: -8rem;
          }
        }
      }

      @include it('-inset-y-32') {
        @include assert {
          @include output {
            @include \-inset-y-32;
            @include utils_reset-tw;
          }

          @include expect {
            top: -8rem;
            bottom: -8rem;
          }
        }
      }

      @include it('-start-32') {
        @include assert {
          @include output {
            @include \-start-32;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: -8rem;
          }
        }
      }

      @include it('-end-32') {
        @include assert {
          @include output {
            @include \-end-32;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: -8rem;
          }
        }
      }

      @include it('-top-32') {
        @include assert {
          @include output {
            @include \-top-32;
            @include utils_reset-tw;
          }

          @include expect {
            top: -8rem;
          }
        }
      }

      @include it('-right-32') {
        @include assert {
          @include output {
            @include \-right-32;
            @include utils_reset-tw;
          }

          @include expect {
            right: -8rem;
          }
        }
      }

      @include it('-bottom-32') {
        @include assert {
          @include output {
            @include \-bottom-32;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: -8rem;
          }
        }
      }

      @include it('-left-32') {
        @include assert {
          @include output {
            @include \-left-32;
            @include utils_reset-tw;
          }

          @include expect {
            left: -8rem;
          }
        }
      }

      @include it('-inset-36') {
        @include assert {
          @include output {
            @include \-inset-36;
            @include utils_reset-tw;
          }

          @include expect {
            inset: -9rem;
          }
        }
      }

      @include it('-inset-x-36') {
        @include assert {
          @include output {
            @include \-inset-x-36;
            @include utils_reset-tw;
          }

          @include expect {
            left: -9rem;
            right: -9rem;
          }
        }
      }

      @include it('-inset-y-36') {
        @include assert {
          @include output {
            @include \-inset-y-36;
            @include utils_reset-tw;
          }

          @include expect {
            top: -9rem;
            bottom: -9rem;
          }
        }
      }

      @include it('-start-36') {
        @include assert {
          @include output {
            @include \-start-36;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: -9rem;
          }
        }
      }

      @include it('-end-36') {
        @include assert {
          @include output {
            @include \-end-36;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: -9rem;
          }
        }
      }

      @include it('-top-36') {
        @include assert {
          @include output {
            @include \-top-36;
            @include utils_reset-tw;
          }

          @include expect {
            top: -9rem;
          }
        }
      }

      @include it('-right-36') {
        @include assert {
          @include output {
            @include \-right-36;
            @include utils_reset-tw;
          }

          @include expect {
            right: -9rem;
          }
        }
      }

      @include it('-bottom-36') {
        @include assert {
          @include output {
            @include \-bottom-36;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: -9rem;
          }
        }
      }

      @include it('-left-36') {
        @include assert {
          @include output {
            @include \-left-36;
            @include utils_reset-tw;
          }

          @include expect {
            left: -9rem;
          }
        }
      }

      @include it('-inset-40') {
        @include assert {
          @include output {
            @include \-inset-40;
            @include utils_reset-tw;
          }

          @include expect {
            inset: -10rem;
          }
        }
      }

      @include it('-inset-x-40') {
        @include assert {
          @include output {
            @include \-inset-x-40;
            @include utils_reset-tw;
          }

          @include expect {
            left: -10rem;
            right: -10rem;
          }
        }
      }

      @include it('-inset-y-40') {
        @include assert {
          @include output {
            @include \-inset-y-40;
            @include utils_reset-tw;
          }

          @include expect {
            top: -10rem;
            bottom: -10rem;
          }
        }
      }

      @include it('-start-40') {
        @include assert {
          @include output {
            @include \-start-40;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: -10rem;
          }
        }
      }

      @include it('-end-40') {
        @include assert {
          @include output {
            @include \-end-40;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: -10rem;
          }
        }
      }

      @include it('-top-40') {
        @include assert {
          @include output {
            @include \-top-40;
            @include utils_reset-tw;
          }

          @include expect {
            top: -10rem;
          }
        }
      }

      @include it('-right-40') {
        @include assert {
          @include output {
            @include \-right-40;
            @include utils_reset-tw;
          }

          @include expect {
            right: -10rem;
          }
        }
      }

      @include it('-bottom-40') {
        @include assert {
          @include output {
            @include \-bottom-40;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: -10rem;
          }
        }
      }

      @include it('-left-40') {
        @include assert {
          @include output {
            @include \-left-40;
            @include utils_reset-tw;
          }

          @include expect {
            left: -10rem;
          }
        }
      }

      @include it('-inset-44') {
        @include assert {
          @include output {
            @include \-inset-44;
            @include utils_reset-tw;
          }

          @include expect {
            inset: -11rem;
          }
        }
      }

      @include it('-inset-x-44') {
        @include assert {
          @include output {
            @include \-inset-x-44;
            @include utils_reset-tw;
          }

          @include expect {
            left: -11rem;
            right: -11rem;
          }
        }
      }

      @include it('-inset-y-44') {
        @include assert {
          @include output {
            @include \-inset-y-44;
            @include utils_reset-tw;
          }

          @include expect {
            top: -11rem;
            bottom: -11rem;
          }
        }
      }

      @include it('-start-44') {
        @include assert {
          @include output {
            @include \-start-44;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: -11rem;
          }
        }
      }

      @include it('-end-44') {
        @include assert {
          @include output {
            @include \-end-44;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: -11rem;
          }
        }
      }

      @include it('-top-44') {
        @include assert {
          @include output {
            @include \-top-44;
            @include utils_reset-tw;
          }

          @include expect {
            top: -11rem;
          }
        }
      }

      @include it('-right-44') {
        @include assert {
          @include output {
            @include \-right-44;
            @include utils_reset-tw;
          }

          @include expect {
            right: -11rem;
          }
        }
      }

      @include it('-bottom-44') {
        @include assert {
          @include output {
            @include \-bottom-44;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: -11rem;
          }
        }
      }

      @include it('-left-44') {
        @include assert {
          @include output {
            @include \-left-44;
            @include utils_reset-tw;
          }

          @include expect {
            left: -11rem;
          }
        }
      }

      @include it('-inset-48') {
        @include assert {
          @include output {
            @include \-inset-48;
            @include utils_reset-tw;
          }

          @include expect {
            inset: -12rem;
          }
        }
      }

      @include it('-inset-x-48') {
        @include assert {
          @include output {
            @include \-inset-x-48;
            @include utils_reset-tw;
          }

          @include expect {
            left: -12rem;
            right: -12rem;
          }
        }
      }

      @include it('-inset-y-48') {
        @include assert {
          @include output {
            @include \-inset-y-48;
            @include utils_reset-tw;
          }

          @include expect {
            top: -12rem;
            bottom: -12rem;
          }
        }
      }

      @include it('-start-48') {
        @include assert {
          @include output {
            @include \-start-48;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: -12rem;
          }
        }
      }

      @include it('-end-48') {
        @include assert {
          @include output {
            @include \-end-48;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: -12rem;
          }
        }
      }

      @include it('-top-48') {
        @include assert {
          @include output {
            @include \-top-48;
            @include utils_reset-tw;
          }

          @include expect {
            top: -12rem;
          }
        }
      }

      @include it('-right-48') {
        @include assert {
          @include output {
            @include \-right-48;
            @include utils_reset-tw;
          }

          @include expect {
            right: -12rem;
          }
        }
      }

      @include it('-bottom-48') {
        @include assert {
          @include output {
            @include \-bottom-48;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: -12rem;
          }
        }
      }

      @include it('-left-48') {
        @include assert {
          @include output {
            @include \-left-48;
            @include utils_reset-tw;
          }

          @include expect {
            left: -12rem;
          }
        }
      }

      @include it('-inset-52') {
        @include assert {
          @include output {
            @include \-inset-52;
            @include utils_reset-tw;
          }

          @include expect {
            inset: -13rem;
          }
        }
      }

      @include it('-inset-x-52') {
        @include assert {
          @include output {
            @include \-inset-x-52;
            @include utils_reset-tw;
          }

          @include expect {
            left: -13rem;
            right: -13rem;
          }
        }
      }

      @include it('-inset-y-52') {
        @include assert {
          @include output {
            @include \-inset-y-52;
            @include utils_reset-tw;
          }

          @include expect {
            top: -13rem;
            bottom: -13rem;
          }
        }
      }

      @include it('-start-52') {
        @include assert {
          @include output {
            @include \-start-52;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: -13rem;
          }
        }
      }

      @include it('-end-52') {
        @include assert {
          @include output {
            @include \-end-52;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: -13rem;
          }
        }
      }

      @include it('-top-52') {
        @include assert {
          @include output {
            @include \-top-52;
            @include utils_reset-tw;
          }

          @include expect {
            top: -13rem;
          }
        }
      }

      @include it('-right-52') {
        @include assert {
          @include output {
            @include \-right-52;
            @include utils_reset-tw;
          }

          @include expect {
            right: -13rem;
          }
        }
      }

      @include it('-bottom-52') {
        @include assert {
          @include output {
            @include \-bottom-52;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: -13rem;
          }
        }
      }

      @include it('-left-52') {
        @include assert {
          @include output {
            @include \-left-52;
            @include utils_reset-tw;
          }

          @include expect {
            left: -13rem;
          }
        }
      }

      @include it('-inset-56') {
        @include assert {
          @include output {
            @include \-inset-56;
            @include utils_reset-tw;
          }

          @include expect {
            inset: -14rem;
          }
        }
      }

      @include it('-inset-x-56') {
        @include assert {
          @include output {
            @include \-inset-x-56;
            @include utils_reset-tw;
          }

          @include expect {
            left: -14rem;
            right: -14rem;
          }
        }
      }

      @include it('-inset-y-56') {
        @include assert {
          @include output {
            @include \-inset-y-56;
            @include utils_reset-tw;
          }

          @include expect {
            top: -14rem;
            bottom: -14rem;
          }
        }
      }

      @include it('-start-56') {
        @include assert {
          @include output {
            @include \-start-56;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: -14rem;
          }
        }
      }

      @include it('-end-56') {
        @include assert {
          @include output {
            @include \-end-56;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: -14rem;
          }
        }
      }

      @include it('-top-56') {
        @include assert {
          @include output {
            @include \-top-56;
            @include utils_reset-tw;
          }

          @include expect {
            top: -14rem;
          }
        }
      }

      @include it('-right-56') {
        @include assert {
          @include output {
            @include \-right-56;
            @include utils_reset-tw;
          }

          @include expect {
            right: -14rem;
          }
        }
      }

      @include it('-bottom-56') {
        @include assert {
          @include output {
            @include \-bottom-56;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: -14rem;
          }
        }
      }

      @include it('-left-56') {
        @include assert {
          @include output {
            @include \-left-56;
            @include utils_reset-tw;
          }

          @include expect {
            left: -14rem;
          }
        }
      }

      @include it('-inset-60') {
        @include assert {
          @include output {
            @include \-inset-60;
            @include utils_reset-tw;
          }

          @include expect {
            inset: -15rem;
          }
        }
      }

      @include it('-inset-x-60') {
        @include assert {
          @include output {
            @include \-inset-x-60;
            @include utils_reset-tw;
          }

          @include expect {
            left: -15rem;
            right: -15rem;
          }
        }
      }

      @include it('-inset-y-60') {
        @include assert {
          @include output {
            @include \-inset-y-60;
            @include utils_reset-tw;
          }

          @include expect {
            top: -15rem;
            bottom: -15rem;
          }
        }
      }

      @include it('-start-60') {
        @include assert {
          @include output {
            @include \-start-60;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: -15rem;
          }
        }
      }

      @include it('-end-60') {
        @include assert {
          @include output {
            @include \-end-60;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: -15rem;
          }
        }
      }

      @include it('-top-60') {
        @include assert {
          @include output {
            @include \-top-60;
            @include utils_reset-tw;
          }

          @include expect {
            top: -15rem;
          }
        }
      }

      @include it('-right-60') {
        @include assert {
          @include output {
            @include \-right-60;
            @include utils_reset-tw;
          }

          @include expect {
            right: -15rem;
          }
        }
      }

      @include it('-bottom-60') {
        @include assert {
          @include output {
            @include \-bottom-60;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: -15rem;
          }
        }
      }

      @include it('-left-60') {
        @include assert {
          @include output {
            @include \-left-60;
            @include utils_reset-tw;
          }

          @include expect {
            left: -15rem;
          }
        }
      }

      @include it('-inset-64') {
        @include assert {
          @include output {
            @include \-inset-64;
            @include utils_reset-tw;
          }

          @include expect {
            inset: -16rem;
          }
        }
      }

      @include it('-inset-x-64') {
        @include assert {
          @include output {
            @include \-inset-x-64;
            @include utils_reset-tw;
          }

          @include expect {
            left: -16rem;
            right: -16rem;
          }
        }
      }

      @include it('-inset-y-64') {
        @include assert {
          @include output {
            @include \-inset-y-64;
            @include utils_reset-tw;
          }

          @include expect {
            top: -16rem;
            bottom: -16rem;
          }
        }
      }

      @include it('-start-64') {
        @include assert {
          @include output {
            @include \-start-64;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: -16rem;
          }
        }
      }

      @include it('-end-64') {
        @include assert {
          @include output {
            @include \-end-64;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: -16rem;
          }
        }
      }

      @include it('-top-64') {
        @include assert {
          @include output {
            @include \-top-64;
            @include utils_reset-tw;
          }

          @include expect {
            top: -16rem;
          }
        }
      }

      @include it('-right-64') {
        @include assert {
          @include output {
            @include \-right-64;
            @include utils_reset-tw;
          }

          @include expect {
            right: -16rem;
          }
        }
      }

      @include it('-bottom-64') {
        @include assert {
          @include output {
            @include \-bottom-64;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: -16rem;
          }
        }
      }

      @include it('-left-64') {
        @include assert {
          @include output {
            @include \-left-64;
            @include utils_reset-tw;
          }

          @include expect {
            left: -16rem;
          }
        }
      }

      @include it('-inset-72') {
        @include assert {
          @include output {
            @include \-inset-72;
            @include utils_reset-tw;
          }

          @include expect {
            inset: -18rem;
          }
        }
      }

      @include it('-inset-x-72') {
        @include assert {
          @include output {
            @include \-inset-x-72;
            @include utils_reset-tw;
          }

          @include expect {
            left: -18rem;
            right: -18rem;
          }
        }
      }

      @include it('-inset-y-72') {
        @include assert {
          @include output {
            @include \-inset-y-72;
            @include utils_reset-tw;
          }

          @include expect {
            top: -18rem;
            bottom: -18rem;
          }
        }
      }

      @include it('-start-72') {
        @include assert {
          @include output {
            @include \-start-72;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: -18rem;
          }
        }
      }

      @include it('-end-72') {
        @include assert {
          @include output {
            @include \-end-72;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: -18rem;
          }
        }
      }

      @include it('-top-72') {
        @include assert {
          @include output {
            @include \-top-72;
            @include utils_reset-tw;
          }

          @include expect {
            top: -18rem;
          }
        }
      }

      @include it('-right-72') {
        @include assert {
          @include output {
            @include \-right-72;
            @include utils_reset-tw;
          }

          @include expect {
            right: -18rem;
          }
        }
      }

      @include it('-bottom-72') {
        @include assert {
          @include output {
            @include \-bottom-72;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: -18rem;
          }
        }
      }

      @include it('-left-72') {
        @include assert {
          @include output {
            @include \-left-72;
            @include utils_reset-tw;
          }

          @include expect {
            left: -18rem;
          }
        }
      }

      @include it('-inset-80') {
        @include assert {
          @include output {
            @include \-inset-80;
            @include utils_reset-tw;
          }

          @include expect {
            inset: -20rem;
          }
        }
      }

      @include it('-inset-x-80') {
        @include assert {
          @include output {
            @include \-inset-x-80;
            @include utils_reset-tw;
          }

          @include expect {
            left: -20rem;
            right: -20rem;
          }
        }
      }

      @include it('-inset-y-80') {
        @include assert {
          @include output {
            @include \-inset-y-80;
            @include utils_reset-tw;
          }

          @include expect {
            top: -20rem;
            bottom: -20rem;
          }
        }
      }

      @include it('-start-80') {
        @include assert {
          @include output {
            @include \-start-80;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: -20rem;
          }
        }
      }

      @include it('-end-80') {
        @include assert {
          @include output {
            @include \-end-80;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: -20rem;
          }
        }
      }

      @include it('-top-80') {
        @include assert {
          @include output {
            @include \-top-80;
            @include utils_reset-tw;
          }

          @include expect {
            top: -20rem;
          }
        }
      }

      @include it('-right-80') {
        @include assert {
          @include output {
            @include \-right-80;
            @include utils_reset-tw;
          }

          @include expect {
            right: -20rem;
          }
        }
      }

      @include it('-bottom-80') {
        @include assert {
          @include output {
            @include \-bottom-80;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: -20rem;
          }
        }
      }

      @include it('-left-80') {
        @include assert {
          @include output {
            @include \-left-80;
            @include utils_reset-tw;
          }

          @include expect {
            left: -20rem;
          }
        }
      }

      @include it('-inset-96') {
        @include assert {
          @include output {
            @include \-inset-96;
            @include utils_reset-tw;
          }

          @include expect {
            inset: -24rem;
          }
        }
      }

      @include it('-inset-x-96') {
        @include assert {
          @include output {
            @include \-inset-x-96;
            @include utils_reset-tw;
          }

          @include expect {
            left: -24rem;
            right: -24rem;
          }
        }
      }

      @include it('-inset-y-96') {
        @include assert {
          @include output {
            @include \-inset-y-96;
            @include utils_reset-tw;
          }

          @include expect {
            top: -24rem;
            bottom: -24rem;
          }
        }
      }

      @include it('-start-96') {
        @include assert {
          @include output {
            @include \-start-96;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: -24rem;
          }
        }
      }

      @include it('-end-96') {
        @include assert {
          @include output {
            @include \-end-96;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: -24rem;
          }
        }
      }

      @include it('-top-96') {
        @include assert {
          @include output {
            @include \-top-96;
            @include utils_reset-tw;
          }

          @include expect {
            top: -24rem;
          }
        }
      }

      @include it('-right-96') {
        @include assert {
          @include output {
            @include \-right-96;
            @include utils_reset-tw;
          }

          @include expect {
            right: -24rem;
          }
        }
      }

      @include it('-bottom-96') {
        @include assert {
          @include output {
            @include \-bottom-96;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: -24rem;
          }
        }
      }

      @include it('-left-96') {
        @include assert {
          @include output {
            @include \-left-96;
            @include utils_reset-tw;
          }

          @include expect {
            left: -24rem;
          }
        }
      }

      @include it('-inset-1\/2') {
        @include assert {
          @include output {
            @include \-inset-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            inset: -50%;
          }
        }
      }

      @include it('-inset-1\/3') {
        @include assert {
          @include output {
            @include \-inset-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            inset: -33.333333%;
          }
        }
      }

      @include it('-inset-2\/3') {
        @include assert {
          @include output {
            @include \-inset-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            inset: -66.666667%;
          }
        }
      }

      @include it('-inset-1\/4') {
        @include assert {
          @include output {
            @include \-inset-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            inset: -25%;
          }
        }
      }

      @include it('-inset-2\/4') {
        @include assert {
          @include output {
            @include \-inset-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            inset: -50%;
          }
        }
      }

      @include it('-inset-3\/4') {
        @include assert {
          @include output {
            @include \-inset-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            inset: -75%;
          }
        }
      }

      @include it('-inset-full') {
        @include assert {
          @include output {
            @include \-inset-full;
            @include utils_reset-tw;
          }

          @include expect {
            inset: -100%;
          }
        }
      }

      @include it('-inset-x-1\/2') {
        @include assert {
          @include output {
            @include \-inset-x-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            left: -50%;
            right: -50%;
          }
        }
      }

      @include it('-inset-x-1\/3') {
        @include assert {
          @include output {
            @include \-inset-x-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            left: -33.333333%;
            right: -33.333333%;
          }
        }
      }

      @include it('-inset-x-2\/3') {
        @include assert {
          @include output {
            @include \-inset-x-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            left: -66.666667%;
            right: -66.666667%;
          }
        }
      }

      @include it('-inset-x-1\/4') {
        @include assert {
          @include output {
            @include \-inset-x-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            left: -25%;
            right: -25%;
          }
        }
      }

      @include it('-inset-x-2\/4') {
        @include assert {
          @include output {
            @include \-inset-x-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            left: -50%;
            right: -50%;
          }
        }
      }

      @include it('-inset-x-3\/4') {
        @include assert {
          @include output {
            @include \-inset-x-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            left: -75%;
            right: -75%;
          }
        }
      }

      @include it('-inset-x-full') {
        @include assert {
          @include output {
            @include \-inset-x-full;
            @include utils_reset-tw;
          }

          @include expect {
            left: -100%;
            right: -100%;
          }
        }
      }

      @include it('-inset-y-1\/2') {
        @include assert {
          @include output {
            @include \-inset-y-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            top: -50%;
            bottom: -50%;
          }
        }
      }

      @include it('-inset-y-1\/3') {
        @include assert {
          @include output {
            @include \-inset-y-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            top: -33.333333%;
            bottom: -33.333333%;
          }
        }
      }

      @include it('-inset-y-2\/3') {
        @include assert {
          @include output {
            @include \-inset-y-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            top: -66.666667%;
            bottom: -66.666667%;
          }
        }
      }

      @include it('-inset-y-1\/4') {
        @include assert {
          @include output {
            @include \-inset-y-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            top: -25%;
            bottom: -25%;
          }
        }
      }

      @include it('-inset-y-2\/4') {
        @include assert {
          @include output {
            @include \-inset-y-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            top: -50%;
            bottom: -50%;
          }
        }
      }

      @include it('-inset-y-3\/4') {
        @include assert {
          @include output {
            @include \-inset-y-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            top: -75%;
            bottom: -75%;
          }
        }
      }

      @include it('-inset-y-full') {
        @include assert {
          @include output {
            @include \-inset-y-full;
            @include utils_reset-tw;
          }

          @include expect {
            top: -100%;
            bottom: -100%;
          }
        }
      }

      @include it('-start-1\/2') {
        @include assert {
          @include output {
            @include \-start-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: -50%;
          }
        }
      }

      @include it('-start-1\/3') {
        @include assert {
          @include output {
            @include \-start-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: -33.333333%;
          }
        }
      }

      @include it('-start-2\/3') {
        @include assert {
          @include output {
            @include \-start-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: -66.666667%;
          }
        }
      }

      @include it('-start-1\/4') {
        @include assert {
          @include output {
            @include \-start-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: -25%;
          }
        }
      }

      @include it('-start-2\/4') {
        @include assert {
          @include output {
            @include \-start-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: -50%;
          }
        }
      }

      @include it('-start-3\/4') {
        @include assert {
          @include output {
            @include \-start-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: -75%;
          }
        }
      }

      @include it('-start-full') {
        @include assert {
          @include output {
            @include \-start-full;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: -100%;
          }
        }
      }

      @include it('-end-1\/2') {
        @include assert {
          @include output {
            @include \-end-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: -50%;
          }
        }
      }

      @include it('-end-1\/3') {
        @include assert {
          @include output {
            @include \-end-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: -33.333333%;
          }
        }
      }

      @include it('-end-2\/3') {
        @include assert {
          @include output {
            @include \-end-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: -66.666667%;
          }
        }
      }

      @include it('-end-1\/4') {
        @include assert {
          @include output {
            @include \-end-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: -25%;
          }
        }
      }

      @include it('-end-2\/4') {
        @include assert {
          @include output {
            @include \-end-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: -50%;
          }
        }
      }

      @include it('-end-3\/4') {
        @include assert {
          @include output {
            @include \-end-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: -75%;
          }
        }
      }

      @include it('-end-full') {
        @include assert {
          @include output {
            @include \-end-full;
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: -100%;
          }
        }
      }

      @include it('-top-1\/2') {
        @include assert {
          @include output {
            @include \-top-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            top: -50%;
          }
        }
      }

      @include it('-top-1\/3') {
        @include assert {
          @include output {
            @include \-top-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            top: -33.333333%;
          }
        }
      }

      @include it('-top-2\/3') {
        @include assert {
          @include output {
            @include \-top-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            top: -66.666667%;
          }
        }
      }

      @include it('-top-1\/4') {
        @include assert {
          @include output {
            @include \-top-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            top: -25%;
          }
        }
      }

      @include it('-top-2\/4') {
        @include assert {
          @include output {
            @include \-top-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            top: -50%;
          }
        }
      }

      @include it('-top-3\/4') {
        @include assert {
          @include output {
            @include \-top-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            top: -75%;
          }
        }
      }

      @include it('-top-full') {
        @include assert {
          @include output {
            @include \-top-full;
            @include utils_reset-tw;
          }

          @include expect {
            top: -100%;
          }
        }
      }

      @include it('-right-1\/2') {
        @include assert {
          @include output {
            @include \-right-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            right: -50%;
          }
        }
      }

      @include it('-right-1\/3') {
        @include assert {
          @include output {
            @include \-right-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            right: -33.333333%;
          }
        }
      }

      @include it('-right-2\/3') {
        @include assert {
          @include output {
            @include \-right-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            right: -66.666667%;
          }
        }
      }

      @include it('-right-1\/4') {
        @include assert {
          @include output {
            @include \-right-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            right: -25%;
          }
        }
      }

      @include it('-right-2\/4') {
        @include assert {
          @include output {
            @include \-right-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            right: -50%;
          }
        }
      }

      @include it('-right-3\/4') {
        @include assert {
          @include output {
            @include \-right-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            right: -75%;
          }
        }
      }

      @include it('-right-full') {
        @include assert {
          @include output {
            @include \-right-full;
            @include utils_reset-tw;
          }

          @include expect {
            right: -100%;
          }
        }
      }

      @include it('-bottom-1\/2') {
        @include assert {
          @include output {
            @include \-bottom-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: -50%;
          }
        }
      }

      @include it('-bottom-1\/3') {
        @include assert {
          @include output {
            @include \-bottom-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: -33.333333%;
          }
        }
      }

      @include it('-bottom-2\/3') {
        @include assert {
          @include output {
            @include \-bottom-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: -66.666667%;
          }
        }
      }

      @include it('-bottom-1\/4') {
        @include assert {
          @include output {
            @include \-bottom-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: -25%;
          }
        }
      }

      @include it('-bottom-2\/4') {
        @include assert {
          @include output {
            @include \-bottom-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: -50%;
          }
        }
      }

      @include it('-bottom-3\/4') {
        @include assert {
          @include output {
            @include \-bottom-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: -75%;
          }
        }
      }

      @include it('-bottom-full') {
        @include assert {
          @include output {
            @include \-bottom-full;
            @include utils_reset-tw;
          }

          @include expect {
            bottom: -100%;
          }
        }
      }

      @include it('-left-1\/2') {
        @include assert {
          @include output {
            @include \-left-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            left: -50%;
          }
        }
      }

      @include it('-left-1\/3') {
        @include assert {
          @include output {
            @include \-left-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            left: -33.333333%;
          }
        }
      }

      @include it('-left-2\/3') {
        @include assert {
          @include output {
            @include \-left-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            left: -66.666667%;
          }
        }
      }

      @include it('-left-1\/4') {
        @include assert {
          @include output {
            @include \-left-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            left: -25%;
          }
        }
      }

      @include it('-left-2\/4') {
        @include assert {
          @include output {
            @include \-left-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            left: -50%;
          }
        }
      }

      @include it('-left-3\/4') {
        @include assert {
          @include output {
            @include \-left-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            left: -75%;
          }
        }
      }

      @include it('-left-full') {
        @include assert {
          @include output {
            @include \-left-full;
            @include utils_reset-tw;
          }

          @include expect {
            left: -100%;
          }
        }
      }
    }

    @include describe('Rwd') {
      @include it('sm\:inset-0') {
        @include assert {
          @include output {
            @include sm\:inset-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: 0px;
            }
          }
        }
      }

      @include it('sm\:inset-x-0') {
        @include assert {
          @include output {
            @include sm\:inset-x-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 0px;
              right: 0px;
            }
          }
        }
      }

      @include it('sm\:inset-y-0') {
        @include assert {
          @include output {
            @include sm\:inset-y-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 0px;
              bottom: 0px;
            }
          }
        }
      }

      @include it('sm\:start-0') {
        @include assert {
          @include output {
            @include sm\:start-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: 0px;
            }
          }
        }
      }

      @include it('sm\:end-0') {
        @include assert {
          @include output {
            @include sm\:end-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: 0px;
            }
          }
        }
      }

      @include it('sm\:top-0') {
        @include assert {
          @include output {
            @include sm\:top-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 0px;
            }
          }
        }
      }

      @include it('sm\:right-0') {
        @include assert {
          @include output {
            @include sm\:right-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: 0px;
            }
          }
        }
      }

      @include it('sm\:bottom-0') {
        @include assert {
          @include output {
            @include sm\:bottom-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: 0px;
            }
          }
        }
      }

      @include it('sm\:left-0') {
        @include assert {
          @include output {
            @include sm\:left-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 0px;
            }
          }
        }
      }

      @include it('sm\:inset-px') {
        @include assert {
          @include output {
            @include sm\:inset-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: 1px;
            }
          }
        }
      }

      @include it('sm\:inset-x-px') {
        @include assert {
          @include output {
            @include sm\:inset-x-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 1px;
              right: 1px;
            }
          }
        }
      }

      @include it('sm\:inset-y-px') {
        @include assert {
          @include output {
            @include sm\:inset-y-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 1px;
              bottom: 1px;
            }
          }
        }
      }

      @include it('sm\:start-px') {
        @include assert {
          @include output {
            @include sm\:start-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: 1px;
            }
          }
        }
      }

      @include it('sm\:end-px') {
        @include assert {
          @include output {
            @include sm\:end-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: 1px;
            }
          }
        }
      }

      @include it('sm\:top-px') {
        @include assert {
          @include output {
            @include sm\:top-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 1px;
            }
          }
        }
      }

      @include it('sm\:right-px') {
        @include assert {
          @include output {
            @include sm\:right-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: 1px;
            }
          }
        }
      }

      @include it('sm\:bottom-px') {
        @include assert {
          @include output {
            @include sm\:bottom-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: 1px;
            }
          }
        }
      }

      @include it('sm\:left-px') {
        @include assert {
          @include output {
            @include sm\:left-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 1px;
            }
          }
        }
      }

      @include it('sm\:inset-0\.5') {
        @include assert {
          @include output {
            @include sm\:inset-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: 0.125rem;
            }
          }
        }
      }

      @include it('sm\:inset-x-0\.5') {
        @include assert {
          @include output {
            @include sm\:inset-x-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 0.125rem;
              right: 0.125rem;
            }
          }
        }
      }

      @include it('sm\:inset-y-0\.5') {
        @include assert {
          @include output {
            @include sm\:inset-y-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 0.125rem;
              bottom: 0.125rem;
            }
          }
        }
      }

      @include it('sm\:start-0\.5') {
        @include assert {
          @include output {
            @include sm\:start-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: 0.125rem;
            }
          }
        }
      }

      @include it('sm\:end-0\.5') {
        @include assert {
          @include output {
            @include sm\:end-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: 0.125rem;
            }
          }
        }
      }

      @include it('sm\:top-0\.5') {
        @include assert {
          @include output {
            @include sm\:top-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 0.125rem;
            }
          }
        }
      }

      @include it('sm\:right-0\.5') {
        @include assert {
          @include output {
            @include sm\:right-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: 0.125rem;
            }
          }
        }
      }

      @include it('sm\:bottom-0\.5') {
        @include assert {
          @include output {
            @include sm\:bottom-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: 0.125rem;
            }
          }
        }
      }

      @include it('sm\:left-0\.5') {
        @include assert {
          @include output {
            @include sm\:left-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 0.125rem;
            }
          }
        }
      }

      @include it('sm\:inset-1') {
        @include assert {
          @include output {
            @include sm\:inset-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: 0.25rem;
            }
          }
        }
      }

      @include it('sm\:inset-x-1') {
        @include assert {
          @include output {
            @include sm\:inset-x-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 0.25rem;
              right: 0.25rem;
            }
          }
        }
      }

      @include it('sm\:inset-y-1') {
        @include assert {
          @include output {
            @include sm\:inset-y-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 0.25rem;
              bottom: 0.25rem;
            }
          }
        }
      }

      @include it('sm\:start-1') {
        @include assert {
          @include output {
            @include sm\:start-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: 0.25rem;
            }
          }
        }
      }

      @include it('sm\:end-1') {
        @include assert {
          @include output {
            @include sm\:end-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: 0.25rem;
            }
          }
        }
      }

      @include it('sm\:top-1') {
        @include assert {
          @include output {
            @include sm\:top-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 0.25rem;
            }
          }
        }
      }

      @include it('sm\:right-1') {
        @include assert {
          @include output {
            @include sm\:right-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: 0.25rem;
            }
          }
        }
      }

      @include it('sm\:bottom-1') {
        @include assert {
          @include output {
            @include sm\:bottom-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: 0.25rem;
            }
          }
        }
      }

      @include it('sm\:left-1') {
        @include assert {
          @include output {
            @include sm\:left-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 0.25rem;
            }
          }
        }
      }

      @include it('sm\:inset-1\.5') {
        @include assert {
          @include output {
            @include sm\:inset-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: 0.375rem;
            }
          }
        }
      }

      @include it('sm\:inset-x-1\.5') {
        @include assert {
          @include output {
            @include sm\:inset-x-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 0.375rem;
              right: 0.375rem;
            }
          }
        }
      }

      @include it('sm\:inset-y-1\.5') {
        @include assert {
          @include output {
            @include sm\:inset-y-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 0.375rem;
              bottom: 0.375rem;
            }
          }
        }
      }

      @include it('sm\:start-1\.5') {
        @include assert {
          @include output {
            @include sm\:start-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: 0.375rem;
            }
          }
        }
      }

      @include it('sm\:end-1\.5') {
        @include assert {
          @include output {
            @include sm\:end-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: 0.375rem;
            }
          }
        }
      }

      @include it('sm\:top-1\.5') {
        @include assert {
          @include output {
            @include sm\:top-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 0.375rem;
            }
          }
        }
      }

      @include it('sm\:right-1\.5') {
        @include assert {
          @include output {
            @include sm\:right-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: 0.375rem;
            }
          }
        }
      }

      @include it('sm\:bottom-1\.5') {
        @include assert {
          @include output {
            @include sm\:bottom-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: 0.375rem;
            }
          }
        }
      }

      @include it('sm\:left-1\.5') {
        @include assert {
          @include output {
            @include sm\:left-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 0.375rem;
            }
          }
        }
      }

      @include it('sm\:inset-2') {
        @include assert {
          @include output {
            @include sm\:inset-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: 0.5rem;
            }
          }
        }
      }

      @include it('sm\:inset-x-2') {
        @include assert {
          @include output {
            @include sm\:inset-x-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 0.5rem;
              right: 0.5rem;
            }
          }
        }
      }

      @include it('sm\:inset-y-2') {
        @include assert {
          @include output {
            @include sm\:inset-y-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 0.5rem;
              bottom: 0.5rem;
            }
          }
        }
      }

      @include it('sm\:start-2') {
        @include assert {
          @include output {
            @include sm\:start-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: 0.5rem;
            }
          }
        }
      }

      @include it('sm\:end-2') {
        @include assert {
          @include output {
            @include sm\:end-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: 0.5rem;
            }
          }
        }
      }

      @include it('sm\:top-2') {
        @include assert {
          @include output {
            @include sm\:top-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 0.5rem;
            }
          }
        }
      }

      @include it('sm\:right-2') {
        @include assert {
          @include output {
            @include sm\:right-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: 0.5rem;
            }
          }
        }
      }

      @include it('sm\:bottom-2') {
        @include assert {
          @include output {
            @include sm\:bottom-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: 0.5rem;
            }
          }
        }
      }

      @include it('sm\:left-2') {
        @include assert {
          @include output {
            @include sm\:left-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 0.5rem;
            }
          }
        }
      }

      @include it('sm\:inset-2\.5') {
        @include assert {
          @include output {
            @include sm\:inset-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: 0.625rem;
            }
          }
        }
      }

      @include it('sm\:inset-x-2\.5') {
        @include assert {
          @include output {
            @include sm\:inset-x-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 0.625rem;
              right: 0.625rem;
            }
          }
        }
      }

      @include it('sm\:inset-y-2\.5') {
        @include assert {
          @include output {
            @include sm\:inset-y-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 0.625rem;
              bottom: 0.625rem;
            }
          }
        }
      }

      @include it('sm\:start-2\.5') {
        @include assert {
          @include output {
            @include sm\:start-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: 0.625rem;
            }
          }
        }
      }

      @include it('sm\:end-2\.5') {
        @include assert {
          @include output {
            @include sm\:end-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: 0.625rem;
            }
          }
        }
      }

      @include it('sm\:top-2\.5') {
        @include assert {
          @include output {
            @include sm\:top-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 0.625rem;
            }
          }
        }
      }

      @include it('sm\:right-2\.5') {
        @include assert {
          @include output {
            @include sm\:right-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: 0.625rem;
            }
          }
        }
      }

      @include it('sm\:bottom-2\.5') {
        @include assert {
          @include output {
            @include sm\:bottom-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: 0.625rem;
            }
          }
        }
      }

      @include it('sm\:left-2\.5') {
        @include assert {
          @include output {
            @include sm\:left-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 0.625rem;
            }
          }
        }
      }

      @include it('sm\:inset-3') {
        @include assert {
          @include output {
            @include sm\:inset-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: 0.75rem;
            }
          }
        }
      }

      @include it('sm\:inset-x-3') {
        @include assert {
          @include output {
            @include sm\:inset-x-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 0.75rem;
              right: 0.75rem;
            }
          }
        }
      }

      @include it('sm\:inset-y-3') {
        @include assert {
          @include output {
            @include sm\:inset-y-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 0.75rem;
              bottom: 0.75rem;
            }
          }
        }
      }

      @include it('sm\:start-3') {
        @include assert {
          @include output {
            @include sm\:start-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: 0.75rem;
            }
          }
        }
      }

      @include it('sm\:end-3') {
        @include assert {
          @include output {
            @include sm\:end-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: 0.75rem;
            }
          }
        }
      }

      @include it('sm\:top-3') {
        @include assert {
          @include output {
            @include sm\:top-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 0.75rem;
            }
          }
        }
      }

      @include it('sm\:right-3') {
        @include assert {
          @include output {
            @include sm\:right-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: 0.75rem;
            }
          }
        }
      }

      @include it('sm\:bottom-3') {
        @include assert {
          @include output {
            @include sm\:bottom-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: 0.75rem;
            }
          }
        }
      }

      @include it('sm\:left-3') {
        @include assert {
          @include output {
            @include sm\:left-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 0.75rem;
            }
          }
        }
      }

      @include it('sm\:inset-3\.5') {
        @include assert {
          @include output {
            @include sm\:inset-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: 0.875rem;
            }
          }
        }
      }

      @include it('sm\:inset-x-3\.5') {
        @include assert {
          @include output {
            @include sm\:inset-x-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 0.875rem;
              right: 0.875rem;
            }
          }
        }
      }

      @include it('sm\:inset-y-3\.5') {
        @include assert {
          @include output {
            @include sm\:inset-y-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 0.875rem;
              bottom: 0.875rem;
            }
          }
        }
      }

      @include it('sm\:start-3\.5') {
        @include assert {
          @include output {
            @include sm\:start-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: 0.875rem;
            }
          }
        }
      }

      @include it('sm\:end-3\.5') {
        @include assert {
          @include output {
            @include sm\:end-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: 0.875rem;
            }
          }
        }
      }

      @include it('sm\:top-3\.5') {
        @include assert {
          @include output {
            @include sm\:top-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 0.875rem;
            }
          }
        }
      }

      @include it('sm\:right-3\.5') {
        @include assert {
          @include output {
            @include sm\:right-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: 0.875rem;
            }
          }
        }
      }

      @include it('sm\:bottom-3\.5') {
        @include assert {
          @include output {
            @include sm\:bottom-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: 0.875rem;
            }
          }
        }
      }

      @include it('sm\:left-3\.5') {
        @include assert {
          @include output {
            @include sm\:left-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 0.875rem;
            }
          }
        }
      }

      @include it('sm\:inset-4') {
        @include assert {
          @include output {
            @include sm\:inset-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: 1rem;
            }
          }
        }
      }

      @include it('sm\:inset-x-4') {
        @include assert {
          @include output {
            @include sm\:inset-x-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 1rem;
              right: 1rem;
            }
          }
        }
      }

      @include it('sm\:inset-y-4') {
        @include assert {
          @include output {
            @include sm\:inset-y-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 1rem;
              bottom: 1rem;
            }
          }
        }
      }

      @include it('sm\:start-4') {
        @include assert {
          @include output {
            @include sm\:start-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: 1rem;
            }
          }
        }
      }

      @include it('sm\:end-4') {
        @include assert {
          @include output {
            @include sm\:end-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: 1rem;
            }
          }
        }
      }

      @include it('sm\:top-4') {
        @include assert {
          @include output {
            @include sm\:top-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 1rem;
            }
          }
        }
      }

      @include it('sm\:right-4') {
        @include assert {
          @include output {
            @include sm\:right-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: 1rem;
            }
          }
        }
      }

      @include it('sm\:bottom-4') {
        @include assert {
          @include output {
            @include sm\:bottom-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: 1rem;
            }
          }
        }
      }

      @include it('sm\:left-4') {
        @include assert {
          @include output {
            @include sm\:left-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 1rem;
            }
          }
        }
      }

      @include it('sm\:inset-5') {
        @include assert {
          @include output {
            @include sm\:inset-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: 1.25rem;
            }
          }
        }
      }

      @include it('sm\:inset-x-5') {
        @include assert {
          @include output {
            @include sm\:inset-x-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 1.25rem;
              right: 1.25rem;
            }
          }
        }
      }

      @include it('sm\:inset-y-5') {
        @include assert {
          @include output {
            @include sm\:inset-y-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 1.25rem;
              bottom: 1.25rem;
            }
          }
        }
      }

      @include it('sm\:start-5') {
        @include assert {
          @include output {
            @include sm\:start-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: 1.25rem;
            }
          }
        }
      }

      @include it('sm\:end-5') {
        @include assert {
          @include output {
            @include sm\:end-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: 1.25rem;
            }
          }
        }
      }

      @include it('sm\:top-5') {
        @include assert {
          @include output {
            @include sm\:top-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 1.25rem;
            }
          }
        }
      }

      @include it('sm\:right-5') {
        @include assert {
          @include output {
            @include sm\:right-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: 1.25rem;
            }
          }
        }
      }

      @include it('sm\:bottom-5') {
        @include assert {
          @include output {
            @include sm\:bottom-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: 1.25rem;
            }
          }
        }
      }

      @include it('sm\:left-5') {
        @include assert {
          @include output {
            @include sm\:left-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 1.25rem;
            }
          }
        }
      }

      @include it('sm\:inset-6') {
        @include assert {
          @include output {
            @include sm\:inset-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: 1.5rem;
            }
          }
        }
      }

      @include it('sm\:inset-x-6') {
        @include assert {
          @include output {
            @include sm\:inset-x-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 1.5rem;
              right: 1.5rem;
            }
          }
        }
      }

      @include it('sm\:inset-y-6') {
        @include assert {
          @include output {
            @include sm\:inset-y-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 1.5rem;
              bottom: 1.5rem;
            }
          }
        }
      }

      @include it('sm\:start-6') {
        @include assert {
          @include output {
            @include sm\:start-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: 1.5rem;
            }
          }
        }
      }

      @include it('sm\:end-6') {
        @include assert {
          @include output {
            @include sm\:end-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: 1.5rem;
            }
          }
        }
      }

      @include it('sm\:top-6') {
        @include assert {
          @include output {
            @include sm\:top-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 1.5rem;
            }
          }
        }
      }

      @include it('sm\:right-6') {
        @include assert {
          @include output {
            @include sm\:right-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: 1.5rem;
            }
          }
        }
      }

      @include it('sm\:bottom-6') {
        @include assert {
          @include output {
            @include sm\:bottom-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: 1.5rem;
            }
          }
        }
      }

      @include it('sm\:left-6') {
        @include assert {
          @include output {
            @include sm\:left-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 1.5rem;
            }
          }
        }
      }

      @include it('sm\:inset-7') {
        @include assert {
          @include output {
            @include sm\:inset-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: 1.75rem;
            }
          }
        }
      }

      @include it('sm\:inset-x-7') {
        @include assert {
          @include output {
            @include sm\:inset-x-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 1.75rem;
              right: 1.75rem;
            }
          }
        }
      }

      @include it('sm\:inset-y-7') {
        @include assert {
          @include output {
            @include sm\:inset-y-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 1.75rem;
              bottom: 1.75rem;
            }
          }
        }
      }

      @include it('sm\:start-7') {
        @include assert {
          @include output {
            @include sm\:start-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: 1.75rem;
            }
          }
        }
      }

      @include it('sm\:end-7') {
        @include assert {
          @include output {
            @include sm\:end-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: 1.75rem;
            }
          }
        }
      }

      @include it('sm\:top-7') {
        @include assert {
          @include output {
            @include sm\:top-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 1.75rem;
            }
          }
        }
      }

      @include it('sm\:right-7') {
        @include assert {
          @include output {
            @include sm\:right-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: 1.75rem;
            }
          }
        }
      }

      @include it('sm\:bottom-7') {
        @include assert {
          @include output {
            @include sm\:bottom-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: 1.75rem;
            }
          }
        }
      }

      @include it('sm\:left-7') {
        @include assert {
          @include output {
            @include sm\:left-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 1.75rem;
            }
          }
        }
      }

      @include it('sm\:inset-8') {
        @include assert {
          @include output {
            @include sm\:inset-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: 2rem;
            }
          }
        }
      }

      @include it('sm\:inset-x-8') {
        @include assert {
          @include output {
            @include sm\:inset-x-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 2rem;
              right: 2rem;
            }
          }
        }
      }

      @include it('sm\:inset-y-8') {
        @include assert {
          @include output {
            @include sm\:inset-y-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 2rem;
              bottom: 2rem;
            }
          }
        }
      }

      @include it('sm\:start-8') {
        @include assert {
          @include output {
            @include sm\:start-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: 2rem;
            }
          }
        }
      }

      @include it('sm\:end-8') {
        @include assert {
          @include output {
            @include sm\:end-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: 2rem;
            }
          }
        }
      }

      @include it('sm\:top-8') {
        @include assert {
          @include output {
            @include sm\:top-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 2rem;
            }
          }
        }
      }

      @include it('sm\:right-8') {
        @include assert {
          @include output {
            @include sm\:right-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: 2rem;
            }
          }
        }
      }

      @include it('sm\:bottom-8') {
        @include assert {
          @include output {
            @include sm\:bottom-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: 2rem;
            }
          }
        }
      }

      @include it('sm\:left-8') {
        @include assert {
          @include output {
            @include sm\:left-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 2rem;
            }
          }
        }
      }

      @include it('sm\:inset-9') {
        @include assert {
          @include output {
            @include sm\:inset-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: 2.25rem;
            }
          }
        }
      }

      @include it('sm\:inset-x-9') {
        @include assert {
          @include output {
            @include sm\:inset-x-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 2.25rem;
              right: 2.25rem;
            }
          }
        }
      }

      @include it('sm\:inset-y-9') {
        @include assert {
          @include output {
            @include sm\:inset-y-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 2.25rem;
              bottom: 2.25rem;
            }
          }
        }
      }

      @include it('sm\:start-9') {
        @include assert {
          @include output {
            @include sm\:start-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: 2.25rem;
            }
          }
        }
      }

      @include it('sm\:end-9') {
        @include assert {
          @include output {
            @include sm\:end-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: 2.25rem;
            }
          }
        }
      }

      @include it('sm\:top-9') {
        @include assert {
          @include output {
            @include sm\:top-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 2.25rem;
            }
          }
        }
      }

      @include it('sm\:right-9') {
        @include assert {
          @include output {
            @include sm\:right-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: 2.25rem;
            }
          }
        }
      }

      @include it('sm\:bottom-9') {
        @include assert {
          @include output {
            @include sm\:bottom-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: 2.25rem;
            }
          }
        }
      }

      @include it('sm\:left-9') {
        @include assert {
          @include output {
            @include sm\:left-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 2.25rem;
            }
          }
        }
      }

      @include it('sm\:inset-10') {
        @include assert {
          @include output {
            @include sm\:inset-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: 2.5rem;
            }
          }
        }
      }

      @include it('sm\:inset-x-10') {
        @include assert {
          @include output {
            @include sm\:inset-x-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 2.5rem;
              right: 2.5rem;
            }
          }
        }
      }

      @include it('sm\:inset-y-10') {
        @include assert {
          @include output {
            @include sm\:inset-y-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 2.5rem;
              bottom: 2.5rem;
            }
          }
        }
      }

      @include it('sm\:start-10') {
        @include assert {
          @include output {
            @include sm\:start-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: 2.5rem;
            }
          }
        }
      }

      @include it('sm\:end-10') {
        @include assert {
          @include output {
            @include sm\:end-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: 2.5rem;
            }
          }
        }
      }

      @include it('sm\:top-10') {
        @include assert {
          @include output {
            @include sm\:top-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 2.5rem;
            }
          }
        }
      }

      @include it('sm\:right-10') {
        @include assert {
          @include output {
            @include sm\:right-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: 2.5rem;
            }
          }
        }
      }

      @include it('sm\:bottom-10') {
        @include assert {
          @include output {
            @include sm\:bottom-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: 2.5rem;
            }
          }
        }
      }

      @include it('sm\:left-10') {
        @include assert {
          @include output {
            @include sm\:left-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 2.5rem;
            }
          }
        }
      }

      @include it('sm\:inset-11') {
        @include assert {
          @include output {
            @include sm\:inset-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: 2.75rem;
            }
          }
        }
      }

      @include it('sm\:inset-x-11') {
        @include assert {
          @include output {
            @include sm\:inset-x-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 2.75rem;
              right: 2.75rem;
            }
          }
        }
      }

      @include it('sm\:inset-y-11') {
        @include assert {
          @include output {
            @include sm\:inset-y-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 2.75rem;
              bottom: 2.75rem;
            }
          }
        }
      }

      @include it('sm\:start-11') {
        @include assert {
          @include output {
            @include sm\:start-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: 2.75rem;
            }
          }
        }
      }

      @include it('sm\:end-11') {
        @include assert {
          @include output {
            @include sm\:end-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: 2.75rem;
            }
          }
        }
      }

      @include it('sm\:top-11') {
        @include assert {
          @include output {
            @include sm\:top-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 2.75rem;
            }
          }
        }
      }

      @include it('sm\:right-11') {
        @include assert {
          @include output {
            @include sm\:right-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: 2.75rem;
            }
          }
        }
      }

      @include it('sm\:bottom-11') {
        @include assert {
          @include output {
            @include sm\:bottom-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: 2.75rem;
            }
          }
        }
      }

      @include it('sm\:left-11') {
        @include assert {
          @include output {
            @include sm\:left-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 2.75rem;
            }
          }
        }
      }

      @include it('sm\:inset-12') {
        @include assert {
          @include output {
            @include sm\:inset-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: 3rem;
            }
          }
        }
      }

      @include it('sm\:inset-x-12') {
        @include assert {
          @include output {
            @include sm\:inset-x-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 3rem;
              right: 3rem;
            }
          }
        }
      }

      @include it('sm\:inset-y-12') {
        @include assert {
          @include output {
            @include sm\:inset-y-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 3rem;
              bottom: 3rem;
            }
          }
        }
      }

      @include it('sm\:start-12') {
        @include assert {
          @include output {
            @include sm\:start-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: 3rem;
            }
          }
        }
      }

      @include it('sm\:end-12') {
        @include assert {
          @include output {
            @include sm\:end-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: 3rem;
            }
          }
        }
      }

      @include it('sm\:top-12') {
        @include assert {
          @include output {
            @include sm\:top-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 3rem;
            }
          }
        }
      }

      @include it('sm\:right-12') {
        @include assert {
          @include output {
            @include sm\:right-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: 3rem;
            }
          }
        }
      }

      @include it('sm\:bottom-12') {
        @include assert {
          @include output {
            @include sm\:bottom-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: 3rem;
            }
          }
        }
      }

      @include it('sm\:left-12') {
        @include assert {
          @include output {
            @include sm\:left-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 3rem;
            }
          }
        }
      }

      @include it('sm\:inset-14') {
        @include assert {
          @include output {
            @include sm\:inset-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: 3.5rem;
            }
          }
        }
      }

      @include it('sm\:inset-x-14') {
        @include assert {
          @include output {
            @include sm\:inset-x-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 3.5rem;
              right: 3.5rem;
            }
          }
        }
      }

      @include it('sm\:inset-y-14') {
        @include assert {
          @include output {
            @include sm\:inset-y-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 3.5rem;
              bottom: 3.5rem;
            }
          }
        }
      }

      @include it('sm\:start-14') {
        @include assert {
          @include output {
            @include sm\:start-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: 3.5rem;
            }
          }
        }
      }

      @include it('sm\:end-14') {
        @include assert {
          @include output {
            @include sm\:end-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: 3.5rem;
            }
          }
        }
      }

      @include it('sm\:top-14') {
        @include assert {
          @include output {
            @include sm\:top-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 3.5rem;
            }
          }
        }
      }

      @include it('sm\:right-14') {
        @include assert {
          @include output {
            @include sm\:right-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: 3.5rem;
            }
          }
        }
      }

      @include it('sm\:bottom-14') {
        @include assert {
          @include output {
            @include sm\:bottom-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: 3.5rem;
            }
          }
        }
      }

      @include it('sm\:left-14') {
        @include assert {
          @include output {
            @include sm\:left-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 3.5rem;
            }
          }
        }
      }

      @include it('sm\:inset-16') {
        @include assert {
          @include output {
            @include sm\:inset-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: 4rem;
            }
          }
        }
      }

      @include it('sm\:inset-x-16') {
        @include assert {
          @include output {
            @include sm\:inset-x-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 4rem;
              right: 4rem;
            }
          }
        }
      }

      @include it('sm\:inset-y-16') {
        @include assert {
          @include output {
            @include sm\:inset-y-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 4rem;
              bottom: 4rem;
            }
          }
        }
      }

      @include it('sm\:start-16') {
        @include assert {
          @include output {
            @include sm\:start-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: 4rem;
            }
          }
        }
      }

      @include it('sm\:end-16') {
        @include assert {
          @include output {
            @include sm\:end-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: 4rem;
            }
          }
        }
      }

      @include it('sm\:top-16') {
        @include assert {
          @include output {
            @include sm\:top-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 4rem;
            }
          }
        }
      }

      @include it('sm\:right-16') {
        @include assert {
          @include output {
            @include sm\:right-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: 4rem;
            }
          }
        }
      }

      @include it('sm\:bottom-16') {
        @include assert {
          @include output {
            @include sm\:bottom-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: 4rem;
            }
          }
        }
      }

      @include it('sm\:left-16') {
        @include assert {
          @include output {
            @include sm\:left-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 4rem;
            }
          }
        }
      }

      @include it('sm\:inset-20') {
        @include assert {
          @include output {
            @include sm\:inset-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: 5rem;
            }
          }
        }
      }

      @include it('sm\:inset-x-20') {
        @include assert {
          @include output {
            @include sm\:inset-x-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 5rem;
              right: 5rem;
            }
          }
        }
      }

      @include it('sm\:inset-y-20') {
        @include assert {
          @include output {
            @include sm\:inset-y-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 5rem;
              bottom: 5rem;
            }
          }
        }
      }

      @include it('sm\:start-20') {
        @include assert {
          @include output {
            @include sm\:start-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: 5rem;
            }
          }
        }
      }

      @include it('sm\:end-20') {
        @include assert {
          @include output {
            @include sm\:end-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: 5rem;
            }
          }
        }
      }

      @include it('sm\:top-20') {
        @include assert {
          @include output {
            @include sm\:top-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 5rem;
            }
          }
        }
      }

      @include it('sm\:right-20') {
        @include assert {
          @include output {
            @include sm\:right-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: 5rem;
            }
          }
        }
      }

      @include it('sm\:bottom-20') {
        @include assert {
          @include output {
            @include sm\:bottom-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: 5rem;
            }
          }
        }
      }

      @include it('sm\:left-20') {
        @include assert {
          @include output {
            @include sm\:left-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 5rem;
            }
          }
        }
      }

      @include it('sm\:inset-24') {
        @include assert {
          @include output {
            @include sm\:inset-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: 6rem;
            }
          }
        }
      }

      @include it('sm\:inset-x-24') {
        @include assert {
          @include output {
            @include sm\:inset-x-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 6rem;
              right: 6rem;
            }
          }
        }
      }

      @include it('sm\:inset-y-24') {
        @include assert {
          @include output {
            @include sm\:inset-y-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 6rem;
              bottom: 6rem;
            }
          }
        }
      }

      @include it('sm\:start-24') {
        @include assert {
          @include output {
            @include sm\:start-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: 6rem;
            }
          }
        }
      }

      @include it('sm\:end-24') {
        @include assert {
          @include output {
            @include sm\:end-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: 6rem;
            }
          }
        }
      }

      @include it('sm\:top-24') {
        @include assert {
          @include output {
            @include sm\:top-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 6rem;
            }
          }
        }
      }

      @include it('sm\:right-24') {
        @include assert {
          @include output {
            @include sm\:right-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: 6rem;
            }
          }
        }
      }

      @include it('sm\:bottom-24') {
        @include assert {
          @include output {
            @include sm\:bottom-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: 6rem;
            }
          }
        }
      }

      @include it('sm\:left-24') {
        @include assert {
          @include output {
            @include sm\:left-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 6rem;
            }
          }
        }
      }

      @include it('sm\:inset-28') {
        @include assert {
          @include output {
            @include sm\:inset-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: 7rem;
            }
          }
        }
      }

      @include it('sm\:inset-x-28') {
        @include assert {
          @include output {
            @include sm\:inset-x-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 7rem;
              right: 7rem;
            }
          }
        }
      }

      @include it('sm\:inset-y-28') {
        @include assert {
          @include output {
            @include sm\:inset-y-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 7rem;
              bottom: 7rem;
            }
          }
        }
      }

      @include it('sm\:start-28') {
        @include assert {
          @include output {
            @include sm\:start-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: 7rem;
            }
          }
        }
      }

      @include it('sm\:end-28') {
        @include assert {
          @include output {
            @include sm\:end-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: 7rem;
            }
          }
        }
      }

      @include it('sm\:top-28') {
        @include assert {
          @include output {
            @include sm\:top-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 7rem;
            }
          }
        }
      }

      @include it('sm\:right-28') {
        @include assert {
          @include output {
            @include sm\:right-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: 7rem;
            }
          }
        }
      }

      @include it('sm\:bottom-28') {
        @include assert {
          @include output {
            @include sm\:bottom-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: 7rem;
            }
          }
        }
      }

      @include it('sm\:left-28') {
        @include assert {
          @include output {
            @include sm\:left-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 7rem;
            }
          }
        }
      }

      @include it('sm\:inset-32') {
        @include assert {
          @include output {
            @include sm\:inset-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: 8rem;
            }
          }
        }
      }

      @include it('sm\:inset-x-32') {
        @include assert {
          @include output {
            @include sm\:inset-x-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 8rem;
              right: 8rem;
            }
          }
        }
      }

      @include it('sm\:inset-y-32') {
        @include assert {
          @include output {
            @include sm\:inset-y-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 8rem;
              bottom: 8rem;
            }
          }
        }
      }

      @include it('sm\:start-32') {
        @include assert {
          @include output {
            @include sm\:start-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: 8rem;
            }
          }
        }
      }

      @include it('sm\:end-32') {
        @include assert {
          @include output {
            @include sm\:end-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: 8rem;
            }
          }
        }
      }

      @include it('sm\:top-32') {
        @include assert {
          @include output {
            @include sm\:top-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 8rem;
            }
          }
        }
      }

      @include it('sm\:right-32') {
        @include assert {
          @include output {
            @include sm\:right-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: 8rem;
            }
          }
        }
      }

      @include it('sm\:bottom-32') {
        @include assert {
          @include output {
            @include sm\:bottom-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: 8rem;
            }
          }
        }
      }

      @include it('sm\:left-32') {
        @include assert {
          @include output {
            @include sm\:left-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 8rem;
            }
          }
        }
      }

      @include it('sm\:inset-36') {
        @include assert {
          @include output {
            @include sm\:inset-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: 9rem;
            }
          }
        }
      }

      @include it('sm\:inset-x-36') {
        @include assert {
          @include output {
            @include sm\:inset-x-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 9rem;
              right: 9rem;
            }
          }
        }
      }

      @include it('sm\:inset-y-36') {
        @include assert {
          @include output {
            @include sm\:inset-y-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 9rem;
              bottom: 9rem;
            }
          }
        }
      }

      @include it('sm\:start-36') {
        @include assert {
          @include output {
            @include sm\:start-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: 9rem;
            }
          }
        }
      }

      @include it('sm\:end-36') {
        @include assert {
          @include output {
            @include sm\:end-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: 9rem;
            }
          }
        }
      }

      @include it('sm\:top-36') {
        @include assert {
          @include output {
            @include sm\:top-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 9rem;
            }
          }
        }
      }

      @include it('sm\:right-36') {
        @include assert {
          @include output {
            @include sm\:right-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: 9rem;
            }
          }
        }
      }

      @include it('sm\:bottom-36') {
        @include assert {
          @include output {
            @include sm\:bottom-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: 9rem;
            }
          }
        }
      }

      @include it('sm\:left-36') {
        @include assert {
          @include output {
            @include sm\:left-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 9rem;
            }
          }
        }
      }

      @include it('sm\:inset-40') {
        @include assert {
          @include output {
            @include sm\:inset-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: 10rem;
            }
          }
        }
      }

      @include it('sm\:inset-x-40') {
        @include assert {
          @include output {
            @include sm\:inset-x-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 10rem;
              right: 10rem;
            }
          }
        }
      }

      @include it('sm\:inset-y-40') {
        @include assert {
          @include output {
            @include sm\:inset-y-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 10rem;
              bottom: 10rem;
            }
          }
        }
      }

      @include it('sm\:start-40') {
        @include assert {
          @include output {
            @include sm\:start-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: 10rem;
            }
          }
        }
      }

      @include it('sm\:end-40') {
        @include assert {
          @include output {
            @include sm\:end-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: 10rem;
            }
          }
        }
      }

      @include it('sm\:top-40') {
        @include assert {
          @include output {
            @include sm\:top-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 10rem;
            }
          }
        }
      }

      @include it('sm\:right-40') {
        @include assert {
          @include output {
            @include sm\:right-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: 10rem;
            }
          }
        }
      }

      @include it('sm\:bottom-40') {
        @include assert {
          @include output {
            @include sm\:bottom-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: 10rem;
            }
          }
        }
      }

      @include it('sm\:left-40') {
        @include assert {
          @include output {
            @include sm\:left-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 10rem;
            }
          }
        }
      }

      @include it('sm\:inset-44') {
        @include assert {
          @include output {
            @include sm\:inset-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: 11rem;
            }
          }
        }
      }

      @include it('sm\:inset-x-44') {
        @include assert {
          @include output {
            @include sm\:inset-x-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 11rem;
              right: 11rem;
            }
          }
        }
      }

      @include it('sm\:inset-y-44') {
        @include assert {
          @include output {
            @include sm\:inset-y-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 11rem;
              bottom: 11rem;
            }
          }
        }
      }

      @include it('sm\:start-44') {
        @include assert {
          @include output {
            @include sm\:start-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: 11rem;
            }
          }
        }
      }

      @include it('sm\:end-44') {
        @include assert {
          @include output {
            @include sm\:end-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: 11rem;
            }
          }
        }
      }

      @include it('sm\:top-44') {
        @include assert {
          @include output {
            @include sm\:top-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 11rem;
            }
          }
        }
      }

      @include it('sm\:right-44') {
        @include assert {
          @include output {
            @include sm\:right-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: 11rem;
            }
          }
        }
      }

      @include it('sm\:bottom-44') {
        @include assert {
          @include output {
            @include sm\:bottom-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: 11rem;
            }
          }
        }
      }

      @include it('sm\:left-44') {
        @include assert {
          @include output {
            @include sm\:left-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 11rem;
            }
          }
        }
      }

      @include it('sm\:inset-48') {
        @include assert {
          @include output {
            @include sm\:inset-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: 12rem;
            }
          }
        }
      }

      @include it('sm\:inset-x-48') {
        @include assert {
          @include output {
            @include sm\:inset-x-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 12rem;
              right: 12rem;
            }
          }
        }
      }

      @include it('sm\:inset-y-48') {
        @include assert {
          @include output {
            @include sm\:inset-y-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 12rem;
              bottom: 12rem;
            }
          }
        }
      }

      @include it('sm\:start-48') {
        @include assert {
          @include output {
            @include sm\:start-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: 12rem;
            }
          }
        }
      }

      @include it('sm\:end-48') {
        @include assert {
          @include output {
            @include sm\:end-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: 12rem;
            }
          }
        }
      }

      @include it('sm\:top-48') {
        @include assert {
          @include output {
            @include sm\:top-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 12rem;
            }
          }
        }
      }

      @include it('sm\:right-48') {
        @include assert {
          @include output {
            @include sm\:right-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: 12rem;
            }
          }
        }
      }

      @include it('sm\:bottom-48') {
        @include assert {
          @include output {
            @include sm\:bottom-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: 12rem;
            }
          }
        }
      }

      @include it('sm\:left-48') {
        @include assert {
          @include output {
            @include sm\:left-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 12rem;
            }
          }
        }
      }

      @include it('sm\:inset-52') {
        @include assert {
          @include output {
            @include sm\:inset-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: 13rem;
            }
          }
        }
      }

      @include it('sm\:inset-x-52') {
        @include assert {
          @include output {
            @include sm\:inset-x-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 13rem;
              right: 13rem;
            }
          }
        }
      }

      @include it('sm\:inset-y-52') {
        @include assert {
          @include output {
            @include sm\:inset-y-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 13rem;
              bottom: 13rem;
            }
          }
        }
      }

      @include it('sm\:start-52') {
        @include assert {
          @include output {
            @include sm\:start-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: 13rem;
            }
          }
        }
      }

      @include it('sm\:end-52') {
        @include assert {
          @include output {
            @include sm\:end-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: 13rem;
            }
          }
        }
      }

      @include it('sm\:top-52') {
        @include assert {
          @include output {
            @include sm\:top-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 13rem;
            }
          }
        }
      }

      @include it('sm\:right-52') {
        @include assert {
          @include output {
            @include sm\:right-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: 13rem;
            }
          }
        }
      }

      @include it('sm\:bottom-52') {
        @include assert {
          @include output {
            @include sm\:bottom-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: 13rem;
            }
          }
        }
      }

      @include it('sm\:left-52') {
        @include assert {
          @include output {
            @include sm\:left-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 13rem;
            }
          }
        }
      }

      @include it('sm\:inset-56') {
        @include assert {
          @include output {
            @include sm\:inset-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: 14rem;
            }
          }
        }
      }

      @include it('sm\:inset-x-56') {
        @include assert {
          @include output {
            @include sm\:inset-x-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 14rem;
              right: 14rem;
            }
          }
        }
      }

      @include it('sm\:inset-y-56') {
        @include assert {
          @include output {
            @include sm\:inset-y-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 14rem;
              bottom: 14rem;
            }
          }
        }
      }

      @include it('sm\:start-56') {
        @include assert {
          @include output {
            @include sm\:start-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: 14rem;
            }
          }
        }
      }

      @include it('sm\:end-56') {
        @include assert {
          @include output {
            @include sm\:end-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: 14rem;
            }
          }
        }
      }

      @include it('sm\:top-56') {
        @include assert {
          @include output {
            @include sm\:top-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 14rem;
            }
          }
        }
      }

      @include it('sm\:right-56') {
        @include assert {
          @include output {
            @include sm\:right-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: 14rem;
            }
          }
        }
      }

      @include it('sm\:bottom-56') {
        @include assert {
          @include output {
            @include sm\:bottom-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: 14rem;
            }
          }
        }
      }

      @include it('sm\:left-56') {
        @include assert {
          @include output {
            @include sm\:left-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 14rem;
            }
          }
        }
      }

      @include it('sm\:inset-60') {
        @include assert {
          @include output {
            @include sm\:inset-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: 15rem;
            }
          }
        }
      }

      @include it('sm\:inset-x-60') {
        @include assert {
          @include output {
            @include sm\:inset-x-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 15rem;
              right: 15rem;
            }
          }
        }
      }

      @include it('sm\:inset-y-60') {
        @include assert {
          @include output {
            @include sm\:inset-y-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 15rem;
              bottom: 15rem;
            }
          }
        }
      }

      @include it('sm\:start-60') {
        @include assert {
          @include output {
            @include sm\:start-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: 15rem;
            }
          }
        }
      }

      @include it('sm\:end-60') {
        @include assert {
          @include output {
            @include sm\:end-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: 15rem;
            }
          }
        }
      }

      @include it('sm\:top-60') {
        @include assert {
          @include output {
            @include sm\:top-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 15rem;
            }
          }
        }
      }

      @include it('sm\:right-60') {
        @include assert {
          @include output {
            @include sm\:right-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: 15rem;
            }
          }
        }
      }

      @include it('sm\:bottom-60') {
        @include assert {
          @include output {
            @include sm\:bottom-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: 15rem;
            }
          }
        }
      }

      @include it('sm\:left-60') {
        @include assert {
          @include output {
            @include sm\:left-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 15rem;
            }
          }
        }
      }

      @include it('sm\:inset-64') {
        @include assert {
          @include output {
            @include sm\:inset-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: 16rem;
            }
          }
        }
      }

      @include it('sm\:inset-x-64') {
        @include assert {
          @include output {
            @include sm\:inset-x-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 16rem;
              right: 16rem;
            }
          }
        }
      }

      @include it('sm\:inset-y-64') {
        @include assert {
          @include output {
            @include sm\:inset-y-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 16rem;
              bottom: 16rem;
            }
          }
        }
      }

      @include it('sm\:start-64') {
        @include assert {
          @include output {
            @include sm\:start-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: 16rem;
            }
          }
        }
      }

      @include it('sm\:end-64') {
        @include assert {
          @include output {
            @include sm\:end-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: 16rem;
            }
          }
        }
      }

      @include it('sm\:top-64') {
        @include assert {
          @include output {
            @include sm\:top-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 16rem;
            }
          }
        }
      }

      @include it('sm\:right-64') {
        @include assert {
          @include output {
            @include sm\:right-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: 16rem;
            }
          }
        }
      }

      @include it('sm\:bottom-64') {
        @include assert {
          @include output {
            @include sm\:bottom-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: 16rem;
            }
          }
        }
      }

      @include it('sm\:left-64') {
        @include assert {
          @include output {
            @include sm\:left-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 16rem;
            }
          }
        }
      }

      @include it('sm\:inset-72') {
        @include assert {
          @include output {
            @include sm\:inset-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: 18rem;
            }
          }
        }
      }

      @include it('sm\:inset-x-72') {
        @include assert {
          @include output {
            @include sm\:inset-x-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 18rem;
              right: 18rem;
            }
          }
        }
      }

      @include it('sm\:inset-y-72') {
        @include assert {
          @include output {
            @include sm\:inset-y-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 18rem;
              bottom: 18rem;
            }
          }
        }
      }

      @include it('sm\:start-72') {
        @include assert {
          @include output {
            @include sm\:start-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: 18rem;
            }
          }
        }
      }

      @include it('sm\:end-72') {
        @include assert {
          @include output {
            @include sm\:end-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: 18rem;
            }
          }
        }
      }

      @include it('sm\:top-72') {
        @include assert {
          @include output {
            @include sm\:top-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 18rem;
            }
          }
        }
      }

      @include it('sm\:right-72') {
        @include assert {
          @include output {
            @include sm\:right-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: 18rem;
            }
          }
        }
      }

      @include it('sm\:bottom-72') {
        @include assert {
          @include output {
            @include sm\:bottom-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: 18rem;
            }
          }
        }
      }

      @include it('sm\:left-72') {
        @include assert {
          @include output {
            @include sm\:left-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 18rem;
            }
          }
        }
      }

      @include it('sm\:inset-80') {
        @include assert {
          @include output {
            @include sm\:inset-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: 20rem;
            }
          }
        }
      }

      @include it('sm\:inset-x-80') {
        @include assert {
          @include output {
            @include sm\:inset-x-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 20rem;
              right: 20rem;
            }
          }
        }
      }

      @include it('sm\:inset-y-80') {
        @include assert {
          @include output {
            @include sm\:inset-y-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 20rem;
              bottom: 20rem;
            }
          }
        }
      }

      @include it('sm\:start-80') {
        @include assert {
          @include output {
            @include sm\:start-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: 20rem;
            }
          }
        }
      }

      @include it('sm\:end-80') {
        @include assert {
          @include output {
            @include sm\:end-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: 20rem;
            }
          }
        }
      }

      @include it('sm\:top-80') {
        @include assert {
          @include output {
            @include sm\:top-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 20rem;
            }
          }
        }
      }

      @include it('sm\:right-80') {
        @include assert {
          @include output {
            @include sm\:right-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: 20rem;
            }
          }
        }
      }

      @include it('sm\:bottom-80') {
        @include assert {
          @include output {
            @include sm\:bottom-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: 20rem;
            }
          }
        }
      }

      @include it('sm\:left-80') {
        @include assert {
          @include output {
            @include sm\:left-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 20rem;
            }
          }
        }
      }

      @include it('sm\:inset-96') {
        @include assert {
          @include output {
            @include sm\:inset-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: 24rem;
            }
          }
        }
      }

      @include it('sm\:inset-x-96') {
        @include assert {
          @include output {
            @include sm\:inset-x-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 24rem;
              right: 24rem;
            }
          }
        }
      }

      @include it('sm\:inset-y-96') {
        @include assert {
          @include output {
            @include sm\:inset-y-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 24rem;
              bottom: 24rem;
            }
          }
        }
      }

      @include it('sm\:start-96') {
        @include assert {
          @include output {
            @include sm\:start-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: 24rem;
            }
          }
        }
      }

      @include it('sm\:end-96') {
        @include assert {
          @include output {
            @include sm\:end-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: 24rem;
            }
          }
        }
      }

      @include it('sm\:top-96') {
        @include assert {
          @include output {
            @include sm\:top-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 24rem;
            }
          }
        }
      }

      @include it('sm\:right-96') {
        @include assert {
          @include output {
            @include sm\:right-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: 24rem;
            }
          }
        }
      }

      @include it('sm\:bottom-96') {
        @include assert {
          @include output {
            @include sm\:bottom-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: 24rem;
            }
          }
        }
      }

      @include it('sm\:left-96') {
        @include assert {
          @include output {
            @include sm\:left-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 24rem;
            }
          }
        }
      }

      @include it('sm\:inset-auto') {
        @include assert {
          @include output {
            @include sm\:inset-auto;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: auto;
            }
          }
        }
      }

      @include it('sm\:inset-1\/2') {
        @include assert {
          @include output {
            @include sm\:inset-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: 50%;
            }
          }
        }
      }

      @include it('sm\:inset-1\/3') {
        @include assert {
          @include output {
            @include sm\:inset-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: 33.333333%;
            }
          }
        }
      }

      @include it('sm\:inset-2\/3') {
        @include assert {
          @include output {
            @include sm\:inset-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: 66.666667%;
            }
          }
        }
      }

      @include it('sm\:inset-1\/4') {
        @include assert {
          @include output {
            @include sm\:inset-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: 25%;
            }
          }
        }
      }

      @include it('sm\:inset-2\/4') {
        @include assert {
          @include output {
            @include sm\:inset-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: 50%;
            }
          }
        }
      }

      @include it('sm\:inset-3\/4') {
        @include assert {
          @include output {
            @include sm\:inset-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: 75%;
            }
          }
        }
      }

      @include it('sm\:inset-full') {
        @include assert {
          @include output {
            @include sm\:inset-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: 100%;
            }
          }
        }
      }

      @include it('sm\:inset-x-auto') {
        @include assert {
          @include output {
            @include sm\:inset-x-auto;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: auto;
              right: auto;
            }
          }
        }
      }

      @include it('sm\:inset-x-1\/2') {
        @include assert {
          @include output {
            @include sm\:inset-x-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 50%;
              right: 50%;
            }
          }
        }
      }

      @include it('sm\:inset-x-1\/3') {
        @include assert {
          @include output {
            @include sm\:inset-x-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 33.333333%;
              right: 33.333333%;
            }
          }
        }
      }

      @include it('sm\:inset-x-2\/3') {
        @include assert {
          @include output {
            @include sm\:inset-x-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 66.666667%;
              right: 66.666667%;
            }
          }
        }
      }

      @include it('sm\:inset-x-1\/4') {
        @include assert {
          @include output {
            @include sm\:inset-x-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 25%;
              right: 25%;
            }
          }
        }
      }

      @include it('sm\:inset-x-2\/4') {
        @include assert {
          @include output {
            @include sm\:inset-x-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 50%;
              right: 50%;
            }
          }
        }
      }

      @include it('sm\:inset-x-3\/4') {
        @include assert {
          @include output {
            @include sm\:inset-x-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 75%;
              right: 75%;
            }
          }
        }
      }

      @include it('sm\:inset-x-full') {
        @include assert {
          @include output {
            @include sm\:inset-x-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 100%;
              right: 100%;
            }
          }
        }
      }

      @include it('sm\:inset-y-auto') {
        @include assert {
          @include output {
            @include sm\:inset-y-auto;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: auto;
              bottom: auto;
            }
          }
        }
      }

      @include it('sm\:inset-y-1\/2') {
        @include assert {
          @include output {
            @include sm\:inset-y-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 50%;
              bottom: 50%;
            }
          }
        }
      }

      @include it('sm\:inset-y-1\/3') {
        @include assert {
          @include output {
            @include sm\:inset-y-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 33.333333%;
              bottom: 33.333333%;
            }
          }
        }
      }

      @include it('sm\:inset-y-2\/3') {
        @include assert {
          @include output {
            @include sm\:inset-y-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 66.666667%;
              bottom: 66.666667%;
            }
          }
        }
      }

      @include it('sm\:inset-y-1\/4') {
        @include assert {
          @include output {
            @include sm\:inset-y-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 25%;
              bottom: 25%;
            }
          }
        }
      }

      @include it('sm\:inset-y-2\/4') {
        @include assert {
          @include output {
            @include sm\:inset-y-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 50%;
              bottom: 50%;
            }
          }
        }
      }

      @include it('sm\:inset-y-3\/4') {
        @include assert {
          @include output {
            @include sm\:inset-y-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 75%;
              bottom: 75%;
            }
          }
        }
      }

      @include it('sm\:inset-y-full') {
        @include assert {
          @include output {
            @include sm\:inset-y-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 100%;
              bottom: 100%;
            }
          }
        }
      }

      @include it('sm\:start-auto') {
        @include assert {
          @include output {
            @include sm\:start-auto;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: auto;
            }
          }
        }
      }

      @include it('sm\:start-1\/2') {
        @include assert {
          @include output {
            @include sm\:start-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: 50%;
            }
          }
        }
      }

      @include it('sm\:start-1\/3') {
        @include assert {
          @include output {
            @include sm\:start-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: 33.333333%;
            }
          }
        }
      }

      @include it('sm\:start-2\/3') {
        @include assert {
          @include output {
            @include sm\:start-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: 66.666667%;
            }
          }
        }
      }

      @include it('sm\:start-1\/4') {
        @include assert {
          @include output {
            @include sm\:start-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: 25%;
            }
          }
        }
      }

      @include it('sm\:start-2\/4') {
        @include assert {
          @include output {
            @include sm\:start-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: 50%;
            }
          }
        }
      }

      @include it('sm\:start-3\/4') {
        @include assert {
          @include output {
            @include sm\:start-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: 75%;
            }
          }
        }
      }

      @include it('sm\:start-full') {
        @include assert {
          @include output {
            @include sm\:start-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: 100%;
            }
          }
        }
      }

      @include it('sm\:end-auto') {
        @include assert {
          @include output {
            @include sm\:end-auto;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: auto;
            }
          }
        }
      }

      @include it('sm\:end-1\/2') {
        @include assert {
          @include output {
            @include sm\:end-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: 50%;
            }
          }
        }
      }

      @include it('sm\:end-1\/3') {
        @include assert {
          @include output {
            @include sm\:end-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: 33.333333%;
            }
          }
        }
      }

      @include it('sm\:end-2\/3') {
        @include assert {
          @include output {
            @include sm\:end-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: 66.666667%;
            }
          }
        }
      }

      @include it('sm\:end-1\/4') {
        @include assert {
          @include output {
            @include sm\:end-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: 25%;
            }
          }
        }
      }

      @include it('sm\:end-2\/4') {
        @include assert {
          @include output {
            @include sm\:end-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: 50%;
            }
          }
        }
      }

      @include it('sm\:end-3\/4') {
        @include assert {
          @include output {
            @include sm\:end-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: 75%;
            }
          }
        }
      }

      @include it('sm\:end-full') {
        @include assert {
          @include output {
            @include sm\:end-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: 100%;
            }
          }
        }
      }

      @include it('sm\:top-auto') {
        @include assert {
          @include output {
            @include sm\:top-auto;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: auto;
            }
          }
        }
      }

      @include it('sm\:top-1\/2') {
        @include assert {
          @include output {
            @include sm\:top-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 50%;
            }
          }
        }
      }

      @include it('sm\:top-1\/3') {
        @include assert {
          @include output {
            @include sm\:top-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 33.333333%;
            }
          }
        }
      }

      @include it('sm\:top-2\/3') {
        @include assert {
          @include output {
            @include sm\:top-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 66.666667%;
            }
          }
        }
      }

      @include it('sm\:top-1\/4') {
        @include assert {
          @include output {
            @include sm\:top-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 25%;
            }
          }
        }
      }

      @include it('sm\:top-2\/4') {
        @include assert {
          @include output {
            @include sm\:top-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 50%;
            }
          }
        }
      }

      @include it('sm\:top-3\/4') {
        @include assert {
          @include output {
            @include sm\:top-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 75%;
            }
          }
        }
      }

      @include it('sm\:top-full') {
        @include assert {
          @include output {
            @include sm\:top-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 100%;
            }
          }
        }
      }

      @include it('sm\:right-auto') {
        @include assert {
          @include output {
            @include sm\:right-auto;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: auto;
            }
          }
        }
      }

      @include it('sm\:right-1\/2') {
        @include assert {
          @include output {
            @include sm\:right-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: 50%;
            }
          }
        }
      }

      @include it('sm\:right-1\/3') {
        @include assert {
          @include output {
            @include sm\:right-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: 33.333333%;
            }
          }
        }
      }

      @include it('sm\:right-2\/3') {
        @include assert {
          @include output {
            @include sm\:right-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: 66.666667%;
            }
          }
        }
      }

      @include it('sm\:right-1\/4') {
        @include assert {
          @include output {
            @include sm\:right-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: 25%;
            }
          }
        }
      }

      @include it('sm\:right-2\/4') {
        @include assert {
          @include output {
            @include sm\:right-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: 50%;
            }
          }
        }
      }

      @include it('sm\:right-3\/4') {
        @include assert {
          @include output {
            @include sm\:right-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: 75%;
            }
          }
        }
      }

      @include it('sm\:right-full') {
        @include assert {
          @include output {
            @include sm\:right-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: 100%;
            }
          }
        }
      }

      @include it('sm\:bottom-auto') {
        @include assert {
          @include output {
            @include sm\:bottom-auto;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: auto;
            }
          }
        }
      }

      @include it('sm\:bottom-1\/2') {
        @include assert {
          @include output {
            @include sm\:bottom-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: 50%;
            }
          }
        }
      }

      @include it('sm\:bottom-1\/3') {
        @include assert {
          @include output {
            @include sm\:bottom-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: 33.333333%;
            }
          }
        }
      }

      @include it('sm\:bottom-2\/3') {
        @include assert {
          @include output {
            @include sm\:bottom-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: 66.666667%;
            }
          }
        }
      }

      @include it('sm\:bottom-1\/4') {
        @include assert {
          @include output {
            @include sm\:bottom-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: 25%;
            }
          }
        }
      }

      @include it('sm\:bottom-2\/4') {
        @include assert {
          @include output {
            @include sm\:bottom-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: 50%;
            }
          }
        }
      }

      @include it('sm\:bottom-3\/4') {
        @include assert {
          @include output {
            @include sm\:bottom-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: 75%;
            }
          }
        }
      }

      @include it('sm\:bottom-full') {
        @include assert {
          @include output {
            @include sm\:bottom-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: 100%;
            }
          }
        }
      }

      @include it('sm\:left-auto') {
        @include assert {
          @include output {
            @include sm\:left-auto;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: auto;
            }
          }
        }
      }

      @include it('sm\:left-1\/2') {
        @include assert {
          @include output {
            @include sm\:left-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 50%;
            }
          }
        }
      }

      @include it('sm\:left-1\/3') {
        @include assert {
          @include output {
            @include sm\:left-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 33.333333%;
            }
          }
        }
      }

      @include it('sm\:left-2\/3') {
        @include assert {
          @include output {
            @include sm\:left-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 66.666667%;
            }
          }
        }
      }

      @include it('sm\:left-1\/4') {
        @include assert {
          @include output {
            @include sm\:left-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 25%;
            }
          }
        }
      }

      @include it('sm\:left-2\/4') {
        @include assert {
          @include output {
            @include sm\:left-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 50%;
            }
          }
        }
      }

      @include it('sm\:left-3\/4') {
        @include assert {
          @include output {
            @include sm\:left-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 75%;
            }
          }
        }
      }

      @include it('sm\:left-full') {
        @include assert {
          @include output {
            @include sm\:left-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 100%;
            }
          }
        }
      }

      @include it('sm\:-inset-0') {
        @include assert {
          @include output {
            @include sm\:-inset-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: 0px;
            }
          }
        }
      }

      @include it('sm\:-inset-x-0') {
        @include assert {
          @include output {
            @include sm\:-inset-x-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 0px;
              right: 0px;
            }
          }
        }
      }

      @include it('sm\:-inset-y-0') {
        @include assert {
          @include output {
            @include sm\:-inset-y-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 0px;
              bottom: 0px;
            }
          }
        }
      }

      @include it('sm\:-start-0') {
        @include assert {
          @include output {
            @include sm\:-start-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: 0px;
            }
          }
        }
      }

      @include it('sm\:-end-0') {
        @include assert {
          @include output {
            @include sm\:-end-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: 0px;
            }
          }
        }
      }

      @include it('sm\:-top-0') {
        @include assert {
          @include output {
            @include sm\:-top-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 0px;
            }
          }
        }
      }

      @include it('sm\:-right-0') {
        @include assert {
          @include output {
            @include sm\:-right-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: 0px;
            }
          }
        }
      }

      @include it('sm\:-bottom-0') {
        @include assert {
          @include output {
            @include sm\:-bottom-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: 0px;
            }
          }
        }
      }

      @include it('sm\:-left-0') {
        @include assert {
          @include output {
            @include sm\:-left-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 0px;
            }
          }
        }
      }

      @include it('sm\:-inset-px') {
        @include assert {
          @include output {
            @include sm\:-inset-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: -1px;
            }
          }
        }
      }

      @include it('sm\:-inset-x-px') {
        @include assert {
          @include output {
            @include sm\:-inset-x-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -1px;
              right: -1px;
            }
          }
        }
      }

      @include it('sm\:-inset-y-px') {
        @include assert {
          @include output {
            @include sm\:-inset-y-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -1px;
              bottom: -1px;
            }
          }
        }
      }

      @include it('sm\:-start-px') {
        @include assert {
          @include output {
            @include sm\:-start-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: -1px;
            }
          }
        }
      }

      @include it('sm\:-end-px') {
        @include assert {
          @include output {
            @include sm\:-end-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: -1px;
            }
          }
        }
      }

      @include it('sm\:-top-px') {
        @include assert {
          @include output {
            @include sm\:-top-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -1px;
            }
          }
        }
      }

      @include it('sm\:-right-px') {
        @include assert {
          @include output {
            @include sm\:-right-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: -1px;
            }
          }
        }
      }

      @include it('sm\:-bottom-px') {
        @include assert {
          @include output {
            @include sm\:-bottom-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: -1px;
            }
          }
        }
      }

      @include it('sm\:-left-px') {
        @include assert {
          @include output {
            @include sm\:-left-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -1px;
            }
          }
        }
      }

      @include it('sm\:-inset-0\.5') {
        @include assert {
          @include output {
            @include sm\:-inset-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: -0.125rem;
            }
          }
        }
      }

      @include it('sm\:-inset-x-0\.5') {
        @include assert {
          @include output {
            @include sm\:-inset-x-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -0.125rem;
              right: -0.125rem;
            }
          }
        }
      }

      @include it('sm\:-inset-y-0\.5') {
        @include assert {
          @include output {
            @include sm\:-inset-y-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -0.125rem;
              bottom: -0.125rem;
            }
          }
        }
      }

      @include it('sm\:-start-0\.5') {
        @include assert {
          @include output {
            @include sm\:-start-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: -0.125rem;
            }
          }
        }
      }

      @include it('sm\:-end-0\.5') {
        @include assert {
          @include output {
            @include sm\:-end-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: -0.125rem;
            }
          }
        }
      }

      @include it('sm\:-top-0\.5') {
        @include assert {
          @include output {
            @include sm\:-top-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -0.125rem;
            }
          }
        }
      }

      @include it('sm\:-right-0\.5') {
        @include assert {
          @include output {
            @include sm\:-right-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: -0.125rem;
            }
          }
        }
      }

      @include it('sm\:-bottom-0\.5') {
        @include assert {
          @include output {
            @include sm\:-bottom-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: -0.125rem;
            }
          }
        }
      }

      @include it('sm\:-left-0\.5') {
        @include assert {
          @include output {
            @include sm\:-left-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -0.125rem;
            }
          }
        }
      }

      @include it('sm\:-inset-1') {
        @include assert {
          @include output {
            @include sm\:-inset-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: -0.25rem;
            }
          }
        }
      }

      @include it('sm\:-inset-x-1') {
        @include assert {
          @include output {
            @include sm\:-inset-x-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -0.25rem;
              right: -0.25rem;
            }
          }
        }
      }

      @include it('sm\:-inset-y-1') {
        @include assert {
          @include output {
            @include sm\:-inset-y-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -0.25rem;
              bottom: -0.25rem;
            }
          }
        }
      }

      @include it('sm\:-start-1') {
        @include assert {
          @include output {
            @include sm\:-start-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: -0.25rem;
            }
          }
        }
      }

      @include it('sm\:-end-1') {
        @include assert {
          @include output {
            @include sm\:-end-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: -0.25rem;
            }
          }
        }
      }

      @include it('sm\:-top-1') {
        @include assert {
          @include output {
            @include sm\:-top-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -0.25rem;
            }
          }
        }
      }

      @include it('sm\:-right-1') {
        @include assert {
          @include output {
            @include sm\:-right-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: -0.25rem;
            }
          }
        }
      }

      @include it('sm\:-bottom-1') {
        @include assert {
          @include output {
            @include sm\:-bottom-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: -0.25rem;
            }
          }
        }
      }

      @include it('sm\:-left-1') {
        @include assert {
          @include output {
            @include sm\:-left-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -0.25rem;
            }
          }
        }
      }

      @include it('sm\:-inset-1\.5') {
        @include assert {
          @include output {
            @include sm\:-inset-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: -0.375rem;
            }
          }
        }
      }

      @include it('sm\:-inset-x-1\.5') {
        @include assert {
          @include output {
            @include sm\:-inset-x-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -0.375rem;
              right: -0.375rem;
            }
          }
        }
      }

      @include it('sm\:-inset-y-1\.5') {
        @include assert {
          @include output {
            @include sm\:-inset-y-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -0.375rem;
              bottom: -0.375rem;
            }
          }
        }
      }

      @include it('sm\:-start-1\.5') {
        @include assert {
          @include output {
            @include sm\:-start-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: -0.375rem;
            }
          }
        }
      }

      @include it('sm\:-end-1\.5') {
        @include assert {
          @include output {
            @include sm\:-end-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: -0.375rem;
            }
          }
        }
      }

      @include it('sm\:-top-1\.5') {
        @include assert {
          @include output {
            @include sm\:-top-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -0.375rem;
            }
          }
        }
      }

      @include it('sm\:-right-1\.5') {
        @include assert {
          @include output {
            @include sm\:-right-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: -0.375rem;
            }
          }
        }
      }

      @include it('sm\:-bottom-1\.5') {
        @include assert {
          @include output {
            @include sm\:-bottom-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: -0.375rem;
            }
          }
        }
      }

      @include it('sm\:-left-1\.5') {
        @include assert {
          @include output {
            @include sm\:-left-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -0.375rem;
            }
          }
        }
      }

      @include it('sm\:-inset-2') {
        @include assert {
          @include output {
            @include sm\:-inset-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: -0.5rem;
            }
          }
        }
      }

      @include it('sm\:-inset-x-2') {
        @include assert {
          @include output {
            @include sm\:-inset-x-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -0.5rem;
              right: -0.5rem;
            }
          }
        }
      }

      @include it('sm\:-inset-y-2') {
        @include assert {
          @include output {
            @include sm\:-inset-y-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -0.5rem;
              bottom: -0.5rem;
            }
          }
        }
      }

      @include it('sm\:-start-2') {
        @include assert {
          @include output {
            @include sm\:-start-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: -0.5rem;
            }
          }
        }
      }

      @include it('sm\:-end-2') {
        @include assert {
          @include output {
            @include sm\:-end-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: -0.5rem;
            }
          }
        }
      }

      @include it('sm\:-top-2') {
        @include assert {
          @include output {
            @include sm\:-top-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -0.5rem;
            }
          }
        }
      }

      @include it('sm\:-right-2') {
        @include assert {
          @include output {
            @include sm\:-right-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: -0.5rem;
            }
          }
        }
      }

      @include it('sm\:-bottom-2') {
        @include assert {
          @include output {
            @include sm\:-bottom-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: -0.5rem;
            }
          }
        }
      }

      @include it('sm\:-left-2') {
        @include assert {
          @include output {
            @include sm\:-left-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -0.5rem;
            }
          }
        }
      }

      @include it('sm\:-inset-2\.5') {
        @include assert {
          @include output {
            @include sm\:-inset-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: -0.625rem;
            }
          }
        }
      }

      @include it('sm\:-inset-x-2\.5') {
        @include assert {
          @include output {
            @include sm\:-inset-x-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -0.625rem;
              right: -0.625rem;
            }
          }
        }
      }

      @include it('sm\:-inset-y-2\.5') {
        @include assert {
          @include output {
            @include sm\:-inset-y-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -0.625rem;
              bottom: -0.625rem;
            }
          }
        }
      }

      @include it('sm\:-start-2\.5') {
        @include assert {
          @include output {
            @include sm\:-start-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: -0.625rem;
            }
          }
        }
      }

      @include it('sm\:-end-2\.5') {
        @include assert {
          @include output {
            @include sm\:-end-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: -0.625rem;
            }
          }
        }
      }

      @include it('sm\:-top-2\.5') {
        @include assert {
          @include output {
            @include sm\:-top-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -0.625rem;
            }
          }
        }
      }

      @include it('sm\:-right-2\.5') {
        @include assert {
          @include output {
            @include sm\:-right-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: -0.625rem;
            }
          }
        }
      }

      @include it('sm\:-bottom-2\.5') {
        @include assert {
          @include output {
            @include sm\:-bottom-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: -0.625rem;
            }
          }
        }
      }

      @include it('sm\:-left-2\.5') {
        @include assert {
          @include output {
            @include sm\:-left-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -0.625rem;
            }
          }
        }
      }

      @include it('sm\:-inset-3') {
        @include assert {
          @include output {
            @include sm\:-inset-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: -0.75rem;
            }
          }
        }
      }

      @include it('sm\:-inset-x-3') {
        @include assert {
          @include output {
            @include sm\:-inset-x-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -0.75rem;
              right: -0.75rem;
            }
          }
        }
      }

      @include it('sm\:-inset-y-3') {
        @include assert {
          @include output {
            @include sm\:-inset-y-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -0.75rem;
              bottom: -0.75rem;
            }
          }
        }
      }

      @include it('sm\:-start-3') {
        @include assert {
          @include output {
            @include sm\:-start-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: -0.75rem;
            }
          }
        }
      }

      @include it('sm\:-end-3') {
        @include assert {
          @include output {
            @include sm\:-end-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: -0.75rem;
            }
          }
        }
      }

      @include it('sm\:-top-3') {
        @include assert {
          @include output {
            @include sm\:-top-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -0.75rem;
            }
          }
        }
      }

      @include it('sm\:-right-3') {
        @include assert {
          @include output {
            @include sm\:-right-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: -0.75rem;
            }
          }
        }
      }

      @include it('sm\:-bottom-3') {
        @include assert {
          @include output {
            @include sm\:-bottom-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: -0.75rem;
            }
          }
        }
      }

      @include it('sm\:-left-3') {
        @include assert {
          @include output {
            @include sm\:-left-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -0.75rem;
            }
          }
        }
      }

      @include it('sm\:-inset-3\.5') {
        @include assert {
          @include output {
            @include sm\:-inset-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: -0.875rem;
            }
          }
        }
      }

      @include it('sm\:-inset-x-3\.5') {
        @include assert {
          @include output {
            @include sm\:-inset-x-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -0.875rem;
              right: -0.875rem;
            }
          }
        }
      }

      @include it('sm\:-inset-y-3\.5') {
        @include assert {
          @include output {
            @include sm\:-inset-y-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -0.875rem;
              bottom: -0.875rem;
            }
          }
        }
      }

      @include it('sm\:-start-3\.5') {
        @include assert {
          @include output {
            @include sm\:-start-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: -0.875rem;
            }
          }
        }
      }

      @include it('sm\:-end-3\.5') {
        @include assert {
          @include output {
            @include sm\:-end-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: -0.875rem;
            }
          }
        }
      }

      @include it('sm\:-top-3\.5') {
        @include assert {
          @include output {
            @include sm\:-top-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -0.875rem;
            }
          }
        }
      }

      @include it('sm\:-right-3\.5') {
        @include assert {
          @include output {
            @include sm\:-right-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: -0.875rem;
            }
          }
        }
      }

      @include it('sm\:-bottom-3\.5') {
        @include assert {
          @include output {
            @include sm\:-bottom-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: -0.875rem;
            }
          }
        }
      }

      @include it('sm\:-left-3\.5') {
        @include assert {
          @include output {
            @include sm\:-left-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -0.875rem;
            }
          }
        }
      }

      @include it('sm\:-inset-4') {
        @include assert {
          @include output {
            @include sm\:-inset-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: -1rem;
            }
          }
        }
      }

      @include it('sm\:-inset-x-4') {
        @include assert {
          @include output {
            @include sm\:-inset-x-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -1rem;
              right: -1rem;
            }
          }
        }
      }

      @include it('sm\:-inset-y-4') {
        @include assert {
          @include output {
            @include sm\:-inset-y-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -1rem;
              bottom: -1rem;
            }
          }
        }
      }

      @include it('sm\:-start-4') {
        @include assert {
          @include output {
            @include sm\:-start-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: -1rem;
            }
          }
        }
      }

      @include it('sm\:-end-4') {
        @include assert {
          @include output {
            @include sm\:-end-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: -1rem;
            }
          }
        }
      }

      @include it('sm\:-top-4') {
        @include assert {
          @include output {
            @include sm\:-top-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -1rem;
            }
          }
        }
      }

      @include it('sm\:-right-4') {
        @include assert {
          @include output {
            @include sm\:-right-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: -1rem;
            }
          }
        }
      }

      @include it('sm\:-bottom-4') {
        @include assert {
          @include output {
            @include sm\:-bottom-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: -1rem;
            }
          }
        }
      }

      @include it('sm\:-left-4') {
        @include assert {
          @include output {
            @include sm\:-left-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -1rem;
            }
          }
        }
      }

      @include it('sm\:-inset-5') {
        @include assert {
          @include output {
            @include sm\:-inset-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: -1.25rem;
            }
          }
        }
      }

      @include it('sm\:-inset-x-5') {
        @include assert {
          @include output {
            @include sm\:-inset-x-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -1.25rem;
              right: -1.25rem;
            }
          }
        }
      }

      @include it('sm\:-inset-y-5') {
        @include assert {
          @include output {
            @include sm\:-inset-y-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -1.25rem;
              bottom: -1.25rem;
            }
          }
        }
      }

      @include it('sm\:-start-5') {
        @include assert {
          @include output {
            @include sm\:-start-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: -1.25rem;
            }
          }
        }
      }

      @include it('sm\:-end-5') {
        @include assert {
          @include output {
            @include sm\:-end-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: -1.25rem;
            }
          }
        }
      }

      @include it('sm\:-top-5') {
        @include assert {
          @include output {
            @include sm\:-top-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -1.25rem;
            }
          }
        }
      }

      @include it('sm\:-right-5') {
        @include assert {
          @include output {
            @include sm\:-right-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: -1.25rem;
            }
          }
        }
      }

      @include it('sm\:-bottom-5') {
        @include assert {
          @include output {
            @include sm\:-bottom-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: -1.25rem;
            }
          }
        }
      }

      @include it('sm\:-left-5') {
        @include assert {
          @include output {
            @include sm\:-left-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -1.25rem;
            }
          }
        }
      }

      @include it('sm\:-inset-6') {
        @include assert {
          @include output {
            @include sm\:-inset-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: -1.5rem;
            }
          }
        }
      }

      @include it('sm\:-inset-x-6') {
        @include assert {
          @include output {
            @include sm\:-inset-x-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -1.5rem;
              right: -1.5rem;
            }
          }
        }
      }

      @include it('sm\:-inset-y-6') {
        @include assert {
          @include output {
            @include sm\:-inset-y-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -1.5rem;
              bottom: -1.5rem;
            }
          }
        }
      }

      @include it('sm\:-start-6') {
        @include assert {
          @include output {
            @include sm\:-start-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: -1.5rem;
            }
          }
        }
      }

      @include it('sm\:-end-6') {
        @include assert {
          @include output {
            @include sm\:-end-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: -1.5rem;
            }
          }
        }
      }

      @include it('sm\:-top-6') {
        @include assert {
          @include output {
            @include sm\:-top-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -1.5rem;
            }
          }
        }
      }

      @include it('sm\:-right-6') {
        @include assert {
          @include output {
            @include sm\:-right-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: -1.5rem;
            }
          }
        }
      }

      @include it('sm\:-bottom-6') {
        @include assert {
          @include output {
            @include sm\:-bottom-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: -1.5rem;
            }
          }
        }
      }

      @include it('sm\:-left-6') {
        @include assert {
          @include output {
            @include sm\:-left-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -1.5rem;
            }
          }
        }
      }

      @include it('sm\:-inset-7') {
        @include assert {
          @include output {
            @include sm\:-inset-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: -1.75rem;
            }
          }
        }
      }

      @include it('sm\:-inset-x-7') {
        @include assert {
          @include output {
            @include sm\:-inset-x-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -1.75rem;
              right: -1.75rem;
            }
          }
        }
      }

      @include it('sm\:-inset-y-7') {
        @include assert {
          @include output {
            @include sm\:-inset-y-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -1.75rem;
              bottom: -1.75rem;
            }
          }
        }
      }

      @include it('sm\:-start-7') {
        @include assert {
          @include output {
            @include sm\:-start-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: -1.75rem;
            }
          }
        }
      }

      @include it('sm\:-end-7') {
        @include assert {
          @include output {
            @include sm\:-end-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: -1.75rem;
            }
          }
        }
      }

      @include it('sm\:-top-7') {
        @include assert {
          @include output {
            @include sm\:-top-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -1.75rem;
            }
          }
        }
      }

      @include it('sm\:-right-7') {
        @include assert {
          @include output {
            @include sm\:-right-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: -1.75rem;
            }
          }
        }
      }

      @include it('sm\:-bottom-7') {
        @include assert {
          @include output {
            @include sm\:-bottom-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: -1.75rem;
            }
          }
        }
      }

      @include it('sm\:-left-7') {
        @include assert {
          @include output {
            @include sm\:-left-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -1.75rem;
            }
          }
        }
      }

      @include it('sm\:-inset-8') {
        @include assert {
          @include output {
            @include sm\:-inset-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: -2rem;
            }
          }
        }
      }

      @include it('sm\:-inset-x-8') {
        @include assert {
          @include output {
            @include sm\:-inset-x-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -2rem;
              right: -2rem;
            }
          }
        }
      }

      @include it('sm\:-inset-y-8') {
        @include assert {
          @include output {
            @include sm\:-inset-y-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -2rem;
              bottom: -2rem;
            }
          }
        }
      }

      @include it('sm\:-start-8') {
        @include assert {
          @include output {
            @include sm\:-start-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: -2rem;
            }
          }
        }
      }

      @include it('sm\:-end-8') {
        @include assert {
          @include output {
            @include sm\:-end-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: -2rem;
            }
          }
        }
      }

      @include it('sm\:-top-8') {
        @include assert {
          @include output {
            @include sm\:-top-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -2rem;
            }
          }
        }
      }

      @include it('sm\:-right-8') {
        @include assert {
          @include output {
            @include sm\:-right-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: -2rem;
            }
          }
        }
      }

      @include it('sm\:-bottom-8') {
        @include assert {
          @include output {
            @include sm\:-bottom-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: -2rem;
            }
          }
        }
      }

      @include it('sm\:-left-8') {
        @include assert {
          @include output {
            @include sm\:-left-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -2rem;
            }
          }
        }
      }

      @include it('sm\:-inset-9') {
        @include assert {
          @include output {
            @include sm\:-inset-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: -2.25rem;
            }
          }
        }
      }

      @include it('sm\:-inset-x-9') {
        @include assert {
          @include output {
            @include sm\:-inset-x-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -2.25rem;
              right: -2.25rem;
            }
          }
        }
      }

      @include it('sm\:-inset-y-9') {
        @include assert {
          @include output {
            @include sm\:-inset-y-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -2.25rem;
              bottom: -2.25rem;
            }
          }
        }
      }

      @include it('sm\:-start-9') {
        @include assert {
          @include output {
            @include sm\:-start-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: -2.25rem;
            }
          }
        }
      }

      @include it('sm\:-end-9') {
        @include assert {
          @include output {
            @include sm\:-end-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: -2.25rem;
            }
          }
        }
      }

      @include it('sm\:-top-9') {
        @include assert {
          @include output {
            @include sm\:-top-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -2.25rem;
            }
          }
        }
      }

      @include it('sm\:-right-9') {
        @include assert {
          @include output {
            @include sm\:-right-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: -2.25rem;
            }
          }
        }
      }

      @include it('sm\:-bottom-9') {
        @include assert {
          @include output {
            @include sm\:-bottom-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: -2.25rem;
            }
          }
        }
      }

      @include it('sm\:-left-9') {
        @include assert {
          @include output {
            @include sm\:-left-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -2.25rem;
            }
          }
        }
      }

      @include it('sm\:-inset-10') {
        @include assert {
          @include output {
            @include sm\:-inset-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: -2.5rem;
            }
          }
        }
      }

      @include it('sm\:-inset-x-10') {
        @include assert {
          @include output {
            @include sm\:-inset-x-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -2.5rem;
              right: -2.5rem;
            }
          }
        }
      }

      @include it('sm\:-inset-y-10') {
        @include assert {
          @include output {
            @include sm\:-inset-y-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -2.5rem;
              bottom: -2.5rem;
            }
          }
        }
      }

      @include it('sm\:-start-10') {
        @include assert {
          @include output {
            @include sm\:-start-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: -2.5rem;
            }
          }
        }
      }

      @include it('sm\:-end-10') {
        @include assert {
          @include output {
            @include sm\:-end-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: -2.5rem;
            }
          }
        }
      }

      @include it('sm\:-top-10') {
        @include assert {
          @include output {
            @include sm\:-top-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -2.5rem;
            }
          }
        }
      }

      @include it('sm\:-right-10') {
        @include assert {
          @include output {
            @include sm\:-right-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: -2.5rem;
            }
          }
        }
      }

      @include it('sm\:-bottom-10') {
        @include assert {
          @include output {
            @include sm\:-bottom-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: -2.5rem;
            }
          }
        }
      }

      @include it('sm\:-left-10') {
        @include assert {
          @include output {
            @include sm\:-left-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -2.5rem;
            }
          }
        }
      }

      @include it('sm\:-inset-11') {
        @include assert {
          @include output {
            @include sm\:-inset-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: -2.75rem;
            }
          }
        }
      }

      @include it('sm\:-inset-x-11') {
        @include assert {
          @include output {
            @include sm\:-inset-x-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -2.75rem;
              right: -2.75rem;
            }
          }
        }
      }

      @include it('sm\:-inset-y-11') {
        @include assert {
          @include output {
            @include sm\:-inset-y-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -2.75rem;
              bottom: -2.75rem;
            }
          }
        }
      }

      @include it('sm\:-start-11') {
        @include assert {
          @include output {
            @include sm\:-start-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: -2.75rem;
            }
          }
        }
      }

      @include it('sm\:-end-11') {
        @include assert {
          @include output {
            @include sm\:-end-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: -2.75rem;
            }
          }
        }
      }

      @include it('sm\:-top-11') {
        @include assert {
          @include output {
            @include sm\:-top-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -2.75rem;
            }
          }
        }
      }

      @include it('sm\:-right-11') {
        @include assert {
          @include output {
            @include sm\:-right-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: -2.75rem;
            }
          }
        }
      }

      @include it('sm\:-bottom-11') {
        @include assert {
          @include output {
            @include sm\:-bottom-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: -2.75rem;
            }
          }
        }
      }

      @include it('sm\:-left-11') {
        @include assert {
          @include output {
            @include sm\:-left-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -2.75rem;
            }
          }
        }
      }

      @include it('sm\:-inset-12') {
        @include assert {
          @include output {
            @include sm\:-inset-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: -3rem;
            }
          }
        }
      }

      @include it('sm\:-inset-x-12') {
        @include assert {
          @include output {
            @include sm\:-inset-x-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -3rem;
              right: -3rem;
            }
          }
        }
      }

      @include it('sm\:-inset-y-12') {
        @include assert {
          @include output {
            @include sm\:-inset-y-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -3rem;
              bottom: -3rem;
            }
          }
        }
      }

      @include it('sm\:-start-12') {
        @include assert {
          @include output {
            @include sm\:-start-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: -3rem;
            }
          }
        }
      }

      @include it('sm\:-end-12') {
        @include assert {
          @include output {
            @include sm\:-end-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: -3rem;
            }
          }
        }
      }

      @include it('sm\:-top-12') {
        @include assert {
          @include output {
            @include sm\:-top-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -3rem;
            }
          }
        }
      }

      @include it('sm\:-right-12') {
        @include assert {
          @include output {
            @include sm\:-right-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: -3rem;
            }
          }
        }
      }

      @include it('sm\:-bottom-12') {
        @include assert {
          @include output {
            @include sm\:-bottom-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: -3rem;
            }
          }
        }
      }

      @include it('sm\:-left-12') {
        @include assert {
          @include output {
            @include sm\:-left-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -3rem;
            }
          }
        }
      }

      @include it('sm\:-inset-14') {
        @include assert {
          @include output {
            @include sm\:-inset-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: -3.5rem;
            }
          }
        }
      }

      @include it('sm\:-inset-x-14') {
        @include assert {
          @include output {
            @include sm\:-inset-x-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -3.5rem;
              right: -3.5rem;
            }
          }
        }
      }

      @include it('sm\:-inset-y-14') {
        @include assert {
          @include output {
            @include sm\:-inset-y-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -3.5rem;
              bottom: -3.5rem;
            }
          }
        }
      }

      @include it('sm\:-start-14') {
        @include assert {
          @include output {
            @include sm\:-start-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: -3.5rem;
            }
          }
        }
      }

      @include it('sm\:-end-14') {
        @include assert {
          @include output {
            @include sm\:-end-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: -3.5rem;
            }
          }
        }
      }

      @include it('sm\:-top-14') {
        @include assert {
          @include output {
            @include sm\:-top-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -3.5rem;
            }
          }
        }
      }

      @include it('sm\:-right-14') {
        @include assert {
          @include output {
            @include sm\:-right-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: -3.5rem;
            }
          }
        }
      }

      @include it('sm\:-bottom-14') {
        @include assert {
          @include output {
            @include sm\:-bottom-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: -3.5rem;
            }
          }
        }
      }

      @include it('sm\:-left-14') {
        @include assert {
          @include output {
            @include sm\:-left-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -3.5rem;
            }
          }
        }
      }

      @include it('sm\:-inset-16') {
        @include assert {
          @include output {
            @include sm\:-inset-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: -4rem;
            }
          }
        }
      }

      @include it('sm\:-inset-x-16') {
        @include assert {
          @include output {
            @include sm\:-inset-x-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -4rem;
              right: -4rem;
            }
          }
        }
      }

      @include it('sm\:-inset-y-16') {
        @include assert {
          @include output {
            @include sm\:-inset-y-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -4rem;
              bottom: -4rem;
            }
          }
        }
      }

      @include it('sm\:-start-16') {
        @include assert {
          @include output {
            @include sm\:-start-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: -4rem;
            }
          }
        }
      }

      @include it('sm\:-end-16') {
        @include assert {
          @include output {
            @include sm\:-end-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: -4rem;
            }
          }
        }
      }

      @include it('sm\:-top-16') {
        @include assert {
          @include output {
            @include sm\:-top-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -4rem;
            }
          }
        }
      }

      @include it('sm\:-right-16') {
        @include assert {
          @include output {
            @include sm\:-right-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: -4rem;
            }
          }
        }
      }

      @include it('sm\:-bottom-16') {
        @include assert {
          @include output {
            @include sm\:-bottom-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: -4rem;
            }
          }
        }
      }

      @include it('sm\:-left-16') {
        @include assert {
          @include output {
            @include sm\:-left-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -4rem;
            }
          }
        }
      }

      @include it('sm\:-inset-20') {
        @include assert {
          @include output {
            @include sm\:-inset-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: -5rem;
            }
          }
        }
      }

      @include it('sm\:-inset-x-20') {
        @include assert {
          @include output {
            @include sm\:-inset-x-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -5rem;
              right: -5rem;
            }
          }
        }
      }

      @include it('sm\:-inset-y-20') {
        @include assert {
          @include output {
            @include sm\:-inset-y-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -5rem;
              bottom: -5rem;
            }
          }
        }
      }

      @include it('sm\:-start-20') {
        @include assert {
          @include output {
            @include sm\:-start-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: -5rem;
            }
          }
        }
      }

      @include it('sm\:-end-20') {
        @include assert {
          @include output {
            @include sm\:-end-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: -5rem;
            }
          }
        }
      }

      @include it('sm\:-top-20') {
        @include assert {
          @include output {
            @include sm\:-top-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -5rem;
            }
          }
        }
      }

      @include it('sm\:-right-20') {
        @include assert {
          @include output {
            @include sm\:-right-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: -5rem;
            }
          }
        }
      }

      @include it('sm\:-bottom-20') {
        @include assert {
          @include output {
            @include sm\:-bottom-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: -5rem;
            }
          }
        }
      }

      @include it('sm\:-left-20') {
        @include assert {
          @include output {
            @include sm\:-left-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -5rem;
            }
          }
        }
      }

      @include it('sm\:-inset-24') {
        @include assert {
          @include output {
            @include sm\:-inset-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: -6rem;
            }
          }
        }
      }

      @include it('sm\:-inset-x-24') {
        @include assert {
          @include output {
            @include sm\:-inset-x-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -6rem;
              right: -6rem;
            }
          }
        }
      }

      @include it('sm\:-inset-y-24') {
        @include assert {
          @include output {
            @include sm\:-inset-y-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -6rem;
              bottom: -6rem;
            }
          }
        }
      }

      @include it('sm\:-start-24') {
        @include assert {
          @include output {
            @include sm\:-start-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: -6rem;
            }
          }
        }
      }

      @include it('sm\:-end-24') {
        @include assert {
          @include output {
            @include sm\:-end-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: -6rem;
            }
          }
        }
      }

      @include it('sm\:-top-24') {
        @include assert {
          @include output {
            @include sm\:-top-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -6rem;
            }
          }
        }
      }

      @include it('sm\:-right-24') {
        @include assert {
          @include output {
            @include sm\:-right-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: -6rem;
            }
          }
        }
      }

      @include it('sm\:-bottom-24') {
        @include assert {
          @include output {
            @include sm\:-bottom-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: -6rem;
            }
          }
        }
      }

      @include it('sm\:-left-24') {
        @include assert {
          @include output {
            @include sm\:-left-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -6rem;
            }
          }
        }
      }

      @include it('sm\:-inset-28') {
        @include assert {
          @include output {
            @include sm\:-inset-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: -7rem;
            }
          }
        }
      }

      @include it('sm\:-inset-x-28') {
        @include assert {
          @include output {
            @include sm\:-inset-x-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -7rem;
              right: -7rem;
            }
          }
        }
      }

      @include it('sm\:-inset-y-28') {
        @include assert {
          @include output {
            @include sm\:-inset-y-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -7rem;
              bottom: -7rem;
            }
          }
        }
      }

      @include it('sm\:-start-28') {
        @include assert {
          @include output {
            @include sm\:-start-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: -7rem;
            }
          }
        }
      }

      @include it('sm\:-end-28') {
        @include assert {
          @include output {
            @include sm\:-end-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: -7rem;
            }
          }
        }
      }

      @include it('sm\:-top-28') {
        @include assert {
          @include output {
            @include sm\:-top-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -7rem;
            }
          }
        }
      }

      @include it('sm\:-right-28') {
        @include assert {
          @include output {
            @include sm\:-right-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: -7rem;
            }
          }
        }
      }

      @include it('sm\:-bottom-28') {
        @include assert {
          @include output {
            @include sm\:-bottom-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: -7rem;
            }
          }
        }
      }

      @include it('sm\:-left-28') {
        @include assert {
          @include output {
            @include sm\:-left-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -7rem;
            }
          }
        }
      }

      @include it('sm\:-inset-32') {
        @include assert {
          @include output {
            @include sm\:-inset-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: -8rem;
            }
          }
        }
      }

      @include it('sm\:-inset-x-32') {
        @include assert {
          @include output {
            @include sm\:-inset-x-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -8rem;
              right: -8rem;
            }
          }
        }
      }

      @include it('sm\:-inset-y-32') {
        @include assert {
          @include output {
            @include sm\:-inset-y-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -8rem;
              bottom: -8rem;
            }
          }
        }
      }

      @include it('sm\:-start-32') {
        @include assert {
          @include output {
            @include sm\:-start-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: -8rem;
            }
          }
        }
      }

      @include it('sm\:-end-32') {
        @include assert {
          @include output {
            @include sm\:-end-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: -8rem;
            }
          }
        }
      }

      @include it('sm\:-top-32') {
        @include assert {
          @include output {
            @include sm\:-top-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -8rem;
            }
          }
        }
      }

      @include it('sm\:-right-32') {
        @include assert {
          @include output {
            @include sm\:-right-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: -8rem;
            }
          }
        }
      }

      @include it('sm\:-bottom-32') {
        @include assert {
          @include output {
            @include sm\:-bottom-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: -8rem;
            }
          }
        }
      }

      @include it('sm\:-left-32') {
        @include assert {
          @include output {
            @include sm\:-left-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -8rem;
            }
          }
        }
      }

      @include it('sm\:-inset-36') {
        @include assert {
          @include output {
            @include sm\:-inset-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: -9rem;
            }
          }
        }
      }

      @include it('sm\:-inset-x-36') {
        @include assert {
          @include output {
            @include sm\:-inset-x-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -9rem;
              right: -9rem;
            }
          }
        }
      }

      @include it('sm\:-inset-y-36') {
        @include assert {
          @include output {
            @include sm\:-inset-y-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -9rem;
              bottom: -9rem;
            }
          }
        }
      }

      @include it('sm\:-start-36') {
        @include assert {
          @include output {
            @include sm\:-start-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: -9rem;
            }
          }
        }
      }

      @include it('sm\:-end-36') {
        @include assert {
          @include output {
            @include sm\:-end-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: -9rem;
            }
          }
        }
      }

      @include it('sm\:-top-36') {
        @include assert {
          @include output {
            @include sm\:-top-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -9rem;
            }
          }
        }
      }

      @include it('sm\:-right-36') {
        @include assert {
          @include output {
            @include sm\:-right-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: -9rem;
            }
          }
        }
      }

      @include it('sm\:-bottom-36') {
        @include assert {
          @include output {
            @include sm\:-bottom-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: -9rem;
            }
          }
        }
      }

      @include it('sm\:-left-36') {
        @include assert {
          @include output {
            @include sm\:-left-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -9rem;
            }
          }
        }
      }

      @include it('sm\:-inset-40') {
        @include assert {
          @include output {
            @include sm\:-inset-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: -10rem;
            }
          }
        }
      }

      @include it('sm\:-inset-x-40') {
        @include assert {
          @include output {
            @include sm\:-inset-x-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -10rem;
              right: -10rem;
            }
          }
        }
      }

      @include it('sm\:-inset-y-40') {
        @include assert {
          @include output {
            @include sm\:-inset-y-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -10rem;
              bottom: -10rem;
            }
          }
        }
      }

      @include it('sm\:-start-40') {
        @include assert {
          @include output {
            @include sm\:-start-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: -10rem;
            }
          }
        }
      }

      @include it('sm\:-end-40') {
        @include assert {
          @include output {
            @include sm\:-end-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: -10rem;
            }
          }
        }
      }

      @include it('sm\:-top-40') {
        @include assert {
          @include output {
            @include sm\:-top-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -10rem;
            }
          }
        }
      }

      @include it('sm\:-right-40') {
        @include assert {
          @include output {
            @include sm\:-right-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: -10rem;
            }
          }
        }
      }

      @include it('sm\:-bottom-40') {
        @include assert {
          @include output {
            @include sm\:-bottom-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: -10rem;
            }
          }
        }
      }

      @include it('sm\:-left-40') {
        @include assert {
          @include output {
            @include sm\:-left-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -10rem;
            }
          }
        }
      }

      @include it('sm\:-inset-44') {
        @include assert {
          @include output {
            @include sm\:-inset-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: -11rem;
            }
          }
        }
      }

      @include it('sm\:-inset-x-44') {
        @include assert {
          @include output {
            @include sm\:-inset-x-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -11rem;
              right: -11rem;
            }
          }
        }
      }

      @include it('sm\:-inset-y-44') {
        @include assert {
          @include output {
            @include sm\:-inset-y-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -11rem;
              bottom: -11rem;
            }
          }
        }
      }

      @include it('sm\:-start-44') {
        @include assert {
          @include output {
            @include sm\:-start-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: -11rem;
            }
          }
        }
      }

      @include it('sm\:-end-44') {
        @include assert {
          @include output {
            @include sm\:-end-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: -11rem;
            }
          }
        }
      }

      @include it('sm\:-top-44') {
        @include assert {
          @include output {
            @include sm\:-top-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -11rem;
            }
          }
        }
      }

      @include it('sm\:-right-44') {
        @include assert {
          @include output {
            @include sm\:-right-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: -11rem;
            }
          }
        }
      }

      @include it('sm\:-bottom-44') {
        @include assert {
          @include output {
            @include sm\:-bottom-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: -11rem;
            }
          }
        }
      }

      @include it('sm\:-left-44') {
        @include assert {
          @include output {
            @include sm\:-left-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -11rem;
            }
          }
        }
      }

      @include it('sm\:-inset-48') {
        @include assert {
          @include output {
            @include sm\:-inset-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: -12rem;
            }
          }
        }
      }

      @include it('sm\:-inset-x-48') {
        @include assert {
          @include output {
            @include sm\:-inset-x-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -12rem;
              right: -12rem;
            }
          }
        }
      }

      @include it('sm\:-inset-y-48') {
        @include assert {
          @include output {
            @include sm\:-inset-y-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -12rem;
              bottom: -12rem;
            }
          }
        }
      }

      @include it('sm\:-start-48') {
        @include assert {
          @include output {
            @include sm\:-start-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: -12rem;
            }
          }
        }
      }

      @include it('sm\:-end-48') {
        @include assert {
          @include output {
            @include sm\:-end-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: -12rem;
            }
          }
        }
      }

      @include it('sm\:-top-48') {
        @include assert {
          @include output {
            @include sm\:-top-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -12rem;
            }
          }
        }
      }

      @include it('sm\:-right-48') {
        @include assert {
          @include output {
            @include sm\:-right-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: -12rem;
            }
          }
        }
      }

      @include it('sm\:-bottom-48') {
        @include assert {
          @include output {
            @include sm\:-bottom-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: -12rem;
            }
          }
        }
      }

      @include it('sm\:-left-48') {
        @include assert {
          @include output {
            @include sm\:-left-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -12rem;
            }
          }
        }
      }

      @include it('sm\:-inset-52') {
        @include assert {
          @include output {
            @include sm\:-inset-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: -13rem;
            }
          }
        }
      }

      @include it('sm\:-inset-x-52') {
        @include assert {
          @include output {
            @include sm\:-inset-x-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -13rem;
              right: -13rem;
            }
          }
        }
      }

      @include it('sm\:-inset-y-52') {
        @include assert {
          @include output {
            @include sm\:-inset-y-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -13rem;
              bottom: -13rem;
            }
          }
        }
      }

      @include it('sm\:-start-52') {
        @include assert {
          @include output {
            @include sm\:-start-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: -13rem;
            }
          }
        }
      }

      @include it('sm\:-end-52') {
        @include assert {
          @include output {
            @include sm\:-end-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: -13rem;
            }
          }
        }
      }

      @include it('sm\:-top-52') {
        @include assert {
          @include output {
            @include sm\:-top-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -13rem;
            }
          }
        }
      }

      @include it('sm\:-right-52') {
        @include assert {
          @include output {
            @include sm\:-right-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: -13rem;
            }
          }
        }
      }

      @include it('sm\:-bottom-52') {
        @include assert {
          @include output {
            @include sm\:-bottom-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: -13rem;
            }
          }
        }
      }

      @include it('sm\:-left-52') {
        @include assert {
          @include output {
            @include sm\:-left-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -13rem;
            }
          }
        }
      }

      @include it('sm\:-inset-56') {
        @include assert {
          @include output {
            @include sm\:-inset-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: -14rem;
            }
          }
        }
      }

      @include it('sm\:-inset-x-56') {
        @include assert {
          @include output {
            @include sm\:-inset-x-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -14rem;
              right: -14rem;
            }
          }
        }
      }

      @include it('sm\:-inset-y-56') {
        @include assert {
          @include output {
            @include sm\:-inset-y-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -14rem;
              bottom: -14rem;
            }
          }
        }
      }

      @include it('sm\:-start-56') {
        @include assert {
          @include output {
            @include sm\:-start-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: -14rem;
            }
          }
        }
      }

      @include it('sm\:-end-56') {
        @include assert {
          @include output {
            @include sm\:-end-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: -14rem;
            }
          }
        }
      }

      @include it('sm\:-top-56') {
        @include assert {
          @include output {
            @include sm\:-top-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -14rem;
            }
          }
        }
      }

      @include it('sm\:-right-56') {
        @include assert {
          @include output {
            @include sm\:-right-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: -14rem;
            }
          }
        }
      }

      @include it('sm\:-bottom-56') {
        @include assert {
          @include output {
            @include sm\:-bottom-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: -14rem;
            }
          }
        }
      }

      @include it('sm\:-left-56') {
        @include assert {
          @include output {
            @include sm\:-left-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -14rem;
            }
          }
        }
      }

      @include it('sm\:-inset-60') {
        @include assert {
          @include output {
            @include sm\:-inset-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: -15rem;
            }
          }
        }
      }

      @include it('sm\:-inset-x-60') {
        @include assert {
          @include output {
            @include sm\:-inset-x-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -15rem;
              right: -15rem;
            }
          }
        }
      }

      @include it('sm\:-inset-y-60') {
        @include assert {
          @include output {
            @include sm\:-inset-y-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -15rem;
              bottom: -15rem;
            }
          }
        }
      }

      @include it('sm\:-start-60') {
        @include assert {
          @include output {
            @include sm\:-start-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: -15rem;
            }
          }
        }
      }

      @include it('sm\:-end-60') {
        @include assert {
          @include output {
            @include sm\:-end-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: -15rem;
            }
          }
        }
      }

      @include it('sm\:-top-60') {
        @include assert {
          @include output {
            @include sm\:-top-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -15rem;
            }
          }
        }
      }

      @include it('sm\:-right-60') {
        @include assert {
          @include output {
            @include sm\:-right-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: -15rem;
            }
          }
        }
      }

      @include it('sm\:-bottom-60') {
        @include assert {
          @include output {
            @include sm\:-bottom-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: -15rem;
            }
          }
        }
      }

      @include it('sm\:-left-60') {
        @include assert {
          @include output {
            @include sm\:-left-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -15rem;
            }
          }
        }
      }

      @include it('sm\:-inset-64') {
        @include assert {
          @include output {
            @include sm\:-inset-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: -16rem;
            }
          }
        }
      }

      @include it('sm\:-inset-x-64') {
        @include assert {
          @include output {
            @include sm\:-inset-x-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -16rem;
              right: -16rem;
            }
          }
        }
      }

      @include it('sm\:-inset-y-64') {
        @include assert {
          @include output {
            @include sm\:-inset-y-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -16rem;
              bottom: -16rem;
            }
          }
        }
      }

      @include it('sm\:-start-64') {
        @include assert {
          @include output {
            @include sm\:-start-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: -16rem;
            }
          }
        }
      }

      @include it('sm\:-end-64') {
        @include assert {
          @include output {
            @include sm\:-end-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: -16rem;
            }
          }
        }
      }

      @include it('sm\:-top-64') {
        @include assert {
          @include output {
            @include sm\:-top-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -16rem;
            }
          }
        }
      }

      @include it('sm\:-right-64') {
        @include assert {
          @include output {
            @include sm\:-right-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: -16rem;
            }
          }
        }
      }

      @include it('sm\:-bottom-64') {
        @include assert {
          @include output {
            @include sm\:-bottom-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: -16rem;
            }
          }
        }
      }

      @include it('sm\:-left-64') {
        @include assert {
          @include output {
            @include sm\:-left-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -16rem;
            }
          }
        }
      }

      @include it('sm\:-inset-72') {
        @include assert {
          @include output {
            @include sm\:-inset-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: -18rem;
            }
          }
        }
      }

      @include it('sm\:-inset-x-72') {
        @include assert {
          @include output {
            @include sm\:-inset-x-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -18rem;
              right: -18rem;
            }
          }
        }
      }

      @include it('sm\:-inset-y-72') {
        @include assert {
          @include output {
            @include sm\:-inset-y-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -18rem;
              bottom: -18rem;
            }
          }
        }
      }

      @include it('sm\:-start-72') {
        @include assert {
          @include output {
            @include sm\:-start-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: -18rem;
            }
          }
        }
      }

      @include it('sm\:-end-72') {
        @include assert {
          @include output {
            @include sm\:-end-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: -18rem;
            }
          }
        }
      }

      @include it('sm\:-top-72') {
        @include assert {
          @include output {
            @include sm\:-top-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -18rem;
            }
          }
        }
      }

      @include it('sm\:-right-72') {
        @include assert {
          @include output {
            @include sm\:-right-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: -18rem;
            }
          }
        }
      }

      @include it('sm\:-bottom-72') {
        @include assert {
          @include output {
            @include sm\:-bottom-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: -18rem;
            }
          }
        }
      }

      @include it('sm\:-left-72') {
        @include assert {
          @include output {
            @include sm\:-left-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -18rem;
            }
          }
        }
      }

      @include it('sm\:-inset-80') {
        @include assert {
          @include output {
            @include sm\:-inset-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: -20rem;
            }
          }
        }
      }

      @include it('sm\:-inset-x-80') {
        @include assert {
          @include output {
            @include sm\:-inset-x-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -20rem;
              right: -20rem;
            }
          }
        }
      }

      @include it('sm\:-inset-y-80') {
        @include assert {
          @include output {
            @include sm\:-inset-y-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -20rem;
              bottom: -20rem;
            }
          }
        }
      }

      @include it('sm\:-start-80') {
        @include assert {
          @include output {
            @include sm\:-start-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: -20rem;
            }
          }
        }
      }

      @include it('sm\:-end-80') {
        @include assert {
          @include output {
            @include sm\:-end-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: -20rem;
            }
          }
        }
      }

      @include it('sm\:-top-80') {
        @include assert {
          @include output {
            @include sm\:-top-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -20rem;
            }
          }
        }
      }

      @include it('sm\:-right-80') {
        @include assert {
          @include output {
            @include sm\:-right-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: -20rem;
            }
          }
        }
      }

      @include it('sm\:-bottom-80') {
        @include assert {
          @include output {
            @include sm\:-bottom-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: -20rem;
            }
          }
        }
      }

      @include it('sm\:-left-80') {
        @include assert {
          @include output {
            @include sm\:-left-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -20rem;
            }
          }
        }
      }

      @include it('sm\:-inset-96') {
        @include assert {
          @include output {
            @include sm\:-inset-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: -24rem;
            }
          }
        }
      }

      @include it('sm\:-inset-x-96') {
        @include assert {
          @include output {
            @include sm\:-inset-x-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -24rem;
              right: -24rem;
            }
          }
        }
      }

      @include it('sm\:-inset-y-96') {
        @include assert {
          @include output {
            @include sm\:-inset-y-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -24rem;
              bottom: -24rem;
            }
          }
        }
      }

      @include it('sm\:-start-96') {
        @include assert {
          @include output {
            @include sm\:-start-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: -24rem;
            }
          }
        }
      }

      @include it('sm\:-end-96') {
        @include assert {
          @include output {
            @include sm\:-end-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: -24rem;
            }
          }
        }
      }

      @include it('sm\:-top-96') {
        @include assert {
          @include output {
            @include sm\:-top-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -24rem;
            }
          }
        }
      }

      @include it('sm\:-right-96') {
        @include assert {
          @include output {
            @include sm\:-right-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: -24rem;
            }
          }
        }
      }

      @include it('sm\:-bottom-96') {
        @include assert {
          @include output {
            @include sm\:-bottom-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: -24rem;
            }
          }
        }
      }

      @include it('sm\:-left-96') {
        @include assert {
          @include output {
            @include sm\:-left-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -24rem;
            }
          }
        }
      }

      @include it('sm\:-inset-1\/2') {
        @include assert {
          @include output {
            @include sm\:-inset-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: -50%;
            }
          }
        }
      }

      @include it('sm\:-inset-1\/3') {
        @include assert {
          @include output {
            @include sm\:-inset-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: -33.333333%;
            }
          }
        }
      }

      @include it('sm\:-inset-2\/3') {
        @include assert {
          @include output {
            @include sm\:-inset-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: -66.666667%;
            }
          }
        }
      }

      @include it('sm\:-inset-1\/4') {
        @include assert {
          @include output {
            @include sm\:-inset-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: -25%;
            }
          }
        }
      }

      @include it('sm\:-inset-2\/4') {
        @include assert {
          @include output {
            @include sm\:-inset-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: -50%;
            }
          }
        }
      }

      @include it('sm\:-inset-3\/4') {
        @include assert {
          @include output {
            @include sm\:-inset-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: -75%;
            }
          }
        }
      }

      @include it('sm\:-inset-full') {
        @include assert {
          @include output {
            @include sm\:-inset-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: -100%;
            }
          }
        }
      }

      @include it('sm\:-inset-x-1\/2') {
        @include assert {
          @include output {
            @include sm\:-inset-x-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -50%;
              right: -50%;
            }
          }
        }
      }

      @include it('sm\:-inset-x-1\/3') {
        @include assert {
          @include output {
            @include sm\:-inset-x-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -33.333333%;
              right: -33.333333%;
            }
          }
        }
      }

      @include it('sm\:-inset-x-2\/3') {
        @include assert {
          @include output {
            @include sm\:-inset-x-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -66.666667%;
              right: -66.666667%;
            }
          }
        }
      }

      @include it('sm\:-inset-x-1\/4') {
        @include assert {
          @include output {
            @include sm\:-inset-x-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -25%;
              right: -25%;
            }
          }
        }
      }

      @include it('sm\:-inset-x-2\/4') {
        @include assert {
          @include output {
            @include sm\:-inset-x-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -50%;
              right: -50%;
            }
          }
        }
      }

      @include it('sm\:-inset-x-3\/4') {
        @include assert {
          @include output {
            @include sm\:-inset-x-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -75%;
              right: -75%;
            }
          }
        }
      }

      @include it('sm\:-inset-x-full') {
        @include assert {
          @include output {
            @include sm\:-inset-x-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -100%;
              right: -100%;
            }
          }
        }
      }

      @include it('sm\:-inset-y-1\/2') {
        @include assert {
          @include output {
            @include sm\:-inset-y-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -50%;
              bottom: -50%;
            }
          }
        }
      }

      @include it('sm\:-inset-y-1\/3') {
        @include assert {
          @include output {
            @include sm\:-inset-y-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -33.333333%;
              bottom: -33.333333%;
            }
          }
        }
      }

      @include it('sm\:-inset-y-2\/3') {
        @include assert {
          @include output {
            @include sm\:-inset-y-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -66.666667%;
              bottom: -66.666667%;
            }
          }
        }
      }

      @include it('sm\:-inset-y-1\/4') {
        @include assert {
          @include output {
            @include sm\:-inset-y-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -25%;
              bottom: -25%;
            }
          }
        }
      }

      @include it('sm\:-inset-y-2\/4') {
        @include assert {
          @include output {
            @include sm\:-inset-y-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -50%;
              bottom: -50%;
            }
          }
        }
      }

      @include it('sm\:-inset-y-3\/4') {
        @include assert {
          @include output {
            @include sm\:-inset-y-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -75%;
              bottom: -75%;
            }
          }
        }
      }

      @include it('sm\:-inset-y-full') {
        @include assert {
          @include output {
            @include sm\:-inset-y-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -100%;
              bottom: -100%;
            }
          }
        }
      }

      @include it('sm\:-start-1\/2') {
        @include assert {
          @include output {
            @include sm\:-start-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: -50%;
            }
          }
        }
      }

      @include it('sm\:-start-1\/3') {
        @include assert {
          @include output {
            @include sm\:-start-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: -33.333333%;
            }
          }
        }
      }

      @include it('sm\:-start-2\/3') {
        @include assert {
          @include output {
            @include sm\:-start-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: -66.666667%;
            }
          }
        }
      }

      @include it('sm\:-start-1\/4') {
        @include assert {
          @include output {
            @include sm\:-start-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: -25%;
            }
          }
        }
      }

      @include it('sm\:-start-2\/4') {
        @include assert {
          @include output {
            @include sm\:-start-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: -50%;
            }
          }
        }
      }

      @include it('sm\:-start-3\/4') {
        @include assert {
          @include output {
            @include sm\:-start-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: -75%;
            }
          }
        }
      }

      @include it('sm\:-start-full') {
        @include assert {
          @include output {
            @include sm\:-start-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: -100%;
            }
          }
        }
      }

      @include it('sm\:-end-1\/2') {
        @include assert {
          @include output {
            @include sm\:-end-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: -50%;
            }
          }
        }
      }

      @include it('sm\:-end-1\/3') {
        @include assert {
          @include output {
            @include sm\:-end-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: -33.333333%;
            }
          }
        }
      }

      @include it('sm\:-end-2\/3') {
        @include assert {
          @include output {
            @include sm\:-end-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: -66.666667%;
            }
          }
        }
      }

      @include it('sm\:-end-1\/4') {
        @include assert {
          @include output {
            @include sm\:-end-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: -25%;
            }
          }
        }
      }

      @include it('sm\:-end-2\/4') {
        @include assert {
          @include output {
            @include sm\:-end-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: -50%;
            }
          }
        }
      }

      @include it('sm\:-end-3\/4') {
        @include assert {
          @include output {
            @include sm\:-end-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: -75%;
            }
          }
        }
      }

      @include it('sm\:-end-full') {
        @include assert {
          @include output {
            @include sm\:-end-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: -100%;
            }
          }
        }
      }

      @include it('sm\:-top-1\/2') {
        @include assert {
          @include output {
            @include sm\:-top-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -50%;
            }
          }
        }
      }

      @include it('sm\:-top-1\/3') {
        @include assert {
          @include output {
            @include sm\:-top-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -33.333333%;
            }
          }
        }
      }

      @include it('sm\:-top-2\/3') {
        @include assert {
          @include output {
            @include sm\:-top-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -66.666667%;
            }
          }
        }
      }

      @include it('sm\:-top-1\/4') {
        @include assert {
          @include output {
            @include sm\:-top-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -25%;
            }
          }
        }
      }

      @include it('sm\:-top-2\/4') {
        @include assert {
          @include output {
            @include sm\:-top-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -50%;
            }
          }
        }
      }

      @include it('sm\:-top-3\/4') {
        @include assert {
          @include output {
            @include sm\:-top-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -75%;
            }
          }
        }
      }

      @include it('sm\:-top-full') {
        @include assert {
          @include output {
            @include sm\:-top-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -100%;
            }
          }
        }
      }

      @include it('sm\:-right-1\/2') {
        @include assert {
          @include output {
            @include sm\:-right-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: -50%;
            }
          }
        }
      }

      @include it('sm\:-right-1\/3') {
        @include assert {
          @include output {
            @include sm\:-right-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: -33.333333%;
            }
          }
        }
      }

      @include it('sm\:-right-2\/3') {
        @include assert {
          @include output {
            @include sm\:-right-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: -66.666667%;
            }
          }
        }
      }

      @include it('sm\:-right-1\/4') {
        @include assert {
          @include output {
            @include sm\:-right-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: -25%;
            }
          }
        }
      }

      @include it('sm\:-right-2\/4') {
        @include assert {
          @include output {
            @include sm\:-right-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: -50%;
            }
          }
        }
      }

      @include it('sm\:-right-3\/4') {
        @include assert {
          @include output {
            @include sm\:-right-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: -75%;
            }
          }
        }
      }

      @include it('sm\:-right-full') {
        @include assert {
          @include output {
            @include sm\:-right-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: -100%;
            }
          }
        }
      }

      @include it('sm\:-bottom-1\/2') {
        @include assert {
          @include output {
            @include sm\:-bottom-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: -50%;
            }
          }
        }
      }

      @include it('sm\:-bottom-1\/3') {
        @include assert {
          @include output {
            @include sm\:-bottom-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: -33.333333%;
            }
          }
        }
      }

      @include it('sm\:-bottom-2\/3') {
        @include assert {
          @include output {
            @include sm\:-bottom-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: -66.666667%;
            }
          }
        }
      }

      @include it('sm\:-bottom-1\/4') {
        @include assert {
          @include output {
            @include sm\:-bottom-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: -25%;
            }
          }
        }
      }

      @include it('sm\:-bottom-2\/4') {
        @include assert {
          @include output {
            @include sm\:-bottom-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: -50%;
            }
          }
        }
      }

      @include it('sm\:-bottom-3\/4') {
        @include assert {
          @include output {
            @include sm\:-bottom-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: -75%;
            }
          }
        }
      }

      @include it('sm\:-bottom-full') {
        @include assert {
          @include output {
            @include sm\:-bottom-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: -100%;
            }
          }
        }
      }

      @include it('sm\:-left-1\/2') {
        @include assert {
          @include output {
            @include sm\:-left-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -50%;
            }
          }
        }
      }

      @include it('sm\:-left-1\/3') {
        @include assert {
          @include output {
            @include sm\:-left-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -33.333333%;
            }
          }
        }
      }

      @include it('sm\:-left-2\/3') {
        @include assert {
          @include output {
            @include sm\:-left-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -66.666667%;
            }
          }
        }
      }

      @include it('sm\:-left-1\/4') {
        @include assert {
          @include output {
            @include sm\:-left-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -25%;
            }
          }
        }
      }

      @include it('sm\:-left-2\/4') {
        @include assert {
          @include output {
            @include sm\:-left-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -50%;
            }
          }
        }
      }

      @include it('sm\:-left-3\/4') {
        @include assert {
          @include output {
            @include sm\:-left-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -75%;
            }
          }
        }
      }

      @include it('sm\:-left-full') {
        @include assert {
          @include output {
            @include sm\:-left-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -100%;
            }
          }
        }
      }

      @include it('md\:inset-0') {
        @include assert {
          @include output {
            @include md\:inset-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: 0px;
            }
          }
        }
      }

      @include it('md\:inset-x-0') {
        @include assert {
          @include output {
            @include md\:inset-x-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 0px;
              right: 0px;
            }
          }
        }
      }

      @include it('md\:inset-y-0') {
        @include assert {
          @include output {
            @include md\:inset-y-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 0px;
              bottom: 0px;
            }
          }
        }
      }

      @include it('md\:start-0') {
        @include assert {
          @include output {
            @include md\:start-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: 0px;
            }
          }
        }
      }

      @include it('md\:end-0') {
        @include assert {
          @include output {
            @include md\:end-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: 0px;
            }
          }
        }
      }

      @include it('md\:top-0') {
        @include assert {
          @include output {
            @include md\:top-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 0px;
            }
          }
        }
      }

      @include it('md\:right-0') {
        @include assert {
          @include output {
            @include md\:right-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: 0px;
            }
          }
        }
      }

      @include it('md\:bottom-0') {
        @include assert {
          @include output {
            @include md\:bottom-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: 0px;
            }
          }
        }
      }

      @include it('md\:left-0') {
        @include assert {
          @include output {
            @include md\:left-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 0px;
            }
          }
        }
      }

      @include it('md\:inset-px') {
        @include assert {
          @include output {
            @include md\:inset-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: 1px;
            }
          }
        }
      }

      @include it('md\:inset-x-px') {
        @include assert {
          @include output {
            @include md\:inset-x-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 1px;
              right: 1px;
            }
          }
        }
      }

      @include it('md\:inset-y-px') {
        @include assert {
          @include output {
            @include md\:inset-y-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 1px;
              bottom: 1px;
            }
          }
        }
      }

      @include it('md\:start-px') {
        @include assert {
          @include output {
            @include md\:start-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: 1px;
            }
          }
        }
      }

      @include it('md\:end-px') {
        @include assert {
          @include output {
            @include md\:end-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: 1px;
            }
          }
        }
      }

      @include it('md\:top-px') {
        @include assert {
          @include output {
            @include md\:top-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 1px;
            }
          }
        }
      }

      @include it('md\:right-px') {
        @include assert {
          @include output {
            @include md\:right-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: 1px;
            }
          }
        }
      }

      @include it('md\:bottom-px') {
        @include assert {
          @include output {
            @include md\:bottom-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: 1px;
            }
          }
        }
      }

      @include it('md\:left-px') {
        @include assert {
          @include output {
            @include md\:left-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 1px;
            }
          }
        }
      }

      @include it('md\:inset-0\.5') {
        @include assert {
          @include output {
            @include md\:inset-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: 0.125rem;
            }
          }
        }
      }

      @include it('md\:inset-x-0\.5') {
        @include assert {
          @include output {
            @include md\:inset-x-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 0.125rem;
              right: 0.125rem;
            }
          }
        }
      }

      @include it('md\:inset-y-0\.5') {
        @include assert {
          @include output {
            @include md\:inset-y-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 0.125rem;
              bottom: 0.125rem;
            }
          }
        }
      }

      @include it('md\:start-0\.5') {
        @include assert {
          @include output {
            @include md\:start-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: 0.125rem;
            }
          }
        }
      }

      @include it('md\:end-0\.5') {
        @include assert {
          @include output {
            @include md\:end-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: 0.125rem;
            }
          }
        }
      }

      @include it('md\:top-0\.5') {
        @include assert {
          @include output {
            @include md\:top-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 0.125rem;
            }
          }
        }
      }

      @include it('md\:right-0\.5') {
        @include assert {
          @include output {
            @include md\:right-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: 0.125rem;
            }
          }
        }
      }

      @include it('md\:bottom-0\.5') {
        @include assert {
          @include output {
            @include md\:bottom-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: 0.125rem;
            }
          }
        }
      }

      @include it('md\:left-0\.5') {
        @include assert {
          @include output {
            @include md\:left-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 0.125rem;
            }
          }
        }
      }

      @include it('md\:inset-1') {
        @include assert {
          @include output {
            @include md\:inset-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: 0.25rem;
            }
          }
        }
      }

      @include it('md\:inset-x-1') {
        @include assert {
          @include output {
            @include md\:inset-x-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 0.25rem;
              right: 0.25rem;
            }
          }
        }
      }

      @include it('md\:inset-y-1') {
        @include assert {
          @include output {
            @include md\:inset-y-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 0.25rem;
              bottom: 0.25rem;
            }
          }
        }
      }

      @include it('md\:start-1') {
        @include assert {
          @include output {
            @include md\:start-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: 0.25rem;
            }
          }
        }
      }

      @include it('md\:end-1') {
        @include assert {
          @include output {
            @include md\:end-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: 0.25rem;
            }
          }
        }
      }

      @include it('md\:top-1') {
        @include assert {
          @include output {
            @include md\:top-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 0.25rem;
            }
          }
        }
      }

      @include it('md\:right-1') {
        @include assert {
          @include output {
            @include md\:right-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: 0.25rem;
            }
          }
        }
      }

      @include it('md\:bottom-1') {
        @include assert {
          @include output {
            @include md\:bottom-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: 0.25rem;
            }
          }
        }
      }

      @include it('md\:left-1') {
        @include assert {
          @include output {
            @include md\:left-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 0.25rem;
            }
          }
        }
      }

      @include it('md\:inset-1\.5') {
        @include assert {
          @include output {
            @include md\:inset-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: 0.375rem;
            }
          }
        }
      }

      @include it('md\:inset-x-1\.5') {
        @include assert {
          @include output {
            @include md\:inset-x-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 0.375rem;
              right: 0.375rem;
            }
          }
        }
      }

      @include it('md\:inset-y-1\.5') {
        @include assert {
          @include output {
            @include md\:inset-y-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 0.375rem;
              bottom: 0.375rem;
            }
          }
        }
      }

      @include it('md\:start-1\.5') {
        @include assert {
          @include output {
            @include md\:start-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: 0.375rem;
            }
          }
        }
      }

      @include it('md\:end-1\.5') {
        @include assert {
          @include output {
            @include md\:end-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: 0.375rem;
            }
          }
        }
      }

      @include it('md\:top-1\.5') {
        @include assert {
          @include output {
            @include md\:top-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 0.375rem;
            }
          }
        }
      }

      @include it('md\:right-1\.5') {
        @include assert {
          @include output {
            @include md\:right-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: 0.375rem;
            }
          }
        }
      }

      @include it('md\:bottom-1\.5') {
        @include assert {
          @include output {
            @include md\:bottom-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: 0.375rem;
            }
          }
        }
      }

      @include it('md\:left-1\.5') {
        @include assert {
          @include output {
            @include md\:left-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 0.375rem;
            }
          }
        }
      }

      @include it('md\:inset-2') {
        @include assert {
          @include output {
            @include md\:inset-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: 0.5rem;
            }
          }
        }
      }

      @include it('md\:inset-x-2') {
        @include assert {
          @include output {
            @include md\:inset-x-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 0.5rem;
              right: 0.5rem;
            }
          }
        }
      }

      @include it('md\:inset-y-2') {
        @include assert {
          @include output {
            @include md\:inset-y-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 0.5rem;
              bottom: 0.5rem;
            }
          }
        }
      }

      @include it('md\:start-2') {
        @include assert {
          @include output {
            @include md\:start-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: 0.5rem;
            }
          }
        }
      }

      @include it('md\:end-2') {
        @include assert {
          @include output {
            @include md\:end-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: 0.5rem;
            }
          }
        }
      }

      @include it('md\:top-2') {
        @include assert {
          @include output {
            @include md\:top-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 0.5rem;
            }
          }
        }
      }

      @include it('md\:right-2') {
        @include assert {
          @include output {
            @include md\:right-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: 0.5rem;
            }
          }
        }
      }

      @include it('md\:bottom-2') {
        @include assert {
          @include output {
            @include md\:bottom-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: 0.5rem;
            }
          }
        }
      }

      @include it('md\:left-2') {
        @include assert {
          @include output {
            @include md\:left-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 0.5rem;
            }
          }
        }
      }

      @include it('md\:inset-2\.5') {
        @include assert {
          @include output {
            @include md\:inset-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: 0.625rem;
            }
          }
        }
      }

      @include it('md\:inset-x-2\.5') {
        @include assert {
          @include output {
            @include md\:inset-x-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 0.625rem;
              right: 0.625rem;
            }
          }
        }
      }

      @include it('md\:inset-y-2\.5') {
        @include assert {
          @include output {
            @include md\:inset-y-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 0.625rem;
              bottom: 0.625rem;
            }
          }
        }
      }

      @include it('md\:start-2\.5') {
        @include assert {
          @include output {
            @include md\:start-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: 0.625rem;
            }
          }
        }
      }

      @include it('md\:end-2\.5') {
        @include assert {
          @include output {
            @include md\:end-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: 0.625rem;
            }
          }
        }
      }

      @include it('md\:top-2\.5') {
        @include assert {
          @include output {
            @include md\:top-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 0.625rem;
            }
          }
        }
      }

      @include it('md\:right-2\.5') {
        @include assert {
          @include output {
            @include md\:right-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: 0.625rem;
            }
          }
        }
      }

      @include it('md\:bottom-2\.5') {
        @include assert {
          @include output {
            @include md\:bottom-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: 0.625rem;
            }
          }
        }
      }

      @include it('md\:left-2\.5') {
        @include assert {
          @include output {
            @include md\:left-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 0.625rem;
            }
          }
        }
      }

      @include it('md\:inset-3') {
        @include assert {
          @include output {
            @include md\:inset-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: 0.75rem;
            }
          }
        }
      }

      @include it('md\:inset-x-3') {
        @include assert {
          @include output {
            @include md\:inset-x-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 0.75rem;
              right: 0.75rem;
            }
          }
        }
      }

      @include it('md\:inset-y-3') {
        @include assert {
          @include output {
            @include md\:inset-y-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 0.75rem;
              bottom: 0.75rem;
            }
          }
        }
      }

      @include it('md\:start-3') {
        @include assert {
          @include output {
            @include md\:start-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: 0.75rem;
            }
          }
        }
      }

      @include it('md\:end-3') {
        @include assert {
          @include output {
            @include md\:end-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: 0.75rem;
            }
          }
        }
      }

      @include it('md\:top-3') {
        @include assert {
          @include output {
            @include md\:top-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 0.75rem;
            }
          }
        }
      }

      @include it('md\:right-3') {
        @include assert {
          @include output {
            @include md\:right-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: 0.75rem;
            }
          }
        }
      }

      @include it('md\:bottom-3') {
        @include assert {
          @include output {
            @include md\:bottom-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: 0.75rem;
            }
          }
        }
      }

      @include it('md\:left-3') {
        @include assert {
          @include output {
            @include md\:left-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 0.75rem;
            }
          }
        }
      }

      @include it('md\:inset-3\.5') {
        @include assert {
          @include output {
            @include md\:inset-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: 0.875rem;
            }
          }
        }
      }

      @include it('md\:inset-x-3\.5') {
        @include assert {
          @include output {
            @include md\:inset-x-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 0.875rem;
              right: 0.875rem;
            }
          }
        }
      }

      @include it('md\:inset-y-3\.5') {
        @include assert {
          @include output {
            @include md\:inset-y-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 0.875rem;
              bottom: 0.875rem;
            }
          }
        }
      }

      @include it('md\:start-3\.5') {
        @include assert {
          @include output {
            @include md\:start-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: 0.875rem;
            }
          }
        }
      }

      @include it('md\:end-3\.5') {
        @include assert {
          @include output {
            @include md\:end-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: 0.875rem;
            }
          }
        }
      }

      @include it('md\:top-3\.5') {
        @include assert {
          @include output {
            @include md\:top-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 0.875rem;
            }
          }
        }
      }

      @include it('md\:right-3\.5') {
        @include assert {
          @include output {
            @include md\:right-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: 0.875rem;
            }
          }
        }
      }

      @include it('md\:bottom-3\.5') {
        @include assert {
          @include output {
            @include md\:bottom-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: 0.875rem;
            }
          }
        }
      }

      @include it('md\:left-3\.5') {
        @include assert {
          @include output {
            @include md\:left-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 0.875rem;
            }
          }
        }
      }

      @include it('md\:inset-4') {
        @include assert {
          @include output {
            @include md\:inset-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: 1rem;
            }
          }
        }
      }

      @include it('md\:inset-x-4') {
        @include assert {
          @include output {
            @include md\:inset-x-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 1rem;
              right: 1rem;
            }
          }
        }
      }

      @include it('md\:inset-y-4') {
        @include assert {
          @include output {
            @include md\:inset-y-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 1rem;
              bottom: 1rem;
            }
          }
        }
      }

      @include it('md\:start-4') {
        @include assert {
          @include output {
            @include md\:start-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: 1rem;
            }
          }
        }
      }

      @include it('md\:end-4') {
        @include assert {
          @include output {
            @include md\:end-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: 1rem;
            }
          }
        }
      }

      @include it('md\:top-4') {
        @include assert {
          @include output {
            @include md\:top-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 1rem;
            }
          }
        }
      }

      @include it('md\:right-4') {
        @include assert {
          @include output {
            @include md\:right-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: 1rem;
            }
          }
        }
      }

      @include it('md\:bottom-4') {
        @include assert {
          @include output {
            @include md\:bottom-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: 1rem;
            }
          }
        }
      }

      @include it('md\:left-4') {
        @include assert {
          @include output {
            @include md\:left-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 1rem;
            }
          }
        }
      }

      @include it('md\:inset-5') {
        @include assert {
          @include output {
            @include md\:inset-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: 1.25rem;
            }
          }
        }
      }

      @include it('md\:inset-x-5') {
        @include assert {
          @include output {
            @include md\:inset-x-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 1.25rem;
              right: 1.25rem;
            }
          }
        }
      }

      @include it('md\:inset-y-5') {
        @include assert {
          @include output {
            @include md\:inset-y-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 1.25rem;
              bottom: 1.25rem;
            }
          }
        }
      }

      @include it('md\:start-5') {
        @include assert {
          @include output {
            @include md\:start-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: 1.25rem;
            }
          }
        }
      }

      @include it('md\:end-5') {
        @include assert {
          @include output {
            @include md\:end-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: 1.25rem;
            }
          }
        }
      }

      @include it('md\:top-5') {
        @include assert {
          @include output {
            @include md\:top-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 1.25rem;
            }
          }
        }
      }

      @include it('md\:right-5') {
        @include assert {
          @include output {
            @include md\:right-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: 1.25rem;
            }
          }
        }
      }

      @include it('md\:bottom-5') {
        @include assert {
          @include output {
            @include md\:bottom-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: 1.25rem;
            }
          }
        }
      }

      @include it('md\:left-5') {
        @include assert {
          @include output {
            @include md\:left-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 1.25rem;
            }
          }
        }
      }

      @include it('md\:inset-6') {
        @include assert {
          @include output {
            @include md\:inset-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: 1.5rem;
            }
          }
        }
      }

      @include it('md\:inset-x-6') {
        @include assert {
          @include output {
            @include md\:inset-x-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 1.5rem;
              right: 1.5rem;
            }
          }
        }
      }

      @include it('md\:inset-y-6') {
        @include assert {
          @include output {
            @include md\:inset-y-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 1.5rem;
              bottom: 1.5rem;
            }
          }
        }
      }

      @include it('md\:start-6') {
        @include assert {
          @include output {
            @include md\:start-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: 1.5rem;
            }
          }
        }
      }

      @include it('md\:end-6') {
        @include assert {
          @include output {
            @include md\:end-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: 1.5rem;
            }
          }
        }
      }

      @include it('md\:top-6') {
        @include assert {
          @include output {
            @include md\:top-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 1.5rem;
            }
          }
        }
      }

      @include it('md\:right-6') {
        @include assert {
          @include output {
            @include md\:right-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: 1.5rem;
            }
          }
        }
      }

      @include it('md\:bottom-6') {
        @include assert {
          @include output {
            @include md\:bottom-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: 1.5rem;
            }
          }
        }
      }

      @include it('md\:left-6') {
        @include assert {
          @include output {
            @include md\:left-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 1.5rem;
            }
          }
        }
      }

      @include it('md\:inset-7') {
        @include assert {
          @include output {
            @include md\:inset-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: 1.75rem;
            }
          }
        }
      }

      @include it('md\:inset-x-7') {
        @include assert {
          @include output {
            @include md\:inset-x-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 1.75rem;
              right: 1.75rem;
            }
          }
        }
      }

      @include it('md\:inset-y-7') {
        @include assert {
          @include output {
            @include md\:inset-y-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 1.75rem;
              bottom: 1.75rem;
            }
          }
        }
      }

      @include it('md\:start-7') {
        @include assert {
          @include output {
            @include md\:start-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: 1.75rem;
            }
          }
        }
      }

      @include it('md\:end-7') {
        @include assert {
          @include output {
            @include md\:end-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: 1.75rem;
            }
          }
        }
      }

      @include it('md\:top-7') {
        @include assert {
          @include output {
            @include md\:top-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 1.75rem;
            }
          }
        }
      }

      @include it('md\:right-7') {
        @include assert {
          @include output {
            @include md\:right-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: 1.75rem;
            }
          }
        }
      }

      @include it('md\:bottom-7') {
        @include assert {
          @include output {
            @include md\:bottom-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: 1.75rem;
            }
          }
        }
      }

      @include it('md\:left-7') {
        @include assert {
          @include output {
            @include md\:left-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 1.75rem;
            }
          }
        }
      }

      @include it('md\:inset-8') {
        @include assert {
          @include output {
            @include md\:inset-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: 2rem;
            }
          }
        }
      }

      @include it('md\:inset-x-8') {
        @include assert {
          @include output {
            @include md\:inset-x-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 2rem;
              right: 2rem;
            }
          }
        }
      }

      @include it('md\:inset-y-8') {
        @include assert {
          @include output {
            @include md\:inset-y-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 2rem;
              bottom: 2rem;
            }
          }
        }
      }

      @include it('md\:start-8') {
        @include assert {
          @include output {
            @include md\:start-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: 2rem;
            }
          }
        }
      }

      @include it('md\:end-8') {
        @include assert {
          @include output {
            @include md\:end-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: 2rem;
            }
          }
        }
      }

      @include it('md\:top-8') {
        @include assert {
          @include output {
            @include md\:top-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 2rem;
            }
          }
        }
      }

      @include it('md\:right-8') {
        @include assert {
          @include output {
            @include md\:right-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: 2rem;
            }
          }
        }
      }

      @include it('md\:bottom-8') {
        @include assert {
          @include output {
            @include md\:bottom-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: 2rem;
            }
          }
        }
      }

      @include it('md\:left-8') {
        @include assert {
          @include output {
            @include md\:left-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 2rem;
            }
          }
        }
      }

      @include it('md\:inset-9') {
        @include assert {
          @include output {
            @include md\:inset-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: 2.25rem;
            }
          }
        }
      }

      @include it('md\:inset-x-9') {
        @include assert {
          @include output {
            @include md\:inset-x-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 2.25rem;
              right: 2.25rem;
            }
          }
        }
      }

      @include it('md\:inset-y-9') {
        @include assert {
          @include output {
            @include md\:inset-y-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 2.25rem;
              bottom: 2.25rem;
            }
          }
        }
      }

      @include it('md\:start-9') {
        @include assert {
          @include output {
            @include md\:start-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: 2.25rem;
            }
          }
        }
      }

      @include it('md\:end-9') {
        @include assert {
          @include output {
            @include md\:end-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: 2.25rem;
            }
          }
        }
      }

      @include it('md\:top-9') {
        @include assert {
          @include output {
            @include md\:top-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 2.25rem;
            }
          }
        }
      }

      @include it('md\:right-9') {
        @include assert {
          @include output {
            @include md\:right-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: 2.25rem;
            }
          }
        }
      }

      @include it('md\:bottom-9') {
        @include assert {
          @include output {
            @include md\:bottom-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: 2.25rem;
            }
          }
        }
      }

      @include it('md\:left-9') {
        @include assert {
          @include output {
            @include md\:left-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 2.25rem;
            }
          }
        }
      }

      @include it('md\:inset-10') {
        @include assert {
          @include output {
            @include md\:inset-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: 2.5rem;
            }
          }
        }
      }

      @include it('md\:inset-x-10') {
        @include assert {
          @include output {
            @include md\:inset-x-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 2.5rem;
              right: 2.5rem;
            }
          }
        }
      }

      @include it('md\:inset-y-10') {
        @include assert {
          @include output {
            @include md\:inset-y-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 2.5rem;
              bottom: 2.5rem;
            }
          }
        }
      }

      @include it('md\:start-10') {
        @include assert {
          @include output {
            @include md\:start-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: 2.5rem;
            }
          }
        }
      }

      @include it('md\:end-10') {
        @include assert {
          @include output {
            @include md\:end-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: 2.5rem;
            }
          }
        }
      }

      @include it('md\:top-10') {
        @include assert {
          @include output {
            @include md\:top-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 2.5rem;
            }
          }
        }
      }

      @include it('md\:right-10') {
        @include assert {
          @include output {
            @include md\:right-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: 2.5rem;
            }
          }
        }
      }

      @include it('md\:bottom-10') {
        @include assert {
          @include output {
            @include md\:bottom-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: 2.5rem;
            }
          }
        }
      }

      @include it('md\:left-10') {
        @include assert {
          @include output {
            @include md\:left-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 2.5rem;
            }
          }
        }
      }

      @include it('md\:inset-11') {
        @include assert {
          @include output {
            @include md\:inset-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: 2.75rem;
            }
          }
        }
      }

      @include it('md\:inset-x-11') {
        @include assert {
          @include output {
            @include md\:inset-x-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 2.75rem;
              right: 2.75rem;
            }
          }
        }
      }

      @include it('md\:inset-y-11') {
        @include assert {
          @include output {
            @include md\:inset-y-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 2.75rem;
              bottom: 2.75rem;
            }
          }
        }
      }

      @include it('md\:start-11') {
        @include assert {
          @include output {
            @include md\:start-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: 2.75rem;
            }
          }
        }
      }

      @include it('md\:end-11') {
        @include assert {
          @include output {
            @include md\:end-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: 2.75rem;
            }
          }
        }
      }

      @include it('md\:top-11') {
        @include assert {
          @include output {
            @include md\:top-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 2.75rem;
            }
          }
        }
      }

      @include it('md\:right-11') {
        @include assert {
          @include output {
            @include md\:right-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: 2.75rem;
            }
          }
        }
      }

      @include it('md\:bottom-11') {
        @include assert {
          @include output {
            @include md\:bottom-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: 2.75rem;
            }
          }
        }
      }

      @include it('md\:left-11') {
        @include assert {
          @include output {
            @include md\:left-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 2.75rem;
            }
          }
        }
      }

      @include it('md\:inset-12') {
        @include assert {
          @include output {
            @include md\:inset-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: 3rem;
            }
          }
        }
      }

      @include it('md\:inset-x-12') {
        @include assert {
          @include output {
            @include md\:inset-x-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 3rem;
              right: 3rem;
            }
          }
        }
      }

      @include it('md\:inset-y-12') {
        @include assert {
          @include output {
            @include md\:inset-y-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 3rem;
              bottom: 3rem;
            }
          }
        }
      }

      @include it('md\:start-12') {
        @include assert {
          @include output {
            @include md\:start-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: 3rem;
            }
          }
        }
      }

      @include it('md\:end-12') {
        @include assert {
          @include output {
            @include md\:end-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: 3rem;
            }
          }
        }
      }

      @include it('md\:top-12') {
        @include assert {
          @include output {
            @include md\:top-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 3rem;
            }
          }
        }
      }

      @include it('md\:right-12') {
        @include assert {
          @include output {
            @include md\:right-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: 3rem;
            }
          }
        }
      }

      @include it('md\:bottom-12') {
        @include assert {
          @include output {
            @include md\:bottom-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: 3rem;
            }
          }
        }
      }

      @include it('md\:left-12') {
        @include assert {
          @include output {
            @include md\:left-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 3rem;
            }
          }
        }
      }

      @include it('md\:inset-14') {
        @include assert {
          @include output {
            @include md\:inset-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: 3.5rem;
            }
          }
        }
      }

      @include it('md\:inset-x-14') {
        @include assert {
          @include output {
            @include md\:inset-x-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 3.5rem;
              right: 3.5rem;
            }
          }
        }
      }

      @include it('md\:inset-y-14') {
        @include assert {
          @include output {
            @include md\:inset-y-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 3.5rem;
              bottom: 3.5rem;
            }
          }
        }
      }

      @include it('md\:start-14') {
        @include assert {
          @include output {
            @include md\:start-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: 3.5rem;
            }
          }
        }
      }

      @include it('md\:end-14') {
        @include assert {
          @include output {
            @include md\:end-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: 3.5rem;
            }
          }
        }
      }

      @include it('md\:top-14') {
        @include assert {
          @include output {
            @include md\:top-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 3.5rem;
            }
          }
        }
      }

      @include it('md\:right-14') {
        @include assert {
          @include output {
            @include md\:right-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: 3.5rem;
            }
          }
        }
      }

      @include it('md\:bottom-14') {
        @include assert {
          @include output {
            @include md\:bottom-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: 3.5rem;
            }
          }
        }
      }

      @include it('md\:left-14') {
        @include assert {
          @include output {
            @include md\:left-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 3.5rem;
            }
          }
        }
      }

      @include it('md\:inset-16') {
        @include assert {
          @include output {
            @include md\:inset-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: 4rem;
            }
          }
        }
      }

      @include it('md\:inset-x-16') {
        @include assert {
          @include output {
            @include md\:inset-x-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 4rem;
              right: 4rem;
            }
          }
        }
      }

      @include it('md\:inset-y-16') {
        @include assert {
          @include output {
            @include md\:inset-y-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 4rem;
              bottom: 4rem;
            }
          }
        }
      }

      @include it('md\:start-16') {
        @include assert {
          @include output {
            @include md\:start-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: 4rem;
            }
          }
        }
      }

      @include it('md\:end-16') {
        @include assert {
          @include output {
            @include md\:end-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: 4rem;
            }
          }
        }
      }

      @include it('md\:top-16') {
        @include assert {
          @include output {
            @include md\:top-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 4rem;
            }
          }
        }
      }

      @include it('md\:right-16') {
        @include assert {
          @include output {
            @include md\:right-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: 4rem;
            }
          }
        }
      }

      @include it('md\:bottom-16') {
        @include assert {
          @include output {
            @include md\:bottom-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: 4rem;
            }
          }
        }
      }

      @include it('md\:left-16') {
        @include assert {
          @include output {
            @include md\:left-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 4rem;
            }
          }
        }
      }

      @include it('md\:inset-20') {
        @include assert {
          @include output {
            @include md\:inset-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: 5rem;
            }
          }
        }
      }

      @include it('md\:inset-x-20') {
        @include assert {
          @include output {
            @include md\:inset-x-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 5rem;
              right: 5rem;
            }
          }
        }
      }

      @include it('md\:inset-y-20') {
        @include assert {
          @include output {
            @include md\:inset-y-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 5rem;
              bottom: 5rem;
            }
          }
        }
      }

      @include it('md\:start-20') {
        @include assert {
          @include output {
            @include md\:start-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: 5rem;
            }
          }
        }
      }

      @include it('md\:end-20') {
        @include assert {
          @include output {
            @include md\:end-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: 5rem;
            }
          }
        }
      }

      @include it('md\:top-20') {
        @include assert {
          @include output {
            @include md\:top-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 5rem;
            }
          }
        }
      }

      @include it('md\:right-20') {
        @include assert {
          @include output {
            @include md\:right-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: 5rem;
            }
          }
        }
      }

      @include it('md\:bottom-20') {
        @include assert {
          @include output {
            @include md\:bottom-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: 5rem;
            }
          }
        }
      }

      @include it('md\:left-20') {
        @include assert {
          @include output {
            @include md\:left-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 5rem;
            }
          }
        }
      }

      @include it('md\:inset-24') {
        @include assert {
          @include output {
            @include md\:inset-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: 6rem;
            }
          }
        }
      }

      @include it('md\:inset-x-24') {
        @include assert {
          @include output {
            @include md\:inset-x-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 6rem;
              right: 6rem;
            }
          }
        }
      }

      @include it('md\:inset-y-24') {
        @include assert {
          @include output {
            @include md\:inset-y-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 6rem;
              bottom: 6rem;
            }
          }
        }
      }

      @include it('md\:start-24') {
        @include assert {
          @include output {
            @include md\:start-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: 6rem;
            }
          }
        }
      }

      @include it('md\:end-24') {
        @include assert {
          @include output {
            @include md\:end-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: 6rem;
            }
          }
        }
      }

      @include it('md\:top-24') {
        @include assert {
          @include output {
            @include md\:top-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 6rem;
            }
          }
        }
      }

      @include it('md\:right-24') {
        @include assert {
          @include output {
            @include md\:right-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: 6rem;
            }
          }
        }
      }

      @include it('md\:bottom-24') {
        @include assert {
          @include output {
            @include md\:bottom-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: 6rem;
            }
          }
        }
      }

      @include it('md\:left-24') {
        @include assert {
          @include output {
            @include md\:left-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 6rem;
            }
          }
        }
      }

      @include it('md\:inset-28') {
        @include assert {
          @include output {
            @include md\:inset-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: 7rem;
            }
          }
        }
      }

      @include it('md\:inset-x-28') {
        @include assert {
          @include output {
            @include md\:inset-x-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 7rem;
              right: 7rem;
            }
          }
        }
      }

      @include it('md\:inset-y-28') {
        @include assert {
          @include output {
            @include md\:inset-y-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 7rem;
              bottom: 7rem;
            }
          }
        }
      }

      @include it('md\:start-28') {
        @include assert {
          @include output {
            @include md\:start-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: 7rem;
            }
          }
        }
      }

      @include it('md\:end-28') {
        @include assert {
          @include output {
            @include md\:end-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: 7rem;
            }
          }
        }
      }

      @include it('md\:top-28') {
        @include assert {
          @include output {
            @include md\:top-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 7rem;
            }
          }
        }
      }

      @include it('md\:right-28') {
        @include assert {
          @include output {
            @include md\:right-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: 7rem;
            }
          }
        }
      }

      @include it('md\:bottom-28') {
        @include assert {
          @include output {
            @include md\:bottom-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: 7rem;
            }
          }
        }
      }

      @include it('md\:left-28') {
        @include assert {
          @include output {
            @include md\:left-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 7rem;
            }
          }
        }
      }

      @include it('md\:inset-32') {
        @include assert {
          @include output {
            @include md\:inset-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: 8rem;
            }
          }
        }
      }

      @include it('md\:inset-x-32') {
        @include assert {
          @include output {
            @include md\:inset-x-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 8rem;
              right: 8rem;
            }
          }
        }
      }

      @include it('md\:inset-y-32') {
        @include assert {
          @include output {
            @include md\:inset-y-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 8rem;
              bottom: 8rem;
            }
          }
        }
      }

      @include it('md\:start-32') {
        @include assert {
          @include output {
            @include md\:start-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: 8rem;
            }
          }
        }
      }

      @include it('md\:end-32') {
        @include assert {
          @include output {
            @include md\:end-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: 8rem;
            }
          }
        }
      }

      @include it('md\:top-32') {
        @include assert {
          @include output {
            @include md\:top-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 8rem;
            }
          }
        }
      }

      @include it('md\:right-32') {
        @include assert {
          @include output {
            @include md\:right-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: 8rem;
            }
          }
        }
      }

      @include it('md\:bottom-32') {
        @include assert {
          @include output {
            @include md\:bottom-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: 8rem;
            }
          }
        }
      }

      @include it('md\:left-32') {
        @include assert {
          @include output {
            @include md\:left-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 8rem;
            }
          }
        }
      }

      @include it('md\:inset-36') {
        @include assert {
          @include output {
            @include md\:inset-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: 9rem;
            }
          }
        }
      }

      @include it('md\:inset-x-36') {
        @include assert {
          @include output {
            @include md\:inset-x-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 9rem;
              right: 9rem;
            }
          }
        }
      }

      @include it('md\:inset-y-36') {
        @include assert {
          @include output {
            @include md\:inset-y-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 9rem;
              bottom: 9rem;
            }
          }
        }
      }

      @include it('md\:start-36') {
        @include assert {
          @include output {
            @include md\:start-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: 9rem;
            }
          }
        }
      }

      @include it('md\:end-36') {
        @include assert {
          @include output {
            @include md\:end-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: 9rem;
            }
          }
        }
      }

      @include it('md\:top-36') {
        @include assert {
          @include output {
            @include md\:top-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 9rem;
            }
          }
        }
      }

      @include it('md\:right-36') {
        @include assert {
          @include output {
            @include md\:right-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: 9rem;
            }
          }
        }
      }

      @include it('md\:bottom-36') {
        @include assert {
          @include output {
            @include md\:bottom-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: 9rem;
            }
          }
        }
      }

      @include it('md\:left-36') {
        @include assert {
          @include output {
            @include md\:left-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 9rem;
            }
          }
        }
      }

      @include it('md\:inset-40') {
        @include assert {
          @include output {
            @include md\:inset-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: 10rem;
            }
          }
        }
      }

      @include it('md\:inset-x-40') {
        @include assert {
          @include output {
            @include md\:inset-x-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 10rem;
              right: 10rem;
            }
          }
        }
      }

      @include it('md\:inset-y-40') {
        @include assert {
          @include output {
            @include md\:inset-y-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 10rem;
              bottom: 10rem;
            }
          }
        }
      }

      @include it('md\:start-40') {
        @include assert {
          @include output {
            @include md\:start-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: 10rem;
            }
          }
        }
      }

      @include it('md\:end-40') {
        @include assert {
          @include output {
            @include md\:end-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: 10rem;
            }
          }
        }
      }

      @include it('md\:top-40') {
        @include assert {
          @include output {
            @include md\:top-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 10rem;
            }
          }
        }
      }

      @include it('md\:right-40') {
        @include assert {
          @include output {
            @include md\:right-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: 10rem;
            }
          }
        }
      }

      @include it('md\:bottom-40') {
        @include assert {
          @include output {
            @include md\:bottom-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: 10rem;
            }
          }
        }
      }

      @include it('md\:left-40') {
        @include assert {
          @include output {
            @include md\:left-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 10rem;
            }
          }
        }
      }

      @include it('md\:inset-44') {
        @include assert {
          @include output {
            @include md\:inset-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: 11rem;
            }
          }
        }
      }

      @include it('md\:inset-x-44') {
        @include assert {
          @include output {
            @include md\:inset-x-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 11rem;
              right: 11rem;
            }
          }
        }
      }

      @include it('md\:inset-y-44') {
        @include assert {
          @include output {
            @include md\:inset-y-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 11rem;
              bottom: 11rem;
            }
          }
        }
      }

      @include it('md\:start-44') {
        @include assert {
          @include output {
            @include md\:start-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: 11rem;
            }
          }
        }
      }

      @include it('md\:end-44') {
        @include assert {
          @include output {
            @include md\:end-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: 11rem;
            }
          }
        }
      }

      @include it('md\:top-44') {
        @include assert {
          @include output {
            @include md\:top-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 11rem;
            }
          }
        }
      }

      @include it('md\:right-44') {
        @include assert {
          @include output {
            @include md\:right-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: 11rem;
            }
          }
        }
      }

      @include it('md\:bottom-44') {
        @include assert {
          @include output {
            @include md\:bottom-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: 11rem;
            }
          }
        }
      }

      @include it('md\:left-44') {
        @include assert {
          @include output {
            @include md\:left-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 11rem;
            }
          }
        }
      }

      @include it('md\:inset-48') {
        @include assert {
          @include output {
            @include md\:inset-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: 12rem;
            }
          }
        }
      }

      @include it('md\:inset-x-48') {
        @include assert {
          @include output {
            @include md\:inset-x-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 12rem;
              right: 12rem;
            }
          }
        }
      }

      @include it('md\:inset-y-48') {
        @include assert {
          @include output {
            @include md\:inset-y-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 12rem;
              bottom: 12rem;
            }
          }
        }
      }

      @include it('md\:start-48') {
        @include assert {
          @include output {
            @include md\:start-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: 12rem;
            }
          }
        }
      }

      @include it('md\:end-48') {
        @include assert {
          @include output {
            @include md\:end-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: 12rem;
            }
          }
        }
      }

      @include it('md\:top-48') {
        @include assert {
          @include output {
            @include md\:top-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 12rem;
            }
          }
        }
      }

      @include it('md\:right-48') {
        @include assert {
          @include output {
            @include md\:right-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: 12rem;
            }
          }
        }
      }

      @include it('md\:bottom-48') {
        @include assert {
          @include output {
            @include md\:bottom-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: 12rem;
            }
          }
        }
      }

      @include it('md\:left-48') {
        @include assert {
          @include output {
            @include md\:left-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 12rem;
            }
          }
        }
      }

      @include it('md\:inset-52') {
        @include assert {
          @include output {
            @include md\:inset-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: 13rem;
            }
          }
        }
      }

      @include it('md\:inset-x-52') {
        @include assert {
          @include output {
            @include md\:inset-x-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 13rem;
              right: 13rem;
            }
          }
        }
      }

      @include it('md\:inset-y-52') {
        @include assert {
          @include output {
            @include md\:inset-y-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 13rem;
              bottom: 13rem;
            }
          }
        }
      }

      @include it('md\:start-52') {
        @include assert {
          @include output {
            @include md\:start-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: 13rem;
            }
          }
        }
      }

      @include it('md\:end-52') {
        @include assert {
          @include output {
            @include md\:end-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: 13rem;
            }
          }
        }
      }

      @include it('md\:top-52') {
        @include assert {
          @include output {
            @include md\:top-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 13rem;
            }
          }
        }
      }

      @include it('md\:right-52') {
        @include assert {
          @include output {
            @include md\:right-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: 13rem;
            }
          }
        }
      }

      @include it('md\:bottom-52') {
        @include assert {
          @include output {
            @include md\:bottom-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: 13rem;
            }
          }
        }
      }

      @include it('md\:left-52') {
        @include assert {
          @include output {
            @include md\:left-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 13rem;
            }
          }
        }
      }

      @include it('md\:inset-56') {
        @include assert {
          @include output {
            @include md\:inset-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: 14rem;
            }
          }
        }
      }

      @include it('md\:inset-x-56') {
        @include assert {
          @include output {
            @include md\:inset-x-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 14rem;
              right: 14rem;
            }
          }
        }
      }

      @include it('md\:inset-y-56') {
        @include assert {
          @include output {
            @include md\:inset-y-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 14rem;
              bottom: 14rem;
            }
          }
        }
      }

      @include it('md\:start-56') {
        @include assert {
          @include output {
            @include md\:start-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: 14rem;
            }
          }
        }
      }

      @include it('md\:end-56') {
        @include assert {
          @include output {
            @include md\:end-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: 14rem;
            }
          }
        }
      }

      @include it('md\:top-56') {
        @include assert {
          @include output {
            @include md\:top-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 14rem;
            }
          }
        }
      }

      @include it('md\:right-56') {
        @include assert {
          @include output {
            @include md\:right-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: 14rem;
            }
          }
        }
      }

      @include it('md\:bottom-56') {
        @include assert {
          @include output {
            @include md\:bottom-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: 14rem;
            }
          }
        }
      }

      @include it('md\:left-56') {
        @include assert {
          @include output {
            @include md\:left-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 14rem;
            }
          }
        }
      }

      @include it('md\:inset-60') {
        @include assert {
          @include output {
            @include md\:inset-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: 15rem;
            }
          }
        }
      }

      @include it('md\:inset-x-60') {
        @include assert {
          @include output {
            @include md\:inset-x-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 15rem;
              right: 15rem;
            }
          }
        }
      }

      @include it('md\:inset-y-60') {
        @include assert {
          @include output {
            @include md\:inset-y-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 15rem;
              bottom: 15rem;
            }
          }
        }
      }

      @include it('md\:start-60') {
        @include assert {
          @include output {
            @include md\:start-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: 15rem;
            }
          }
        }
      }

      @include it('md\:end-60') {
        @include assert {
          @include output {
            @include md\:end-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: 15rem;
            }
          }
        }
      }

      @include it('md\:top-60') {
        @include assert {
          @include output {
            @include md\:top-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 15rem;
            }
          }
        }
      }

      @include it('md\:right-60') {
        @include assert {
          @include output {
            @include md\:right-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: 15rem;
            }
          }
        }
      }

      @include it('md\:bottom-60') {
        @include assert {
          @include output {
            @include md\:bottom-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: 15rem;
            }
          }
        }
      }

      @include it('md\:left-60') {
        @include assert {
          @include output {
            @include md\:left-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 15rem;
            }
          }
        }
      }

      @include it('md\:inset-64') {
        @include assert {
          @include output {
            @include md\:inset-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: 16rem;
            }
          }
        }
      }

      @include it('md\:inset-x-64') {
        @include assert {
          @include output {
            @include md\:inset-x-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 16rem;
              right: 16rem;
            }
          }
        }
      }

      @include it('md\:inset-y-64') {
        @include assert {
          @include output {
            @include md\:inset-y-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 16rem;
              bottom: 16rem;
            }
          }
        }
      }

      @include it('md\:start-64') {
        @include assert {
          @include output {
            @include md\:start-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: 16rem;
            }
          }
        }
      }

      @include it('md\:end-64') {
        @include assert {
          @include output {
            @include md\:end-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: 16rem;
            }
          }
        }
      }

      @include it('md\:top-64') {
        @include assert {
          @include output {
            @include md\:top-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 16rem;
            }
          }
        }
      }

      @include it('md\:right-64') {
        @include assert {
          @include output {
            @include md\:right-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: 16rem;
            }
          }
        }
      }

      @include it('md\:bottom-64') {
        @include assert {
          @include output {
            @include md\:bottom-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: 16rem;
            }
          }
        }
      }

      @include it('md\:left-64') {
        @include assert {
          @include output {
            @include md\:left-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 16rem;
            }
          }
        }
      }

      @include it('md\:inset-72') {
        @include assert {
          @include output {
            @include md\:inset-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: 18rem;
            }
          }
        }
      }

      @include it('md\:inset-x-72') {
        @include assert {
          @include output {
            @include md\:inset-x-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 18rem;
              right: 18rem;
            }
          }
        }
      }

      @include it('md\:inset-y-72') {
        @include assert {
          @include output {
            @include md\:inset-y-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 18rem;
              bottom: 18rem;
            }
          }
        }
      }

      @include it('md\:start-72') {
        @include assert {
          @include output {
            @include md\:start-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: 18rem;
            }
          }
        }
      }

      @include it('md\:end-72') {
        @include assert {
          @include output {
            @include md\:end-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: 18rem;
            }
          }
        }
      }

      @include it('md\:top-72') {
        @include assert {
          @include output {
            @include md\:top-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 18rem;
            }
          }
        }
      }

      @include it('md\:right-72') {
        @include assert {
          @include output {
            @include md\:right-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: 18rem;
            }
          }
        }
      }

      @include it('md\:bottom-72') {
        @include assert {
          @include output {
            @include md\:bottom-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: 18rem;
            }
          }
        }
      }

      @include it('md\:left-72') {
        @include assert {
          @include output {
            @include md\:left-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 18rem;
            }
          }
        }
      }

      @include it('md\:inset-80') {
        @include assert {
          @include output {
            @include md\:inset-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: 20rem;
            }
          }
        }
      }

      @include it('md\:inset-x-80') {
        @include assert {
          @include output {
            @include md\:inset-x-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 20rem;
              right: 20rem;
            }
          }
        }
      }

      @include it('md\:inset-y-80') {
        @include assert {
          @include output {
            @include md\:inset-y-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 20rem;
              bottom: 20rem;
            }
          }
        }
      }

      @include it('md\:start-80') {
        @include assert {
          @include output {
            @include md\:start-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: 20rem;
            }
          }
        }
      }

      @include it('md\:end-80') {
        @include assert {
          @include output {
            @include md\:end-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: 20rem;
            }
          }
        }
      }

      @include it('md\:top-80') {
        @include assert {
          @include output {
            @include md\:top-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 20rem;
            }
          }
        }
      }

      @include it('md\:right-80') {
        @include assert {
          @include output {
            @include md\:right-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: 20rem;
            }
          }
        }
      }

      @include it('md\:bottom-80') {
        @include assert {
          @include output {
            @include md\:bottom-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: 20rem;
            }
          }
        }
      }

      @include it('md\:left-80') {
        @include assert {
          @include output {
            @include md\:left-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 20rem;
            }
          }
        }
      }

      @include it('md\:inset-96') {
        @include assert {
          @include output {
            @include md\:inset-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: 24rem;
            }
          }
        }
      }

      @include it('md\:inset-x-96') {
        @include assert {
          @include output {
            @include md\:inset-x-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 24rem;
              right: 24rem;
            }
          }
        }
      }

      @include it('md\:inset-y-96') {
        @include assert {
          @include output {
            @include md\:inset-y-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 24rem;
              bottom: 24rem;
            }
          }
        }
      }

      @include it('md\:start-96') {
        @include assert {
          @include output {
            @include md\:start-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: 24rem;
            }
          }
        }
      }

      @include it('md\:end-96') {
        @include assert {
          @include output {
            @include md\:end-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: 24rem;
            }
          }
        }
      }

      @include it('md\:top-96') {
        @include assert {
          @include output {
            @include md\:top-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 24rem;
            }
          }
        }
      }

      @include it('md\:right-96') {
        @include assert {
          @include output {
            @include md\:right-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: 24rem;
            }
          }
        }
      }

      @include it('md\:bottom-96') {
        @include assert {
          @include output {
            @include md\:bottom-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: 24rem;
            }
          }
        }
      }

      @include it('md\:left-96') {
        @include assert {
          @include output {
            @include md\:left-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 24rem;
            }
          }
        }
      }

      @include it('md\:inset-auto') {
        @include assert {
          @include output {
            @include md\:inset-auto;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: auto;
            }
          }
        }
      }

      @include it('md\:inset-1\/2') {
        @include assert {
          @include output {
            @include md\:inset-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: 50%;
            }
          }
        }
      }

      @include it('md\:inset-1\/3') {
        @include assert {
          @include output {
            @include md\:inset-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: 33.333333%;
            }
          }
        }
      }

      @include it('md\:inset-2\/3') {
        @include assert {
          @include output {
            @include md\:inset-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: 66.666667%;
            }
          }
        }
      }

      @include it('md\:inset-1\/4') {
        @include assert {
          @include output {
            @include md\:inset-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: 25%;
            }
          }
        }
      }

      @include it('md\:inset-2\/4') {
        @include assert {
          @include output {
            @include md\:inset-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: 50%;
            }
          }
        }
      }

      @include it('md\:inset-3\/4') {
        @include assert {
          @include output {
            @include md\:inset-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: 75%;
            }
          }
        }
      }

      @include it('md\:inset-full') {
        @include assert {
          @include output {
            @include md\:inset-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: 100%;
            }
          }
        }
      }

      @include it('md\:inset-x-auto') {
        @include assert {
          @include output {
            @include md\:inset-x-auto;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: auto;
              right: auto;
            }
          }
        }
      }

      @include it('md\:inset-x-1\/2') {
        @include assert {
          @include output {
            @include md\:inset-x-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 50%;
              right: 50%;
            }
          }
        }
      }

      @include it('md\:inset-x-1\/3') {
        @include assert {
          @include output {
            @include md\:inset-x-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 33.333333%;
              right: 33.333333%;
            }
          }
        }
      }

      @include it('md\:inset-x-2\/3') {
        @include assert {
          @include output {
            @include md\:inset-x-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 66.666667%;
              right: 66.666667%;
            }
          }
        }
      }

      @include it('md\:inset-x-1\/4') {
        @include assert {
          @include output {
            @include md\:inset-x-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 25%;
              right: 25%;
            }
          }
        }
      }

      @include it('md\:inset-x-2\/4') {
        @include assert {
          @include output {
            @include md\:inset-x-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 50%;
              right: 50%;
            }
          }
        }
      }

      @include it('md\:inset-x-3\/4') {
        @include assert {
          @include output {
            @include md\:inset-x-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 75%;
              right: 75%;
            }
          }
        }
      }

      @include it('md\:inset-x-full') {
        @include assert {
          @include output {
            @include md\:inset-x-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 100%;
              right: 100%;
            }
          }
        }
      }

      @include it('md\:inset-y-auto') {
        @include assert {
          @include output {
            @include md\:inset-y-auto;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: auto;
              bottom: auto;
            }
          }
        }
      }

      @include it('md\:inset-y-1\/2') {
        @include assert {
          @include output {
            @include md\:inset-y-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 50%;
              bottom: 50%;
            }
          }
        }
      }

      @include it('md\:inset-y-1\/3') {
        @include assert {
          @include output {
            @include md\:inset-y-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 33.333333%;
              bottom: 33.333333%;
            }
          }
        }
      }

      @include it('md\:inset-y-2\/3') {
        @include assert {
          @include output {
            @include md\:inset-y-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 66.666667%;
              bottom: 66.666667%;
            }
          }
        }
      }

      @include it('md\:inset-y-1\/4') {
        @include assert {
          @include output {
            @include md\:inset-y-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 25%;
              bottom: 25%;
            }
          }
        }
      }

      @include it('md\:inset-y-2\/4') {
        @include assert {
          @include output {
            @include md\:inset-y-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 50%;
              bottom: 50%;
            }
          }
        }
      }

      @include it('md\:inset-y-3\/4') {
        @include assert {
          @include output {
            @include md\:inset-y-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 75%;
              bottom: 75%;
            }
          }
        }
      }

      @include it('md\:inset-y-full') {
        @include assert {
          @include output {
            @include md\:inset-y-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 100%;
              bottom: 100%;
            }
          }
        }
      }

      @include it('md\:start-auto') {
        @include assert {
          @include output {
            @include md\:start-auto;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: auto;
            }
          }
        }
      }

      @include it('md\:start-1\/2') {
        @include assert {
          @include output {
            @include md\:start-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: 50%;
            }
          }
        }
      }

      @include it('md\:start-1\/3') {
        @include assert {
          @include output {
            @include md\:start-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: 33.333333%;
            }
          }
        }
      }

      @include it('md\:start-2\/3') {
        @include assert {
          @include output {
            @include md\:start-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: 66.666667%;
            }
          }
        }
      }

      @include it('md\:start-1\/4') {
        @include assert {
          @include output {
            @include md\:start-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: 25%;
            }
          }
        }
      }

      @include it('md\:start-2\/4') {
        @include assert {
          @include output {
            @include md\:start-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: 50%;
            }
          }
        }
      }

      @include it('md\:start-3\/4') {
        @include assert {
          @include output {
            @include md\:start-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: 75%;
            }
          }
        }
      }

      @include it('md\:start-full') {
        @include assert {
          @include output {
            @include md\:start-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: 100%;
            }
          }
        }
      }

      @include it('md\:end-auto') {
        @include assert {
          @include output {
            @include md\:end-auto;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: auto;
            }
          }
        }
      }

      @include it('md\:end-1\/2') {
        @include assert {
          @include output {
            @include md\:end-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: 50%;
            }
          }
        }
      }

      @include it('md\:end-1\/3') {
        @include assert {
          @include output {
            @include md\:end-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: 33.333333%;
            }
          }
        }
      }

      @include it('md\:end-2\/3') {
        @include assert {
          @include output {
            @include md\:end-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: 66.666667%;
            }
          }
        }
      }

      @include it('md\:end-1\/4') {
        @include assert {
          @include output {
            @include md\:end-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: 25%;
            }
          }
        }
      }

      @include it('md\:end-2\/4') {
        @include assert {
          @include output {
            @include md\:end-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: 50%;
            }
          }
        }
      }

      @include it('md\:end-3\/4') {
        @include assert {
          @include output {
            @include md\:end-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: 75%;
            }
          }
        }
      }

      @include it('md\:end-full') {
        @include assert {
          @include output {
            @include md\:end-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: 100%;
            }
          }
        }
      }

      @include it('md\:top-auto') {
        @include assert {
          @include output {
            @include md\:top-auto;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: auto;
            }
          }
        }
      }

      @include it('md\:top-1\/2') {
        @include assert {
          @include output {
            @include md\:top-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 50%;
            }
          }
        }
      }

      @include it('md\:top-1\/3') {
        @include assert {
          @include output {
            @include md\:top-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 33.333333%;
            }
          }
        }
      }

      @include it('md\:top-2\/3') {
        @include assert {
          @include output {
            @include md\:top-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 66.666667%;
            }
          }
        }
      }

      @include it('md\:top-1\/4') {
        @include assert {
          @include output {
            @include md\:top-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 25%;
            }
          }
        }
      }

      @include it('md\:top-2\/4') {
        @include assert {
          @include output {
            @include md\:top-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 50%;
            }
          }
        }
      }

      @include it('md\:top-3\/4') {
        @include assert {
          @include output {
            @include md\:top-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 75%;
            }
          }
        }
      }

      @include it('md\:top-full') {
        @include assert {
          @include output {
            @include md\:top-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 100%;
            }
          }
        }
      }

      @include it('md\:right-auto') {
        @include assert {
          @include output {
            @include md\:right-auto;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: auto;
            }
          }
        }
      }

      @include it('md\:right-1\/2') {
        @include assert {
          @include output {
            @include md\:right-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: 50%;
            }
          }
        }
      }

      @include it('md\:right-1\/3') {
        @include assert {
          @include output {
            @include md\:right-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: 33.333333%;
            }
          }
        }
      }

      @include it('md\:right-2\/3') {
        @include assert {
          @include output {
            @include md\:right-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: 66.666667%;
            }
          }
        }
      }

      @include it('md\:right-1\/4') {
        @include assert {
          @include output {
            @include md\:right-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: 25%;
            }
          }
        }
      }

      @include it('md\:right-2\/4') {
        @include assert {
          @include output {
            @include md\:right-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: 50%;
            }
          }
        }
      }

      @include it('md\:right-3\/4') {
        @include assert {
          @include output {
            @include md\:right-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: 75%;
            }
          }
        }
      }

      @include it('md\:right-full') {
        @include assert {
          @include output {
            @include md\:right-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: 100%;
            }
          }
        }
      }

      @include it('md\:bottom-auto') {
        @include assert {
          @include output {
            @include md\:bottom-auto;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: auto;
            }
          }
        }
      }

      @include it('md\:bottom-1\/2') {
        @include assert {
          @include output {
            @include md\:bottom-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: 50%;
            }
          }
        }
      }

      @include it('md\:bottom-1\/3') {
        @include assert {
          @include output {
            @include md\:bottom-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: 33.333333%;
            }
          }
        }
      }

      @include it('md\:bottom-2\/3') {
        @include assert {
          @include output {
            @include md\:bottom-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: 66.666667%;
            }
          }
        }
      }

      @include it('md\:bottom-1\/4') {
        @include assert {
          @include output {
            @include md\:bottom-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: 25%;
            }
          }
        }
      }

      @include it('md\:bottom-2\/4') {
        @include assert {
          @include output {
            @include md\:bottom-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: 50%;
            }
          }
        }
      }

      @include it('md\:bottom-3\/4') {
        @include assert {
          @include output {
            @include md\:bottom-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: 75%;
            }
          }
        }
      }

      @include it('md\:bottom-full') {
        @include assert {
          @include output {
            @include md\:bottom-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: 100%;
            }
          }
        }
      }

      @include it('md\:left-auto') {
        @include assert {
          @include output {
            @include md\:left-auto;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: auto;
            }
          }
        }
      }

      @include it('md\:left-1\/2') {
        @include assert {
          @include output {
            @include md\:left-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 50%;
            }
          }
        }
      }

      @include it('md\:left-1\/3') {
        @include assert {
          @include output {
            @include md\:left-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 33.333333%;
            }
          }
        }
      }

      @include it('md\:left-2\/3') {
        @include assert {
          @include output {
            @include md\:left-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 66.666667%;
            }
          }
        }
      }

      @include it('md\:left-1\/4') {
        @include assert {
          @include output {
            @include md\:left-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 25%;
            }
          }
        }
      }

      @include it('md\:left-2\/4') {
        @include assert {
          @include output {
            @include md\:left-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 50%;
            }
          }
        }
      }

      @include it('md\:left-3\/4') {
        @include assert {
          @include output {
            @include md\:left-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 75%;
            }
          }
        }
      }

      @include it('md\:left-full') {
        @include assert {
          @include output {
            @include md\:left-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 100%;
            }
          }
        }
      }

      @include it('md\:-inset-0') {
        @include assert {
          @include output {
            @include md\:-inset-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: 0px;
            }
          }
        }
      }

      @include it('md\:-inset-x-0') {
        @include assert {
          @include output {
            @include md\:-inset-x-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 0px;
              right: 0px;
            }
          }
        }
      }

      @include it('md\:-inset-y-0') {
        @include assert {
          @include output {
            @include md\:-inset-y-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 0px;
              bottom: 0px;
            }
          }
        }
      }

      @include it('md\:-start-0') {
        @include assert {
          @include output {
            @include md\:-start-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: 0px;
            }
          }
        }
      }

      @include it('md\:-end-0') {
        @include assert {
          @include output {
            @include md\:-end-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: 0px;
            }
          }
        }
      }

      @include it('md\:-top-0') {
        @include assert {
          @include output {
            @include md\:-top-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 0px;
            }
          }
        }
      }

      @include it('md\:-right-0') {
        @include assert {
          @include output {
            @include md\:-right-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: 0px;
            }
          }
        }
      }

      @include it('md\:-bottom-0') {
        @include assert {
          @include output {
            @include md\:-bottom-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: 0px;
            }
          }
        }
      }

      @include it('md\:-left-0') {
        @include assert {
          @include output {
            @include md\:-left-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 0px;
            }
          }
        }
      }

      @include it('md\:-inset-px') {
        @include assert {
          @include output {
            @include md\:-inset-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: -1px;
            }
          }
        }
      }

      @include it('md\:-inset-x-px') {
        @include assert {
          @include output {
            @include md\:-inset-x-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -1px;
              right: -1px;
            }
          }
        }
      }

      @include it('md\:-inset-y-px') {
        @include assert {
          @include output {
            @include md\:-inset-y-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -1px;
              bottom: -1px;
            }
          }
        }
      }

      @include it('md\:-start-px') {
        @include assert {
          @include output {
            @include md\:-start-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: -1px;
            }
          }
        }
      }

      @include it('md\:-end-px') {
        @include assert {
          @include output {
            @include md\:-end-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: -1px;
            }
          }
        }
      }

      @include it('md\:-top-px') {
        @include assert {
          @include output {
            @include md\:-top-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -1px;
            }
          }
        }
      }

      @include it('md\:-right-px') {
        @include assert {
          @include output {
            @include md\:-right-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: -1px;
            }
          }
        }
      }

      @include it('md\:-bottom-px') {
        @include assert {
          @include output {
            @include md\:-bottom-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: -1px;
            }
          }
        }
      }

      @include it('md\:-left-px') {
        @include assert {
          @include output {
            @include md\:-left-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -1px;
            }
          }
        }
      }

      @include it('md\:-inset-0\.5') {
        @include assert {
          @include output {
            @include md\:-inset-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: -0.125rem;
            }
          }
        }
      }

      @include it('md\:-inset-x-0\.5') {
        @include assert {
          @include output {
            @include md\:-inset-x-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -0.125rem;
              right: -0.125rem;
            }
          }
        }
      }

      @include it('md\:-inset-y-0\.5') {
        @include assert {
          @include output {
            @include md\:-inset-y-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -0.125rem;
              bottom: -0.125rem;
            }
          }
        }
      }

      @include it('md\:-start-0\.5') {
        @include assert {
          @include output {
            @include md\:-start-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: -0.125rem;
            }
          }
        }
      }

      @include it('md\:-end-0\.5') {
        @include assert {
          @include output {
            @include md\:-end-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: -0.125rem;
            }
          }
        }
      }

      @include it('md\:-top-0\.5') {
        @include assert {
          @include output {
            @include md\:-top-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -0.125rem;
            }
          }
        }
      }

      @include it('md\:-right-0\.5') {
        @include assert {
          @include output {
            @include md\:-right-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: -0.125rem;
            }
          }
        }
      }

      @include it('md\:-bottom-0\.5') {
        @include assert {
          @include output {
            @include md\:-bottom-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: -0.125rem;
            }
          }
        }
      }

      @include it('md\:-left-0\.5') {
        @include assert {
          @include output {
            @include md\:-left-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -0.125rem;
            }
          }
        }
      }

      @include it('md\:-inset-1') {
        @include assert {
          @include output {
            @include md\:-inset-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: -0.25rem;
            }
          }
        }
      }

      @include it('md\:-inset-x-1') {
        @include assert {
          @include output {
            @include md\:-inset-x-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -0.25rem;
              right: -0.25rem;
            }
          }
        }
      }

      @include it('md\:-inset-y-1') {
        @include assert {
          @include output {
            @include md\:-inset-y-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -0.25rem;
              bottom: -0.25rem;
            }
          }
        }
      }

      @include it('md\:-start-1') {
        @include assert {
          @include output {
            @include md\:-start-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: -0.25rem;
            }
          }
        }
      }

      @include it('md\:-end-1') {
        @include assert {
          @include output {
            @include md\:-end-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: -0.25rem;
            }
          }
        }
      }

      @include it('md\:-top-1') {
        @include assert {
          @include output {
            @include md\:-top-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -0.25rem;
            }
          }
        }
      }

      @include it('md\:-right-1') {
        @include assert {
          @include output {
            @include md\:-right-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: -0.25rem;
            }
          }
        }
      }

      @include it('md\:-bottom-1') {
        @include assert {
          @include output {
            @include md\:-bottom-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: -0.25rem;
            }
          }
        }
      }

      @include it('md\:-left-1') {
        @include assert {
          @include output {
            @include md\:-left-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -0.25rem;
            }
          }
        }
      }

      @include it('md\:-inset-1\.5') {
        @include assert {
          @include output {
            @include md\:-inset-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: -0.375rem;
            }
          }
        }
      }

      @include it('md\:-inset-x-1\.5') {
        @include assert {
          @include output {
            @include md\:-inset-x-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -0.375rem;
              right: -0.375rem;
            }
          }
        }
      }

      @include it('md\:-inset-y-1\.5') {
        @include assert {
          @include output {
            @include md\:-inset-y-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -0.375rem;
              bottom: -0.375rem;
            }
          }
        }
      }

      @include it('md\:-start-1\.5') {
        @include assert {
          @include output {
            @include md\:-start-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: -0.375rem;
            }
          }
        }
      }

      @include it('md\:-end-1\.5') {
        @include assert {
          @include output {
            @include md\:-end-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: -0.375rem;
            }
          }
        }
      }

      @include it('md\:-top-1\.5') {
        @include assert {
          @include output {
            @include md\:-top-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -0.375rem;
            }
          }
        }
      }

      @include it('md\:-right-1\.5') {
        @include assert {
          @include output {
            @include md\:-right-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: -0.375rem;
            }
          }
        }
      }

      @include it('md\:-bottom-1\.5') {
        @include assert {
          @include output {
            @include md\:-bottom-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: -0.375rem;
            }
          }
        }
      }

      @include it('md\:-left-1\.5') {
        @include assert {
          @include output {
            @include md\:-left-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -0.375rem;
            }
          }
        }
      }

      @include it('md\:-inset-2') {
        @include assert {
          @include output {
            @include md\:-inset-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: -0.5rem;
            }
          }
        }
      }

      @include it('md\:-inset-x-2') {
        @include assert {
          @include output {
            @include md\:-inset-x-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -0.5rem;
              right: -0.5rem;
            }
          }
        }
      }

      @include it('md\:-inset-y-2') {
        @include assert {
          @include output {
            @include md\:-inset-y-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -0.5rem;
              bottom: -0.5rem;
            }
          }
        }
      }

      @include it('md\:-start-2') {
        @include assert {
          @include output {
            @include md\:-start-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: -0.5rem;
            }
          }
        }
      }

      @include it('md\:-end-2') {
        @include assert {
          @include output {
            @include md\:-end-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: -0.5rem;
            }
          }
        }
      }

      @include it('md\:-top-2') {
        @include assert {
          @include output {
            @include md\:-top-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -0.5rem;
            }
          }
        }
      }

      @include it('md\:-right-2') {
        @include assert {
          @include output {
            @include md\:-right-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: -0.5rem;
            }
          }
        }
      }

      @include it('md\:-bottom-2') {
        @include assert {
          @include output {
            @include md\:-bottom-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: -0.5rem;
            }
          }
        }
      }

      @include it('md\:-left-2') {
        @include assert {
          @include output {
            @include md\:-left-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -0.5rem;
            }
          }
        }
      }

      @include it('md\:-inset-2\.5') {
        @include assert {
          @include output {
            @include md\:-inset-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: -0.625rem;
            }
          }
        }
      }

      @include it('md\:-inset-x-2\.5') {
        @include assert {
          @include output {
            @include md\:-inset-x-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -0.625rem;
              right: -0.625rem;
            }
          }
        }
      }

      @include it('md\:-inset-y-2\.5') {
        @include assert {
          @include output {
            @include md\:-inset-y-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -0.625rem;
              bottom: -0.625rem;
            }
          }
        }
      }

      @include it('md\:-start-2\.5') {
        @include assert {
          @include output {
            @include md\:-start-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: -0.625rem;
            }
          }
        }
      }

      @include it('md\:-end-2\.5') {
        @include assert {
          @include output {
            @include md\:-end-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: -0.625rem;
            }
          }
        }
      }

      @include it('md\:-top-2\.5') {
        @include assert {
          @include output {
            @include md\:-top-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -0.625rem;
            }
          }
        }
      }

      @include it('md\:-right-2\.5') {
        @include assert {
          @include output {
            @include md\:-right-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: -0.625rem;
            }
          }
        }
      }

      @include it('md\:-bottom-2\.5') {
        @include assert {
          @include output {
            @include md\:-bottom-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: -0.625rem;
            }
          }
        }
      }

      @include it('md\:-left-2\.5') {
        @include assert {
          @include output {
            @include md\:-left-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -0.625rem;
            }
          }
        }
      }

      @include it('md\:-inset-3') {
        @include assert {
          @include output {
            @include md\:-inset-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: -0.75rem;
            }
          }
        }
      }

      @include it('md\:-inset-x-3') {
        @include assert {
          @include output {
            @include md\:-inset-x-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -0.75rem;
              right: -0.75rem;
            }
          }
        }
      }

      @include it('md\:-inset-y-3') {
        @include assert {
          @include output {
            @include md\:-inset-y-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -0.75rem;
              bottom: -0.75rem;
            }
          }
        }
      }

      @include it('md\:-start-3') {
        @include assert {
          @include output {
            @include md\:-start-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: -0.75rem;
            }
          }
        }
      }

      @include it('md\:-end-3') {
        @include assert {
          @include output {
            @include md\:-end-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: -0.75rem;
            }
          }
        }
      }

      @include it('md\:-top-3') {
        @include assert {
          @include output {
            @include md\:-top-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -0.75rem;
            }
          }
        }
      }

      @include it('md\:-right-3') {
        @include assert {
          @include output {
            @include md\:-right-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: -0.75rem;
            }
          }
        }
      }

      @include it('md\:-bottom-3') {
        @include assert {
          @include output {
            @include md\:-bottom-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: -0.75rem;
            }
          }
        }
      }

      @include it('md\:-left-3') {
        @include assert {
          @include output {
            @include md\:-left-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -0.75rem;
            }
          }
        }
      }

      @include it('md\:-inset-3\.5') {
        @include assert {
          @include output {
            @include md\:-inset-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: -0.875rem;
            }
          }
        }
      }

      @include it('md\:-inset-x-3\.5') {
        @include assert {
          @include output {
            @include md\:-inset-x-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -0.875rem;
              right: -0.875rem;
            }
          }
        }
      }

      @include it('md\:-inset-y-3\.5') {
        @include assert {
          @include output {
            @include md\:-inset-y-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -0.875rem;
              bottom: -0.875rem;
            }
          }
        }
      }

      @include it('md\:-start-3\.5') {
        @include assert {
          @include output {
            @include md\:-start-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: -0.875rem;
            }
          }
        }
      }

      @include it('md\:-end-3\.5') {
        @include assert {
          @include output {
            @include md\:-end-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: -0.875rem;
            }
          }
        }
      }

      @include it('md\:-top-3\.5') {
        @include assert {
          @include output {
            @include md\:-top-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -0.875rem;
            }
          }
        }
      }

      @include it('md\:-right-3\.5') {
        @include assert {
          @include output {
            @include md\:-right-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: -0.875rem;
            }
          }
        }
      }

      @include it('md\:-bottom-3\.5') {
        @include assert {
          @include output {
            @include md\:-bottom-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: -0.875rem;
            }
          }
        }
      }

      @include it('md\:-left-3\.5') {
        @include assert {
          @include output {
            @include md\:-left-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -0.875rem;
            }
          }
        }
      }

      @include it('md\:-inset-4') {
        @include assert {
          @include output {
            @include md\:-inset-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: -1rem;
            }
          }
        }
      }

      @include it('md\:-inset-x-4') {
        @include assert {
          @include output {
            @include md\:-inset-x-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -1rem;
              right: -1rem;
            }
          }
        }
      }

      @include it('md\:-inset-y-4') {
        @include assert {
          @include output {
            @include md\:-inset-y-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -1rem;
              bottom: -1rem;
            }
          }
        }
      }

      @include it('md\:-start-4') {
        @include assert {
          @include output {
            @include md\:-start-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: -1rem;
            }
          }
        }
      }

      @include it('md\:-end-4') {
        @include assert {
          @include output {
            @include md\:-end-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: -1rem;
            }
          }
        }
      }

      @include it('md\:-top-4') {
        @include assert {
          @include output {
            @include md\:-top-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -1rem;
            }
          }
        }
      }

      @include it('md\:-right-4') {
        @include assert {
          @include output {
            @include md\:-right-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: -1rem;
            }
          }
        }
      }

      @include it('md\:-bottom-4') {
        @include assert {
          @include output {
            @include md\:-bottom-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: -1rem;
            }
          }
        }
      }

      @include it('md\:-left-4') {
        @include assert {
          @include output {
            @include md\:-left-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -1rem;
            }
          }
        }
      }

      @include it('md\:-inset-5') {
        @include assert {
          @include output {
            @include md\:-inset-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: -1.25rem;
            }
          }
        }
      }

      @include it('md\:-inset-x-5') {
        @include assert {
          @include output {
            @include md\:-inset-x-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -1.25rem;
              right: -1.25rem;
            }
          }
        }
      }

      @include it('md\:-inset-y-5') {
        @include assert {
          @include output {
            @include md\:-inset-y-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -1.25rem;
              bottom: -1.25rem;
            }
          }
        }
      }

      @include it('md\:-start-5') {
        @include assert {
          @include output {
            @include md\:-start-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: -1.25rem;
            }
          }
        }
      }

      @include it('md\:-end-5') {
        @include assert {
          @include output {
            @include md\:-end-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: -1.25rem;
            }
          }
        }
      }

      @include it('md\:-top-5') {
        @include assert {
          @include output {
            @include md\:-top-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -1.25rem;
            }
          }
        }
      }

      @include it('md\:-right-5') {
        @include assert {
          @include output {
            @include md\:-right-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: -1.25rem;
            }
          }
        }
      }

      @include it('md\:-bottom-5') {
        @include assert {
          @include output {
            @include md\:-bottom-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: -1.25rem;
            }
          }
        }
      }

      @include it('md\:-left-5') {
        @include assert {
          @include output {
            @include md\:-left-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -1.25rem;
            }
          }
        }
      }

      @include it('md\:-inset-6') {
        @include assert {
          @include output {
            @include md\:-inset-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: -1.5rem;
            }
          }
        }
      }

      @include it('md\:-inset-x-6') {
        @include assert {
          @include output {
            @include md\:-inset-x-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -1.5rem;
              right: -1.5rem;
            }
          }
        }
      }

      @include it('md\:-inset-y-6') {
        @include assert {
          @include output {
            @include md\:-inset-y-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -1.5rem;
              bottom: -1.5rem;
            }
          }
        }
      }

      @include it('md\:-start-6') {
        @include assert {
          @include output {
            @include md\:-start-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: -1.5rem;
            }
          }
        }
      }

      @include it('md\:-end-6') {
        @include assert {
          @include output {
            @include md\:-end-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: -1.5rem;
            }
          }
        }
      }

      @include it('md\:-top-6') {
        @include assert {
          @include output {
            @include md\:-top-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -1.5rem;
            }
          }
        }
      }

      @include it('md\:-right-6') {
        @include assert {
          @include output {
            @include md\:-right-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: -1.5rem;
            }
          }
        }
      }

      @include it('md\:-bottom-6') {
        @include assert {
          @include output {
            @include md\:-bottom-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: -1.5rem;
            }
          }
        }
      }

      @include it('md\:-left-6') {
        @include assert {
          @include output {
            @include md\:-left-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -1.5rem;
            }
          }
        }
      }

      @include it('md\:-inset-7') {
        @include assert {
          @include output {
            @include md\:-inset-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: -1.75rem;
            }
          }
        }
      }

      @include it('md\:-inset-x-7') {
        @include assert {
          @include output {
            @include md\:-inset-x-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -1.75rem;
              right: -1.75rem;
            }
          }
        }
      }

      @include it('md\:-inset-y-7') {
        @include assert {
          @include output {
            @include md\:-inset-y-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -1.75rem;
              bottom: -1.75rem;
            }
          }
        }
      }

      @include it('md\:-start-7') {
        @include assert {
          @include output {
            @include md\:-start-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: -1.75rem;
            }
          }
        }
      }

      @include it('md\:-end-7') {
        @include assert {
          @include output {
            @include md\:-end-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: -1.75rem;
            }
          }
        }
      }

      @include it('md\:-top-7') {
        @include assert {
          @include output {
            @include md\:-top-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -1.75rem;
            }
          }
        }
      }

      @include it('md\:-right-7') {
        @include assert {
          @include output {
            @include md\:-right-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: -1.75rem;
            }
          }
        }
      }

      @include it('md\:-bottom-7') {
        @include assert {
          @include output {
            @include md\:-bottom-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: -1.75rem;
            }
          }
        }
      }

      @include it('md\:-left-7') {
        @include assert {
          @include output {
            @include md\:-left-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -1.75rem;
            }
          }
        }
      }

      @include it('md\:-inset-8') {
        @include assert {
          @include output {
            @include md\:-inset-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: -2rem;
            }
          }
        }
      }

      @include it('md\:-inset-x-8') {
        @include assert {
          @include output {
            @include md\:-inset-x-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -2rem;
              right: -2rem;
            }
          }
        }
      }

      @include it('md\:-inset-y-8') {
        @include assert {
          @include output {
            @include md\:-inset-y-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -2rem;
              bottom: -2rem;
            }
          }
        }
      }

      @include it('md\:-start-8') {
        @include assert {
          @include output {
            @include md\:-start-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: -2rem;
            }
          }
        }
      }

      @include it('md\:-end-8') {
        @include assert {
          @include output {
            @include md\:-end-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: -2rem;
            }
          }
        }
      }

      @include it('md\:-top-8') {
        @include assert {
          @include output {
            @include md\:-top-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -2rem;
            }
          }
        }
      }

      @include it('md\:-right-8') {
        @include assert {
          @include output {
            @include md\:-right-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: -2rem;
            }
          }
        }
      }

      @include it('md\:-bottom-8') {
        @include assert {
          @include output {
            @include md\:-bottom-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: -2rem;
            }
          }
        }
      }

      @include it('md\:-left-8') {
        @include assert {
          @include output {
            @include md\:-left-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -2rem;
            }
          }
        }
      }

      @include it('md\:-inset-9') {
        @include assert {
          @include output {
            @include md\:-inset-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: -2.25rem;
            }
          }
        }
      }

      @include it('md\:-inset-x-9') {
        @include assert {
          @include output {
            @include md\:-inset-x-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -2.25rem;
              right: -2.25rem;
            }
          }
        }
      }

      @include it('md\:-inset-y-9') {
        @include assert {
          @include output {
            @include md\:-inset-y-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -2.25rem;
              bottom: -2.25rem;
            }
          }
        }
      }

      @include it('md\:-start-9') {
        @include assert {
          @include output {
            @include md\:-start-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: -2.25rem;
            }
          }
        }
      }

      @include it('md\:-end-9') {
        @include assert {
          @include output {
            @include md\:-end-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: -2.25rem;
            }
          }
        }
      }

      @include it('md\:-top-9') {
        @include assert {
          @include output {
            @include md\:-top-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -2.25rem;
            }
          }
        }
      }

      @include it('md\:-right-9') {
        @include assert {
          @include output {
            @include md\:-right-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: -2.25rem;
            }
          }
        }
      }

      @include it('md\:-bottom-9') {
        @include assert {
          @include output {
            @include md\:-bottom-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: -2.25rem;
            }
          }
        }
      }

      @include it('md\:-left-9') {
        @include assert {
          @include output {
            @include md\:-left-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -2.25rem;
            }
          }
        }
      }

      @include it('md\:-inset-10') {
        @include assert {
          @include output {
            @include md\:-inset-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: -2.5rem;
            }
          }
        }
      }

      @include it('md\:-inset-x-10') {
        @include assert {
          @include output {
            @include md\:-inset-x-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -2.5rem;
              right: -2.5rem;
            }
          }
        }
      }

      @include it('md\:-inset-y-10') {
        @include assert {
          @include output {
            @include md\:-inset-y-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -2.5rem;
              bottom: -2.5rem;
            }
          }
        }
      }

      @include it('md\:-start-10') {
        @include assert {
          @include output {
            @include md\:-start-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: -2.5rem;
            }
          }
        }
      }

      @include it('md\:-end-10') {
        @include assert {
          @include output {
            @include md\:-end-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: -2.5rem;
            }
          }
        }
      }

      @include it('md\:-top-10') {
        @include assert {
          @include output {
            @include md\:-top-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -2.5rem;
            }
          }
        }
      }

      @include it('md\:-right-10') {
        @include assert {
          @include output {
            @include md\:-right-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: -2.5rem;
            }
          }
        }
      }

      @include it('md\:-bottom-10') {
        @include assert {
          @include output {
            @include md\:-bottom-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: -2.5rem;
            }
          }
        }
      }

      @include it('md\:-left-10') {
        @include assert {
          @include output {
            @include md\:-left-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -2.5rem;
            }
          }
        }
      }

      @include it('md\:-inset-11') {
        @include assert {
          @include output {
            @include md\:-inset-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: -2.75rem;
            }
          }
        }
      }

      @include it('md\:-inset-x-11') {
        @include assert {
          @include output {
            @include md\:-inset-x-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -2.75rem;
              right: -2.75rem;
            }
          }
        }
      }

      @include it('md\:-inset-y-11') {
        @include assert {
          @include output {
            @include md\:-inset-y-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -2.75rem;
              bottom: -2.75rem;
            }
          }
        }
      }

      @include it('md\:-start-11') {
        @include assert {
          @include output {
            @include md\:-start-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: -2.75rem;
            }
          }
        }
      }

      @include it('md\:-end-11') {
        @include assert {
          @include output {
            @include md\:-end-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: -2.75rem;
            }
          }
        }
      }

      @include it('md\:-top-11') {
        @include assert {
          @include output {
            @include md\:-top-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -2.75rem;
            }
          }
        }
      }

      @include it('md\:-right-11') {
        @include assert {
          @include output {
            @include md\:-right-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: -2.75rem;
            }
          }
        }
      }

      @include it('md\:-bottom-11') {
        @include assert {
          @include output {
            @include md\:-bottom-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: -2.75rem;
            }
          }
        }
      }

      @include it('md\:-left-11') {
        @include assert {
          @include output {
            @include md\:-left-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -2.75rem;
            }
          }
        }
      }

      @include it('md\:-inset-12') {
        @include assert {
          @include output {
            @include md\:-inset-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: -3rem;
            }
          }
        }
      }

      @include it('md\:-inset-x-12') {
        @include assert {
          @include output {
            @include md\:-inset-x-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -3rem;
              right: -3rem;
            }
          }
        }
      }

      @include it('md\:-inset-y-12') {
        @include assert {
          @include output {
            @include md\:-inset-y-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -3rem;
              bottom: -3rem;
            }
          }
        }
      }

      @include it('md\:-start-12') {
        @include assert {
          @include output {
            @include md\:-start-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: -3rem;
            }
          }
        }
      }

      @include it('md\:-end-12') {
        @include assert {
          @include output {
            @include md\:-end-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: -3rem;
            }
          }
        }
      }

      @include it('md\:-top-12') {
        @include assert {
          @include output {
            @include md\:-top-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -3rem;
            }
          }
        }
      }

      @include it('md\:-right-12') {
        @include assert {
          @include output {
            @include md\:-right-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: -3rem;
            }
          }
        }
      }

      @include it('md\:-bottom-12') {
        @include assert {
          @include output {
            @include md\:-bottom-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: -3rem;
            }
          }
        }
      }

      @include it('md\:-left-12') {
        @include assert {
          @include output {
            @include md\:-left-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -3rem;
            }
          }
        }
      }

      @include it('md\:-inset-14') {
        @include assert {
          @include output {
            @include md\:-inset-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: -3.5rem;
            }
          }
        }
      }

      @include it('md\:-inset-x-14') {
        @include assert {
          @include output {
            @include md\:-inset-x-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -3.5rem;
              right: -3.5rem;
            }
          }
        }
      }

      @include it('md\:-inset-y-14') {
        @include assert {
          @include output {
            @include md\:-inset-y-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -3.5rem;
              bottom: -3.5rem;
            }
          }
        }
      }

      @include it('md\:-start-14') {
        @include assert {
          @include output {
            @include md\:-start-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: -3.5rem;
            }
          }
        }
      }

      @include it('md\:-end-14') {
        @include assert {
          @include output {
            @include md\:-end-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: -3.5rem;
            }
          }
        }
      }

      @include it('md\:-top-14') {
        @include assert {
          @include output {
            @include md\:-top-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -3.5rem;
            }
          }
        }
      }

      @include it('md\:-right-14') {
        @include assert {
          @include output {
            @include md\:-right-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: -3.5rem;
            }
          }
        }
      }

      @include it('md\:-bottom-14') {
        @include assert {
          @include output {
            @include md\:-bottom-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: -3.5rem;
            }
          }
        }
      }

      @include it('md\:-left-14') {
        @include assert {
          @include output {
            @include md\:-left-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -3.5rem;
            }
          }
        }
      }

      @include it('md\:-inset-16') {
        @include assert {
          @include output {
            @include md\:-inset-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: -4rem;
            }
          }
        }
      }

      @include it('md\:-inset-x-16') {
        @include assert {
          @include output {
            @include md\:-inset-x-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -4rem;
              right: -4rem;
            }
          }
        }
      }

      @include it('md\:-inset-y-16') {
        @include assert {
          @include output {
            @include md\:-inset-y-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -4rem;
              bottom: -4rem;
            }
          }
        }
      }

      @include it('md\:-start-16') {
        @include assert {
          @include output {
            @include md\:-start-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: -4rem;
            }
          }
        }
      }

      @include it('md\:-end-16') {
        @include assert {
          @include output {
            @include md\:-end-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: -4rem;
            }
          }
        }
      }

      @include it('md\:-top-16') {
        @include assert {
          @include output {
            @include md\:-top-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -4rem;
            }
          }
        }
      }

      @include it('md\:-right-16') {
        @include assert {
          @include output {
            @include md\:-right-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: -4rem;
            }
          }
        }
      }

      @include it('md\:-bottom-16') {
        @include assert {
          @include output {
            @include md\:-bottom-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: -4rem;
            }
          }
        }
      }

      @include it('md\:-left-16') {
        @include assert {
          @include output {
            @include md\:-left-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -4rem;
            }
          }
        }
      }

      @include it('md\:-inset-20') {
        @include assert {
          @include output {
            @include md\:-inset-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: -5rem;
            }
          }
        }
      }

      @include it('md\:-inset-x-20') {
        @include assert {
          @include output {
            @include md\:-inset-x-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -5rem;
              right: -5rem;
            }
          }
        }
      }

      @include it('md\:-inset-y-20') {
        @include assert {
          @include output {
            @include md\:-inset-y-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -5rem;
              bottom: -5rem;
            }
          }
        }
      }

      @include it('md\:-start-20') {
        @include assert {
          @include output {
            @include md\:-start-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: -5rem;
            }
          }
        }
      }

      @include it('md\:-end-20') {
        @include assert {
          @include output {
            @include md\:-end-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: -5rem;
            }
          }
        }
      }

      @include it('md\:-top-20') {
        @include assert {
          @include output {
            @include md\:-top-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -5rem;
            }
          }
        }
      }

      @include it('md\:-right-20') {
        @include assert {
          @include output {
            @include md\:-right-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: -5rem;
            }
          }
        }
      }

      @include it('md\:-bottom-20') {
        @include assert {
          @include output {
            @include md\:-bottom-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: -5rem;
            }
          }
        }
      }

      @include it('md\:-left-20') {
        @include assert {
          @include output {
            @include md\:-left-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -5rem;
            }
          }
        }
      }

      @include it('md\:-inset-24') {
        @include assert {
          @include output {
            @include md\:-inset-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: -6rem;
            }
          }
        }
      }

      @include it('md\:-inset-x-24') {
        @include assert {
          @include output {
            @include md\:-inset-x-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -6rem;
              right: -6rem;
            }
          }
        }
      }

      @include it('md\:-inset-y-24') {
        @include assert {
          @include output {
            @include md\:-inset-y-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -6rem;
              bottom: -6rem;
            }
          }
        }
      }

      @include it('md\:-start-24') {
        @include assert {
          @include output {
            @include md\:-start-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: -6rem;
            }
          }
        }
      }

      @include it('md\:-end-24') {
        @include assert {
          @include output {
            @include md\:-end-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: -6rem;
            }
          }
        }
      }

      @include it('md\:-top-24') {
        @include assert {
          @include output {
            @include md\:-top-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -6rem;
            }
          }
        }
      }

      @include it('md\:-right-24') {
        @include assert {
          @include output {
            @include md\:-right-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: -6rem;
            }
          }
        }
      }

      @include it('md\:-bottom-24') {
        @include assert {
          @include output {
            @include md\:-bottom-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: -6rem;
            }
          }
        }
      }

      @include it('md\:-left-24') {
        @include assert {
          @include output {
            @include md\:-left-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -6rem;
            }
          }
        }
      }

      @include it('md\:-inset-28') {
        @include assert {
          @include output {
            @include md\:-inset-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: -7rem;
            }
          }
        }
      }

      @include it('md\:-inset-x-28') {
        @include assert {
          @include output {
            @include md\:-inset-x-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -7rem;
              right: -7rem;
            }
          }
        }
      }

      @include it('md\:-inset-y-28') {
        @include assert {
          @include output {
            @include md\:-inset-y-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -7rem;
              bottom: -7rem;
            }
          }
        }
      }

      @include it('md\:-start-28') {
        @include assert {
          @include output {
            @include md\:-start-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: -7rem;
            }
          }
        }
      }

      @include it('md\:-end-28') {
        @include assert {
          @include output {
            @include md\:-end-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: -7rem;
            }
          }
        }
      }

      @include it('md\:-top-28') {
        @include assert {
          @include output {
            @include md\:-top-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -7rem;
            }
          }
        }
      }

      @include it('md\:-right-28') {
        @include assert {
          @include output {
            @include md\:-right-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: -7rem;
            }
          }
        }
      }

      @include it('md\:-bottom-28') {
        @include assert {
          @include output {
            @include md\:-bottom-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: -7rem;
            }
          }
        }
      }

      @include it('md\:-left-28') {
        @include assert {
          @include output {
            @include md\:-left-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -7rem;
            }
          }
        }
      }

      @include it('md\:-inset-32') {
        @include assert {
          @include output {
            @include md\:-inset-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: -8rem;
            }
          }
        }
      }

      @include it('md\:-inset-x-32') {
        @include assert {
          @include output {
            @include md\:-inset-x-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -8rem;
              right: -8rem;
            }
          }
        }
      }

      @include it('md\:-inset-y-32') {
        @include assert {
          @include output {
            @include md\:-inset-y-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -8rem;
              bottom: -8rem;
            }
          }
        }
      }

      @include it('md\:-start-32') {
        @include assert {
          @include output {
            @include md\:-start-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: -8rem;
            }
          }
        }
      }

      @include it('md\:-end-32') {
        @include assert {
          @include output {
            @include md\:-end-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: -8rem;
            }
          }
        }
      }

      @include it('md\:-top-32') {
        @include assert {
          @include output {
            @include md\:-top-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -8rem;
            }
          }
        }
      }

      @include it('md\:-right-32') {
        @include assert {
          @include output {
            @include md\:-right-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: -8rem;
            }
          }
        }
      }

      @include it('md\:-bottom-32') {
        @include assert {
          @include output {
            @include md\:-bottom-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: -8rem;
            }
          }
        }
      }

      @include it('md\:-left-32') {
        @include assert {
          @include output {
            @include md\:-left-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -8rem;
            }
          }
        }
      }

      @include it('md\:-inset-36') {
        @include assert {
          @include output {
            @include md\:-inset-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: -9rem;
            }
          }
        }
      }

      @include it('md\:-inset-x-36') {
        @include assert {
          @include output {
            @include md\:-inset-x-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -9rem;
              right: -9rem;
            }
          }
        }
      }

      @include it('md\:-inset-y-36') {
        @include assert {
          @include output {
            @include md\:-inset-y-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -9rem;
              bottom: -9rem;
            }
          }
        }
      }

      @include it('md\:-start-36') {
        @include assert {
          @include output {
            @include md\:-start-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: -9rem;
            }
          }
        }
      }

      @include it('md\:-end-36') {
        @include assert {
          @include output {
            @include md\:-end-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: -9rem;
            }
          }
        }
      }

      @include it('md\:-top-36') {
        @include assert {
          @include output {
            @include md\:-top-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -9rem;
            }
          }
        }
      }

      @include it('md\:-right-36') {
        @include assert {
          @include output {
            @include md\:-right-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: -9rem;
            }
          }
        }
      }

      @include it('md\:-bottom-36') {
        @include assert {
          @include output {
            @include md\:-bottom-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: -9rem;
            }
          }
        }
      }

      @include it('md\:-left-36') {
        @include assert {
          @include output {
            @include md\:-left-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -9rem;
            }
          }
        }
      }

      @include it('md\:-inset-40') {
        @include assert {
          @include output {
            @include md\:-inset-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: -10rem;
            }
          }
        }
      }

      @include it('md\:-inset-x-40') {
        @include assert {
          @include output {
            @include md\:-inset-x-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -10rem;
              right: -10rem;
            }
          }
        }
      }

      @include it('md\:-inset-y-40') {
        @include assert {
          @include output {
            @include md\:-inset-y-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -10rem;
              bottom: -10rem;
            }
          }
        }
      }

      @include it('md\:-start-40') {
        @include assert {
          @include output {
            @include md\:-start-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: -10rem;
            }
          }
        }
      }

      @include it('md\:-end-40') {
        @include assert {
          @include output {
            @include md\:-end-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: -10rem;
            }
          }
        }
      }

      @include it('md\:-top-40') {
        @include assert {
          @include output {
            @include md\:-top-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -10rem;
            }
          }
        }
      }

      @include it('md\:-right-40') {
        @include assert {
          @include output {
            @include md\:-right-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: -10rem;
            }
          }
        }
      }

      @include it('md\:-bottom-40') {
        @include assert {
          @include output {
            @include md\:-bottom-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: -10rem;
            }
          }
        }
      }

      @include it('md\:-left-40') {
        @include assert {
          @include output {
            @include md\:-left-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -10rem;
            }
          }
        }
      }

      @include it('md\:-inset-44') {
        @include assert {
          @include output {
            @include md\:-inset-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: -11rem;
            }
          }
        }
      }

      @include it('md\:-inset-x-44') {
        @include assert {
          @include output {
            @include md\:-inset-x-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -11rem;
              right: -11rem;
            }
          }
        }
      }

      @include it('md\:-inset-y-44') {
        @include assert {
          @include output {
            @include md\:-inset-y-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -11rem;
              bottom: -11rem;
            }
          }
        }
      }

      @include it('md\:-start-44') {
        @include assert {
          @include output {
            @include md\:-start-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: -11rem;
            }
          }
        }
      }

      @include it('md\:-end-44') {
        @include assert {
          @include output {
            @include md\:-end-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: -11rem;
            }
          }
        }
      }

      @include it('md\:-top-44') {
        @include assert {
          @include output {
            @include md\:-top-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -11rem;
            }
          }
        }
      }

      @include it('md\:-right-44') {
        @include assert {
          @include output {
            @include md\:-right-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: -11rem;
            }
          }
        }
      }

      @include it('md\:-bottom-44') {
        @include assert {
          @include output {
            @include md\:-bottom-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: -11rem;
            }
          }
        }
      }

      @include it('md\:-left-44') {
        @include assert {
          @include output {
            @include md\:-left-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -11rem;
            }
          }
        }
      }

      @include it('md\:-inset-48') {
        @include assert {
          @include output {
            @include md\:-inset-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: -12rem;
            }
          }
        }
      }

      @include it('md\:-inset-x-48') {
        @include assert {
          @include output {
            @include md\:-inset-x-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -12rem;
              right: -12rem;
            }
          }
        }
      }

      @include it('md\:-inset-y-48') {
        @include assert {
          @include output {
            @include md\:-inset-y-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -12rem;
              bottom: -12rem;
            }
          }
        }
      }

      @include it('md\:-start-48') {
        @include assert {
          @include output {
            @include md\:-start-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: -12rem;
            }
          }
        }
      }

      @include it('md\:-end-48') {
        @include assert {
          @include output {
            @include md\:-end-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: -12rem;
            }
          }
        }
      }

      @include it('md\:-top-48') {
        @include assert {
          @include output {
            @include md\:-top-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -12rem;
            }
          }
        }
      }

      @include it('md\:-right-48') {
        @include assert {
          @include output {
            @include md\:-right-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: -12rem;
            }
          }
        }
      }

      @include it('md\:-bottom-48') {
        @include assert {
          @include output {
            @include md\:-bottom-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: -12rem;
            }
          }
        }
      }

      @include it('md\:-left-48') {
        @include assert {
          @include output {
            @include md\:-left-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -12rem;
            }
          }
        }
      }

      @include it('md\:-inset-52') {
        @include assert {
          @include output {
            @include md\:-inset-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: -13rem;
            }
          }
        }
      }

      @include it('md\:-inset-x-52') {
        @include assert {
          @include output {
            @include md\:-inset-x-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -13rem;
              right: -13rem;
            }
          }
        }
      }

      @include it('md\:-inset-y-52') {
        @include assert {
          @include output {
            @include md\:-inset-y-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -13rem;
              bottom: -13rem;
            }
          }
        }
      }

      @include it('md\:-start-52') {
        @include assert {
          @include output {
            @include md\:-start-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: -13rem;
            }
          }
        }
      }

      @include it('md\:-end-52') {
        @include assert {
          @include output {
            @include md\:-end-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: -13rem;
            }
          }
        }
      }

      @include it('md\:-top-52') {
        @include assert {
          @include output {
            @include md\:-top-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -13rem;
            }
          }
        }
      }

      @include it('md\:-right-52') {
        @include assert {
          @include output {
            @include md\:-right-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: -13rem;
            }
          }
        }
      }

      @include it('md\:-bottom-52') {
        @include assert {
          @include output {
            @include md\:-bottom-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: -13rem;
            }
          }
        }
      }

      @include it('md\:-left-52') {
        @include assert {
          @include output {
            @include md\:-left-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -13rem;
            }
          }
        }
      }

      @include it('md\:-inset-56') {
        @include assert {
          @include output {
            @include md\:-inset-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: -14rem;
            }
          }
        }
      }

      @include it('md\:-inset-x-56') {
        @include assert {
          @include output {
            @include md\:-inset-x-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -14rem;
              right: -14rem;
            }
          }
        }
      }

      @include it('md\:-inset-y-56') {
        @include assert {
          @include output {
            @include md\:-inset-y-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -14rem;
              bottom: -14rem;
            }
          }
        }
      }

      @include it('md\:-start-56') {
        @include assert {
          @include output {
            @include md\:-start-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: -14rem;
            }
          }
        }
      }

      @include it('md\:-end-56') {
        @include assert {
          @include output {
            @include md\:-end-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: -14rem;
            }
          }
        }
      }

      @include it('md\:-top-56') {
        @include assert {
          @include output {
            @include md\:-top-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -14rem;
            }
          }
        }
      }

      @include it('md\:-right-56') {
        @include assert {
          @include output {
            @include md\:-right-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: -14rem;
            }
          }
        }
      }

      @include it('md\:-bottom-56') {
        @include assert {
          @include output {
            @include md\:-bottom-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: -14rem;
            }
          }
        }
      }

      @include it('md\:-left-56') {
        @include assert {
          @include output {
            @include md\:-left-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -14rem;
            }
          }
        }
      }

      @include it('md\:-inset-60') {
        @include assert {
          @include output {
            @include md\:-inset-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: -15rem;
            }
          }
        }
      }

      @include it('md\:-inset-x-60') {
        @include assert {
          @include output {
            @include md\:-inset-x-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -15rem;
              right: -15rem;
            }
          }
        }
      }

      @include it('md\:-inset-y-60') {
        @include assert {
          @include output {
            @include md\:-inset-y-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -15rem;
              bottom: -15rem;
            }
          }
        }
      }

      @include it('md\:-start-60') {
        @include assert {
          @include output {
            @include md\:-start-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: -15rem;
            }
          }
        }
      }

      @include it('md\:-end-60') {
        @include assert {
          @include output {
            @include md\:-end-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: -15rem;
            }
          }
        }
      }

      @include it('md\:-top-60') {
        @include assert {
          @include output {
            @include md\:-top-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -15rem;
            }
          }
        }
      }

      @include it('md\:-right-60') {
        @include assert {
          @include output {
            @include md\:-right-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: -15rem;
            }
          }
        }
      }

      @include it('md\:-bottom-60') {
        @include assert {
          @include output {
            @include md\:-bottom-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: -15rem;
            }
          }
        }
      }

      @include it('md\:-left-60') {
        @include assert {
          @include output {
            @include md\:-left-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -15rem;
            }
          }
        }
      }

      @include it('md\:-inset-64') {
        @include assert {
          @include output {
            @include md\:-inset-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: -16rem;
            }
          }
        }
      }

      @include it('md\:-inset-x-64') {
        @include assert {
          @include output {
            @include md\:-inset-x-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -16rem;
              right: -16rem;
            }
          }
        }
      }

      @include it('md\:-inset-y-64') {
        @include assert {
          @include output {
            @include md\:-inset-y-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -16rem;
              bottom: -16rem;
            }
          }
        }
      }

      @include it('md\:-start-64') {
        @include assert {
          @include output {
            @include md\:-start-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: -16rem;
            }
          }
        }
      }

      @include it('md\:-end-64') {
        @include assert {
          @include output {
            @include md\:-end-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: -16rem;
            }
          }
        }
      }

      @include it('md\:-top-64') {
        @include assert {
          @include output {
            @include md\:-top-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -16rem;
            }
          }
        }
      }

      @include it('md\:-right-64') {
        @include assert {
          @include output {
            @include md\:-right-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: -16rem;
            }
          }
        }
      }

      @include it('md\:-bottom-64') {
        @include assert {
          @include output {
            @include md\:-bottom-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: -16rem;
            }
          }
        }
      }

      @include it('md\:-left-64') {
        @include assert {
          @include output {
            @include md\:-left-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -16rem;
            }
          }
        }
      }

      @include it('md\:-inset-72') {
        @include assert {
          @include output {
            @include md\:-inset-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: -18rem;
            }
          }
        }
      }

      @include it('md\:-inset-x-72') {
        @include assert {
          @include output {
            @include md\:-inset-x-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -18rem;
              right: -18rem;
            }
          }
        }
      }

      @include it('md\:-inset-y-72') {
        @include assert {
          @include output {
            @include md\:-inset-y-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -18rem;
              bottom: -18rem;
            }
          }
        }
      }

      @include it('md\:-start-72') {
        @include assert {
          @include output {
            @include md\:-start-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: -18rem;
            }
          }
        }
      }

      @include it('md\:-end-72') {
        @include assert {
          @include output {
            @include md\:-end-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: -18rem;
            }
          }
        }
      }

      @include it('md\:-top-72') {
        @include assert {
          @include output {
            @include md\:-top-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -18rem;
            }
          }
        }
      }

      @include it('md\:-right-72') {
        @include assert {
          @include output {
            @include md\:-right-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: -18rem;
            }
          }
        }
      }

      @include it('md\:-bottom-72') {
        @include assert {
          @include output {
            @include md\:-bottom-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: -18rem;
            }
          }
        }
      }

      @include it('md\:-left-72') {
        @include assert {
          @include output {
            @include md\:-left-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -18rem;
            }
          }
        }
      }

      @include it('md\:-inset-80') {
        @include assert {
          @include output {
            @include md\:-inset-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: -20rem;
            }
          }
        }
      }

      @include it('md\:-inset-x-80') {
        @include assert {
          @include output {
            @include md\:-inset-x-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -20rem;
              right: -20rem;
            }
          }
        }
      }

      @include it('md\:-inset-y-80') {
        @include assert {
          @include output {
            @include md\:-inset-y-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -20rem;
              bottom: -20rem;
            }
          }
        }
      }

      @include it('md\:-start-80') {
        @include assert {
          @include output {
            @include md\:-start-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: -20rem;
            }
          }
        }
      }

      @include it('md\:-end-80') {
        @include assert {
          @include output {
            @include md\:-end-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: -20rem;
            }
          }
        }
      }

      @include it('md\:-top-80') {
        @include assert {
          @include output {
            @include md\:-top-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -20rem;
            }
          }
        }
      }

      @include it('md\:-right-80') {
        @include assert {
          @include output {
            @include md\:-right-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: -20rem;
            }
          }
        }
      }

      @include it('md\:-bottom-80') {
        @include assert {
          @include output {
            @include md\:-bottom-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: -20rem;
            }
          }
        }
      }

      @include it('md\:-left-80') {
        @include assert {
          @include output {
            @include md\:-left-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -20rem;
            }
          }
        }
      }

      @include it('md\:-inset-96') {
        @include assert {
          @include output {
            @include md\:-inset-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: -24rem;
            }
          }
        }
      }

      @include it('md\:-inset-x-96') {
        @include assert {
          @include output {
            @include md\:-inset-x-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -24rem;
              right: -24rem;
            }
          }
        }
      }

      @include it('md\:-inset-y-96') {
        @include assert {
          @include output {
            @include md\:-inset-y-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -24rem;
              bottom: -24rem;
            }
          }
        }
      }

      @include it('md\:-start-96') {
        @include assert {
          @include output {
            @include md\:-start-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: -24rem;
            }
          }
        }
      }

      @include it('md\:-end-96') {
        @include assert {
          @include output {
            @include md\:-end-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: -24rem;
            }
          }
        }
      }

      @include it('md\:-top-96') {
        @include assert {
          @include output {
            @include md\:-top-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -24rem;
            }
          }
        }
      }

      @include it('md\:-right-96') {
        @include assert {
          @include output {
            @include md\:-right-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: -24rem;
            }
          }
        }
      }

      @include it('md\:-bottom-96') {
        @include assert {
          @include output {
            @include md\:-bottom-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: -24rem;
            }
          }
        }
      }

      @include it('md\:-left-96') {
        @include assert {
          @include output {
            @include md\:-left-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -24rem;
            }
          }
        }
      }

      @include it('md\:-inset-1\/2') {
        @include assert {
          @include output {
            @include md\:-inset-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: -50%;
            }
          }
        }
      }

      @include it('md\:-inset-1\/3') {
        @include assert {
          @include output {
            @include md\:-inset-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: -33.333333%;
            }
          }
        }
      }

      @include it('md\:-inset-2\/3') {
        @include assert {
          @include output {
            @include md\:-inset-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: -66.666667%;
            }
          }
        }
      }

      @include it('md\:-inset-1\/4') {
        @include assert {
          @include output {
            @include md\:-inset-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: -25%;
            }
          }
        }
      }

      @include it('md\:-inset-2\/4') {
        @include assert {
          @include output {
            @include md\:-inset-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: -50%;
            }
          }
        }
      }

      @include it('md\:-inset-3\/4') {
        @include assert {
          @include output {
            @include md\:-inset-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: -75%;
            }
          }
        }
      }

      @include it('md\:-inset-full') {
        @include assert {
          @include output {
            @include md\:-inset-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: -100%;
            }
          }
        }
      }

      @include it('md\:-inset-x-1\/2') {
        @include assert {
          @include output {
            @include md\:-inset-x-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -50%;
              right: -50%;
            }
          }
        }
      }

      @include it('md\:-inset-x-1\/3') {
        @include assert {
          @include output {
            @include md\:-inset-x-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -33.333333%;
              right: -33.333333%;
            }
          }
        }
      }

      @include it('md\:-inset-x-2\/3') {
        @include assert {
          @include output {
            @include md\:-inset-x-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -66.666667%;
              right: -66.666667%;
            }
          }
        }
      }

      @include it('md\:-inset-x-1\/4') {
        @include assert {
          @include output {
            @include md\:-inset-x-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -25%;
              right: -25%;
            }
          }
        }
      }

      @include it('md\:-inset-x-2\/4') {
        @include assert {
          @include output {
            @include md\:-inset-x-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -50%;
              right: -50%;
            }
          }
        }
      }

      @include it('md\:-inset-x-3\/4') {
        @include assert {
          @include output {
            @include md\:-inset-x-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -75%;
              right: -75%;
            }
          }
        }
      }

      @include it('md\:-inset-x-full') {
        @include assert {
          @include output {
            @include md\:-inset-x-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -100%;
              right: -100%;
            }
          }
        }
      }

      @include it('md\:-inset-y-1\/2') {
        @include assert {
          @include output {
            @include md\:-inset-y-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -50%;
              bottom: -50%;
            }
          }
        }
      }

      @include it('md\:-inset-y-1\/3') {
        @include assert {
          @include output {
            @include md\:-inset-y-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -33.333333%;
              bottom: -33.333333%;
            }
          }
        }
      }

      @include it('md\:-inset-y-2\/3') {
        @include assert {
          @include output {
            @include md\:-inset-y-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -66.666667%;
              bottom: -66.666667%;
            }
          }
        }
      }

      @include it('md\:-inset-y-1\/4') {
        @include assert {
          @include output {
            @include md\:-inset-y-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -25%;
              bottom: -25%;
            }
          }
        }
      }

      @include it('md\:-inset-y-2\/4') {
        @include assert {
          @include output {
            @include md\:-inset-y-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -50%;
              bottom: -50%;
            }
          }
        }
      }

      @include it('md\:-inset-y-3\/4') {
        @include assert {
          @include output {
            @include md\:-inset-y-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -75%;
              bottom: -75%;
            }
          }
        }
      }

      @include it('md\:-inset-y-full') {
        @include assert {
          @include output {
            @include md\:-inset-y-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -100%;
              bottom: -100%;
            }
          }
        }
      }

      @include it('md\:-start-1\/2') {
        @include assert {
          @include output {
            @include md\:-start-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: -50%;
            }
          }
        }
      }

      @include it('md\:-start-1\/3') {
        @include assert {
          @include output {
            @include md\:-start-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: -33.333333%;
            }
          }
        }
      }

      @include it('md\:-start-2\/3') {
        @include assert {
          @include output {
            @include md\:-start-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: -66.666667%;
            }
          }
        }
      }

      @include it('md\:-start-1\/4') {
        @include assert {
          @include output {
            @include md\:-start-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: -25%;
            }
          }
        }
      }

      @include it('md\:-start-2\/4') {
        @include assert {
          @include output {
            @include md\:-start-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: -50%;
            }
          }
        }
      }

      @include it('md\:-start-3\/4') {
        @include assert {
          @include output {
            @include md\:-start-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: -75%;
            }
          }
        }
      }

      @include it('md\:-start-full') {
        @include assert {
          @include output {
            @include md\:-start-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: -100%;
            }
          }
        }
      }

      @include it('md\:-end-1\/2') {
        @include assert {
          @include output {
            @include md\:-end-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: -50%;
            }
          }
        }
      }

      @include it('md\:-end-1\/3') {
        @include assert {
          @include output {
            @include md\:-end-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: -33.333333%;
            }
          }
        }
      }

      @include it('md\:-end-2\/3') {
        @include assert {
          @include output {
            @include md\:-end-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: -66.666667%;
            }
          }
        }
      }

      @include it('md\:-end-1\/4') {
        @include assert {
          @include output {
            @include md\:-end-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: -25%;
            }
          }
        }
      }

      @include it('md\:-end-2\/4') {
        @include assert {
          @include output {
            @include md\:-end-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: -50%;
            }
          }
        }
      }

      @include it('md\:-end-3\/4') {
        @include assert {
          @include output {
            @include md\:-end-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: -75%;
            }
          }
        }
      }

      @include it('md\:-end-full') {
        @include assert {
          @include output {
            @include md\:-end-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: -100%;
            }
          }
        }
      }

      @include it('md\:-top-1\/2') {
        @include assert {
          @include output {
            @include md\:-top-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -50%;
            }
          }
        }
      }

      @include it('md\:-top-1\/3') {
        @include assert {
          @include output {
            @include md\:-top-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -33.333333%;
            }
          }
        }
      }

      @include it('md\:-top-2\/3') {
        @include assert {
          @include output {
            @include md\:-top-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -66.666667%;
            }
          }
        }
      }

      @include it('md\:-top-1\/4') {
        @include assert {
          @include output {
            @include md\:-top-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -25%;
            }
          }
        }
      }

      @include it('md\:-top-2\/4') {
        @include assert {
          @include output {
            @include md\:-top-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -50%;
            }
          }
        }
      }

      @include it('md\:-top-3\/4') {
        @include assert {
          @include output {
            @include md\:-top-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -75%;
            }
          }
        }
      }

      @include it('md\:-top-full') {
        @include assert {
          @include output {
            @include md\:-top-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -100%;
            }
          }
        }
      }

      @include it('md\:-right-1\/2') {
        @include assert {
          @include output {
            @include md\:-right-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: -50%;
            }
          }
        }
      }

      @include it('md\:-right-1\/3') {
        @include assert {
          @include output {
            @include md\:-right-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: -33.333333%;
            }
          }
        }
      }

      @include it('md\:-right-2\/3') {
        @include assert {
          @include output {
            @include md\:-right-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: -66.666667%;
            }
          }
        }
      }

      @include it('md\:-right-1\/4') {
        @include assert {
          @include output {
            @include md\:-right-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: -25%;
            }
          }
        }
      }

      @include it('md\:-right-2\/4') {
        @include assert {
          @include output {
            @include md\:-right-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: -50%;
            }
          }
        }
      }

      @include it('md\:-right-3\/4') {
        @include assert {
          @include output {
            @include md\:-right-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: -75%;
            }
          }
        }
      }

      @include it('md\:-right-full') {
        @include assert {
          @include output {
            @include md\:-right-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: -100%;
            }
          }
        }
      }

      @include it('md\:-bottom-1\/2') {
        @include assert {
          @include output {
            @include md\:-bottom-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: -50%;
            }
          }
        }
      }

      @include it('md\:-bottom-1\/3') {
        @include assert {
          @include output {
            @include md\:-bottom-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: -33.333333%;
            }
          }
        }
      }

      @include it('md\:-bottom-2\/3') {
        @include assert {
          @include output {
            @include md\:-bottom-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: -66.666667%;
            }
          }
        }
      }

      @include it('md\:-bottom-1\/4') {
        @include assert {
          @include output {
            @include md\:-bottom-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: -25%;
            }
          }
        }
      }

      @include it('md\:-bottom-2\/4') {
        @include assert {
          @include output {
            @include md\:-bottom-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: -50%;
            }
          }
        }
      }

      @include it('md\:-bottom-3\/4') {
        @include assert {
          @include output {
            @include md\:-bottom-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: -75%;
            }
          }
        }
      }

      @include it('md\:-bottom-full') {
        @include assert {
          @include output {
            @include md\:-bottom-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: -100%;
            }
          }
        }
      }

      @include it('md\:-left-1\/2') {
        @include assert {
          @include output {
            @include md\:-left-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -50%;
            }
          }
        }
      }

      @include it('md\:-left-1\/3') {
        @include assert {
          @include output {
            @include md\:-left-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -33.333333%;
            }
          }
        }
      }

      @include it('md\:-left-2\/3') {
        @include assert {
          @include output {
            @include md\:-left-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -66.666667%;
            }
          }
        }
      }

      @include it('md\:-left-1\/4') {
        @include assert {
          @include output {
            @include md\:-left-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -25%;
            }
          }
        }
      }

      @include it('md\:-left-2\/4') {
        @include assert {
          @include output {
            @include md\:-left-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -50%;
            }
          }
        }
      }

      @include it('md\:-left-3\/4') {
        @include assert {
          @include output {
            @include md\:-left-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -75%;
            }
          }
        }
      }

      @include it('md\:-left-full') {
        @include assert {
          @include output {
            @include md\:-left-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -100%;
            }
          }
        }
      }

      @include it('lg\:inset-0') {
        @include assert {
          @include output {
            @include lg\:inset-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: 0px;
            }
          }
        }
      }

      @include it('lg\:inset-x-0') {
        @include assert {
          @include output {
            @include lg\:inset-x-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 0px;
              right: 0px;
            }
          }
        }
      }

      @include it('lg\:inset-y-0') {
        @include assert {
          @include output {
            @include lg\:inset-y-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 0px;
              bottom: 0px;
            }
          }
        }
      }

      @include it('lg\:start-0') {
        @include assert {
          @include output {
            @include lg\:start-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: 0px;
            }
          }
        }
      }

      @include it('lg\:end-0') {
        @include assert {
          @include output {
            @include lg\:end-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: 0px;
            }
          }
        }
      }

      @include it('lg\:top-0') {
        @include assert {
          @include output {
            @include lg\:top-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 0px;
            }
          }
        }
      }

      @include it('lg\:right-0') {
        @include assert {
          @include output {
            @include lg\:right-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: 0px;
            }
          }
        }
      }

      @include it('lg\:bottom-0') {
        @include assert {
          @include output {
            @include lg\:bottom-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: 0px;
            }
          }
        }
      }

      @include it('lg\:left-0') {
        @include assert {
          @include output {
            @include lg\:left-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 0px;
            }
          }
        }
      }

      @include it('lg\:inset-px') {
        @include assert {
          @include output {
            @include lg\:inset-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: 1px;
            }
          }
        }
      }

      @include it('lg\:inset-x-px') {
        @include assert {
          @include output {
            @include lg\:inset-x-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 1px;
              right: 1px;
            }
          }
        }
      }

      @include it('lg\:inset-y-px') {
        @include assert {
          @include output {
            @include lg\:inset-y-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 1px;
              bottom: 1px;
            }
          }
        }
      }

      @include it('lg\:start-px') {
        @include assert {
          @include output {
            @include lg\:start-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: 1px;
            }
          }
        }
      }

      @include it('lg\:end-px') {
        @include assert {
          @include output {
            @include lg\:end-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: 1px;
            }
          }
        }
      }

      @include it('lg\:top-px') {
        @include assert {
          @include output {
            @include lg\:top-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 1px;
            }
          }
        }
      }

      @include it('lg\:right-px') {
        @include assert {
          @include output {
            @include lg\:right-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: 1px;
            }
          }
        }
      }

      @include it('lg\:bottom-px') {
        @include assert {
          @include output {
            @include lg\:bottom-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: 1px;
            }
          }
        }
      }

      @include it('lg\:left-px') {
        @include assert {
          @include output {
            @include lg\:left-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 1px;
            }
          }
        }
      }

      @include it('lg\:inset-0\.5') {
        @include assert {
          @include output {
            @include lg\:inset-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: 0.125rem;
            }
          }
        }
      }

      @include it('lg\:inset-x-0\.5') {
        @include assert {
          @include output {
            @include lg\:inset-x-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 0.125rem;
              right: 0.125rem;
            }
          }
        }
      }

      @include it('lg\:inset-y-0\.5') {
        @include assert {
          @include output {
            @include lg\:inset-y-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 0.125rem;
              bottom: 0.125rem;
            }
          }
        }
      }

      @include it('lg\:start-0\.5') {
        @include assert {
          @include output {
            @include lg\:start-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: 0.125rem;
            }
          }
        }
      }

      @include it('lg\:end-0\.5') {
        @include assert {
          @include output {
            @include lg\:end-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: 0.125rem;
            }
          }
        }
      }

      @include it('lg\:top-0\.5') {
        @include assert {
          @include output {
            @include lg\:top-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 0.125rem;
            }
          }
        }
      }

      @include it('lg\:right-0\.5') {
        @include assert {
          @include output {
            @include lg\:right-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: 0.125rem;
            }
          }
        }
      }

      @include it('lg\:bottom-0\.5') {
        @include assert {
          @include output {
            @include lg\:bottom-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: 0.125rem;
            }
          }
        }
      }

      @include it('lg\:left-0\.5') {
        @include assert {
          @include output {
            @include lg\:left-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 0.125rem;
            }
          }
        }
      }

      @include it('lg\:inset-1') {
        @include assert {
          @include output {
            @include lg\:inset-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: 0.25rem;
            }
          }
        }
      }

      @include it('lg\:inset-x-1') {
        @include assert {
          @include output {
            @include lg\:inset-x-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 0.25rem;
              right: 0.25rem;
            }
          }
        }
      }

      @include it('lg\:inset-y-1') {
        @include assert {
          @include output {
            @include lg\:inset-y-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 0.25rem;
              bottom: 0.25rem;
            }
          }
        }
      }

      @include it('lg\:start-1') {
        @include assert {
          @include output {
            @include lg\:start-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: 0.25rem;
            }
          }
        }
      }

      @include it('lg\:end-1') {
        @include assert {
          @include output {
            @include lg\:end-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: 0.25rem;
            }
          }
        }
      }

      @include it('lg\:top-1') {
        @include assert {
          @include output {
            @include lg\:top-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 0.25rem;
            }
          }
        }
      }

      @include it('lg\:right-1') {
        @include assert {
          @include output {
            @include lg\:right-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: 0.25rem;
            }
          }
        }
      }

      @include it('lg\:bottom-1') {
        @include assert {
          @include output {
            @include lg\:bottom-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: 0.25rem;
            }
          }
        }
      }

      @include it('lg\:left-1') {
        @include assert {
          @include output {
            @include lg\:left-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 0.25rem;
            }
          }
        }
      }

      @include it('lg\:inset-1\.5') {
        @include assert {
          @include output {
            @include lg\:inset-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: 0.375rem;
            }
          }
        }
      }

      @include it('lg\:inset-x-1\.5') {
        @include assert {
          @include output {
            @include lg\:inset-x-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 0.375rem;
              right: 0.375rem;
            }
          }
        }
      }

      @include it('lg\:inset-y-1\.5') {
        @include assert {
          @include output {
            @include lg\:inset-y-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 0.375rem;
              bottom: 0.375rem;
            }
          }
        }
      }

      @include it('lg\:start-1\.5') {
        @include assert {
          @include output {
            @include lg\:start-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: 0.375rem;
            }
          }
        }
      }

      @include it('lg\:end-1\.5') {
        @include assert {
          @include output {
            @include lg\:end-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: 0.375rem;
            }
          }
        }
      }

      @include it('lg\:top-1\.5') {
        @include assert {
          @include output {
            @include lg\:top-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 0.375rem;
            }
          }
        }
      }

      @include it('lg\:right-1\.5') {
        @include assert {
          @include output {
            @include lg\:right-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: 0.375rem;
            }
          }
        }
      }

      @include it('lg\:bottom-1\.5') {
        @include assert {
          @include output {
            @include lg\:bottom-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: 0.375rem;
            }
          }
        }
      }

      @include it('lg\:left-1\.5') {
        @include assert {
          @include output {
            @include lg\:left-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 0.375rem;
            }
          }
        }
      }

      @include it('lg\:inset-2') {
        @include assert {
          @include output {
            @include lg\:inset-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: 0.5rem;
            }
          }
        }
      }

      @include it('lg\:inset-x-2') {
        @include assert {
          @include output {
            @include lg\:inset-x-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 0.5rem;
              right: 0.5rem;
            }
          }
        }
      }

      @include it('lg\:inset-y-2') {
        @include assert {
          @include output {
            @include lg\:inset-y-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 0.5rem;
              bottom: 0.5rem;
            }
          }
        }
      }

      @include it('lg\:start-2') {
        @include assert {
          @include output {
            @include lg\:start-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: 0.5rem;
            }
          }
        }
      }

      @include it('lg\:end-2') {
        @include assert {
          @include output {
            @include lg\:end-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: 0.5rem;
            }
          }
        }
      }

      @include it('lg\:top-2') {
        @include assert {
          @include output {
            @include lg\:top-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 0.5rem;
            }
          }
        }
      }

      @include it('lg\:right-2') {
        @include assert {
          @include output {
            @include lg\:right-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: 0.5rem;
            }
          }
        }
      }

      @include it('lg\:bottom-2') {
        @include assert {
          @include output {
            @include lg\:bottom-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: 0.5rem;
            }
          }
        }
      }

      @include it('lg\:left-2') {
        @include assert {
          @include output {
            @include lg\:left-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 0.5rem;
            }
          }
        }
      }

      @include it('lg\:inset-2\.5') {
        @include assert {
          @include output {
            @include lg\:inset-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: 0.625rem;
            }
          }
        }
      }

      @include it('lg\:inset-x-2\.5') {
        @include assert {
          @include output {
            @include lg\:inset-x-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 0.625rem;
              right: 0.625rem;
            }
          }
        }
      }

      @include it('lg\:inset-y-2\.5') {
        @include assert {
          @include output {
            @include lg\:inset-y-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 0.625rem;
              bottom: 0.625rem;
            }
          }
        }
      }

      @include it('lg\:start-2\.5') {
        @include assert {
          @include output {
            @include lg\:start-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: 0.625rem;
            }
          }
        }
      }

      @include it('lg\:end-2\.5') {
        @include assert {
          @include output {
            @include lg\:end-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: 0.625rem;
            }
          }
        }
      }

      @include it('lg\:top-2\.5') {
        @include assert {
          @include output {
            @include lg\:top-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 0.625rem;
            }
          }
        }
      }

      @include it('lg\:right-2\.5') {
        @include assert {
          @include output {
            @include lg\:right-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: 0.625rem;
            }
          }
        }
      }

      @include it('lg\:bottom-2\.5') {
        @include assert {
          @include output {
            @include lg\:bottom-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: 0.625rem;
            }
          }
        }
      }

      @include it('lg\:left-2\.5') {
        @include assert {
          @include output {
            @include lg\:left-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 0.625rem;
            }
          }
        }
      }

      @include it('lg\:inset-3') {
        @include assert {
          @include output {
            @include lg\:inset-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: 0.75rem;
            }
          }
        }
      }

      @include it('lg\:inset-x-3') {
        @include assert {
          @include output {
            @include lg\:inset-x-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 0.75rem;
              right: 0.75rem;
            }
          }
        }
      }

      @include it('lg\:inset-y-3') {
        @include assert {
          @include output {
            @include lg\:inset-y-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 0.75rem;
              bottom: 0.75rem;
            }
          }
        }
      }

      @include it('lg\:start-3') {
        @include assert {
          @include output {
            @include lg\:start-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: 0.75rem;
            }
          }
        }
      }

      @include it('lg\:end-3') {
        @include assert {
          @include output {
            @include lg\:end-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: 0.75rem;
            }
          }
        }
      }

      @include it('lg\:top-3') {
        @include assert {
          @include output {
            @include lg\:top-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 0.75rem;
            }
          }
        }
      }

      @include it('lg\:right-3') {
        @include assert {
          @include output {
            @include lg\:right-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: 0.75rem;
            }
          }
        }
      }

      @include it('lg\:bottom-3') {
        @include assert {
          @include output {
            @include lg\:bottom-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: 0.75rem;
            }
          }
        }
      }

      @include it('lg\:left-3') {
        @include assert {
          @include output {
            @include lg\:left-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 0.75rem;
            }
          }
        }
      }

      @include it('lg\:inset-3\.5') {
        @include assert {
          @include output {
            @include lg\:inset-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: 0.875rem;
            }
          }
        }
      }

      @include it('lg\:inset-x-3\.5') {
        @include assert {
          @include output {
            @include lg\:inset-x-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 0.875rem;
              right: 0.875rem;
            }
          }
        }
      }

      @include it('lg\:inset-y-3\.5') {
        @include assert {
          @include output {
            @include lg\:inset-y-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 0.875rem;
              bottom: 0.875rem;
            }
          }
        }
      }

      @include it('lg\:start-3\.5') {
        @include assert {
          @include output {
            @include lg\:start-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: 0.875rem;
            }
          }
        }
      }

      @include it('lg\:end-3\.5') {
        @include assert {
          @include output {
            @include lg\:end-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: 0.875rem;
            }
          }
        }
      }

      @include it('lg\:top-3\.5') {
        @include assert {
          @include output {
            @include lg\:top-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 0.875rem;
            }
          }
        }
      }

      @include it('lg\:right-3\.5') {
        @include assert {
          @include output {
            @include lg\:right-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: 0.875rem;
            }
          }
        }
      }

      @include it('lg\:bottom-3\.5') {
        @include assert {
          @include output {
            @include lg\:bottom-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: 0.875rem;
            }
          }
        }
      }

      @include it('lg\:left-3\.5') {
        @include assert {
          @include output {
            @include lg\:left-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 0.875rem;
            }
          }
        }
      }

      @include it('lg\:inset-4') {
        @include assert {
          @include output {
            @include lg\:inset-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: 1rem;
            }
          }
        }
      }

      @include it('lg\:inset-x-4') {
        @include assert {
          @include output {
            @include lg\:inset-x-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 1rem;
              right: 1rem;
            }
          }
        }
      }

      @include it('lg\:inset-y-4') {
        @include assert {
          @include output {
            @include lg\:inset-y-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 1rem;
              bottom: 1rem;
            }
          }
        }
      }

      @include it('lg\:start-4') {
        @include assert {
          @include output {
            @include lg\:start-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: 1rem;
            }
          }
        }
      }

      @include it('lg\:end-4') {
        @include assert {
          @include output {
            @include lg\:end-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: 1rem;
            }
          }
        }
      }

      @include it('lg\:top-4') {
        @include assert {
          @include output {
            @include lg\:top-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 1rem;
            }
          }
        }
      }

      @include it('lg\:right-4') {
        @include assert {
          @include output {
            @include lg\:right-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: 1rem;
            }
          }
        }
      }

      @include it('lg\:bottom-4') {
        @include assert {
          @include output {
            @include lg\:bottom-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: 1rem;
            }
          }
        }
      }

      @include it('lg\:left-4') {
        @include assert {
          @include output {
            @include lg\:left-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 1rem;
            }
          }
        }
      }

      @include it('lg\:inset-5') {
        @include assert {
          @include output {
            @include lg\:inset-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: 1.25rem;
            }
          }
        }
      }

      @include it('lg\:inset-x-5') {
        @include assert {
          @include output {
            @include lg\:inset-x-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 1.25rem;
              right: 1.25rem;
            }
          }
        }
      }

      @include it('lg\:inset-y-5') {
        @include assert {
          @include output {
            @include lg\:inset-y-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 1.25rem;
              bottom: 1.25rem;
            }
          }
        }
      }

      @include it('lg\:start-5') {
        @include assert {
          @include output {
            @include lg\:start-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: 1.25rem;
            }
          }
        }
      }

      @include it('lg\:end-5') {
        @include assert {
          @include output {
            @include lg\:end-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: 1.25rem;
            }
          }
        }
      }

      @include it('lg\:top-5') {
        @include assert {
          @include output {
            @include lg\:top-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 1.25rem;
            }
          }
        }
      }

      @include it('lg\:right-5') {
        @include assert {
          @include output {
            @include lg\:right-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: 1.25rem;
            }
          }
        }
      }

      @include it('lg\:bottom-5') {
        @include assert {
          @include output {
            @include lg\:bottom-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: 1.25rem;
            }
          }
        }
      }

      @include it('lg\:left-5') {
        @include assert {
          @include output {
            @include lg\:left-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 1.25rem;
            }
          }
        }
      }

      @include it('lg\:inset-6') {
        @include assert {
          @include output {
            @include lg\:inset-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: 1.5rem;
            }
          }
        }
      }

      @include it('lg\:inset-x-6') {
        @include assert {
          @include output {
            @include lg\:inset-x-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 1.5rem;
              right: 1.5rem;
            }
          }
        }
      }

      @include it('lg\:inset-y-6') {
        @include assert {
          @include output {
            @include lg\:inset-y-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 1.5rem;
              bottom: 1.5rem;
            }
          }
        }
      }

      @include it('lg\:start-6') {
        @include assert {
          @include output {
            @include lg\:start-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: 1.5rem;
            }
          }
        }
      }

      @include it('lg\:end-6') {
        @include assert {
          @include output {
            @include lg\:end-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: 1.5rem;
            }
          }
        }
      }

      @include it('lg\:top-6') {
        @include assert {
          @include output {
            @include lg\:top-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 1.5rem;
            }
          }
        }
      }

      @include it('lg\:right-6') {
        @include assert {
          @include output {
            @include lg\:right-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: 1.5rem;
            }
          }
        }
      }

      @include it('lg\:bottom-6') {
        @include assert {
          @include output {
            @include lg\:bottom-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: 1.5rem;
            }
          }
        }
      }

      @include it('lg\:left-6') {
        @include assert {
          @include output {
            @include lg\:left-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 1.5rem;
            }
          }
        }
      }

      @include it('lg\:inset-7') {
        @include assert {
          @include output {
            @include lg\:inset-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: 1.75rem;
            }
          }
        }
      }

      @include it('lg\:inset-x-7') {
        @include assert {
          @include output {
            @include lg\:inset-x-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 1.75rem;
              right: 1.75rem;
            }
          }
        }
      }

      @include it('lg\:inset-y-7') {
        @include assert {
          @include output {
            @include lg\:inset-y-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 1.75rem;
              bottom: 1.75rem;
            }
          }
        }
      }

      @include it('lg\:start-7') {
        @include assert {
          @include output {
            @include lg\:start-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: 1.75rem;
            }
          }
        }
      }

      @include it('lg\:end-7') {
        @include assert {
          @include output {
            @include lg\:end-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: 1.75rem;
            }
          }
        }
      }

      @include it('lg\:top-7') {
        @include assert {
          @include output {
            @include lg\:top-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 1.75rem;
            }
          }
        }
      }

      @include it('lg\:right-7') {
        @include assert {
          @include output {
            @include lg\:right-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: 1.75rem;
            }
          }
        }
      }

      @include it('lg\:bottom-7') {
        @include assert {
          @include output {
            @include lg\:bottom-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: 1.75rem;
            }
          }
        }
      }

      @include it('lg\:left-7') {
        @include assert {
          @include output {
            @include lg\:left-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 1.75rem;
            }
          }
        }
      }

      @include it('lg\:inset-8') {
        @include assert {
          @include output {
            @include lg\:inset-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: 2rem;
            }
          }
        }
      }

      @include it('lg\:inset-x-8') {
        @include assert {
          @include output {
            @include lg\:inset-x-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 2rem;
              right: 2rem;
            }
          }
        }
      }

      @include it('lg\:inset-y-8') {
        @include assert {
          @include output {
            @include lg\:inset-y-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 2rem;
              bottom: 2rem;
            }
          }
        }
      }

      @include it('lg\:start-8') {
        @include assert {
          @include output {
            @include lg\:start-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: 2rem;
            }
          }
        }
      }

      @include it('lg\:end-8') {
        @include assert {
          @include output {
            @include lg\:end-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: 2rem;
            }
          }
        }
      }

      @include it('lg\:top-8') {
        @include assert {
          @include output {
            @include lg\:top-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 2rem;
            }
          }
        }
      }

      @include it('lg\:right-8') {
        @include assert {
          @include output {
            @include lg\:right-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: 2rem;
            }
          }
        }
      }

      @include it('lg\:bottom-8') {
        @include assert {
          @include output {
            @include lg\:bottom-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: 2rem;
            }
          }
        }
      }

      @include it('lg\:left-8') {
        @include assert {
          @include output {
            @include lg\:left-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 2rem;
            }
          }
        }
      }

      @include it('lg\:inset-9') {
        @include assert {
          @include output {
            @include lg\:inset-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: 2.25rem;
            }
          }
        }
      }

      @include it('lg\:inset-x-9') {
        @include assert {
          @include output {
            @include lg\:inset-x-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 2.25rem;
              right: 2.25rem;
            }
          }
        }
      }

      @include it('lg\:inset-y-9') {
        @include assert {
          @include output {
            @include lg\:inset-y-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 2.25rem;
              bottom: 2.25rem;
            }
          }
        }
      }

      @include it('lg\:start-9') {
        @include assert {
          @include output {
            @include lg\:start-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: 2.25rem;
            }
          }
        }
      }

      @include it('lg\:end-9') {
        @include assert {
          @include output {
            @include lg\:end-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: 2.25rem;
            }
          }
        }
      }

      @include it('lg\:top-9') {
        @include assert {
          @include output {
            @include lg\:top-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 2.25rem;
            }
          }
        }
      }

      @include it('lg\:right-9') {
        @include assert {
          @include output {
            @include lg\:right-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: 2.25rem;
            }
          }
        }
      }

      @include it('lg\:bottom-9') {
        @include assert {
          @include output {
            @include lg\:bottom-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: 2.25rem;
            }
          }
        }
      }

      @include it('lg\:left-9') {
        @include assert {
          @include output {
            @include lg\:left-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 2.25rem;
            }
          }
        }
      }

      @include it('lg\:inset-10') {
        @include assert {
          @include output {
            @include lg\:inset-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: 2.5rem;
            }
          }
        }
      }

      @include it('lg\:inset-x-10') {
        @include assert {
          @include output {
            @include lg\:inset-x-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 2.5rem;
              right: 2.5rem;
            }
          }
        }
      }

      @include it('lg\:inset-y-10') {
        @include assert {
          @include output {
            @include lg\:inset-y-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 2.5rem;
              bottom: 2.5rem;
            }
          }
        }
      }

      @include it('lg\:start-10') {
        @include assert {
          @include output {
            @include lg\:start-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: 2.5rem;
            }
          }
        }
      }

      @include it('lg\:end-10') {
        @include assert {
          @include output {
            @include lg\:end-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: 2.5rem;
            }
          }
        }
      }

      @include it('lg\:top-10') {
        @include assert {
          @include output {
            @include lg\:top-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 2.5rem;
            }
          }
        }
      }

      @include it('lg\:right-10') {
        @include assert {
          @include output {
            @include lg\:right-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: 2.5rem;
            }
          }
        }
      }

      @include it('lg\:bottom-10') {
        @include assert {
          @include output {
            @include lg\:bottom-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: 2.5rem;
            }
          }
        }
      }

      @include it('lg\:left-10') {
        @include assert {
          @include output {
            @include lg\:left-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 2.5rem;
            }
          }
        }
      }

      @include it('lg\:inset-11') {
        @include assert {
          @include output {
            @include lg\:inset-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: 2.75rem;
            }
          }
        }
      }

      @include it('lg\:inset-x-11') {
        @include assert {
          @include output {
            @include lg\:inset-x-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 2.75rem;
              right: 2.75rem;
            }
          }
        }
      }

      @include it('lg\:inset-y-11') {
        @include assert {
          @include output {
            @include lg\:inset-y-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 2.75rem;
              bottom: 2.75rem;
            }
          }
        }
      }

      @include it('lg\:start-11') {
        @include assert {
          @include output {
            @include lg\:start-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: 2.75rem;
            }
          }
        }
      }

      @include it('lg\:end-11') {
        @include assert {
          @include output {
            @include lg\:end-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: 2.75rem;
            }
          }
        }
      }

      @include it('lg\:top-11') {
        @include assert {
          @include output {
            @include lg\:top-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 2.75rem;
            }
          }
        }
      }

      @include it('lg\:right-11') {
        @include assert {
          @include output {
            @include lg\:right-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: 2.75rem;
            }
          }
        }
      }

      @include it('lg\:bottom-11') {
        @include assert {
          @include output {
            @include lg\:bottom-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: 2.75rem;
            }
          }
        }
      }

      @include it('lg\:left-11') {
        @include assert {
          @include output {
            @include lg\:left-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 2.75rem;
            }
          }
        }
      }

      @include it('lg\:inset-12') {
        @include assert {
          @include output {
            @include lg\:inset-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: 3rem;
            }
          }
        }
      }

      @include it('lg\:inset-x-12') {
        @include assert {
          @include output {
            @include lg\:inset-x-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 3rem;
              right: 3rem;
            }
          }
        }
      }

      @include it('lg\:inset-y-12') {
        @include assert {
          @include output {
            @include lg\:inset-y-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 3rem;
              bottom: 3rem;
            }
          }
        }
      }

      @include it('lg\:start-12') {
        @include assert {
          @include output {
            @include lg\:start-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: 3rem;
            }
          }
        }
      }

      @include it('lg\:end-12') {
        @include assert {
          @include output {
            @include lg\:end-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: 3rem;
            }
          }
        }
      }

      @include it('lg\:top-12') {
        @include assert {
          @include output {
            @include lg\:top-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 3rem;
            }
          }
        }
      }

      @include it('lg\:right-12') {
        @include assert {
          @include output {
            @include lg\:right-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: 3rem;
            }
          }
        }
      }

      @include it('lg\:bottom-12') {
        @include assert {
          @include output {
            @include lg\:bottom-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: 3rem;
            }
          }
        }
      }

      @include it('lg\:left-12') {
        @include assert {
          @include output {
            @include lg\:left-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 3rem;
            }
          }
        }
      }

      @include it('lg\:inset-14') {
        @include assert {
          @include output {
            @include lg\:inset-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: 3.5rem;
            }
          }
        }
      }

      @include it('lg\:inset-x-14') {
        @include assert {
          @include output {
            @include lg\:inset-x-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 3.5rem;
              right: 3.5rem;
            }
          }
        }
      }

      @include it('lg\:inset-y-14') {
        @include assert {
          @include output {
            @include lg\:inset-y-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 3.5rem;
              bottom: 3.5rem;
            }
          }
        }
      }

      @include it('lg\:start-14') {
        @include assert {
          @include output {
            @include lg\:start-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: 3.5rem;
            }
          }
        }
      }

      @include it('lg\:end-14') {
        @include assert {
          @include output {
            @include lg\:end-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: 3.5rem;
            }
          }
        }
      }

      @include it('lg\:top-14') {
        @include assert {
          @include output {
            @include lg\:top-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 3.5rem;
            }
          }
        }
      }

      @include it('lg\:right-14') {
        @include assert {
          @include output {
            @include lg\:right-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: 3.5rem;
            }
          }
        }
      }

      @include it('lg\:bottom-14') {
        @include assert {
          @include output {
            @include lg\:bottom-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: 3.5rem;
            }
          }
        }
      }

      @include it('lg\:left-14') {
        @include assert {
          @include output {
            @include lg\:left-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 3.5rem;
            }
          }
        }
      }

      @include it('lg\:inset-16') {
        @include assert {
          @include output {
            @include lg\:inset-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: 4rem;
            }
          }
        }
      }

      @include it('lg\:inset-x-16') {
        @include assert {
          @include output {
            @include lg\:inset-x-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 4rem;
              right: 4rem;
            }
          }
        }
      }

      @include it('lg\:inset-y-16') {
        @include assert {
          @include output {
            @include lg\:inset-y-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 4rem;
              bottom: 4rem;
            }
          }
        }
      }

      @include it('lg\:start-16') {
        @include assert {
          @include output {
            @include lg\:start-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: 4rem;
            }
          }
        }
      }

      @include it('lg\:end-16') {
        @include assert {
          @include output {
            @include lg\:end-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: 4rem;
            }
          }
        }
      }

      @include it('lg\:top-16') {
        @include assert {
          @include output {
            @include lg\:top-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 4rem;
            }
          }
        }
      }

      @include it('lg\:right-16') {
        @include assert {
          @include output {
            @include lg\:right-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: 4rem;
            }
          }
        }
      }

      @include it('lg\:bottom-16') {
        @include assert {
          @include output {
            @include lg\:bottom-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: 4rem;
            }
          }
        }
      }

      @include it('lg\:left-16') {
        @include assert {
          @include output {
            @include lg\:left-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 4rem;
            }
          }
        }
      }

      @include it('lg\:inset-20') {
        @include assert {
          @include output {
            @include lg\:inset-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: 5rem;
            }
          }
        }
      }

      @include it('lg\:inset-x-20') {
        @include assert {
          @include output {
            @include lg\:inset-x-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 5rem;
              right: 5rem;
            }
          }
        }
      }

      @include it('lg\:inset-y-20') {
        @include assert {
          @include output {
            @include lg\:inset-y-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 5rem;
              bottom: 5rem;
            }
          }
        }
      }

      @include it('lg\:start-20') {
        @include assert {
          @include output {
            @include lg\:start-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: 5rem;
            }
          }
        }
      }

      @include it('lg\:end-20') {
        @include assert {
          @include output {
            @include lg\:end-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: 5rem;
            }
          }
        }
      }

      @include it('lg\:top-20') {
        @include assert {
          @include output {
            @include lg\:top-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 5rem;
            }
          }
        }
      }

      @include it('lg\:right-20') {
        @include assert {
          @include output {
            @include lg\:right-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: 5rem;
            }
          }
        }
      }

      @include it('lg\:bottom-20') {
        @include assert {
          @include output {
            @include lg\:bottom-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: 5rem;
            }
          }
        }
      }

      @include it('lg\:left-20') {
        @include assert {
          @include output {
            @include lg\:left-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 5rem;
            }
          }
        }
      }

      @include it('lg\:inset-24') {
        @include assert {
          @include output {
            @include lg\:inset-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: 6rem;
            }
          }
        }
      }

      @include it('lg\:inset-x-24') {
        @include assert {
          @include output {
            @include lg\:inset-x-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 6rem;
              right: 6rem;
            }
          }
        }
      }

      @include it('lg\:inset-y-24') {
        @include assert {
          @include output {
            @include lg\:inset-y-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 6rem;
              bottom: 6rem;
            }
          }
        }
      }

      @include it('lg\:start-24') {
        @include assert {
          @include output {
            @include lg\:start-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: 6rem;
            }
          }
        }
      }

      @include it('lg\:end-24') {
        @include assert {
          @include output {
            @include lg\:end-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: 6rem;
            }
          }
        }
      }

      @include it('lg\:top-24') {
        @include assert {
          @include output {
            @include lg\:top-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 6rem;
            }
          }
        }
      }

      @include it('lg\:right-24') {
        @include assert {
          @include output {
            @include lg\:right-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: 6rem;
            }
          }
        }
      }

      @include it('lg\:bottom-24') {
        @include assert {
          @include output {
            @include lg\:bottom-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: 6rem;
            }
          }
        }
      }

      @include it('lg\:left-24') {
        @include assert {
          @include output {
            @include lg\:left-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 6rem;
            }
          }
        }
      }

      @include it('lg\:inset-28') {
        @include assert {
          @include output {
            @include lg\:inset-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: 7rem;
            }
          }
        }
      }

      @include it('lg\:inset-x-28') {
        @include assert {
          @include output {
            @include lg\:inset-x-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 7rem;
              right: 7rem;
            }
          }
        }
      }

      @include it('lg\:inset-y-28') {
        @include assert {
          @include output {
            @include lg\:inset-y-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 7rem;
              bottom: 7rem;
            }
          }
        }
      }

      @include it('lg\:start-28') {
        @include assert {
          @include output {
            @include lg\:start-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: 7rem;
            }
          }
        }
      }

      @include it('lg\:end-28') {
        @include assert {
          @include output {
            @include lg\:end-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: 7rem;
            }
          }
        }
      }

      @include it('lg\:top-28') {
        @include assert {
          @include output {
            @include lg\:top-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 7rem;
            }
          }
        }
      }

      @include it('lg\:right-28') {
        @include assert {
          @include output {
            @include lg\:right-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: 7rem;
            }
          }
        }
      }

      @include it('lg\:bottom-28') {
        @include assert {
          @include output {
            @include lg\:bottom-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: 7rem;
            }
          }
        }
      }

      @include it('lg\:left-28') {
        @include assert {
          @include output {
            @include lg\:left-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 7rem;
            }
          }
        }
      }

      @include it('lg\:inset-32') {
        @include assert {
          @include output {
            @include lg\:inset-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: 8rem;
            }
          }
        }
      }

      @include it('lg\:inset-x-32') {
        @include assert {
          @include output {
            @include lg\:inset-x-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 8rem;
              right: 8rem;
            }
          }
        }
      }

      @include it('lg\:inset-y-32') {
        @include assert {
          @include output {
            @include lg\:inset-y-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 8rem;
              bottom: 8rem;
            }
          }
        }
      }

      @include it('lg\:start-32') {
        @include assert {
          @include output {
            @include lg\:start-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: 8rem;
            }
          }
        }
      }

      @include it('lg\:end-32') {
        @include assert {
          @include output {
            @include lg\:end-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: 8rem;
            }
          }
        }
      }

      @include it('lg\:top-32') {
        @include assert {
          @include output {
            @include lg\:top-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 8rem;
            }
          }
        }
      }

      @include it('lg\:right-32') {
        @include assert {
          @include output {
            @include lg\:right-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: 8rem;
            }
          }
        }
      }

      @include it('lg\:bottom-32') {
        @include assert {
          @include output {
            @include lg\:bottom-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: 8rem;
            }
          }
        }
      }

      @include it('lg\:left-32') {
        @include assert {
          @include output {
            @include lg\:left-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 8rem;
            }
          }
        }
      }

      @include it('lg\:inset-36') {
        @include assert {
          @include output {
            @include lg\:inset-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: 9rem;
            }
          }
        }
      }

      @include it('lg\:inset-x-36') {
        @include assert {
          @include output {
            @include lg\:inset-x-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 9rem;
              right: 9rem;
            }
          }
        }
      }

      @include it('lg\:inset-y-36') {
        @include assert {
          @include output {
            @include lg\:inset-y-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 9rem;
              bottom: 9rem;
            }
          }
        }
      }

      @include it('lg\:start-36') {
        @include assert {
          @include output {
            @include lg\:start-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: 9rem;
            }
          }
        }
      }

      @include it('lg\:end-36') {
        @include assert {
          @include output {
            @include lg\:end-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: 9rem;
            }
          }
        }
      }

      @include it('lg\:top-36') {
        @include assert {
          @include output {
            @include lg\:top-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 9rem;
            }
          }
        }
      }

      @include it('lg\:right-36') {
        @include assert {
          @include output {
            @include lg\:right-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: 9rem;
            }
          }
        }
      }

      @include it('lg\:bottom-36') {
        @include assert {
          @include output {
            @include lg\:bottom-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: 9rem;
            }
          }
        }
      }

      @include it('lg\:left-36') {
        @include assert {
          @include output {
            @include lg\:left-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 9rem;
            }
          }
        }
      }

      @include it('lg\:inset-40') {
        @include assert {
          @include output {
            @include lg\:inset-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: 10rem;
            }
          }
        }
      }

      @include it('lg\:inset-x-40') {
        @include assert {
          @include output {
            @include lg\:inset-x-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 10rem;
              right: 10rem;
            }
          }
        }
      }

      @include it('lg\:inset-y-40') {
        @include assert {
          @include output {
            @include lg\:inset-y-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 10rem;
              bottom: 10rem;
            }
          }
        }
      }

      @include it('lg\:start-40') {
        @include assert {
          @include output {
            @include lg\:start-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: 10rem;
            }
          }
        }
      }

      @include it('lg\:end-40') {
        @include assert {
          @include output {
            @include lg\:end-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: 10rem;
            }
          }
        }
      }

      @include it('lg\:top-40') {
        @include assert {
          @include output {
            @include lg\:top-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 10rem;
            }
          }
        }
      }

      @include it('lg\:right-40') {
        @include assert {
          @include output {
            @include lg\:right-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: 10rem;
            }
          }
        }
      }

      @include it('lg\:bottom-40') {
        @include assert {
          @include output {
            @include lg\:bottom-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: 10rem;
            }
          }
        }
      }

      @include it('lg\:left-40') {
        @include assert {
          @include output {
            @include lg\:left-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 10rem;
            }
          }
        }
      }

      @include it('lg\:inset-44') {
        @include assert {
          @include output {
            @include lg\:inset-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: 11rem;
            }
          }
        }
      }

      @include it('lg\:inset-x-44') {
        @include assert {
          @include output {
            @include lg\:inset-x-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 11rem;
              right: 11rem;
            }
          }
        }
      }

      @include it('lg\:inset-y-44') {
        @include assert {
          @include output {
            @include lg\:inset-y-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 11rem;
              bottom: 11rem;
            }
          }
        }
      }

      @include it('lg\:start-44') {
        @include assert {
          @include output {
            @include lg\:start-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: 11rem;
            }
          }
        }
      }

      @include it('lg\:end-44') {
        @include assert {
          @include output {
            @include lg\:end-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: 11rem;
            }
          }
        }
      }

      @include it('lg\:top-44') {
        @include assert {
          @include output {
            @include lg\:top-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 11rem;
            }
          }
        }
      }

      @include it('lg\:right-44') {
        @include assert {
          @include output {
            @include lg\:right-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: 11rem;
            }
          }
        }
      }

      @include it('lg\:bottom-44') {
        @include assert {
          @include output {
            @include lg\:bottom-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: 11rem;
            }
          }
        }
      }

      @include it('lg\:left-44') {
        @include assert {
          @include output {
            @include lg\:left-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 11rem;
            }
          }
        }
      }

      @include it('lg\:inset-48') {
        @include assert {
          @include output {
            @include lg\:inset-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: 12rem;
            }
          }
        }
      }

      @include it('lg\:inset-x-48') {
        @include assert {
          @include output {
            @include lg\:inset-x-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 12rem;
              right: 12rem;
            }
          }
        }
      }

      @include it('lg\:inset-y-48') {
        @include assert {
          @include output {
            @include lg\:inset-y-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 12rem;
              bottom: 12rem;
            }
          }
        }
      }

      @include it('lg\:start-48') {
        @include assert {
          @include output {
            @include lg\:start-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: 12rem;
            }
          }
        }
      }

      @include it('lg\:end-48') {
        @include assert {
          @include output {
            @include lg\:end-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: 12rem;
            }
          }
        }
      }

      @include it('lg\:top-48') {
        @include assert {
          @include output {
            @include lg\:top-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 12rem;
            }
          }
        }
      }

      @include it('lg\:right-48') {
        @include assert {
          @include output {
            @include lg\:right-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: 12rem;
            }
          }
        }
      }

      @include it('lg\:bottom-48') {
        @include assert {
          @include output {
            @include lg\:bottom-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: 12rem;
            }
          }
        }
      }

      @include it('lg\:left-48') {
        @include assert {
          @include output {
            @include lg\:left-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 12rem;
            }
          }
        }
      }

      @include it('lg\:inset-52') {
        @include assert {
          @include output {
            @include lg\:inset-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: 13rem;
            }
          }
        }
      }

      @include it('lg\:inset-x-52') {
        @include assert {
          @include output {
            @include lg\:inset-x-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 13rem;
              right: 13rem;
            }
          }
        }
      }

      @include it('lg\:inset-y-52') {
        @include assert {
          @include output {
            @include lg\:inset-y-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 13rem;
              bottom: 13rem;
            }
          }
        }
      }

      @include it('lg\:start-52') {
        @include assert {
          @include output {
            @include lg\:start-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: 13rem;
            }
          }
        }
      }

      @include it('lg\:end-52') {
        @include assert {
          @include output {
            @include lg\:end-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: 13rem;
            }
          }
        }
      }

      @include it('lg\:top-52') {
        @include assert {
          @include output {
            @include lg\:top-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 13rem;
            }
          }
        }
      }

      @include it('lg\:right-52') {
        @include assert {
          @include output {
            @include lg\:right-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: 13rem;
            }
          }
        }
      }

      @include it('lg\:bottom-52') {
        @include assert {
          @include output {
            @include lg\:bottom-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: 13rem;
            }
          }
        }
      }

      @include it('lg\:left-52') {
        @include assert {
          @include output {
            @include lg\:left-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 13rem;
            }
          }
        }
      }

      @include it('lg\:inset-56') {
        @include assert {
          @include output {
            @include lg\:inset-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: 14rem;
            }
          }
        }
      }

      @include it('lg\:inset-x-56') {
        @include assert {
          @include output {
            @include lg\:inset-x-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 14rem;
              right: 14rem;
            }
          }
        }
      }

      @include it('lg\:inset-y-56') {
        @include assert {
          @include output {
            @include lg\:inset-y-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 14rem;
              bottom: 14rem;
            }
          }
        }
      }

      @include it('lg\:start-56') {
        @include assert {
          @include output {
            @include lg\:start-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: 14rem;
            }
          }
        }
      }

      @include it('lg\:end-56') {
        @include assert {
          @include output {
            @include lg\:end-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: 14rem;
            }
          }
        }
      }

      @include it('lg\:top-56') {
        @include assert {
          @include output {
            @include lg\:top-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 14rem;
            }
          }
        }
      }

      @include it('lg\:right-56') {
        @include assert {
          @include output {
            @include lg\:right-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: 14rem;
            }
          }
        }
      }

      @include it('lg\:bottom-56') {
        @include assert {
          @include output {
            @include lg\:bottom-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: 14rem;
            }
          }
        }
      }

      @include it('lg\:left-56') {
        @include assert {
          @include output {
            @include lg\:left-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 14rem;
            }
          }
        }
      }

      @include it('lg\:inset-60') {
        @include assert {
          @include output {
            @include lg\:inset-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: 15rem;
            }
          }
        }
      }

      @include it('lg\:inset-x-60') {
        @include assert {
          @include output {
            @include lg\:inset-x-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 15rem;
              right: 15rem;
            }
          }
        }
      }

      @include it('lg\:inset-y-60') {
        @include assert {
          @include output {
            @include lg\:inset-y-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 15rem;
              bottom: 15rem;
            }
          }
        }
      }

      @include it('lg\:start-60') {
        @include assert {
          @include output {
            @include lg\:start-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: 15rem;
            }
          }
        }
      }

      @include it('lg\:end-60') {
        @include assert {
          @include output {
            @include lg\:end-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: 15rem;
            }
          }
        }
      }

      @include it('lg\:top-60') {
        @include assert {
          @include output {
            @include lg\:top-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 15rem;
            }
          }
        }
      }

      @include it('lg\:right-60') {
        @include assert {
          @include output {
            @include lg\:right-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: 15rem;
            }
          }
        }
      }

      @include it('lg\:bottom-60') {
        @include assert {
          @include output {
            @include lg\:bottom-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: 15rem;
            }
          }
        }
      }

      @include it('lg\:left-60') {
        @include assert {
          @include output {
            @include lg\:left-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 15rem;
            }
          }
        }
      }

      @include it('lg\:inset-64') {
        @include assert {
          @include output {
            @include lg\:inset-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: 16rem;
            }
          }
        }
      }

      @include it('lg\:inset-x-64') {
        @include assert {
          @include output {
            @include lg\:inset-x-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 16rem;
              right: 16rem;
            }
          }
        }
      }

      @include it('lg\:inset-y-64') {
        @include assert {
          @include output {
            @include lg\:inset-y-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 16rem;
              bottom: 16rem;
            }
          }
        }
      }

      @include it('lg\:start-64') {
        @include assert {
          @include output {
            @include lg\:start-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: 16rem;
            }
          }
        }
      }

      @include it('lg\:end-64') {
        @include assert {
          @include output {
            @include lg\:end-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: 16rem;
            }
          }
        }
      }

      @include it('lg\:top-64') {
        @include assert {
          @include output {
            @include lg\:top-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 16rem;
            }
          }
        }
      }

      @include it('lg\:right-64') {
        @include assert {
          @include output {
            @include lg\:right-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: 16rem;
            }
          }
        }
      }

      @include it('lg\:bottom-64') {
        @include assert {
          @include output {
            @include lg\:bottom-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: 16rem;
            }
          }
        }
      }

      @include it('lg\:left-64') {
        @include assert {
          @include output {
            @include lg\:left-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 16rem;
            }
          }
        }
      }

      @include it('lg\:inset-72') {
        @include assert {
          @include output {
            @include lg\:inset-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: 18rem;
            }
          }
        }
      }

      @include it('lg\:inset-x-72') {
        @include assert {
          @include output {
            @include lg\:inset-x-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 18rem;
              right: 18rem;
            }
          }
        }
      }

      @include it('lg\:inset-y-72') {
        @include assert {
          @include output {
            @include lg\:inset-y-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 18rem;
              bottom: 18rem;
            }
          }
        }
      }

      @include it('lg\:start-72') {
        @include assert {
          @include output {
            @include lg\:start-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: 18rem;
            }
          }
        }
      }

      @include it('lg\:end-72') {
        @include assert {
          @include output {
            @include lg\:end-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: 18rem;
            }
          }
        }
      }

      @include it('lg\:top-72') {
        @include assert {
          @include output {
            @include lg\:top-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 18rem;
            }
          }
        }
      }

      @include it('lg\:right-72') {
        @include assert {
          @include output {
            @include lg\:right-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: 18rem;
            }
          }
        }
      }

      @include it('lg\:bottom-72') {
        @include assert {
          @include output {
            @include lg\:bottom-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: 18rem;
            }
          }
        }
      }

      @include it('lg\:left-72') {
        @include assert {
          @include output {
            @include lg\:left-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 18rem;
            }
          }
        }
      }

      @include it('lg\:inset-80') {
        @include assert {
          @include output {
            @include lg\:inset-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: 20rem;
            }
          }
        }
      }

      @include it('lg\:inset-x-80') {
        @include assert {
          @include output {
            @include lg\:inset-x-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 20rem;
              right: 20rem;
            }
          }
        }
      }

      @include it('lg\:inset-y-80') {
        @include assert {
          @include output {
            @include lg\:inset-y-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 20rem;
              bottom: 20rem;
            }
          }
        }
      }

      @include it('lg\:start-80') {
        @include assert {
          @include output {
            @include lg\:start-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: 20rem;
            }
          }
        }
      }

      @include it('lg\:end-80') {
        @include assert {
          @include output {
            @include lg\:end-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: 20rem;
            }
          }
        }
      }

      @include it('lg\:top-80') {
        @include assert {
          @include output {
            @include lg\:top-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 20rem;
            }
          }
        }
      }

      @include it('lg\:right-80') {
        @include assert {
          @include output {
            @include lg\:right-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: 20rem;
            }
          }
        }
      }

      @include it('lg\:bottom-80') {
        @include assert {
          @include output {
            @include lg\:bottom-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: 20rem;
            }
          }
        }
      }

      @include it('lg\:left-80') {
        @include assert {
          @include output {
            @include lg\:left-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 20rem;
            }
          }
        }
      }

      @include it('lg\:inset-96') {
        @include assert {
          @include output {
            @include lg\:inset-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: 24rem;
            }
          }
        }
      }

      @include it('lg\:inset-x-96') {
        @include assert {
          @include output {
            @include lg\:inset-x-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 24rem;
              right: 24rem;
            }
          }
        }
      }

      @include it('lg\:inset-y-96') {
        @include assert {
          @include output {
            @include lg\:inset-y-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 24rem;
              bottom: 24rem;
            }
          }
        }
      }

      @include it('lg\:start-96') {
        @include assert {
          @include output {
            @include lg\:start-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: 24rem;
            }
          }
        }
      }

      @include it('lg\:end-96') {
        @include assert {
          @include output {
            @include lg\:end-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: 24rem;
            }
          }
        }
      }

      @include it('lg\:top-96') {
        @include assert {
          @include output {
            @include lg\:top-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 24rem;
            }
          }
        }
      }

      @include it('lg\:right-96') {
        @include assert {
          @include output {
            @include lg\:right-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: 24rem;
            }
          }
        }
      }

      @include it('lg\:bottom-96') {
        @include assert {
          @include output {
            @include lg\:bottom-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: 24rem;
            }
          }
        }
      }

      @include it('lg\:left-96') {
        @include assert {
          @include output {
            @include lg\:left-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 24rem;
            }
          }
        }
      }

      @include it('lg\:inset-auto') {
        @include assert {
          @include output {
            @include lg\:inset-auto;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: auto;
            }
          }
        }
      }

      @include it('lg\:inset-1\/2') {
        @include assert {
          @include output {
            @include lg\:inset-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: 50%;
            }
          }
        }
      }

      @include it('lg\:inset-1\/3') {
        @include assert {
          @include output {
            @include lg\:inset-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: 33.333333%;
            }
          }
        }
      }

      @include it('lg\:inset-2\/3') {
        @include assert {
          @include output {
            @include lg\:inset-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: 66.666667%;
            }
          }
        }
      }

      @include it('lg\:inset-1\/4') {
        @include assert {
          @include output {
            @include lg\:inset-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: 25%;
            }
          }
        }
      }

      @include it('lg\:inset-2\/4') {
        @include assert {
          @include output {
            @include lg\:inset-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: 50%;
            }
          }
        }
      }

      @include it('lg\:inset-3\/4') {
        @include assert {
          @include output {
            @include lg\:inset-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: 75%;
            }
          }
        }
      }

      @include it('lg\:inset-full') {
        @include assert {
          @include output {
            @include lg\:inset-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: 100%;
            }
          }
        }
      }

      @include it('lg\:inset-x-auto') {
        @include assert {
          @include output {
            @include lg\:inset-x-auto;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: auto;
              right: auto;
            }
          }
        }
      }

      @include it('lg\:inset-x-1\/2') {
        @include assert {
          @include output {
            @include lg\:inset-x-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 50%;
              right: 50%;
            }
          }
        }
      }

      @include it('lg\:inset-x-1\/3') {
        @include assert {
          @include output {
            @include lg\:inset-x-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 33.333333%;
              right: 33.333333%;
            }
          }
        }
      }

      @include it('lg\:inset-x-2\/3') {
        @include assert {
          @include output {
            @include lg\:inset-x-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 66.666667%;
              right: 66.666667%;
            }
          }
        }
      }

      @include it('lg\:inset-x-1\/4') {
        @include assert {
          @include output {
            @include lg\:inset-x-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 25%;
              right: 25%;
            }
          }
        }
      }

      @include it('lg\:inset-x-2\/4') {
        @include assert {
          @include output {
            @include lg\:inset-x-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 50%;
              right: 50%;
            }
          }
        }
      }

      @include it('lg\:inset-x-3\/4') {
        @include assert {
          @include output {
            @include lg\:inset-x-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 75%;
              right: 75%;
            }
          }
        }
      }

      @include it('lg\:inset-x-full') {
        @include assert {
          @include output {
            @include lg\:inset-x-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 100%;
              right: 100%;
            }
          }
        }
      }

      @include it('lg\:inset-y-auto') {
        @include assert {
          @include output {
            @include lg\:inset-y-auto;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: auto;
              bottom: auto;
            }
          }
        }
      }

      @include it('lg\:inset-y-1\/2') {
        @include assert {
          @include output {
            @include lg\:inset-y-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 50%;
              bottom: 50%;
            }
          }
        }
      }

      @include it('lg\:inset-y-1\/3') {
        @include assert {
          @include output {
            @include lg\:inset-y-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 33.333333%;
              bottom: 33.333333%;
            }
          }
        }
      }

      @include it('lg\:inset-y-2\/3') {
        @include assert {
          @include output {
            @include lg\:inset-y-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 66.666667%;
              bottom: 66.666667%;
            }
          }
        }
      }

      @include it('lg\:inset-y-1\/4') {
        @include assert {
          @include output {
            @include lg\:inset-y-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 25%;
              bottom: 25%;
            }
          }
        }
      }

      @include it('lg\:inset-y-2\/4') {
        @include assert {
          @include output {
            @include lg\:inset-y-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 50%;
              bottom: 50%;
            }
          }
        }
      }

      @include it('lg\:inset-y-3\/4') {
        @include assert {
          @include output {
            @include lg\:inset-y-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 75%;
              bottom: 75%;
            }
          }
        }
      }

      @include it('lg\:inset-y-full') {
        @include assert {
          @include output {
            @include lg\:inset-y-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 100%;
              bottom: 100%;
            }
          }
        }
      }

      @include it('lg\:start-auto') {
        @include assert {
          @include output {
            @include lg\:start-auto;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: auto;
            }
          }
        }
      }

      @include it('lg\:start-1\/2') {
        @include assert {
          @include output {
            @include lg\:start-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: 50%;
            }
          }
        }
      }

      @include it('lg\:start-1\/3') {
        @include assert {
          @include output {
            @include lg\:start-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: 33.333333%;
            }
          }
        }
      }

      @include it('lg\:start-2\/3') {
        @include assert {
          @include output {
            @include lg\:start-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: 66.666667%;
            }
          }
        }
      }

      @include it('lg\:start-1\/4') {
        @include assert {
          @include output {
            @include lg\:start-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: 25%;
            }
          }
        }
      }

      @include it('lg\:start-2\/4') {
        @include assert {
          @include output {
            @include lg\:start-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: 50%;
            }
          }
        }
      }

      @include it('lg\:start-3\/4') {
        @include assert {
          @include output {
            @include lg\:start-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: 75%;
            }
          }
        }
      }

      @include it('lg\:start-full') {
        @include assert {
          @include output {
            @include lg\:start-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: 100%;
            }
          }
        }
      }

      @include it('lg\:end-auto') {
        @include assert {
          @include output {
            @include lg\:end-auto;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: auto;
            }
          }
        }
      }

      @include it('lg\:end-1\/2') {
        @include assert {
          @include output {
            @include lg\:end-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: 50%;
            }
          }
        }
      }

      @include it('lg\:end-1\/3') {
        @include assert {
          @include output {
            @include lg\:end-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: 33.333333%;
            }
          }
        }
      }

      @include it('lg\:end-2\/3') {
        @include assert {
          @include output {
            @include lg\:end-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: 66.666667%;
            }
          }
        }
      }

      @include it('lg\:end-1\/4') {
        @include assert {
          @include output {
            @include lg\:end-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: 25%;
            }
          }
        }
      }

      @include it('lg\:end-2\/4') {
        @include assert {
          @include output {
            @include lg\:end-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: 50%;
            }
          }
        }
      }

      @include it('lg\:end-3\/4') {
        @include assert {
          @include output {
            @include lg\:end-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: 75%;
            }
          }
        }
      }

      @include it('lg\:end-full') {
        @include assert {
          @include output {
            @include lg\:end-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: 100%;
            }
          }
        }
      }

      @include it('lg\:top-auto') {
        @include assert {
          @include output {
            @include lg\:top-auto;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: auto;
            }
          }
        }
      }

      @include it('lg\:top-1\/2') {
        @include assert {
          @include output {
            @include lg\:top-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 50%;
            }
          }
        }
      }

      @include it('lg\:top-1\/3') {
        @include assert {
          @include output {
            @include lg\:top-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 33.333333%;
            }
          }
        }
      }

      @include it('lg\:top-2\/3') {
        @include assert {
          @include output {
            @include lg\:top-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 66.666667%;
            }
          }
        }
      }

      @include it('lg\:top-1\/4') {
        @include assert {
          @include output {
            @include lg\:top-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 25%;
            }
          }
        }
      }

      @include it('lg\:top-2\/4') {
        @include assert {
          @include output {
            @include lg\:top-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 50%;
            }
          }
        }
      }

      @include it('lg\:top-3\/4') {
        @include assert {
          @include output {
            @include lg\:top-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 75%;
            }
          }
        }
      }

      @include it('lg\:top-full') {
        @include assert {
          @include output {
            @include lg\:top-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 100%;
            }
          }
        }
      }

      @include it('lg\:right-auto') {
        @include assert {
          @include output {
            @include lg\:right-auto;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: auto;
            }
          }
        }
      }

      @include it('lg\:right-1\/2') {
        @include assert {
          @include output {
            @include lg\:right-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: 50%;
            }
          }
        }
      }

      @include it('lg\:right-1\/3') {
        @include assert {
          @include output {
            @include lg\:right-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: 33.333333%;
            }
          }
        }
      }

      @include it('lg\:right-2\/3') {
        @include assert {
          @include output {
            @include lg\:right-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: 66.666667%;
            }
          }
        }
      }

      @include it('lg\:right-1\/4') {
        @include assert {
          @include output {
            @include lg\:right-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: 25%;
            }
          }
        }
      }

      @include it('lg\:right-2\/4') {
        @include assert {
          @include output {
            @include lg\:right-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: 50%;
            }
          }
        }
      }

      @include it('lg\:right-3\/4') {
        @include assert {
          @include output {
            @include lg\:right-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: 75%;
            }
          }
        }
      }

      @include it('lg\:right-full') {
        @include assert {
          @include output {
            @include lg\:right-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: 100%;
            }
          }
        }
      }

      @include it('lg\:bottom-auto') {
        @include assert {
          @include output {
            @include lg\:bottom-auto;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: auto;
            }
          }
        }
      }

      @include it('lg\:bottom-1\/2') {
        @include assert {
          @include output {
            @include lg\:bottom-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: 50%;
            }
          }
        }
      }

      @include it('lg\:bottom-1\/3') {
        @include assert {
          @include output {
            @include lg\:bottom-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: 33.333333%;
            }
          }
        }
      }

      @include it('lg\:bottom-2\/3') {
        @include assert {
          @include output {
            @include lg\:bottom-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: 66.666667%;
            }
          }
        }
      }

      @include it('lg\:bottom-1\/4') {
        @include assert {
          @include output {
            @include lg\:bottom-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: 25%;
            }
          }
        }
      }

      @include it('lg\:bottom-2\/4') {
        @include assert {
          @include output {
            @include lg\:bottom-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: 50%;
            }
          }
        }
      }

      @include it('lg\:bottom-3\/4') {
        @include assert {
          @include output {
            @include lg\:bottom-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: 75%;
            }
          }
        }
      }

      @include it('lg\:bottom-full') {
        @include assert {
          @include output {
            @include lg\:bottom-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: 100%;
            }
          }
        }
      }

      @include it('lg\:left-auto') {
        @include assert {
          @include output {
            @include lg\:left-auto;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: auto;
            }
          }
        }
      }

      @include it('lg\:left-1\/2') {
        @include assert {
          @include output {
            @include lg\:left-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 50%;
            }
          }
        }
      }

      @include it('lg\:left-1\/3') {
        @include assert {
          @include output {
            @include lg\:left-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 33.333333%;
            }
          }
        }
      }

      @include it('lg\:left-2\/3') {
        @include assert {
          @include output {
            @include lg\:left-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 66.666667%;
            }
          }
        }
      }

      @include it('lg\:left-1\/4') {
        @include assert {
          @include output {
            @include lg\:left-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 25%;
            }
          }
        }
      }

      @include it('lg\:left-2\/4') {
        @include assert {
          @include output {
            @include lg\:left-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 50%;
            }
          }
        }
      }

      @include it('lg\:left-3\/4') {
        @include assert {
          @include output {
            @include lg\:left-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 75%;
            }
          }
        }
      }

      @include it('lg\:left-full') {
        @include assert {
          @include output {
            @include lg\:left-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 100%;
            }
          }
        }
      }

      @include it('lg\:-inset-0') {
        @include assert {
          @include output {
            @include lg\:-inset-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: 0px;
            }
          }
        }
      }

      @include it('lg\:-inset-x-0') {
        @include assert {
          @include output {
            @include lg\:-inset-x-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 0px;
              right: 0px;
            }
          }
        }
      }

      @include it('lg\:-inset-y-0') {
        @include assert {
          @include output {
            @include lg\:-inset-y-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 0px;
              bottom: 0px;
            }
          }
        }
      }

      @include it('lg\:-start-0') {
        @include assert {
          @include output {
            @include lg\:-start-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: 0px;
            }
          }
        }
      }

      @include it('lg\:-end-0') {
        @include assert {
          @include output {
            @include lg\:-end-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: 0px;
            }
          }
        }
      }

      @include it('lg\:-top-0') {
        @include assert {
          @include output {
            @include lg\:-top-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 0px;
            }
          }
        }
      }

      @include it('lg\:-right-0') {
        @include assert {
          @include output {
            @include lg\:-right-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: 0px;
            }
          }
        }
      }

      @include it('lg\:-bottom-0') {
        @include assert {
          @include output {
            @include lg\:-bottom-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: 0px;
            }
          }
        }
      }

      @include it('lg\:-left-0') {
        @include assert {
          @include output {
            @include lg\:-left-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 0px;
            }
          }
        }
      }

      @include it('lg\:-inset-px') {
        @include assert {
          @include output {
            @include lg\:-inset-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: -1px;
            }
          }
        }
      }

      @include it('lg\:-inset-x-px') {
        @include assert {
          @include output {
            @include lg\:-inset-x-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -1px;
              right: -1px;
            }
          }
        }
      }

      @include it('lg\:-inset-y-px') {
        @include assert {
          @include output {
            @include lg\:-inset-y-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -1px;
              bottom: -1px;
            }
          }
        }
      }

      @include it('lg\:-start-px') {
        @include assert {
          @include output {
            @include lg\:-start-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: -1px;
            }
          }
        }
      }

      @include it('lg\:-end-px') {
        @include assert {
          @include output {
            @include lg\:-end-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: -1px;
            }
          }
        }
      }

      @include it('lg\:-top-px') {
        @include assert {
          @include output {
            @include lg\:-top-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -1px;
            }
          }
        }
      }

      @include it('lg\:-right-px') {
        @include assert {
          @include output {
            @include lg\:-right-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: -1px;
            }
          }
        }
      }

      @include it('lg\:-bottom-px') {
        @include assert {
          @include output {
            @include lg\:-bottom-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: -1px;
            }
          }
        }
      }

      @include it('lg\:-left-px') {
        @include assert {
          @include output {
            @include lg\:-left-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -1px;
            }
          }
        }
      }

      @include it('lg\:-inset-0\.5') {
        @include assert {
          @include output {
            @include lg\:-inset-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: -0.125rem;
            }
          }
        }
      }

      @include it('lg\:-inset-x-0\.5') {
        @include assert {
          @include output {
            @include lg\:-inset-x-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -0.125rem;
              right: -0.125rem;
            }
          }
        }
      }

      @include it('lg\:-inset-y-0\.5') {
        @include assert {
          @include output {
            @include lg\:-inset-y-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -0.125rem;
              bottom: -0.125rem;
            }
          }
        }
      }

      @include it('lg\:-start-0\.5') {
        @include assert {
          @include output {
            @include lg\:-start-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: -0.125rem;
            }
          }
        }
      }

      @include it('lg\:-end-0\.5') {
        @include assert {
          @include output {
            @include lg\:-end-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: -0.125rem;
            }
          }
        }
      }

      @include it('lg\:-top-0\.5') {
        @include assert {
          @include output {
            @include lg\:-top-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -0.125rem;
            }
          }
        }
      }

      @include it('lg\:-right-0\.5') {
        @include assert {
          @include output {
            @include lg\:-right-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: -0.125rem;
            }
          }
        }
      }

      @include it('lg\:-bottom-0\.5') {
        @include assert {
          @include output {
            @include lg\:-bottom-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: -0.125rem;
            }
          }
        }
      }

      @include it('lg\:-left-0\.5') {
        @include assert {
          @include output {
            @include lg\:-left-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -0.125rem;
            }
          }
        }
      }

      @include it('lg\:-inset-1') {
        @include assert {
          @include output {
            @include lg\:-inset-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: -0.25rem;
            }
          }
        }
      }

      @include it('lg\:-inset-x-1') {
        @include assert {
          @include output {
            @include lg\:-inset-x-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -0.25rem;
              right: -0.25rem;
            }
          }
        }
      }

      @include it('lg\:-inset-y-1') {
        @include assert {
          @include output {
            @include lg\:-inset-y-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -0.25rem;
              bottom: -0.25rem;
            }
          }
        }
      }

      @include it('lg\:-start-1') {
        @include assert {
          @include output {
            @include lg\:-start-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: -0.25rem;
            }
          }
        }
      }

      @include it('lg\:-end-1') {
        @include assert {
          @include output {
            @include lg\:-end-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: -0.25rem;
            }
          }
        }
      }

      @include it('lg\:-top-1') {
        @include assert {
          @include output {
            @include lg\:-top-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -0.25rem;
            }
          }
        }
      }

      @include it('lg\:-right-1') {
        @include assert {
          @include output {
            @include lg\:-right-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: -0.25rem;
            }
          }
        }
      }

      @include it('lg\:-bottom-1') {
        @include assert {
          @include output {
            @include lg\:-bottom-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: -0.25rem;
            }
          }
        }
      }

      @include it('lg\:-left-1') {
        @include assert {
          @include output {
            @include lg\:-left-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -0.25rem;
            }
          }
        }
      }

      @include it('lg\:-inset-1\.5') {
        @include assert {
          @include output {
            @include lg\:-inset-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: -0.375rem;
            }
          }
        }
      }

      @include it('lg\:-inset-x-1\.5') {
        @include assert {
          @include output {
            @include lg\:-inset-x-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -0.375rem;
              right: -0.375rem;
            }
          }
        }
      }

      @include it('lg\:-inset-y-1\.5') {
        @include assert {
          @include output {
            @include lg\:-inset-y-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -0.375rem;
              bottom: -0.375rem;
            }
          }
        }
      }

      @include it('lg\:-start-1\.5') {
        @include assert {
          @include output {
            @include lg\:-start-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: -0.375rem;
            }
          }
        }
      }

      @include it('lg\:-end-1\.5') {
        @include assert {
          @include output {
            @include lg\:-end-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: -0.375rem;
            }
          }
        }
      }

      @include it('lg\:-top-1\.5') {
        @include assert {
          @include output {
            @include lg\:-top-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -0.375rem;
            }
          }
        }
      }

      @include it('lg\:-right-1\.5') {
        @include assert {
          @include output {
            @include lg\:-right-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: -0.375rem;
            }
          }
        }
      }

      @include it('lg\:-bottom-1\.5') {
        @include assert {
          @include output {
            @include lg\:-bottom-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: -0.375rem;
            }
          }
        }
      }

      @include it('lg\:-left-1\.5') {
        @include assert {
          @include output {
            @include lg\:-left-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -0.375rem;
            }
          }
        }
      }

      @include it('lg\:-inset-2') {
        @include assert {
          @include output {
            @include lg\:-inset-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: -0.5rem;
            }
          }
        }
      }

      @include it('lg\:-inset-x-2') {
        @include assert {
          @include output {
            @include lg\:-inset-x-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -0.5rem;
              right: -0.5rem;
            }
          }
        }
      }

      @include it('lg\:-inset-y-2') {
        @include assert {
          @include output {
            @include lg\:-inset-y-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -0.5rem;
              bottom: -0.5rem;
            }
          }
        }
      }

      @include it('lg\:-start-2') {
        @include assert {
          @include output {
            @include lg\:-start-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: -0.5rem;
            }
          }
        }
      }

      @include it('lg\:-end-2') {
        @include assert {
          @include output {
            @include lg\:-end-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: -0.5rem;
            }
          }
        }
      }

      @include it('lg\:-top-2') {
        @include assert {
          @include output {
            @include lg\:-top-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -0.5rem;
            }
          }
        }
      }

      @include it('lg\:-right-2') {
        @include assert {
          @include output {
            @include lg\:-right-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: -0.5rem;
            }
          }
        }
      }

      @include it('lg\:-bottom-2') {
        @include assert {
          @include output {
            @include lg\:-bottom-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: -0.5rem;
            }
          }
        }
      }

      @include it('lg\:-left-2') {
        @include assert {
          @include output {
            @include lg\:-left-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -0.5rem;
            }
          }
        }
      }

      @include it('lg\:-inset-2\.5') {
        @include assert {
          @include output {
            @include lg\:-inset-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: -0.625rem;
            }
          }
        }
      }

      @include it('lg\:-inset-x-2\.5') {
        @include assert {
          @include output {
            @include lg\:-inset-x-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -0.625rem;
              right: -0.625rem;
            }
          }
        }
      }

      @include it('lg\:-inset-y-2\.5') {
        @include assert {
          @include output {
            @include lg\:-inset-y-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -0.625rem;
              bottom: -0.625rem;
            }
          }
        }
      }

      @include it('lg\:-start-2\.5') {
        @include assert {
          @include output {
            @include lg\:-start-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: -0.625rem;
            }
          }
        }
      }

      @include it('lg\:-end-2\.5') {
        @include assert {
          @include output {
            @include lg\:-end-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: -0.625rem;
            }
          }
        }
      }

      @include it('lg\:-top-2\.5') {
        @include assert {
          @include output {
            @include lg\:-top-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -0.625rem;
            }
          }
        }
      }

      @include it('lg\:-right-2\.5') {
        @include assert {
          @include output {
            @include lg\:-right-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: -0.625rem;
            }
          }
        }
      }

      @include it('lg\:-bottom-2\.5') {
        @include assert {
          @include output {
            @include lg\:-bottom-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: -0.625rem;
            }
          }
        }
      }

      @include it('lg\:-left-2\.5') {
        @include assert {
          @include output {
            @include lg\:-left-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -0.625rem;
            }
          }
        }
      }

      @include it('lg\:-inset-3') {
        @include assert {
          @include output {
            @include lg\:-inset-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: -0.75rem;
            }
          }
        }
      }

      @include it('lg\:-inset-x-3') {
        @include assert {
          @include output {
            @include lg\:-inset-x-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -0.75rem;
              right: -0.75rem;
            }
          }
        }
      }

      @include it('lg\:-inset-y-3') {
        @include assert {
          @include output {
            @include lg\:-inset-y-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -0.75rem;
              bottom: -0.75rem;
            }
          }
        }
      }

      @include it('lg\:-start-3') {
        @include assert {
          @include output {
            @include lg\:-start-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: -0.75rem;
            }
          }
        }
      }

      @include it('lg\:-end-3') {
        @include assert {
          @include output {
            @include lg\:-end-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: -0.75rem;
            }
          }
        }
      }

      @include it('lg\:-top-3') {
        @include assert {
          @include output {
            @include lg\:-top-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -0.75rem;
            }
          }
        }
      }

      @include it('lg\:-right-3') {
        @include assert {
          @include output {
            @include lg\:-right-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: -0.75rem;
            }
          }
        }
      }

      @include it('lg\:-bottom-3') {
        @include assert {
          @include output {
            @include lg\:-bottom-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: -0.75rem;
            }
          }
        }
      }

      @include it('lg\:-left-3') {
        @include assert {
          @include output {
            @include lg\:-left-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -0.75rem;
            }
          }
        }
      }

      @include it('lg\:-inset-3\.5') {
        @include assert {
          @include output {
            @include lg\:-inset-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: -0.875rem;
            }
          }
        }
      }

      @include it('lg\:-inset-x-3\.5') {
        @include assert {
          @include output {
            @include lg\:-inset-x-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -0.875rem;
              right: -0.875rem;
            }
          }
        }
      }

      @include it('lg\:-inset-y-3\.5') {
        @include assert {
          @include output {
            @include lg\:-inset-y-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -0.875rem;
              bottom: -0.875rem;
            }
          }
        }
      }

      @include it('lg\:-start-3\.5') {
        @include assert {
          @include output {
            @include lg\:-start-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: -0.875rem;
            }
          }
        }
      }

      @include it('lg\:-end-3\.5') {
        @include assert {
          @include output {
            @include lg\:-end-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: -0.875rem;
            }
          }
        }
      }

      @include it('lg\:-top-3\.5') {
        @include assert {
          @include output {
            @include lg\:-top-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -0.875rem;
            }
          }
        }
      }

      @include it('lg\:-right-3\.5') {
        @include assert {
          @include output {
            @include lg\:-right-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: -0.875rem;
            }
          }
        }
      }

      @include it('lg\:-bottom-3\.5') {
        @include assert {
          @include output {
            @include lg\:-bottom-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: -0.875rem;
            }
          }
        }
      }

      @include it('lg\:-left-3\.5') {
        @include assert {
          @include output {
            @include lg\:-left-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -0.875rem;
            }
          }
        }
      }

      @include it('lg\:-inset-4') {
        @include assert {
          @include output {
            @include lg\:-inset-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: -1rem;
            }
          }
        }
      }

      @include it('lg\:-inset-x-4') {
        @include assert {
          @include output {
            @include lg\:-inset-x-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -1rem;
              right: -1rem;
            }
          }
        }
      }

      @include it('lg\:-inset-y-4') {
        @include assert {
          @include output {
            @include lg\:-inset-y-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -1rem;
              bottom: -1rem;
            }
          }
        }
      }

      @include it('lg\:-start-4') {
        @include assert {
          @include output {
            @include lg\:-start-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: -1rem;
            }
          }
        }
      }

      @include it('lg\:-end-4') {
        @include assert {
          @include output {
            @include lg\:-end-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: -1rem;
            }
          }
        }
      }

      @include it('lg\:-top-4') {
        @include assert {
          @include output {
            @include lg\:-top-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -1rem;
            }
          }
        }
      }

      @include it('lg\:-right-4') {
        @include assert {
          @include output {
            @include lg\:-right-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: -1rem;
            }
          }
        }
      }

      @include it('lg\:-bottom-4') {
        @include assert {
          @include output {
            @include lg\:-bottom-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: -1rem;
            }
          }
        }
      }

      @include it('lg\:-left-4') {
        @include assert {
          @include output {
            @include lg\:-left-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -1rem;
            }
          }
        }
      }

      @include it('lg\:-inset-5') {
        @include assert {
          @include output {
            @include lg\:-inset-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: -1.25rem;
            }
          }
        }
      }

      @include it('lg\:-inset-x-5') {
        @include assert {
          @include output {
            @include lg\:-inset-x-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -1.25rem;
              right: -1.25rem;
            }
          }
        }
      }

      @include it('lg\:-inset-y-5') {
        @include assert {
          @include output {
            @include lg\:-inset-y-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -1.25rem;
              bottom: -1.25rem;
            }
          }
        }
      }

      @include it('lg\:-start-5') {
        @include assert {
          @include output {
            @include lg\:-start-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: -1.25rem;
            }
          }
        }
      }

      @include it('lg\:-end-5') {
        @include assert {
          @include output {
            @include lg\:-end-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: -1.25rem;
            }
          }
        }
      }

      @include it('lg\:-top-5') {
        @include assert {
          @include output {
            @include lg\:-top-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -1.25rem;
            }
          }
        }
      }

      @include it('lg\:-right-5') {
        @include assert {
          @include output {
            @include lg\:-right-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: -1.25rem;
            }
          }
        }
      }

      @include it('lg\:-bottom-5') {
        @include assert {
          @include output {
            @include lg\:-bottom-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: -1.25rem;
            }
          }
        }
      }

      @include it('lg\:-left-5') {
        @include assert {
          @include output {
            @include lg\:-left-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -1.25rem;
            }
          }
        }
      }

      @include it('lg\:-inset-6') {
        @include assert {
          @include output {
            @include lg\:-inset-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: -1.5rem;
            }
          }
        }
      }

      @include it('lg\:-inset-x-6') {
        @include assert {
          @include output {
            @include lg\:-inset-x-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -1.5rem;
              right: -1.5rem;
            }
          }
        }
      }

      @include it('lg\:-inset-y-6') {
        @include assert {
          @include output {
            @include lg\:-inset-y-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -1.5rem;
              bottom: -1.5rem;
            }
          }
        }
      }

      @include it('lg\:-start-6') {
        @include assert {
          @include output {
            @include lg\:-start-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: -1.5rem;
            }
          }
        }
      }

      @include it('lg\:-end-6') {
        @include assert {
          @include output {
            @include lg\:-end-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: -1.5rem;
            }
          }
        }
      }

      @include it('lg\:-top-6') {
        @include assert {
          @include output {
            @include lg\:-top-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -1.5rem;
            }
          }
        }
      }

      @include it('lg\:-right-6') {
        @include assert {
          @include output {
            @include lg\:-right-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: -1.5rem;
            }
          }
        }
      }

      @include it('lg\:-bottom-6') {
        @include assert {
          @include output {
            @include lg\:-bottom-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: -1.5rem;
            }
          }
        }
      }

      @include it('lg\:-left-6') {
        @include assert {
          @include output {
            @include lg\:-left-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -1.5rem;
            }
          }
        }
      }

      @include it('lg\:-inset-7') {
        @include assert {
          @include output {
            @include lg\:-inset-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: -1.75rem;
            }
          }
        }
      }

      @include it('lg\:-inset-x-7') {
        @include assert {
          @include output {
            @include lg\:-inset-x-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -1.75rem;
              right: -1.75rem;
            }
          }
        }
      }

      @include it('lg\:-inset-y-7') {
        @include assert {
          @include output {
            @include lg\:-inset-y-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -1.75rem;
              bottom: -1.75rem;
            }
          }
        }
      }

      @include it('lg\:-start-7') {
        @include assert {
          @include output {
            @include lg\:-start-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: -1.75rem;
            }
          }
        }
      }

      @include it('lg\:-end-7') {
        @include assert {
          @include output {
            @include lg\:-end-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: -1.75rem;
            }
          }
        }
      }

      @include it('lg\:-top-7') {
        @include assert {
          @include output {
            @include lg\:-top-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -1.75rem;
            }
          }
        }
      }

      @include it('lg\:-right-7') {
        @include assert {
          @include output {
            @include lg\:-right-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: -1.75rem;
            }
          }
        }
      }

      @include it('lg\:-bottom-7') {
        @include assert {
          @include output {
            @include lg\:-bottom-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: -1.75rem;
            }
          }
        }
      }

      @include it('lg\:-left-7') {
        @include assert {
          @include output {
            @include lg\:-left-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -1.75rem;
            }
          }
        }
      }

      @include it('lg\:-inset-8') {
        @include assert {
          @include output {
            @include lg\:-inset-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: -2rem;
            }
          }
        }
      }

      @include it('lg\:-inset-x-8') {
        @include assert {
          @include output {
            @include lg\:-inset-x-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -2rem;
              right: -2rem;
            }
          }
        }
      }

      @include it('lg\:-inset-y-8') {
        @include assert {
          @include output {
            @include lg\:-inset-y-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -2rem;
              bottom: -2rem;
            }
          }
        }
      }

      @include it('lg\:-start-8') {
        @include assert {
          @include output {
            @include lg\:-start-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: -2rem;
            }
          }
        }
      }

      @include it('lg\:-end-8') {
        @include assert {
          @include output {
            @include lg\:-end-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: -2rem;
            }
          }
        }
      }

      @include it('lg\:-top-8') {
        @include assert {
          @include output {
            @include lg\:-top-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -2rem;
            }
          }
        }
      }

      @include it('lg\:-right-8') {
        @include assert {
          @include output {
            @include lg\:-right-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: -2rem;
            }
          }
        }
      }

      @include it('lg\:-bottom-8') {
        @include assert {
          @include output {
            @include lg\:-bottom-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: -2rem;
            }
          }
        }
      }

      @include it('lg\:-left-8') {
        @include assert {
          @include output {
            @include lg\:-left-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -2rem;
            }
          }
        }
      }

      @include it('lg\:-inset-9') {
        @include assert {
          @include output {
            @include lg\:-inset-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: -2.25rem;
            }
          }
        }
      }

      @include it('lg\:-inset-x-9') {
        @include assert {
          @include output {
            @include lg\:-inset-x-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -2.25rem;
              right: -2.25rem;
            }
          }
        }
      }

      @include it('lg\:-inset-y-9') {
        @include assert {
          @include output {
            @include lg\:-inset-y-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -2.25rem;
              bottom: -2.25rem;
            }
          }
        }
      }

      @include it('lg\:-start-9') {
        @include assert {
          @include output {
            @include lg\:-start-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: -2.25rem;
            }
          }
        }
      }

      @include it('lg\:-end-9') {
        @include assert {
          @include output {
            @include lg\:-end-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: -2.25rem;
            }
          }
        }
      }

      @include it('lg\:-top-9') {
        @include assert {
          @include output {
            @include lg\:-top-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -2.25rem;
            }
          }
        }
      }

      @include it('lg\:-right-9') {
        @include assert {
          @include output {
            @include lg\:-right-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: -2.25rem;
            }
          }
        }
      }

      @include it('lg\:-bottom-9') {
        @include assert {
          @include output {
            @include lg\:-bottom-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: -2.25rem;
            }
          }
        }
      }

      @include it('lg\:-left-9') {
        @include assert {
          @include output {
            @include lg\:-left-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -2.25rem;
            }
          }
        }
      }

      @include it('lg\:-inset-10') {
        @include assert {
          @include output {
            @include lg\:-inset-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: -2.5rem;
            }
          }
        }
      }

      @include it('lg\:-inset-x-10') {
        @include assert {
          @include output {
            @include lg\:-inset-x-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -2.5rem;
              right: -2.5rem;
            }
          }
        }
      }

      @include it('lg\:-inset-y-10') {
        @include assert {
          @include output {
            @include lg\:-inset-y-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -2.5rem;
              bottom: -2.5rem;
            }
          }
        }
      }

      @include it('lg\:-start-10') {
        @include assert {
          @include output {
            @include lg\:-start-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: -2.5rem;
            }
          }
        }
      }

      @include it('lg\:-end-10') {
        @include assert {
          @include output {
            @include lg\:-end-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: -2.5rem;
            }
          }
        }
      }

      @include it('lg\:-top-10') {
        @include assert {
          @include output {
            @include lg\:-top-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -2.5rem;
            }
          }
        }
      }

      @include it('lg\:-right-10') {
        @include assert {
          @include output {
            @include lg\:-right-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: -2.5rem;
            }
          }
        }
      }

      @include it('lg\:-bottom-10') {
        @include assert {
          @include output {
            @include lg\:-bottom-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: -2.5rem;
            }
          }
        }
      }

      @include it('lg\:-left-10') {
        @include assert {
          @include output {
            @include lg\:-left-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -2.5rem;
            }
          }
        }
      }

      @include it('lg\:-inset-11') {
        @include assert {
          @include output {
            @include lg\:-inset-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: -2.75rem;
            }
          }
        }
      }

      @include it('lg\:-inset-x-11') {
        @include assert {
          @include output {
            @include lg\:-inset-x-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -2.75rem;
              right: -2.75rem;
            }
          }
        }
      }

      @include it('lg\:-inset-y-11') {
        @include assert {
          @include output {
            @include lg\:-inset-y-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -2.75rem;
              bottom: -2.75rem;
            }
          }
        }
      }

      @include it('lg\:-start-11') {
        @include assert {
          @include output {
            @include lg\:-start-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: -2.75rem;
            }
          }
        }
      }

      @include it('lg\:-end-11') {
        @include assert {
          @include output {
            @include lg\:-end-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: -2.75rem;
            }
          }
        }
      }

      @include it('lg\:-top-11') {
        @include assert {
          @include output {
            @include lg\:-top-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -2.75rem;
            }
          }
        }
      }

      @include it('lg\:-right-11') {
        @include assert {
          @include output {
            @include lg\:-right-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: -2.75rem;
            }
          }
        }
      }

      @include it('lg\:-bottom-11') {
        @include assert {
          @include output {
            @include lg\:-bottom-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: -2.75rem;
            }
          }
        }
      }

      @include it('lg\:-left-11') {
        @include assert {
          @include output {
            @include lg\:-left-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -2.75rem;
            }
          }
        }
      }

      @include it('lg\:-inset-12') {
        @include assert {
          @include output {
            @include lg\:-inset-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: -3rem;
            }
          }
        }
      }

      @include it('lg\:-inset-x-12') {
        @include assert {
          @include output {
            @include lg\:-inset-x-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -3rem;
              right: -3rem;
            }
          }
        }
      }

      @include it('lg\:-inset-y-12') {
        @include assert {
          @include output {
            @include lg\:-inset-y-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -3rem;
              bottom: -3rem;
            }
          }
        }
      }

      @include it('lg\:-start-12') {
        @include assert {
          @include output {
            @include lg\:-start-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: -3rem;
            }
          }
        }
      }

      @include it('lg\:-end-12') {
        @include assert {
          @include output {
            @include lg\:-end-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: -3rem;
            }
          }
        }
      }

      @include it('lg\:-top-12') {
        @include assert {
          @include output {
            @include lg\:-top-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -3rem;
            }
          }
        }
      }

      @include it('lg\:-right-12') {
        @include assert {
          @include output {
            @include lg\:-right-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: -3rem;
            }
          }
        }
      }

      @include it('lg\:-bottom-12') {
        @include assert {
          @include output {
            @include lg\:-bottom-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: -3rem;
            }
          }
        }
      }

      @include it('lg\:-left-12') {
        @include assert {
          @include output {
            @include lg\:-left-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -3rem;
            }
          }
        }
      }

      @include it('lg\:-inset-14') {
        @include assert {
          @include output {
            @include lg\:-inset-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: -3.5rem;
            }
          }
        }
      }

      @include it('lg\:-inset-x-14') {
        @include assert {
          @include output {
            @include lg\:-inset-x-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -3.5rem;
              right: -3.5rem;
            }
          }
        }
      }

      @include it('lg\:-inset-y-14') {
        @include assert {
          @include output {
            @include lg\:-inset-y-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -3.5rem;
              bottom: -3.5rem;
            }
          }
        }
      }

      @include it('lg\:-start-14') {
        @include assert {
          @include output {
            @include lg\:-start-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: -3.5rem;
            }
          }
        }
      }

      @include it('lg\:-end-14') {
        @include assert {
          @include output {
            @include lg\:-end-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: -3.5rem;
            }
          }
        }
      }

      @include it('lg\:-top-14') {
        @include assert {
          @include output {
            @include lg\:-top-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -3.5rem;
            }
          }
        }
      }

      @include it('lg\:-right-14') {
        @include assert {
          @include output {
            @include lg\:-right-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: -3.5rem;
            }
          }
        }
      }

      @include it('lg\:-bottom-14') {
        @include assert {
          @include output {
            @include lg\:-bottom-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: -3.5rem;
            }
          }
        }
      }

      @include it('lg\:-left-14') {
        @include assert {
          @include output {
            @include lg\:-left-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -3.5rem;
            }
          }
        }
      }

      @include it('lg\:-inset-16') {
        @include assert {
          @include output {
            @include lg\:-inset-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: -4rem;
            }
          }
        }
      }

      @include it('lg\:-inset-x-16') {
        @include assert {
          @include output {
            @include lg\:-inset-x-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -4rem;
              right: -4rem;
            }
          }
        }
      }

      @include it('lg\:-inset-y-16') {
        @include assert {
          @include output {
            @include lg\:-inset-y-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -4rem;
              bottom: -4rem;
            }
          }
        }
      }

      @include it('lg\:-start-16') {
        @include assert {
          @include output {
            @include lg\:-start-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: -4rem;
            }
          }
        }
      }

      @include it('lg\:-end-16') {
        @include assert {
          @include output {
            @include lg\:-end-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: -4rem;
            }
          }
        }
      }

      @include it('lg\:-top-16') {
        @include assert {
          @include output {
            @include lg\:-top-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -4rem;
            }
          }
        }
      }

      @include it('lg\:-right-16') {
        @include assert {
          @include output {
            @include lg\:-right-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: -4rem;
            }
          }
        }
      }

      @include it('lg\:-bottom-16') {
        @include assert {
          @include output {
            @include lg\:-bottom-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: -4rem;
            }
          }
        }
      }

      @include it('lg\:-left-16') {
        @include assert {
          @include output {
            @include lg\:-left-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -4rem;
            }
          }
        }
      }

      @include it('lg\:-inset-20') {
        @include assert {
          @include output {
            @include lg\:-inset-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: -5rem;
            }
          }
        }
      }

      @include it('lg\:-inset-x-20') {
        @include assert {
          @include output {
            @include lg\:-inset-x-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -5rem;
              right: -5rem;
            }
          }
        }
      }

      @include it('lg\:-inset-y-20') {
        @include assert {
          @include output {
            @include lg\:-inset-y-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -5rem;
              bottom: -5rem;
            }
          }
        }
      }

      @include it('lg\:-start-20') {
        @include assert {
          @include output {
            @include lg\:-start-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: -5rem;
            }
          }
        }
      }

      @include it('lg\:-end-20') {
        @include assert {
          @include output {
            @include lg\:-end-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: -5rem;
            }
          }
        }
      }

      @include it('lg\:-top-20') {
        @include assert {
          @include output {
            @include lg\:-top-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -5rem;
            }
          }
        }
      }

      @include it('lg\:-right-20') {
        @include assert {
          @include output {
            @include lg\:-right-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: -5rem;
            }
          }
        }
      }

      @include it('lg\:-bottom-20') {
        @include assert {
          @include output {
            @include lg\:-bottom-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: -5rem;
            }
          }
        }
      }

      @include it('lg\:-left-20') {
        @include assert {
          @include output {
            @include lg\:-left-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -5rem;
            }
          }
        }
      }

      @include it('lg\:-inset-24') {
        @include assert {
          @include output {
            @include lg\:-inset-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: -6rem;
            }
          }
        }
      }

      @include it('lg\:-inset-x-24') {
        @include assert {
          @include output {
            @include lg\:-inset-x-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -6rem;
              right: -6rem;
            }
          }
        }
      }

      @include it('lg\:-inset-y-24') {
        @include assert {
          @include output {
            @include lg\:-inset-y-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -6rem;
              bottom: -6rem;
            }
          }
        }
      }

      @include it('lg\:-start-24') {
        @include assert {
          @include output {
            @include lg\:-start-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: -6rem;
            }
          }
        }
      }

      @include it('lg\:-end-24') {
        @include assert {
          @include output {
            @include lg\:-end-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: -6rem;
            }
          }
        }
      }

      @include it('lg\:-top-24') {
        @include assert {
          @include output {
            @include lg\:-top-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -6rem;
            }
          }
        }
      }

      @include it('lg\:-right-24') {
        @include assert {
          @include output {
            @include lg\:-right-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: -6rem;
            }
          }
        }
      }

      @include it('lg\:-bottom-24') {
        @include assert {
          @include output {
            @include lg\:-bottom-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: -6rem;
            }
          }
        }
      }

      @include it('lg\:-left-24') {
        @include assert {
          @include output {
            @include lg\:-left-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -6rem;
            }
          }
        }
      }

      @include it('lg\:-inset-28') {
        @include assert {
          @include output {
            @include lg\:-inset-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: -7rem;
            }
          }
        }
      }

      @include it('lg\:-inset-x-28') {
        @include assert {
          @include output {
            @include lg\:-inset-x-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -7rem;
              right: -7rem;
            }
          }
        }
      }

      @include it('lg\:-inset-y-28') {
        @include assert {
          @include output {
            @include lg\:-inset-y-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -7rem;
              bottom: -7rem;
            }
          }
        }
      }

      @include it('lg\:-start-28') {
        @include assert {
          @include output {
            @include lg\:-start-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: -7rem;
            }
          }
        }
      }

      @include it('lg\:-end-28') {
        @include assert {
          @include output {
            @include lg\:-end-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: -7rem;
            }
          }
        }
      }

      @include it('lg\:-top-28') {
        @include assert {
          @include output {
            @include lg\:-top-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -7rem;
            }
          }
        }
      }

      @include it('lg\:-right-28') {
        @include assert {
          @include output {
            @include lg\:-right-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: -7rem;
            }
          }
        }
      }

      @include it('lg\:-bottom-28') {
        @include assert {
          @include output {
            @include lg\:-bottom-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: -7rem;
            }
          }
        }
      }

      @include it('lg\:-left-28') {
        @include assert {
          @include output {
            @include lg\:-left-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -7rem;
            }
          }
        }
      }

      @include it('lg\:-inset-32') {
        @include assert {
          @include output {
            @include lg\:-inset-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: -8rem;
            }
          }
        }
      }

      @include it('lg\:-inset-x-32') {
        @include assert {
          @include output {
            @include lg\:-inset-x-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -8rem;
              right: -8rem;
            }
          }
        }
      }

      @include it('lg\:-inset-y-32') {
        @include assert {
          @include output {
            @include lg\:-inset-y-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -8rem;
              bottom: -8rem;
            }
          }
        }
      }

      @include it('lg\:-start-32') {
        @include assert {
          @include output {
            @include lg\:-start-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: -8rem;
            }
          }
        }
      }

      @include it('lg\:-end-32') {
        @include assert {
          @include output {
            @include lg\:-end-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: -8rem;
            }
          }
        }
      }

      @include it('lg\:-top-32') {
        @include assert {
          @include output {
            @include lg\:-top-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -8rem;
            }
          }
        }
      }

      @include it('lg\:-right-32') {
        @include assert {
          @include output {
            @include lg\:-right-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: -8rem;
            }
          }
        }
      }

      @include it('lg\:-bottom-32') {
        @include assert {
          @include output {
            @include lg\:-bottom-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: -8rem;
            }
          }
        }
      }

      @include it('lg\:-left-32') {
        @include assert {
          @include output {
            @include lg\:-left-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -8rem;
            }
          }
        }
      }

      @include it('lg\:-inset-36') {
        @include assert {
          @include output {
            @include lg\:-inset-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: -9rem;
            }
          }
        }
      }

      @include it('lg\:-inset-x-36') {
        @include assert {
          @include output {
            @include lg\:-inset-x-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -9rem;
              right: -9rem;
            }
          }
        }
      }

      @include it('lg\:-inset-y-36') {
        @include assert {
          @include output {
            @include lg\:-inset-y-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -9rem;
              bottom: -9rem;
            }
          }
        }
      }

      @include it('lg\:-start-36') {
        @include assert {
          @include output {
            @include lg\:-start-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: -9rem;
            }
          }
        }
      }

      @include it('lg\:-end-36') {
        @include assert {
          @include output {
            @include lg\:-end-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: -9rem;
            }
          }
        }
      }

      @include it('lg\:-top-36') {
        @include assert {
          @include output {
            @include lg\:-top-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -9rem;
            }
          }
        }
      }

      @include it('lg\:-right-36') {
        @include assert {
          @include output {
            @include lg\:-right-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: -9rem;
            }
          }
        }
      }

      @include it('lg\:-bottom-36') {
        @include assert {
          @include output {
            @include lg\:-bottom-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: -9rem;
            }
          }
        }
      }

      @include it('lg\:-left-36') {
        @include assert {
          @include output {
            @include lg\:-left-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -9rem;
            }
          }
        }
      }

      @include it('lg\:-inset-40') {
        @include assert {
          @include output {
            @include lg\:-inset-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: -10rem;
            }
          }
        }
      }

      @include it('lg\:-inset-x-40') {
        @include assert {
          @include output {
            @include lg\:-inset-x-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -10rem;
              right: -10rem;
            }
          }
        }
      }

      @include it('lg\:-inset-y-40') {
        @include assert {
          @include output {
            @include lg\:-inset-y-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -10rem;
              bottom: -10rem;
            }
          }
        }
      }

      @include it('lg\:-start-40') {
        @include assert {
          @include output {
            @include lg\:-start-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: -10rem;
            }
          }
        }
      }

      @include it('lg\:-end-40') {
        @include assert {
          @include output {
            @include lg\:-end-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: -10rem;
            }
          }
        }
      }

      @include it('lg\:-top-40') {
        @include assert {
          @include output {
            @include lg\:-top-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -10rem;
            }
          }
        }
      }

      @include it('lg\:-right-40') {
        @include assert {
          @include output {
            @include lg\:-right-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: -10rem;
            }
          }
        }
      }

      @include it('lg\:-bottom-40') {
        @include assert {
          @include output {
            @include lg\:-bottom-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: -10rem;
            }
          }
        }
      }

      @include it('lg\:-left-40') {
        @include assert {
          @include output {
            @include lg\:-left-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -10rem;
            }
          }
        }
      }

      @include it('lg\:-inset-44') {
        @include assert {
          @include output {
            @include lg\:-inset-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: -11rem;
            }
          }
        }
      }

      @include it('lg\:-inset-x-44') {
        @include assert {
          @include output {
            @include lg\:-inset-x-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -11rem;
              right: -11rem;
            }
          }
        }
      }

      @include it('lg\:-inset-y-44') {
        @include assert {
          @include output {
            @include lg\:-inset-y-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -11rem;
              bottom: -11rem;
            }
          }
        }
      }

      @include it('lg\:-start-44') {
        @include assert {
          @include output {
            @include lg\:-start-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: -11rem;
            }
          }
        }
      }

      @include it('lg\:-end-44') {
        @include assert {
          @include output {
            @include lg\:-end-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: -11rem;
            }
          }
        }
      }

      @include it('lg\:-top-44') {
        @include assert {
          @include output {
            @include lg\:-top-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -11rem;
            }
          }
        }
      }

      @include it('lg\:-right-44') {
        @include assert {
          @include output {
            @include lg\:-right-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: -11rem;
            }
          }
        }
      }

      @include it('lg\:-bottom-44') {
        @include assert {
          @include output {
            @include lg\:-bottom-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: -11rem;
            }
          }
        }
      }

      @include it('lg\:-left-44') {
        @include assert {
          @include output {
            @include lg\:-left-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -11rem;
            }
          }
        }
      }

      @include it('lg\:-inset-48') {
        @include assert {
          @include output {
            @include lg\:-inset-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: -12rem;
            }
          }
        }
      }

      @include it('lg\:-inset-x-48') {
        @include assert {
          @include output {
            @include lg\:-inset-x-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -12rem;
              right: -12rem;
            }
          }
        }
      }

      @include it('lg\:-inset-y-48') {
        @include assert {
          @include output {
            @include lg\:-inset-y-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -12rem;
              bottom: -12rem;
            }
          }
        }
      }

      @include it('lg\:-start-48') {
        @include assert {
          @include output {
            @include lg\:-start-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: -12rem;
            }
          }
        }
      }

      @include it('lg\:-end-48') {
        @include assert {
          @include output {
            @include lg\:-end-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: -12rem;
            }
          }
        }
      }

      @include it('lg\:-top-48') {
        @include assert {
          @include output {
            @include lg\:-top-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -12rem;
            }
          }
        }
      }

      @include it('lg\:-right-48') {
        @include assert {
          @include output {
            @include lg\:-right-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: -12rem;
            }
          }
        }
      }

      @include it('lg\:-bottom-48') {
        @include assert {
          @include output {
            @include lg\:-bottom-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: -12rem;
            }
          }
        }
      }

      @include it('lg\:-left-48') {
        @include assert {
          @include output {
            @include lg\:-left-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -12rem;
            }
          }
        }
      }

      @include it('lg\:-inset-52') {
        @include assert {
          @include output {
            @include lg\:-inset-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: -13rem;
            }
          }
        }
      }

      @include it('lg\:-inset-x-52') {
        @include assert {
          @include output {
            @include lg\:-inset-x-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -13rem;
              right: -13rem;
            }
          }
        }
      }

      @include it('lg\:-inset-y-52') {
        @include assert {
          @include output {
            @include lg\:-inset-y-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -13rem;
              bottom: -13rem;
            }
          }
        }
      }

      @include it('lg\:-start-52') {
        @include assert {
          @include output {
            @include lg\:-start-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: -13rem;
            }
          }
        }
      }

      @include it('lg\:-end-52') {
        @include assert {
          @include output {
            @include lg\:-end-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: -13rem;
            }
          }
        }
      }

      @include it('lg\:-top-52') {
        @include assert {
          @include output {
            @include lg\:-top-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -13rem;
            }
          }
        }
      }

      @include it('lg\:-right-52') {
        @include assert {
          @include output {
            @include lg\:-right-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: -13rem;
            }
          }
        }
      }

      @include it('lg\:-bottom-52') {
        @include assert {
          @include output {
            @include lg\:-bottom-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: -13rem;
            }
          }
        }
      }

      @include it('lg\:-left-52') {
        @include assert {
          @include output {
            @include lg\:-left-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -13rem;
            }
          }
        }
      }

      @include it('lg\:-inset-56') {
        @include assert {
          @include output {
            @include lg\:-inset-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: -14rem;
            }
          }
        }
      }

      @include it('lg\:-inset-x-56') {
        @include assert {
          @include output {
            @include lg\:-inset-x-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -14rem;
              right: -14rem;
            }
          }
        }
      }

      @include it('lg\:-inset-y-56') {
        @include assert {
          @include output {
            @include lg\:-inset-y-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -14rem;
              bottom: -14rem;
            }
          }
        }
      }

      @include it('lg\:-start-56') {
        @include assert {
          @include output {
            @include lg\:-start-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: -14rem;
            }
          }
        }
      }

      @include it('lg\:-end-56') {
        @include assert {
          @include output {
            @include lg\:-end-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: -14rem;
            }
          }
        }
      }

      @include it('lg\:-top-56') {
        @include assert {
          @include output {
            @include lg\:-top-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -14rem;
            }
          }
        }
      }

      @include it('lg\:-right-56') {
        @include assert {
          @include output {
            @include lg\:-right-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: -14rem;
            }
          }
        }
      }

      @include it('lg\:-bottom-56') {
        @include assert {
          @include output {
            @include lg\:-bottom-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: -14rem;
            }
          }
        }
      }

      @include it('lg\:-left-56') {
        @include assert {
          @include output {
            @include lg\:-left-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -14rem;
            }
          }
        }
      }

      @include it('lg\:-inset-60') {
        @include assert {
          @include output {
            @include lg\:-inset-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: -15rem;
            }
          }
        }
      }

      @include it('lg\:-inset-x-60') {
        @include assert {
          @include output {
            @include lg\:-inset-x-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -15rem;
              right: -15rem;
            }
          }
        }
      }

      @include it('lg\:-inset-y-60') {
        @include assert {
          @include output {
            @include lg\:-inset-y-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -15rem;
              bottom: -15rem;
            }
          }
        }
      }

      @include it('lg\:-start-60') {
        @include assert {
          @include output {
            @include lg\:-start-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: -15rem;
            }
          }
        }
      }

      @include it('lg\:-end-60') {
        @include assert {
          @include output {
            @include lg\:-end-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: -15rem;
            }
          }
        }
      }

      @include it('lg\:-top-60') {
        @include assert {
          @include output {
            @include lg\:-top-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -15rem;
            }
          }
        }
      }

      @include it('lg\:-right-60') {
        @include assert {
          @include output {
            @include lg\:-right-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: -15rem;
            }
          }
        }
      }

      @include it('lg\:-bottom-60') {
        @include assert {
          @include output {
            @include lg\:-bottom-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: -15rem;
            }
          }
        }
      }

      @include it('lg\:-left-60') {
        @include assert {
          @include output {
            @include lg\:-left-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -15rem;
            }
          }
        }
      }

      @include it('lg\:-inset-64') {
        @include assert {
          @include output {
            @include lg\:-inset-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: -16rem;
            }
          }
        }
      }

      @include it('lg\:-inset-x-64') {
        @include assert {
          @include output {
            @include lg\:-inset-x-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -16rem;
              right: -16rem;
            }
          }
        }
      }

      @include it('lg\:-inset-y-64') {
        @include assert {
          @include output {
            @include lg\:-inset-y-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -16rem;
              bottom: -16rem;
            }
          }
        }
      }

      @include it('lg\:-start-64') {
        @include assert {
          @include output {
            @include lg\:-start-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: -16rem;
            }
          }
        }
      }

      @include it('lg\:-end-64') {
        @include assert {
          @include output {
            @include lg\:-end-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: -16rem;
            }
          }
        }
      }

      @include it('lg\:-top-64') {
        @include assert {
          @include output {
            @include lg\:-top-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -16rem;
            }
          }
        }
      }

      @include it('lg\:-right-64') {
        @include assert {
          @include output {
            @include lg\:-right-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: -16rem;
            }
          }
        }
      }

      @include it('lg\:-bottom-64') {
        @include assert {
          @include output {
            @include lg\:-bottom-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: -16rem;
            }
          }
        }
      }

      @include it('lg\:-left-64') {
        @include assert {
          @include output {
            @include lg\:-left-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -16rem;
            }
          }
        }
      }

      @include it('lg\:-inset-72') {
        @include assert {
          @include output {
            @include lg\:-inset-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: -18rem;
            }
          }
        }
      }

      @include it('lg\:-inset-x-72') {
        @include assert {
          @include output {
            @include lg\:-inset-x-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -18rem;
              right: -18rem;
            }
          }
        }
      }

      @include it('lg\:-inset-y-72') {
        @include assert {
          @include output {
            @include lg\:-inset-y-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -18rem;
              bottom: -18rem;
            }
          }
        }
      }

      @include it('lg\:-start-72') {
        @include assert {
          @include output {
            @include lg\:-start-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: -18rem;
            }
          }
        }
      }

      @include it('lg\:-end-72') {
        @include assert {
          @include output {
            @include lg\:-end-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: -18rem;
            }
          }
        }
      }

      @include it('lg\:-top-72') {
        @include assert {
          @include output {
            @include lg\:-top-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -18rem;
            }
          }
        }
      }

      @include it('lg\:-right-72') {
        @include assert {
          @include output {
            @include lg\:-right-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: -18rem;
            }
          }
        }
      }

      @include it('lg\:-bottom-72') {
        @include assert {
          @include output {
            @include lg\:-bottom-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: -18rem;
            }
          }
        }
      }

      @include it('lg\:-left-72') {
        @include assert {
          @include output {
            @include lg\:-left-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -18rem;
            }
          }
        }
      }

      @include it('lg\:-inset-80') {
        @include assert {
          @include output {
            @include lg\:-inset-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: -20rem;
            }
          }
        }
      }

      @include it('lg\:-inset-x-80') {
        @include assert {
          @include output {
            @include lg\:-inset-x-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -20rem;
              right: -20rem;
            }
          }
        }
      }

      @include it('lg\:-inset-y-80') {
        @include assert {
          @include output {
            @include lg\:-inset-y-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -20rem;
              bottom: -20rem;
            }
          }
        }
      }

      @include it('lg\:-start-80') {
        @include assert {
          @include output {
            @include lg\:-start-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: -20rem;
            }
          }
        }
      }

      @include it('lg\:-end-80') {
        @include assert {
          @include output {
            @include lg\:-end-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: -20rem;
            }
          }
        }
      }

      @include it('lg\:-top-80') {
        @include assert {
          @include output {
            @include lg\:-top-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -20rem;
            }
          }
        }
      }

      @include it('lg\:-right-80') {
        @include assert {
          @include output {
            @include lg\:-right-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: -20rem;
            }
          }
        }
      }

      @include it('lg\:-bottom-80') {
        @include assert {
          @include output {
            @include lg\:-bottom-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: -20rem;
            }
          }
        }
      }

      @include it('lg\:-left-80') {
        @include assert {
          @include output {
            @include lg\:-left-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -20rem;
            }
          }
        }
      }

      @include it('lg\:-inset-96') {
        @include assert {
          @include output {
            @include lg\:-inset-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: -24rem;
            }
          }
        }
      }

      @include it('lg\:-inset-x-96') {
        @include assert {
          @include output {
            @include lg\:-inset-x-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -24rem;
              right: -24rem;
            }
          }
        }
      }

      @include it('lg\:-inset-y-96') {
        @include assert {
          @include output {
            @include lg\:-inset-y-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -24rem;
              bottom: -24rem;
            }
          }
        }
      }

      @include it('lg\:-start-96') {
        @include assert {
          @include output {
            @include lg\:-start-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: -24rem;
            }
          }
        }
      }

      @include it('lg\:-end-96') {
        @include assert {
          @include output {
            @include lg\:-end-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: -24rem;
            }
          }
        }
      }

      @include it('lg\:-top-96') {
        @include assert {
          @include output {
            @include lg\:-top-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -24rem;
            }
          }
        }
      }

      @include it('lg\:-right-96') {
        @include assert {
          @include output {
            @include lg\:-right-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: -24rem;
            }
          }
        }
      }

      @include it('lg\:-bottom-96') {
        @include assert {
          @include output {
            @include lg\:-bottom-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: -24rem;
            }
          }
        }
      }

      @include it('lg\:-left-96') {
        @include assert {
          @include output {
            @include lg\:-left-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -24rem;
            }
          }
        }
      }

      @include it('lg\:-inset-1\/2') {
        @include assert {
          @include output {
            @include lg\:-inset-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: -50%;
            }
          }
        }
      }

      @include it('lg\:-inset-1\/3') {
        @include assert {
          @include output {
            @include lg\:-inset-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: -33.333333%;
            }
          }
        }
      }

      @include it('lg\:-inset-2\/3') {
        @include assert {
          @include output {
            @include lg\:-inset-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: -66.666667%;
            }
          }
        }
      }

      @include it('lg\:-inset-1\/4') {
        @include assert {
          @include output {
            @include lg\:-inset-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: -25%;
            }
          }
        }
      }

      @include it('lg\:-inset-2\/4') {
        @include assert {
          @include output {
            @include lg\:-inset-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: -50%;
            }
          }
        }
      }

      @include it('lg\:-inset-3\/4') {
        @include assert {
          @include output {
            @include lg\:-inset-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: -75%;
            }
          }
        }
      }

      @include it('lg\:-inset-full') {
        @include assert {
          @include output {
            @include lg\:-inset-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: -100%;
            }
          }
        }
      }

      @include it('lg\:-inset-x-1\/2') {
        @include assert {
          @include output {
            @include lg\:-inset-x-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -50%;
              right: -50%;
            }
          }
        }
      }

      @include it('lg\:-inset-x-1\/3') {
        @include assert {
          @include output {
            @include lg\:-inset-x-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -33.333333%;
              right: -33.333333%;
            }
          }
        }
      }

      @include it('lg\:-inset-x-2\/3') {
        @include assert {
          @include output {
            @include lg\:-inset-x-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -66.666667%;
              right: -66.666667%;
            }
          }
        }
      }

      @include it('lg\:-inset-x-1\/4') {
        @include assert {
          @include output {
            @include lg\:-inset-x-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -25%;
              right: -25%;
            }
          }
        }
      }

      @include it('lg\:-inset-x-2\/4') {
        @include assert {
          @include output {
            @include lg\:-inset-x-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -50%;
              right: -50%;
            }
          }
        }
      }

      @include it('lg\:-inset-x-3\/4') {
        @include assert {
          @include output {
            @include lg\:-inset-x-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -75%;
              right: -75%;
            }
          }
        }
      }

      @include it('lg\:-inset-x-full') {
        @include assert {
          @include output {
            @include lg\:-inset-x-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -100%;
              right: -100%;
            }
          }
        }
      }

      @include it('lg\:-inset-y-1\/2') {
        @include assert {
          @include output {
            @include lg\:-inset-y-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -50%;
              bottom: -50%;
            }
          }
        }
      }

      @include it('lg\:-inset-y-1\/3') {
        @include assert {
          @include output {
            @include lg\:-inset-y-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -33.333333%;
              bottom: -33.333333%;
            }
          }
        }
      }

      @include it('lg\:-inset-y-2\/3') {
        @include assert {
          @include output {
            @include lg\:-inset-y-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -66.666667%;
              bottom: -66.666667%;
            }
          }
        }
      }

      @include it('lg\:-inset-y-1\/4') {
        @include assert {
          @include output {
            @include lg\:-inset-y-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -25%;
              bottom: -25%;
            }
          }
        }
      }

      @include it('lg\:-inset-y-2\/4') {
        @include assert {
          @include output {
            @include lg\:-inset-y-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -50%;
              bottom: -50%;
            }
          }
        }
      }

      @include it('lg\:-inset-y-3\/4') {
        @include assert {
          @include output {
            @include lg\:-inset-y-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -75%;
              bottom: -75%;
            }
          }
        }
      }

      @include it('lg\:-inset-y-full') {
        @include assert {
          @include output {
            @include lg\:-inset-y-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -100%;
              bottom: -100%;
            }
          }
        }
      }

      @include it('lg\:-start-1\/2') {
        @include assert {
          @include output {
            @include lg\:-start-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: -50%;
            }
          }
        }
      }

      @include it('lg\:-start-1\/3') {
        @include assert {
          @include output {
            @include lg\:-start-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: -33.333333%;
            }
          }
        }
      }

      @include it('lg\:-start-2\/3') {
        @include assert {
          @include output {
            @include lg\:-start-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: -66.666667%;
            }
          }
        }
      }

      @include it('lg\:-start-1\/4') {
        @include assert {
          @include output {
            @include lg\:-start-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: -25%;
            }
          }
        }
      }

      @include it('lg\:-start-2\/4') {
        @include assert {
          @include output {
            @include lg\:-start-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: -50%;
            }
          }
        }
      }

      @include it('lg\:-start-3\/4') {
        @include assert {
          @include output {
            @include lg\:-start-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: -75%;
            }
          }
        }
      }

      @include it('lg\:-start-full') {
        @include assert {
          @include output {
            @include lg\:-start-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: -100%;
            }
          }
        }
      }

      @include it('lg\:-end-1\/2') {
        @include assert {
          @include output {
            @include lg\:-end-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: -50%;
            }
          }
        }
      }

      @include it('lg\:-end-1\/3') {
        @include assert {
          @include output {
            @include lg\:-end-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: -33.333333%;
            }
          }
        }
      }

      @include it('lg\:-end-2\/3') {
        @include assert {
          @include output {
            @include lg\:-end-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: -66.666667%;
            }
          }
        }
      }

      @include it('lg\:-end-1\/4') {
        @include assert {
          @include output {
            @include lg\:-end-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: -25%;
            }
          }
        }
      }

      @include it('lg\:-end-2\/4') {
        @include assert {
          @include output {
            @include lg\:-end-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: -50%;
            }
          }
        }
      }

      @include it('lg\:-end-3\/4') {
        @include assert {
          @include output {
            @include lg\:-end-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: -75%;
            }
          }
        }
      }

      @include it('lg\:-end-full') {
        @include assert {
          @include output {
            @include lg\:-end-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: -100%;
            }
          }
        }
      }

      @include it('lg\:-top-1\/2') {
        @include assert {
          @include output {
            @include lg\:-top-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -50%;
            }
          }
        }
      }

      @include it('lg\:-top-1\/3') {
        @include assert {
          @include output {
            @include lg\:-top-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -33.333333%;
            }
          }
        }
      }

      @include it('lg\:-top-2\/3') {
        @include assert {
          @include output {
            @include lg\:-top-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -66.666667%;
            }
          }
        }
      }

      @include it('lg\:-top-1\/4') {
        @include assert {
          @include output {
            @include lg\:-top-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -25%;
            }
          }
        }
      }

      @include it('lg\:-top-2\/4') {
        @include assert {
          @include output {
            @include lg\:-top-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -50%;
            }
          }
        }
      }

      @include it('lg\:-top-3\/4') {
        @include assert {
          @include output {
            @include lg\:-top-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -75%;
            }
          }
        }
      }

      @include it('lg\:-top-full') {
        @include assert {
          @include output {
            @include lg\:-top-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -100%;
            }
          }
        }
      }

      @include it('lg\:-right-1\/2') {
        @include assert {
          @include output {
            @include lg\:-right-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: -50%;
            }
          }
        }
      }

      @include it('lg\:-right-1\/3') {
        @include assert {
          @include output {
            @include lg\:-right-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: -33.333333%;
            }
          }
        }
      }

      @include it('lg\:-right-2\/3') {
        @include assert {
          @include output {
            @include lg\:-right-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: -66.666667%;
            }
          }
        }
      }

      @include it('lg\:-right-1\/4') {
        @include assert {
          @include output {
            @include lg\:-right-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: -25%;
            }
          }
        }
      }

      @include it('lg\:-right-2\/4') {
        @include assert {
          @include output {
            @include lg\:-right-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: -50%;
            }
          }
        }
      }

      @include it('lg\:-right-3\/4') {
        @include assert {
          @include output {
            @include lg\:-right-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: -75%;
            }
          }
        }
      }

      @include it('lg\:-right-full') {
        @include assert {
          @include output {
            @include lg\:-right-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: -100%;
            }
          }
        }
      }

      @include it('lg\:-bottom-1\/2') {
        @include assert {
          @include output {
            @include lg\:-bottom-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: -50%;
            }
          }
        }
      }

      @include it('lg\:-bottom-1\/3') {
        @include assert {
          @include output {
            @include lg\:-bottom-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: -33.333333%;
            }
          }
        }
      }

      @include it('lg\:-bottom-2\/3') {
        @include assert {
          @include output {
            @include lg\:-bottom-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: -66.666667%;
            }
          }
        }
      }

      @include it('lg\:-bottom-1\/4') {
        @include assert {
          @include output {
            @include lg\:-bottom-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: -25%;
            }
          }
        }
      }

      @include it('lg\:-bottom-2\/4') {
        @include assert {
          @include output {
            @include lg\:-bottom-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: -50%;
            }
          }
        }
      }

      @include it('lg\:-bottom-3\/4') {
        @include assert {
          @include output {
            @include lg\:-bottom-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: -75%;
            }
          }
        }
      }

      @include it('lg\:-bottom-full') {
        @include assert {
          @include output {
            @include lg\:-bottom-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: -100%;
            }
          }
        }
      }

      @include it('lg\:-left-1\/2') {
        @include assert {
          @include output {
            @include lg\:-left-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -50%;
            }
          }
        }
      }

      @include it('lg\:-left-1\/3') {
        @include assert {
          @include output {
            @include lg\:-left-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -33.333333%;
            }
          }
        }
      }

      @include it('lg\:-left-2\/3') {
        @include assert {
          @include output {
            @include lg\:-left-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -66.666667%;
            }
          }
        }
      }

      @include it('lg\:-left-1\/4') {
        @include assert {
          @include output {
            @include lg\:-left-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -25%;
            }
          }
        }
      }

      @include it('lg\:-left-2\/4') {
        @include assert {
          @include output {
            @include lg\:-left-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -50%;
            }
          }
        }
      }

      @include it('lg\:-left-3\/4') {
        @include assert {
          @include output {
            @include lg\:-left-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -75%;
            }
          }
        }
      }

      @include it('lg\:-left-full') {
        @include assert {
          @include output {
            @include lg\:-left-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -100%;
            }
          }
        }
      }

      @include it('xl\:inset-0') {
        @include assert {
          @include output {
            @include xl\:inset-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: 0px;
            }
          }
        }
      }

      @include it('xl\:inset-x-0') {
        @include assert {
          @include output {
            @include xl\:inset-x-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 0px;
              right: 0px;
            }
          }
        }
      }

      @include it('xl\:inset-y-0') {
        @include assert {
          @include output {
            @include xl\:inset-y-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 0px;
              bottom: 0px;
            }
          }
        }
      }

      @include it('xl\:start-0') {
        @include assert {
          @include output {
            @include xl\:start-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: 0px;
            }
          }
        }
      }

      @include it('xl\:end-0') {
        @include assert {
          @include output {
            @include xl\:end-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: 0px;
            }
          }
        }
      }

      @include it('xl\:top-0') {
        @include assert {
          @include output {
            @include xl\:top-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 0px;
            }
          }
        }
      }

      @include it('xl\:right-0') {
        @include assert {
          @include output {
            @include xl\:right-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: 0px;
            }
          }
        }
      }

      @include it('xl\:bottom-0') {
        @include assert {
          @include output {
            @include xl\:bottom-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: 0px;
            }
          }
        }
      }

      @include it('xl\:left-0') {
        @include assert {
          @include output {
            @include xl\:left-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 0px;
            }
          }
        }
      }

      @include it('xl\:inset-px') {
        @include assert {
          @include output {
            @include xl\:inset-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: 1px;
            }
          }
        }
      }

      @include it('xl\:inset-x-px') {
        @include assert {
          @include output {
            @include xl\:inset-x-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 1px;
              right: 1px;
            }
          }
        }
      }

      @include it('xl\:inset-y-px') {
        @include assert {
          @include output {
            @include xl\:inset-y-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 1px;
              bottom: 1px;
            }
          }
        }
      }

      @include it('xl\:start-px') {
        @include assert {
          @include output {
            @include xl\:start-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: 1px;
            }
          }
        }
      }

      @include it('xl\:end-px') {
        @include assert {
          @include output {
            @include xl\:end-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: 1px;
            }
          }
        }
      }

      @include it('xl\:top-px') {
        @include assert {
          @include output {
            @include xl\:top-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 1px;
            }
          }
        }
      }

      @include it('xl\:right-px') {
        @include assert {
          @include output {
            @include xl\:right-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: 1px;
            }
          }
        }
      }

      @include it('xl\:bottom-px') {
        @include assert {
          @include output {
            @include xl\:bottom-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: 1px;
            }
          }
        }
      }

      @include it('xl\:left-px') {
        @include assert {
          @include output {
            @include xl\:left-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 1px;
            }
          }
        }
      }

      @include it('xl\:inset-0\.5') {
        @include assert {
          @include output {
            @include xl\:inset-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: 0.125rem;
            }
          }
        }
      }

      @include it('xl\:inset-x-0\.5') {
        @include assert {
          @include output {
            @include xl\:inset-x-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 0.125rem;
              right: 0.125rem;
            }
          }
        }
      }

      @include it('xl\:inset-y-0\.5') {
        @include assert {
          @include output {
            @include xl\:inset-y-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 0.125rem;
              bottom: 0.125rem;
            }
          }
        }
      }

      @include it('xl\:start-0\.5') {
        @include assert {
          @include output {
            @include xl\:start-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: 0.125rem;
            }
          }
        }
      }

      @include it('xl\:end-0\.5') {
        @include assert {
          @include output {
            @include xl\:end-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: 0.125rem;
            }
          }
        }
      }

      @include it('xl\:top-0\.5') {
        @include assert {
          @include output {
            @include xl\:top-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 0.125rem;
            }
          }
        }
      }

      @include it('xl\:right-0\.5') {
        @include assert {
          @include output {
            @include xl\:right-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: 0.125rem;
            }
          }
        }
      }

      @include it('xl\:bottom-0\.5') {
        @include assert {
          @include output {
            @include xl\:bottom-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: 0.125rem;
            }
          }
        }
      }

      @include it('xl\:left-0\.5') {
        @include assert {
          @include output {
            @include xl\:left-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 0.125rem;
            }
          }
        }
      }

      @include it('xl\:inset-1') {
        @include assert {
          @include output {
            @include xl\:inset-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: 0.25rem;
            }
          }
        }
      }

      @include it('xl\:inset-x-1') {
        @include assert {
          @include output {
            @include xl\:inset-x-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 0.25rem;
              right: 0.25rem;
            }
          }
        }
      }

      @include it('xl\:inset-y-1') {
        @include assert {
          @include output {
            @include xl\:inset-y-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 0.25rem;
              bottom: 0.25rem;
            }
          }
        }
      }

      @include it('xl\:start-1') {
        @include assert {
          @include output {
            @include xl\:start-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: 0.25rem;
            }
          }
        }
      }

      @include it('xl\:end-1') {
        @include assert {
          @include output {
            @include xl\:end-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: 0.25rem;
            }
          }
        }
      }

      @include it('xl\:top-1') {
        @include assert {
          @include output {
            @include xl\:top-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 0.25rem;
            }
          }
        }
      }

      @include it('xl\:right-1') {
        @include assert {
          @include output {
            @include xl\:right-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: 0.25rem;
            }
          }
        }
      }

      @include it('xl\:bottom-1') {
        @include assert {
          @include output {
            @include xl\:bottom-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: 0.25rem;
            }
          }
        }
      }

      @include it('xl\:left-1') {
        @include assert {
          @include output {
            @include xl\:left-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 0.25rem;
            }
          }
        }
      }

      @include it('xl\:inset-1\.5') {
        @include assert {
          @include output {
            @include xl\:inset-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: 0.375rem;
            }
          }
        }
      }

      @include it('xl\:inset-x-1\.5') {
        @include assert {
          @include output {
            @include xl\:inset-x-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 0.375rem;
              right: 0.375rem;
            }
          }
        }
      }

      @include it('xl\:inset-y-1\.5') {
        @include assert {
          @include output {
            @include xl\:inset-y-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 0.375rem;
              bottom: 0.375rem;
            }
          }
        }
      }

      @include it('xl\:start-1\.5') {
        @include assert {
          @include output {
            @include xl\:start-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: 0.375rem;
            }
          }
        }
      }

      @include it('xl\:end-1\.5') {
        @include assert {
          @include output {
            @include xl\:end-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: 0.375rem;
            }
          }
        }
      }

      @include it('xl\:top-1\.5') {
        @include assert {
          @include output {
            @include xl\:top-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 0.375rem;
            }
          }
        }
      }

      @include it('xl\:right-1\.5') {
        @include assert {
          @include output {
            @include xl\:right-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: 0.375rem;
            }
          }
        }
      }

      @include it('xl\:bottom-1\.5') {
        @include assert {
          @include output {
            @include xl\:bottom-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: 0.375rem;
            }
          }
        }
      }

      @include it('xl\:left-1\.5') {
        @include assert {
          @include output {
            @include xl\:left-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 0.375rem;
            }
          }
        }
      }

      @include it('xl\:inset-2') {
        @include assert {
          @include output {
            @include xl\:inset-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: 0.5rem;
            }
          }
        }
      }

      @include it('xl\:inset-x-2') {
        @include assert {
          @include output {
            @include xl\:inset-x-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 0.5rem;
              right: 0.5rem;
            }
          }
        }
      }

      @include it('xl\:inset-y-2') {
        @include assert {
          @include output {
            @include xl\:inset-y-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 0.5rem;
              bottom: 0.5rem;
            }
          }
        }
      }

      @include it('xl\:start-2') {
        @include assert {
          @include output {
            @include xl\:start-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: 0.5rem;
            }
          }
        }
      }

      @include it('xl\:end-2') {
        @include assert {
          @include output {
            @include xl\:end-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: 0.5rem;
            }
          }
        }
      }

      @include it('xl\:top-2') {
        @include assert {
          @include output {
            @include xl\:top-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 0.5rem;
            }
          }
        }
      }

      @include it('xl\:right-2') {
        @include assert {
          @include output {
            @include xl\:right-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: 0.5rem;
            }
          }
        }
      }

      @include it('xl\:bottom-2') {
        @include assert {
          @include output {
            @include xl\:bottom-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: 0.5rem;
            }
          }
        }
      }

      @include it('xl\:left-2') {
        @include assert {
          @include output {
            @include xl\:left-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 0.5rem;
            }
          }
        }
      }

      @include it('xl\:inset-2\.5') {
        @include assert {
          @include output {
            @include xl\:inset-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: 0.625rem;
            }
          }
        }
      }

      @include it('xl\:inset-x-2\.5') {
        @include assert {
          @include output {
            @include xl\:inset-x-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 0.625rem;
              right: 0.625rem;
            }
          }
        }
      }

      @include it('xl\:inset-y-2\.5') {
        @include assert {
          @include output {
            @include xl\:inset-y-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 0.625rem;
              bottom: 0.625rem;
            }
          }
        }
      }

      @include it('xl\:start-2\.5') {
        @include assert {
          @include output {
            @include xl\:start-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: 0.625rem;
            }
          }
        }
      }

      @include it('xl\:end-2\.5') {
        @include assert {
          @include output {
            @include xl\:end-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: 0.625rem;
            }
          }
        }
      }

      @include it('xl\:top-2\.5') {
        @include assert {
          @include output {
            @include xl\:top-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 0.625rem;
            }
          }
        }
      }

      @include it('xl\:right-2\.5') {
        @include assert {
          @include output {
            @include xl\:right-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: 0.625rem;
            }
          }
        }
      }

      @include it('xl\:bottom-2\.5') {
        @include assert {
          @include output {
            @include xl\:bottom-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: 0.625rem;
            }
          }
        }
      }

      @include it('xl\:left-2\.5') {
        @include assert {
          @include output {
            @include xl\:left-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 0.625rem;
            }
          }
        }
      }

      @include it('xl\:inset-3') {
        @include assert {
          @include output {
            @include xl\:inset-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: 0.75rem;
            }
          }
        }
      }

      @include it('xl\:inset-x-3') {
        @include assert {
          @include output {
            @include xl\:inset-x-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 0.75rem;
              right: 0.75rem;
            }
          }
        }
      }

      @include it('xl\:inset-y-3') {
        @include assert {
          @include output {
            @include xl\:inset-y-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 0.75rem;
              bottom: 0.75rem;
            }
          }
        }
      }

      @include it('xl\:start-3') {
        @include assert {
          @include output {
            @include xl\:start-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: 0.75rem;
            }
          }
        }
      }

      @include it('xl\:end-3') {
        @include assert {
          @include output {
            @include xl\:end-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: 0.75rem;
            }
          }
        }
      }

      @include it('xl\:top-3') {
        @include assert {
          @include output {
            @include xl\:top-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 0.75rem;
            }
          }
        }
      }

      @include it('xl\:right-3') {
        @include assert {
          @include output {
            @include xl\:right-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: 0.75rem;
            }
          }
        }
      }

      @include it('xl\:bottom-3') {
        @include assert {
          @include output {
            @include xl\:bottom-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: 0.75rem;
            }
          }
        }
      }

      @include it('xl\:left-3') {
        @include assert {
          @include output {
            @include xl\:left-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 0.75rem;
            }
          }
        }
      }

      @include it('xl\:inset-3\.5') {
        @include assert {
          @include output {
            @include xl\:inset-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: 0.875rem;
            }
          }
        }
      }

      @include it('xl\:inset-x-3\.5') {
        @include assert {
          @include output {
            @include xl\:inset-x-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 0.875rem;
              right: 0.875rem;
            }
          }
        }
      }

      @include it('xl\:inset-y-3\.5') {
        @include assert {
          @include output {
            @include xl\:inset-y-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 0.875rem;
              bottom: 0.875rem;
            }
          }
        }
      }

      @include it('xl\:start-3\.5') {
        @include assert {
          @include output {
            @include xl\:start-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: 0.875rem;
            }
          }
        }
      }

      @include it('xl\:end-3\.5') {
        @include assert {
          @include output {
            @include xl\:end-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: 0.875rem;
            }
          }
        }
      }

      @include it('xl\:top-3\.5') {
        @include assert {
          @include output {
            @include xl\:top-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 0.875rem;
            }
          }
        }
      }

      @include it('xl\:right-3\.5') {
        @include assert {
          @include output {
            @include xl\:right-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: 0.875rem;
            }
          }
        }
      }

      @include it('xl\:bottom-3\.5') {
        @include assert {
          @include output {
            @include xl\:bottom-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: 0.875rem;
            }
          }
        }
      }

      @include it('xl\:left-3\.5') {
        @include assert {
          @include output {
            @include xl\:left-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 0.875rem;
            }
          }
        }
      }

      @include it('xl\:inset-4') {
        @include assert {
          @include output {
            @include xl\:inset-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: 1rem;
            }
          }
        }
      }

      @include it('xl\:inset-x-4') {
        @include assert {
          @include output {
            @include xl\:inset-x-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 1rem;
              right: 1rem;
            }
          }
        }
      }

      @include it('xl\:inset-y-4') {
        @include assert {
          @include output {
            @include xl\:inset-y-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 1rem;
              bottom: 1rem;
            }
          }
        }
      }

      @include it('xl\:start-4') {
        @include assert {
          @include output {
            @include xl\:start-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: 1rem;
            }
          }
        }
      }

      @include it('xl\:end-4') {
        @include assert {
          @include output {
            @include xl\:end-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: 1rem;
            }
          }
        }
      }

      @include it('xl\:top-4') {
        @include assert {
          @include output {
            @include xl\:top-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 1rem;
            }
          }
        }
      }

      @include it('xl\:right-4') {
        @include assert {
          @include output {
            @include xl\:right-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: 1rem;
            }
          }
        }
      }

      @include it('xl\:bottom-4') {
        @include assert {
          @include output {
            @include xl\:bottom-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: 1rem;
            }
          }
        }
      }

      @include it('xl\:left-4') {
        @include assert {
          @include output {
            @include xl\:left-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 1rem;
            }
          }
        }
      }

      @include it('xl\:inset-5') {
        @include assert {
          @include output {
            @include xl\:inset-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: 1.25rem;
            }
          }
        }
      }

      @include it('xl\:inset-x-5') {
        @include assert {
          @include output {
            @include xl\:inset-x-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 1.25rem;
              right: 1.25rem;
            }
          }
        }
      }

      @include it('xl\:inset-y-5') {
        @include assert {
          @include output {
            @include xl\:inset-y-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 1.25rem;
              bottom: 1.25rem;
            }
          }
        }
      }

      @include it('xl\:start-5') {
        @include assert {
          @include output {
            @include xl\:start-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: 1.25rem;
            }
          }
        }
      }

      @include it('xl\:end-5') {
        @include assert {
          @include output {
            @include xl\:end-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: 1.25rem;
            }
          }
        }
      }

      @include it('xl\:top-5') {
        @include assert {
          @include output {
            @include xl\:top-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 1.25rem;
            }
          }
        }
      }

      @include it('xl\:right-5') {
        @include assert {
          @include output {
            @include xl\:right-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: 1.25rem;
            }
          }
        }
      }

      @include it('xl\:bottom-5') {
        @include assert {
          @include output {
            @include xl\:bottom-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: 1.25rem;
            }
          }
        }
      }

      @include it('xl\:left-5') {
        @include assert {
          @include output {
            @include xl\:left-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 1.25rem;
            }
          }
        }
      }

      @include it('xl\:inset-6') {
        @include assert {
          @include output {
            @include xl\:inset-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: 1.5rem;
            }
          }
        }
      }

      @include it('xl\:inset-x-6') {
        @include assert {
          @include output {
            @include xl\:inset-x-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 1.5rem;
              right: 1.5rem;
            }
          }
        }
      }

      @include it('xl\:inset-y-6') {
        @include assert {
          @include output {
            @include xl\:inset-y-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 1.5rem;
              bottom: 1.5rem;
            }
          }
        }
      }

      @include it('xl\:start-6') {
        @include assert {
          @include output {
            @include xl\:start-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: 1.5rem;
            }
          }
        }
      }

      @include it('xl\:end-6') {
        @include assert {
          @include output {
            @include xl\:end-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: 1.5rem;
            }
          }
        }
      }

      @include it('xl\:top-6') {
        @include assert {
          @include output {
            @include xl\:top-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 1.5rem;
            }
          }
        }
      }

      @include it('xl\:right-6') {
        @include assert {
          @include output {
            @include xl\:right-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: 1.5rem;
            }
          }
        }
      }

      @include it('xl\:bottom-6') {
        @include assert {
          @include output {
            @include xl\:bottom-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: 1.5rem;
            }
          }
        }
      }

      @include it('xl\:left-6') {
        @include assert {
          @include output {
            @include xl\:left-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 1.5rem;
            }
          }
        }
      }

      @include it('xl\:inset-7') {
        @include assert {
          @include output {
            @include xl\:inset-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: 1.75rem;
            }
          }
        }
      }

      @include it('xl\:inset-x-7') {
        @include assert {
          @include output {
            @include xl\:inset-x-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 1.75rem;
              right: 1.75rem;
            }
          }
        }
      }

      @include it('xl\:inset-y-7') {
        @include assert {
          @include output {
            @include xl\:inset-y-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 1.75rem;
              bottom: 1.75rem;
            }
          }
        }
      }

      @include it('xl\:start-7') {
        @include assert {
          @include output {
            @include xl\:start-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: 1.75rem;
            }
          }
        }
      }

      @include it('xl\:end-7') {
        @include assert {
          @include output {
            @include xl\:end-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: 1.75rem;
            }
          }
        }
      }

      @include it('xl\:top-7') {
        @include assert {
          @include output {
            @include xl\:top-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 1.75rem;
            }
          }
        }
      }

      @include it('xl\:right-7') {
        @include assert {
          @include output {
            @include xl\:right-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: 1.75rem;
            }
          }
        }
      }

      @include it('xl\:bottom-7') {
        @include assert {
          @include output {
            @include xl\:bottom-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: 1.75rem;
            }
          }
        }
      }

      @include it('xl\:left-7') {
        @include assert {
          @include output {
            @include xl\:left-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 1.75rem;
            }
          }
        }
      }

      @include it('xl\:inset-8') {
        @include assert {
          @include output {
            @include xl\:inset-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: 2rem;
            }
          }
        }
      }

      @include it('xl\:inset-x-8') {
        @include assert {
          @include output {
            @include xl\:inset-x-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 2rem;
              right: 2rem;
            }
          }
        }
      }

      @include it('xl\:inset-y-8') {
        @include assert {
          @include output {
            @include xl\:inset-y-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 2rem;
              bottom: 2rem;
            }
          }
        }
      }

      @include it('xl\:start-8') {
        @include assert {
          @include output {
            @include xl\:start-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: 2rem;
            }
          }
        }
      }

      @include it('xl\:end-8') {
        @include assert {
          @include output {
            @include xl\:end-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: 2rem;
            }
          }
        }
      }

      @include it('xl\:top-8') {
        @include assert {
          @include output {
            @include xl\:top-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 2rem;
            }
          }
        }
      }

      @include it('xl\:right-8') {
        @include assert {
          @include output {
            @include xl\:right-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: 2rem;
            }
          }
        }
      }

      @include it('xl\:bottom-8') {
        @include assert {
          @include output {
            @include xl\:bottom-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: 2rem;
            }
          }
        }
      }

      @include it('xl\:left-8') {
        @include assert {
          @include output {
            @include xl\:left-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 2rem;
            }
          }
        }
      }

      @include it('xl\:inset-9') {
        @include assert {
          @include output {
            @include xl\:inset-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: 2.25rem;
            }
          }
        }
      }

      @include it('xl\:inset-x-9') {
        @include assert {
          @include output {
            @include xl\:inset-x-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 2.25rem;
              right: 2.25rem;
            }
          }
        }
      }

      @include it('xl\:inset-y-9') {
        @include assert {
          @include output {
            @include xl\:inset-y-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 2.25rem;
              bottom: 2.25rem;
            }
          }
        }
      }

      @include it('xl\:start-9') {
        @include assert {
          @include output {
            @include xl\:start-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: 2.25rem;
            }
          }
        }
      }

      @include it('xl\:end-9') {
        @include assert {
          @include output {
            @include xl\:end-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: 2.25rem;
            }
          }
        }
      }

      @include it('xl\:top-9') {
        @include assert {
          @include output {
            @include xl\:top-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 2.25rem;
            }
          }
        }
      }

      @include it('xl\:right-9') {
        @include assert {
          @include output {
            @include xl\:right-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: 2.25rem;
            }
          }
        }
      }

      @include it('xl\:bottom-9') {
        @include assert {
          @include output {
            @include xl\:bottom-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: 2.25rem;
            }
          }
        }
      }

      @include it('xl\:left-9') {
        @include assert {
          @include output {
            @include xl\:left-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 2.25rem;
            }
          }
        }
      }

      @include it('xl\:inset-10') {
        @include assert {
          @include output {
            @include xl\:inset-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: 2.5rem;
            }
          }
        }
      }

      @include it('xl\:inset-x-10') {
        @include assert {
          @include output {
            @include xl\:inset-x-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 2.5rem;
              right: 2.5rem;
            }
          }
        }
      }

      @include it('xl\:inset-y-10') {
        @include assert {
          @include output {
            @include xl\:inset-y-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 2.5rem;
              bottom: 2.5rem;
            }
          }
        }
      }

      @include it('xl\:start-10') {
        @include assert {
          @include output {
            @include xl\:start-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: 2.5rem;
            }
          }
        }
      }

      @include it('xl\:end-10') {
        @include assert {
          @include output {
            @include xl\:end-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: 2.5rem;
            }
          }
        }
      }

      @include it('xl\:top-10') {
        @include assert {
          @include output {
            @include xl\:top-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 2.5rem;
            }
          }
        }
      }

      @include it('xl\:right-10') {
        @include assert {
          @include output {
            @include xl\:right-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: 2.5rem;
            }
          }
        }
      }

      @include it('xl\:bottom-10') {
        @include assert {
          @include output {
            @include xl\:bottom-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: 2.5rem;
            }
          }
        }
      }

      @include it('xl\:left-10') {
        @include assert {
          @include output {
            @include xl\:left-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 2.5rem;
            }
          }
        }
      }

      @include it('xl\:inset-11') {
        @include assert {
          @include output {
            @include xl\:inset-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: 2.75rem;
            }
          }
        }
      }

      @include it('xl\:inset-x-11') {
        @include assert {
          @include output {
            @include xl\:inset-x-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 2.75rem;
              right: 2.75rem;
            }
          }
        }
      }

      @include it('xl\:inset-y-11') {
        @include assert {
          @include output {
            @include xl\:inset-y-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 2.75rem;
              bottom: 2.75rem;
            }
          }
        }
      }

      @include it('xl\:start-11') {
        @include assert {
          @include output {
            @include xl\:start-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: 2.75rem;
            }
          }
        }
      }

      @include it('xl\:end-11') {
        @include assert {
          @include output {
            @include xl\:end-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: 2.75rem;
            }
          }
        }
      }

      @include it('xl\:top-11') {
        @include assert {
          @include output {
            @include xl\:top-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 2.75rem;
            }
          }
        }
      }

      @include it('xl\:right-11') {
        @include assert {
          @include output {
            @include xl\:right-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: 2.75rem;
            }
          }
        }
      }

      @include it('xl\:bottom-11') {
        @include assert {
          @include output {
            @include xl\:bottom-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: 2.75rem;
            }
          }
        }
      }

      @include it('xl\:left-11') {
        @include assert {
          @include output {
            @include xl\:left-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 2.75rem;
            }
          }
        }
      }

      @include it('xl\:inset-12') {
        @include assert {
          @include output {
            @include xl\:inset-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: 3rem;
            }
          }
        }
      }

      @include it('xl\:inset-x-12') {
        @include assert {
          @include output {
            @include xl\:inset-x-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 3rem;
              right: 3rem;
            }
          }
        }
      }

      @include it('xl\:inset-y-12') {
        @include assert {
          @include output {
            @include xl\:inset-y-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 3rem;
              bottom: 3rem;
            }
          }
        }
      }

      @include it('xl\:start-12') {
        @include assert {
          @include output {
            @include xl\:start-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: 3rem;
            }
          }
        }
      }

      @include it('xl\:end-12') {
        @include assert {
          @include output {
            @include xl\:end-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: 3rem;
            }
          }
        }
      }

      @include it('xl\:top-12') {
        @include assert {
          @include output {
            @include xl\:top-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 3rem;
            }
          }
        }
      }

      @include it('xl\:right-12') {
        @include assert {
          @include output {
            @include xl\:right-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: 3rem;
            }
          }
        }
      }

      @include it('xl\:bottom-12') {
        @include assert {
          @include output {
            @include xl\:bottom-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: 3rem;
            }
          }
        }
      }

      @include it('xl\:left-12') {
        @include assert {
          @include output {
            @include xl\:left-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 3rem;
            }
          }
        }
      }

      @include it('xl\:inset-14') {
        @include assert {
          @include output {
            @include xl\:inset-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: 3.5rem;
            }
          }
        }
      }

      @include it('xl\:inset-x-14') {
        @include assert {
          @include output {
            @include xl\:inset-x-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 3.5rem;
              right: 3.5rem;
            }
          }
        }
      }

      @include it('xl\:inset-y-14') {
        @include assert {
          @include output {
            @include xl\:inset-y-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 3.5rem;
              bottom: 3.5rem;
            }
          }
        }
      }

      @include it('xl\:start-14') {
        @include assert {
          @include output {
            @include xl\:start-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: 3.5rem;
            }
          }
        }
      }

      @include it('xl\:end-14') {
        @include assert {
          @include output {
            @include xl\:end-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: 3.5rem;
            }
          }
        }
      }

      @include it('xl\:top-14') {
        @include assert {
          @include output {
            @include xl\:top-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 3.5rem;
            }
          }
        }
      }

      @include it('xl\:right-14') {
        @include assert {
          @include output {
            @include xl\:right-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: 3.5rem;
            }
          }
        }
      }

      @include it('xl\:bottom-14') {
        @include assert {
          @include output {
            @include xl\:bottom-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: 3.5rem;
            }
          }
        }
      }

      @include it('xl\:left-14') {
        @include assert {
          @include output {
            @include xl\:left-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 3.5rem;
            }
          }
        }
      }

      @include it('xl\:inset-16') {
        @include assert {
          @include output {
            @include xl\:inset-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: 4rem;
            }
          }
        }
      }

      @include it('xl\:inset-x-16') {
        @include assert {
          @include output {
            @include xl\:inset-x-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 4rem;
              right: 4rem;
            }
          }
        }
      }

      @include it('xl\:inset-y-16') {
        @include assert {
          @include output {
            @include xl\:inset-y-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 4rem;
              bottom: 4rem;
            }
          }
        }
      }

      @include it('xl\:start-16') {
        @include assert {
          @include output {
            @include xl\:start-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: 4rem;
            }
          }
        }
      }

      @include it('xl\:end-16') {
        @include assert {
          @include output {
            @include xl\:end-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: 4rem;
            }
          }
        }
      }

      @include it('xl\:top-16') {
        @include assert {
          @include output {
            @include xl\:top-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 4rem;
            }
          }
        }
      }

      @include it('xl\:right-16') {
        @include assert {
          @include output {
            @include xl\:right-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: 4rem;
            }
          }
        }
      }

      @include it('xl\:bottom-16') {
        @include assert {
          @include output {
            @include xl\:bottom-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: 4rem;
            }
          }
        }
      }

      @include it('xl\:left-16') {
        @include assert {
          @include output {
            @include xl\:left-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 4rem;
            }
          }
        }
      }

      @include it('xl\:inset-20') {
        @include assert {
          @include output {
            @include xl\:inset-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: 5rem;
            }
          }
        }
      }

      @include it('xl\:inset-x-20') {
        @include assert {
          @include output {
            @include xl\:inset-x-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 5rem;
              right: 5rem;
            }
          }
        }
      }

      @include it('xl\:inset-y-20') {
        @include assert {
          @include output {
            @include xl\:inset-y-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 5rem;
              bottom: 5rem;
            }
          }
        }
      }

      @include it('xl\:start-20') {
        @include assert {
          @include output {
            @include xl\:start-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: 5rem;
            }
          }
        }
      }

      @include it('xl\:end-20') {
        @include assert {
          @include output {
            @include xl\:end-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: 5rem;
            }
          }
        }
      }

      @include it('xl\:top-20') {
        @include assert {
          @include output {
            @include xl\:top-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 5rem;
            }
          }
        }
      }

      @include it('xl\:right-20') {
        @include assert {
          @include output {
            @include xl\:right-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: 5rem;
            }
          }
        }
      }

      @include it('xl\:bottom-20') {
        @include assert {
          @include output {
            @include xl\:bottom-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: 5rem;
            }
          }
        }
      }

      @include it('xl\:left-20') {
        @include assert {
          @include output {
            @include xl\:left-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 5rem;
            }
          }
        }
      }

      @include it('xl\:inset-24') {
        @include assert {
          @include output {
            @include xl\:inset-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: 6rem;
            }
          }
        }
      }

      @include it('xl\:inset-x-24') {
        @include assert {
          @include output {
            @include xl\:inset-x-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 6rem;
              right: 6rem;
            }
          }
        }
      }

      @include it('xl\:inset-y-24') {
        @include assert {
          @include output {
            @include xl\:inset-y-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 6rem;
              bottom: 6rem;
            }
          }
        }
      }

      @include it('xl\:start-24') {
        @include assert {
          @include output {
            @include xl\:start-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: 6rem;
            }
          }
        }
      }

      @include it('xl\:end-24') {
        @include assert {
          @include output {
            @include xl\:end-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: 6rem;
            }
          }
        }
      }

      @include it('xl\:top-24') {
        @include assert {
          @include output {
            @include xl\:top-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 6rem;
            }
          }
        }
      }

      @include it('xl\:right-24') {
        @include assert {
          @include output {
            @include xl\:right-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: 6rem;
            }
          }
        }
      }

      @include it('xl\:bottom-24') {
        @include assert {
          @include output {
            @include xl\:bottom-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: 6rem;
            }
          }
        }
      }

      @include it('xl\:left-24') {
        @include assert {
          @include output {
            @include xl\:left-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 6rem;
            }
          }
        }
      }

      @include it('xl\:inset-28') {
        @include assert {
          @include output {
            @include xl\:inset-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: 7rem;
            }
          }
        }
      }

      @include it('xl\:inset-x-28') {
        @include assert {
          @include output {
            @include xl\:inset-x-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 7rem;
              right: 7rem;
            }
          }
        }
      }

      @include it('xl\:inset-y-28') {
        @include assert {
          @include output {
            @include xl\:inset-y-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 7rem;
              bottom: 7rem;
            }
          }
        }
      }

      @include it('xl\:start-28') {
        @include assert {
          @include output {
            @include xl\:start-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: 7rem;
            }
          }
        }
      }

      @include it('xl\:end-28') {
        @include assert {
          @include output {
            @include xl\:end-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: 7rem;
            }
          }
        }
      }

      @include it('xl\:top-28') {
        @include assert {
          @include output {
            @include xl\:top-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 7rem;
            }
          }
        }
      }

      @include it('xl\:right-28') {
        @include assert {
          @include output {
            @include xl\:right-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: 7rem;
            }
          }
        }
      }

      @include it('xl\:bottom-28') {
        @include assert {
          @include output {
            @include xl\:bottom-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: 7rem;
            }
          }
        }
      }

      @include it('xl\:left-28') {
        @include assert {
          @include output {
            @include xl\:left-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 7rem;
            }
          }
        }
      }

      @include it('xl\:inset-32') {
        @include assert {
          @include output {
            @include xl\:inset-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: 8rem;
            }
          }
        }
      }

      @include it('xl\:inset-x-32') {
        @include assert {
          @include output {
            @include xl\:inset-x-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 8rem;
              right: 8rem;
            }
          }
        }
      }

      @include it('xl\:inset-y-32') {
        @include assert {
          @include output {
            @include xl\:inset-y-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 8rem;
              bottom: 8rem;
            }
          }
        }
      }

      @include it('xl\:start-32') {
        @include assert {
          @include output {
            @include xl\:start-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: 8rem;
            }
          }
        }
      }

      @include it('xl\:end-32') {
        @include assert {
          @include output {
            @include xl\:end-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: 8rem;
            }
          }
        }
      }

      @include it('xl\:top-32') {
        @include assert {
          @include output {
            @include xl\:top-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 8rem;
            }
          }
        }
      }

      @include it('xl\:right-32') {
        @include assert {
          @include output {
            @include xl\:right-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: 8rem;
            }
          }
        }
      }

      @include it('xl\:bottom-32') {
        @include assert {
          @include output {
            @include xl\:bottom-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: 8rem;
            }
          }
        }
      }

      @include it('xl\:left-32') {
        @include assert {
          @include output {
            @include xl\:left-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 8rem;
            }
          }
        }
      }

      @include it('xl\:inset-36') {
        @include assert {
          @include output {
            @include xl\:inset-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: 9rem;
            }
          }
        }
      }

      @include it('xl\:inset-x-36') {
        @include assert {
          @include output {
            @include xl\:inset-x-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 9rem;
              right: 9rem;
            }
          }
        }
      }

      @include it('xl\:inset-y-36') {
        @include assert {
          @include output {
            @include xl\:inset-y-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 9rem;
              bottom: 9rem;
            }
          }
        }
      }

      @include it('xl\:start-36') {
        @include assert {
          @include output {
            @include xl\:start-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: 9rem;
            }
          }
        }
      }

      @include it('xl\:end-36') {
        @include assert {
          @include output {
            @include xl\:end-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: 9rem;
            }
          }
        }
      }

      @include it('xl\:top-36') {
        @include assert {
          @include output {
            @include xl\:top-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 9rem;
            }
          }
        }
      }

      @include it('xl\:right-36') {
        @include assert {
          @include output {
            @include xl\:right-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: 9rem;
            }
          }
        }
      }

      @include it('xl\:bottom-36') {
        @include assert {
          @include output {
            @include xl\:bottom-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: 9rem;
            }
          }
        }
      }

      @include it('xl\:left-36') {
        @include assert {
          @include output {
            @include xl\:left-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 9rem;
            }
          }
        }
      }

      @include it('xl\:inset-40') {
        @include assert {
          @include output {
            @include xl\:inset-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: 10rem;
            }
          }
        }
      }

      @include it('xl\:inset-x-40') {
        @include assert {
          @include output {
            @include xl\:inset-x-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 10rem;
              right: 10rem;
            }
          }
        }
      }

      @include it('xl\:inset-y-40') {
        @include assert {
          @include output {
            @include xl\:inset-y-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 10rem;
              bottom: 10rem;
            }
          }
        }
      }

      @include it('xl\:start-40') {
        @include assert {
          @include output {
            @include xl\:start-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: 10rem;
            }
          }
        }
      }

      @include it('xl\:end-40') {
        @include assert {
          @include output {
            @include xl\:end-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: 10rem;
            }
          }
        }
      }

      @include it('xl\:top-40') {
        @include assert {
          @include output {
            @include xl\:top-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 10rem;
            }
          }
        }
      }

      @include it('xl\:right-40') {
        @include assert {
          @include output {
            @include xl\:right-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: 10rem;
            }
          }
        }
      }

      @include it('xl\:bottom-40') {
        @include assert {
          @include output {
            @include xl\:bottom-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: 10rem;
            }
          }
        }
      }

      @include it('xl\:left-40') {
        @include assert {
          @include output {
            @include xl\:left-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 10rem;
            }
          }
        }
      }

      @include it('xl\:inset-44') {
        @include assert {
          @include output {
            @include xl\:inset-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: 11rem;
            }
          }
        }
      }

      @include it('xl\:inset-x-44') {
        @include assert {
          @include output {
            @include xl\:inset-x-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 11rem;
              right: 11rem;
            }
          }
        }
      }

      @include it('xl\:inset-y-44') {
        @include assert {
          @include output {
            @include xl\:inset-y-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 11rem;
              bottom: 11rem;
            }
          }
        }
      }

      @include it('xl\:start-44') {
        @include assert {
          @include output {
            @include xl\:start-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: 11rem;
            }
          }
        }
      }

      @include it('xl\:end-44') {
        @include assert {
          @include output {
            @include xl\:end-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: 11rem;
            }
          }
        }
      }

      @include it('xl\:top-44') {
        @include assert {
          @include output {
            @include xl\:top-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 11rem;
            }
          }
        }
      }

      @include it('xl\:right-44') {
        @include assert {
          @include output {
            @include xl\:right-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: 11rem;
            }
          }
        }
      }

      @include it('xl\:bottom-44') {
        @include assert {
          @include output {
            @include xl\:bottom-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: 11rem;
            }
          }
        }
      }

      @include it('xl\:left-44') {
        @include assert {
          @include output {
            @include xl\:left-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 11rem;
            }
          }
        }
      }

      @include it('xl\:inset-48') {
        @include assert {
          @include output {
            @include xl\:inset-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: 12rem;
            }
          }
        }
      }

      @include it('xl\:inset-x-48') {
        @include assert {
          @include output {
            @include xl\:inset-x-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 12rem;
              right: 12rem;
            }
          }
        }
      }

      @include it('xl\:inset-y-48') {
        @include assert {
          @include output {
            @include xl\:inset-y-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 12rem;
              bottom: 12rem;
            }
          }
        }
      }

      @include it('xl\:start-48') {
        @include assert {
          @include output {
            @include xl\:start-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: 12rem;
            }
          }
        }
      }

      @include it('xl\:end-48') {
        @include assert {
          @include output {
            @include xl\:end-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: 12rem;
            }
          }
        }
      }

      @include it('xl\:top-48') {
        @include assert {
          @include output {
            @include xl\:top-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 12rem;
            }
          }
        }
      }

      @include it('xl\:right-48') {
        @include assert {
          @include output {
            @include xl\:right-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: 12rem;
            }
          }
        }
      }

      @include it('xl\:bottom-48') {
        @include assert {
          @include output {
            @include xl\:bottom-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: 12rem;
            }
          }
        }
      }

      @include it('xl\:left-48') {
        @include assert {
          @include output {
            @include xl\:left-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 12rem;
            }
          }
        }
      }

      @include it('xl\:inset-52') {
        @include assert {
          @include output {
            @include xl\:inset-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: 13rem;
            }
          }
        }
      }

      @include it('xl\:inset-x-52') {
        @include assert {
          @include output {
            @include xl\:inset-x-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 13rem;
              right: 13rem;
            }
          }
        }
      }

      @include it('xl\:inset-y-52') {
        @include assert {
          @include output {
            @include xl\:inset-y-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 13rem;
              bottom: 13rem;
            }
          }
        }
      }

      @include it('xl\:start-52') {
        @include assert {
          @include output {
            @include xl\:start-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: 13rem;
            }
          }
        }
      }

      @include it('xl\:end-52') {
        @include assert {
          @include output {
            @include xl\:end-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: 13rem;
            }
          }
        }
      }

      @include it('xl\:top-52') {
        @include assert {
          @include output {
            @include xl\:top-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 13rem;
            }
          }
        }
      }

      @include it('xl\:right-52') {
        @include assert {
          @include output {
            @include xl\:right-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: 13rem;
            }
          }
        }
      }

      @include it('xl\:bottom-52') {
        @include assert {
          @include output {
            @include xl\:bottom-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: 13rem;
            }
          }
        }
      }

      @include it('xl\:left-52') {
        @include assert {
          @include output {
            @include xl\:left-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 13rem;
            }
          }
        }
      }

      @include it('xl\:inset-56') {
        @include assert {
          @include output {
            @include xl\:inset-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: 14rem;
            }
          }
        }
      }

      @include it('xl\:inset-x-56') {
        @include assert {
          @include output {
            @include xl\:inset-x-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 14rem;
              right: 14rem;
            }
          }
        }
      }

      @include it('xl\:inset-y-56') {
        @include assert {
          @include output {
            @include xl\:inset-y-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 14rem;
              bottom: 14rem;
            }
          }
        }
      }

      @include it('xl\:start-56') {
        @include assert {
          @include output {
            @include xl\:start-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: 14rem;
            }
          }
        }
      }

      @include it('xl\:end-56') {
        @include assert {
          @include output {
            @include xl\:end-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: 14rem;
            }
          }
        }
      }

      @include it('xl\:top-56') {
        @include assert {
          @include output {
            @include xl\:top-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 14rem;
            }
          }
        }
      }

      @include it('xl\:right-56') {
        @include assert {
          @include output {
            @include xl\:right-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: 14rem;
            }
          }
        }
      }

      @include it('xl\:bottom-56') {
        @include assert {
          @include output {
            @include xl\:bottom-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: 14rem;
            }
          }
        }
      }

      @include it('xl\:left-56') {
        @include assert {
          @include output {
            @include xl\:left-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 14rem;
            }
          }
        }
      }

      @include it('xl\:inset-60') {
        @include assert {
          @include output {
            @include xl\:inset-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: 15rem;
            }
          }
        }
      }

      @include it('xl\:inset-x-60') {
        @include assert {
          @include output {
            @include xl\:inset-x-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 15rem;
              right: 15rem;
            }
          }
        }
      }

      @include it('xl\:inset-y-60') {
        @include assert {
          @include output {
            @include xl\:inset-y-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 15rem;
              bottom: 15rem;
            }
          }
        }
      }

      @include it('xl\:start-60') {
        @include assert {
          @include output {
            @include xl\:start-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: 15rem;
            }
          }
        }
      }

      @include it('xl\:end-60') {
        @include assert {
          @include output {
            @include xl\:end-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: 15rem;
            }
          }
        }
      }

      @include it('xl\:top-60') {
        @include assert {
          @include output {
            @include xl\:top-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 15rem;
            }
          }
        }
      }

      @include it('xl\:right-60') {
        @include assert {
          @include output {
            @include xl\:right-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: 15rem;
            }
          }
        }
      }

      @include it('xl\:bottom-60') {
        @include assert {
          @include output {
            @include xl\:bottom-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: 15rem;
            }
          }
        }
      }

      @include it('xl\:left-60') {
        @include assert {
          @include output {
            @include xl\:left-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 15rem;
            }
          }
        }
      }

      @include it('xl\:inset-64') {
        @include assert {
          @include output {
            @include xl\:inset-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: 16rem;
            }
          }
        }
      }

      @include it('xl\:inset-x-64') {
        @include assert {
          @include output {
            @include xl\:inset-x-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 16rem;
              right: 16rem;
            }
          }
        }
      }

      @include it('xl\:inset-y-64') {
        @include assert {
          @include output {
            @include xl\:inset-y-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 16rem;
              bottom: 16rem;
            }
          }
        }
      }

      @include it('xl\:start-64') {
        @include assert {
          @include output {
            @include xl\:start-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: 16rem;
            }
          }
        }
      }

      @include it('xl\:end-64') {
        @include assert {
          @include output {
            @include xl\:end-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: 16rem;
            }
          }
        }
      }

      @include it('xl\:top-64') {
        @include assert {
          @include output {
            @include xl\:top-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 16rem;
            }
          }
        }
      }

      @include it('xl\:right-64') {
        @include assert {
          @include output {
            @include xl\:right-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: 16rem;
            }
          }
        }
      }

      @include it('xl\:bottom-64') {
        @include assert {
          @include output {
            @include xl\:bottom-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: 16rem;
            }
          }
        }
      }

      @include it('xl\:left-64') {
        @include assert {
          @include output {
            @include xl\:left-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 16rem;
            }
          }
        }
      }

      @include it('xl\:inset-72') {
        @include assert {
          @include output {
            @include xl\:inset-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: 18rem;
            }
          }
        }
      }

      @include it('xl\:inset-x-72') {
        @include assert {
          @include output {
            @include xl\:inset-x-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 18rem;
              right: 18rem;
            }
          }
        }
      }

      @include it('xl\:inset-y-72') {
        @include assert {
          @include output {
            @include xl\:inset-y-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 18rem;
              bottom: 18rem;
            }
          }
        }
      }

      @include it('xl\:start-72') {
        @include assert {
          @include output {
            @include xl\:start-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: 18rem;
            }
          }
        }
      }

      @include it('xl\:end-72') {
        @include assert {
          @include output {
            @include xl\:end-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: 18rem;
            }
          }
        }
      }

      @include it('xl\:top-72') {
        @include assert {
          @include output {
            @include xl\:top-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 18rem;
            }
          }
        }
      }

      @include it('xl\:right-72') {
        @include assert {
          @include output {
            @include xl\:right-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: 18rem;
            }
          }
        }
      }

      @include it('xl\:bottom-72') {
        @include assert {
          @include output {
            @include xl\:bottom-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: 18rem;
            }
          }
        }
      }

      @include it('xl\:left-72') {
        @include assert {
          @include output {
            @include xl\:left-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 18rem;
            }
          }
        }
      }

      @include it('xl\:inset-80') {
        @include assert {
          @include output {
            @include xl\:inset-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: 20rem;
            }
          }
        }
      }

      @include it('xl\:inset-x-80') {
        @include assert {
          @include output {
            @include xl\:inset-x-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 20rem;
              right: 20rem;
            }
          }
        }
      }

      @include it('xl\:inset-y-80') {
        @include assert {
          @include output {
            @include xl\:inset-y-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 20rem;
              bottom: 20rem;
            }
          }
        }
      }

      @include it('xl\:start-80') {
        @include assert {
          @include output {
            @include xl\:start-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: 20rem;
            }
          }
        }
      }

      @include it('xl\:end-80') {
        @include assert {
          @include output {
            @include xl\:end-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: 20rem;
            }
          }
        }
      }

      @include it('xl\:top-80') {
        @include assert {
          @include output {
            @include xl\:top-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 20rem;
            }
          }
        }
      }

      @include it('xl\:right-80') {
        @include assert {
          @include output {
            @include xl\:right-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: 20rem;
            }
          }
        }
      }

      @include it('xl\:bottom-80') {
        @include assert {
          @include output {
            @include xl\:bottom-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: 20rem;
            }
          }
        }
      }

      @include it('xl\:left-80') {
        @include assert {
          @include output {
            @include xl\:left-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 20rem;
            }
          }
        }
      }

      @include it('xl\:inset-96') {
        @include assert {
          @include output {
            @include xl\:inset-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: 24rem;
            }
          }
        }
      }

      @include it('xl\:inset-x-96') {
        @include assert {
          @include output {
            @include xl\:inset-x-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 24rem;
              right: 24rem;
            }
          }
        }
      }

      @include it('xl\:inset-y-96') {
        @include assert {
          @include output {
            @include xl\:inset-y-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 24rem;
              bottom: 24rem;
            }
          }
        }
      }

      @include it('xl\:start-96') {
        @include assert {
          @include output {
            @include xl\:start-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: 24rem;
            }
          }
        }
      }

      @include it('xl\:end-96') {
        @include assert {
          @include output {
            @include xl\:end-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: 24rem;
            }
          }
        }
      }

      @include it('xl\:top-96') {
        @include assert {
          @include output {
            @include xl\:top-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 24rem;
            }
          }
        }
      }

      @include it('xl\:right-96') {
        @include assert {
          @include output {
            @include xl\:right-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: 24rem;
            }
          }
        }
      }

      @include it('xl\:bottom-96') {
        @include assert {
          @include output {
            @include xl\:bottom-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: 24rem;
            }
          }
        }
      }

      @include it('xl\:left-96') {
        @include assert {
          @include output {
            @include xl\:left-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 24rem;
            }
          }
        }
      }

      @include it('xl\:inset-auto') {
        @include assert {
          @include output {
            @include xl\:inset-auto;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: auto;
            }
          }
        }
      }

      @include it('xl\:inset-1\/2') {
        @include assert {
          @include output {
            @include xl\:inset-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: 50%;
            }
          }
        }
      }

      @include it('xl\:inset-1\/3') {
        @include assert {
          @include output {
            @include xl\:inset-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: 33.333333%;
            }
          }
        }
      }

      @include it('xl\:inset-2\/3') {
        @include assert {
          @include output {
            @include xl\:inset-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: 66.666667%;
            }
          }
        }
      }

      @include it('xl\:inset-1\/4') {
        @include assert {
          @include output {
            @include xl\:inset-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: 25%;
            }
          }
        }
      }

      @include it('xl\:inset-2\/4') {
        @include assert {
          @include output {
            @include xl\:inset-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: 50%;
            }
          }
        }
      }

      @include it('xl\:inset-3\/4') {
        @include assert {
          @include output {
            @include xl\:inset-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: 75%;
            }
          }
        }
      }

      @include it('xl\:inset-full') {
        @include assert {
          @include output {
            @include xl\:inset-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: 100%;
            }
          }
        }
      }

      @include it('xl\:inset-x-auto') {
        @include assert {
          @include output {
            @include xl\:inset-x-auto;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: auto;
              right: auto;
            }
          }
        }
      }

      @include it('xl\:inset-x-1\/2') {
        @include assert {
          @include output {
            @include xl\:inset-x-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 50%;
              right: 50%;
            }
          }
        }
      }

      @include it('xl\:inset-x-1\/3') {
        @include assert {
          @include output {
            @include xl\:inset-x-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 33.333333%;
              right: 33.333333%;
            }
          }
        }
      }

      @include it('xl\:inset-x-2\/3') {
        @include assert {
          @include output {
            @include xl\:inset-x-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 66.666667%;
              right: 66.666667%;
            }
          }
        }
      }

      @include it('xl\:inset-x-1\/4') {
        @include assert {
          @include output {
            @include xl\:inset-x-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 25%;
              right: 25%;
            }
          }
        }
      }

      @include it('xl\:inset-x-2\/4') {
        @include assert {
          @include output {
            @include xl\:inset-x-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 50%;
              right: 50%;
            }
          }
        }
      }

      @include it('xl\:inset-x-3\/4') {
        @include assert {
          @include output {
            @include xl\:inset-x-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 75%;
              right: 75%;
            }
          }
        }
      }

      @include it('xl\:inset-x-full') {
        @include assert {
          @include output {
            @include xl\:inset-x-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 100%;
              right: 100%;
            }
          }
        }
      }

      @include it('xl\:inset-y-auto') {
        @include assert {
          @include output {
            @include xl\:inset-y-auto;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: auto;
              bottom: auto;
            }
          }
        }
      }

      @include it('xl\:inset-y-1\/2') {
        @include assert {
          @include output {
            @include xl\:inset-y-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 50%;
              bottom: 50%;
            }
          }
        }
      }

      @include it('xl\:inset-y-1\/3') {
        @include assert {
          @include output {
            @include xl\:inset-y-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 33.333333%;
              bottom: 33.333333%;
            }
          }
        }
      }

      @include it('xl\:inset-y-2\/3') {
        @include assert {
          @include output {
            @include xl\:inset-y-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 66.666667%;
              bottom: 66.666667%;
            }
          }
        }
      }

      @include it('xl\:inset-y-1\/4') {
        @include assert {
          @include output {
            @include xl\:inset-y-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 25%;
              bottom: 25%;
            }
          }
        }
      }

      @include it('xl\:inset-y-2\/4') {
        @include assert {
          @include output {
            @include xl\:inset-y-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 50%;
              bottom: 50%;
            }
          }
        }
      }

      @include it('xl\:inset-y-3\/4') {
        @include assert {
          @include output {
            @include xl\:inset-y-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 75%;
              bottom: 75%;
            }
          }
        }
      }

      @include it('xl\:inset-y-full') {
        @include assert {
          @include output {
            @include xl\:inset-y-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 100%;
              bottom: 100%;
            }
          }
        }
      }

      @include it('xl\:start-auto') {
        @include assert {
          @include output {
            @include xl\:start-auto;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: auto;
            }
          }
        }
      }

      @include it('xl\:start-1\/2') {
        @include assert {
          @include output {
            @include xl\:start-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: 50%;
            }
          }
        }
      }

      @include it('xl\:start-1\/3') {
        @include assert {
          @include output {
            @include xl\:start-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: 33.333333%;
            }
          }
        }
      }

      @include it('xl\:start-2\/3') {
        @include assert {
          @include output {
            @include xl\:start-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: 66.666667%;
            }
          }
        }
      }

      @include it('xl\:start-1\/4') {
        @include assert {
          @include output {
            @include xl\:start-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: 25%;
            }
          }
        }
      }

      @include it('xl\:start-2\/4') {
        @include assert {
          @include output {
            @include xl\:start-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: 50%;
            }
          }
        }
      }

      @include it('xl\:start-3\/4') {
        @include assert {
          @include output {
            @include xl\:start-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: 75%;
            }
          }
        }
      }

      @include it('xl\:start-full') {
        @include assert {
          @include output {
            @include xl\:start-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: 100%;
            }
          }
        }
      }

      @include it('xl\:end-auto') {
        @include assert {
          @include output {
            @include xl\:end-auto;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: auto;
            }
          }
        }
      }

      @include it('xl\:end-1\/2') {
        @include assert {
          @include output {
            @include xl\:end-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: 50%;
            }
          }
        }
      }

      @include it('xl\:end-1\/3') {
        @include assert {
          @include output {
            @include xl\:end-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: 33.333333%;
            }
          }
        }
      }

      @include it('xl\:end-2\/3') {
        @include assert {
          @include output {
            @include xl\:end-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: 66.666667%;
            }
          }
        }
      }

      @include it('xl\:end-1\/4') {
        @include assert {
          @include output {
            @include xl\:end-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: 25%;
            }
          }
        }
      }

      @include it('xl\:end-2\/4') {
        @include assert {
          @include output {
            @include xl\:end-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: 50%;
            }
          }
        }
      }

      @include it('xl\:end-3\/4') {
        @include assert {
          @include output {
            @include xl\:end-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: 75%;
            }
          }
        }
      }

      @include it('xl\:end-full') {
        @include assert {
          @include output {
            @include xl\:end-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: 100%;
            }
          }
        }
      }

      @include it('xl\:top-auto') {
        @include assert {
          @include output {
            @include xl\:top-auto;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: auto;
            }
          }
        }
      }

      @include it('xl\:top-1\/2') {
        @include assert {
          @include output {
            @include xl\:top-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 50%;
            }
          }
        }
      }

      @include it('xl\:top-1\/3') {
        @include assert {
          @include output {
            @include xl\:top-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 33.333333%;
            }
          }
        }
      }

      @include it('xl\:top-2\/3') {
        @include assert {
          @include output {
            @include xl\:top-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 66.666667%;
            }
          }
        }
      }

      @include it('xl\:top-1\/4') {
        @include assert {
          @include output {
            @include xl\:top-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 25%;
            }
          }
        }
      }

      @include it('xl\:top-2\/4') {
        @include assert {
          @include output {
            @include xl\:top-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 50%;
            }
          }
        }
      }

      @include it('xl\:top-3\/4') {
        @include assert {
          @include output {
            @include xl\:top-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 75%;
            }
          }
        }
      }

      @include it('xl\:top-full') {
        @include assert {
          @include output {
            @include xl\:top-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 100%;
            }
          }
        }
      }

      @include it('xl\:right-auto') {
        @include assert {
          @include output {
            @include xl\:right-auto;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: auto;
            }
          }
        }
      }

      @include it('xl\:right-1\/2') {
        @include assert {
          @include output {
            @include xl\:right-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: 50%;
            }
          }
        }
      }

      @include it('xl\:right-1\/3') {
        @include assert {
          @include output {
            @include xl\:right-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: 33.333333%;
            }
          }
        }
      }

      @include it('xl\:right-2\/3') {
        @include assert {
          @include output {
            @include xl\:right-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: 66.666667%;
            }
          }
        }
      }

      @include it('xl\:right-1\/4') {
        @include assert {
          @include output {
            @include xl\:right-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: 25%;
            }
          }
        }
      }

      @include it('xl\:right-2\/4') {
        @include assert {
          @include output {
            @include xl\:right-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: 50%;
            }
          }
        }
      }

      @include it('xl\:right-3\/4') {
        @include assert {
          @include output {
            @include xl\:right-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: 75%;
            }
          }
        }
      }

      @include it('xl\:right-full') {
        @include assert {
          @include output {
            @include xl\:right-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: 100%;
            }
          }
        }
      }

      @include it('xl\:bottom-auto') {
        @include assert {
          @include output {
            @include xl\:bottom-auto;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: auto;
            }
          }
        }
      }

      @include it('xl\:bottom-1\/2') {
        @include assert {
          @include output {
            @include xl\:bottom-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: 50%;
            }
          }
        }
      }

      @include it('xl\:bottom-1\/3') {
        @include assert {
          @include output {
            @include xl\:bottom-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: 33.333333%;
            }
          }
        }
      }

      @include it('xl\:bottom-2\/3') {
        @include assert {
          @include output {
            @include xl\:bottom-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: 66.666667%;
            }
          }
        }
      }

      @include it('xl\:bottom-1\/4') {
        @include assert {
          @include output {
            @include xl\:bottom-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: 25%;
            }
          }
        }
      }

      @include it('xl\:bottom-2\/4') {
        @include assert {
          @include output {
            @include xl\:bottom-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: 50%;
            }
          }
        }
      }

      @include it('xl\:bottom-3\/4') {
        @include assert {
          @include output {
            @include xl\:bottom-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: 75%;
            }
          }
        }
      }

      @include it('xl\:bottom-full') {
        @include assert {
          @include output {
            @include xl\:bottom-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: 100%;
            }
          }
        }
      }

      @include it('xl\:left-auto') {
        @include assert {
          @include output {
            @include xl\:left-auto;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: auto;
            }
          }
        }
      }

      @include it('xl\:left-1\/2') {
        @include assert {
          @include output {
            @include xl\:left-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 50%;
            }
          }
        }
      }

      @include it('xl\:left-1\/3') {
        @include assert {
          @include output {
            @include xl\:left-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 33.333333%;
            }
          }
        }
      }

      @include it('xl\:left-2\/3') {
        @include assert {
          @include output {
            @include xl\:left-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 66.666667%;
            }
          }
        }
      }

      @include it('xl\:left-1\/4') {
        @include assert {
          @include output {
            @include xl\:left-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 25%;
            }
          }
        }
      }

      @include it('xl\:left-2\/4') {
        @include assert {
          @include output {
            @include xl\:left-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 50%;
            }
          }
        }
      }

      @include it('xl\:left-3\/4') {
        @include assert {
          @include output {
            @include xl\:left-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 75%;
            }
          }
        }
      }

      @include it('xl\:left-full') {
        @include assert {
          @include output {
            @include xl\:left-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 100%;
            }
          }
        }
      }

      @include it('xl\:-inset-0') {
        @include assert {
          @include output {
            @include xl\:-inset-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: 0px;
            }
          }
        }
      }

      @include it('xl\:-inset-x-0') {
        @include assert {
          @include output {
            @include xl\:-inset-x-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 0px;
              right: 0px;
            }
          }
        }
      }

      @include it('xl\:-inset-y-0') {
        @include assert {
          @include output {
            @include xl\:-inset-y-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 0px;
              bottom: 0px;
            }
          }
        }
      }

      @include it('xl\:-start-0') {
        @include assert {
          @include output {
            @include xl\:-start-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: 0px;
            }
          }
        }
      }

      @include it('xl\:-end-0') {
        @include assert {
          @include output {
            @include xl\:-end-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: 0px;
            }
          }
        }
      }

      @include it('xl\:-top-0') {
        @include assert {
          @include output {
            @include xl\:-top-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 0px;
            }
          }
        }
      }

      @include it('xl\:-right-0') {
        @include assert {
          @include output {
            @include xl\:-right-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: 0px;
            }
          }
        }
      }

      @include it('xl\:-bottom-0') {
        @include assert {
          @include output {
            @include xl\:-bottom-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: 0px;
            }
          }
        }
      }

      @include it('xl\:-left-0') {
        @include assert {
          @include output {
            @include xl\:-left-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 0px;
            }
          }
        }
      }

      @include it('xl\:-inset-px') {
        @include assert {
          @include output {
            @include xl\:-inset-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: -1px;
            }
          }
        }
      }

      @include it('xl\:-inset-x-px') {
        @include assert {
          @include output {
            @include xl\:-inset-x-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -1px;
              right: -1px;
            }
          }
        }
      }

      @include it('xl\:-inset-y-px') {
        @include assert {
          @include output {
            @include xl\:-inset-y-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -1px;
              bottom: -1px;
            }
          }
        }
      }

      @include it('xl\:-start-px') {
        @include assert {
          @include output {
            @include xl\:-start-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: -1px;
            }
          }
        }
      }

      @include it('xl\:-end-px') {
        @include assert {
          @include output {
            @include xl\:-end-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: -1px;
            }
          }
        }
      }

      @include it('xl\:-top-px') {
        @include assert {
          @include output {
            @include xl\:-top-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -1px;
            }
          }
        }
      }

      @include it('xl\:-right-px') {
        @include assert {
          @include output {
            @include xl\:-right-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: -1px;
            }
          }
        }
      }

      @include it('xl\:-bottom-px') {
        @include assert {
          @include output {
            @include xl\:-bottom-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: -1px;
            }
          }
        }
      }

      @include it('xl\:-left-px') {
        @include assert {
          @include output {
            @include xl\:-left-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -1px;
            }
          }
        }
      }

      @include it('xl\:-inset-0\.5') {
        @include assert {
          @include output {
            @include xl\:-inset-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: -0.125rem;
            }
          }
        }
      }

      @include it('xl\:-inset-x-0\.5') {
        @include assert {
          @include output {
            @include xl\:-inset-x-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -0.125rem;
              right: -0.125rem;
            }
          }
        }
      }

      @include it('xl\:-inset-y-0\.5') {
        @include assert {
          @include output {
            @include xl\:-inset-y-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -0.125rem;
              bottom: -0.125rem;
            }
          }
        }
      }

      @include it('xl\:-start-0\.5') {
        @include assert {
          @include output {
            @include xl\:-start-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: -0.125rem;
            }
          }
        }
      }

      @include it('xl\:-end-0\.5') {
        @include assert {
          @include output {
            @include xl\:-end-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: -0.125rem;
            }
          }
        }
      }

      @include it('xl\:-top-0\.5') {
        @include assert {
          @include output {
            @include xl\:-top-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -0.125rem;
            }
          }
        }
      }

      @include it('xl\:-right-0\.5') {
        @include assert {
          @include output {
            @include xl\:-right-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: -0.125rem;
            }
          }
        }
      }

      @include it('xl\:-bottom-0\.5') {
        @include assert {
          @include output {
            @include xl\:-bottom-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: -0.125rem;
            }
          }
        }
      }

      @include it('xl\:-left-0\.5') {
        @include assert {
          @include output {
            @include xl\:-left-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -0.125rem;
            }
          }
        }
      }

      @include it('xl\:-inset-1') {
        @include assert {
          @include output {
            @include xl\:-inset-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: -0.25rem;
            }
          }
        }
      }

      @include it('xl\:-inset-x-1') {
        @include assert {
          @include output {
            @include xl\:-inset-x-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -0.25rem;
              right: -0.25rem;
            }
          }
        }
      }

      @include it('xl\:-inset-y-1') {
        @include assert {
          @include output {
            @include xl\:-inset-y-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -0.25rem;
              bottom: -0.25rem;
            }
          }
        }
      }

      @include it('xl\:-start-1') {
        @include assert {
          @include output {
            @include xl\:-start-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: -0.25rem;
            }
          }
        }
      }

      @include it('xl\:-end-1') {
        @include assert {
          @include output {
            @include xl\:-end-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: -0.25rem;
            }
          }
        }
      }

      @include it('xl\:-top-1') {
        @include assert {
          @include output {
            @include xl\:-top-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -0.25rem;
            }
          }
        }
      }

      @include it('xl\:-right-1') {
        @include assert {
          @include output {
            @include xl\:-right-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: -0.25rem;
            }
          }
        }
      }

      @include it('xl\:-bottom-1') {
        @include assert {
          @include output {
            @include xl\:-bottom-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: -0.25rem;
            }
          }
        }
      }

      @include it('xl\:-left-1') {
        @include assert {
          @include output {
            @include xl\:-left-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -0.25rem;
            }
          }
        }
      }

      @include it('xl\:-inset-1\.5') {
        @include assert {
          @include output {
            @include xl\:-inset-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: -0.375rem;
            }
          }
        }
      }

      @include it('xl\:-inset-x-1\.5') {
        @include assert {
          @include output {
            @include xl\:-inset-x-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -0.375rem;
              right: -0.375rem;
            }
          }
        }
      }

      @include it('xl\:-inset-y-1\.5') {
        @include assert {
          @include output {
            @include xl\:-inset-y-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -0.375rem;
              bottom: -0.375rem;
            }
          }
        }
      }

      @include it('xl\:-start-1\.5') {
        @include assert {
          @include output {
            @include xl\:-start-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: -0.375rem;
            }
          }
        }
      }

      @include it('xl\:-end-1\.5') {
        @include assert {
          @include output {
            @include xl\:-end-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: -0.375rem;
            }
          }
        }
      }

      @include it('xl\:-top-1\.5') {
        @include assert {
          @include output {
            @include xl\:-top-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -0.375rem;
            }
          }
        }
      }

      @include it('xl\:-right-1\.5') {
        @include assert {
          @include output {
            @include xl\:-right-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: -0.375rem;
            }
          }
        }
      }

      @include it('xl\:-bottom-1\.5') {
        @include assert {
          @include output {
            @include xl\:-bottom-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: -0.375rem;
            }
          }
        }
      }

      @include it('xl\:-left-1\.5') {
        @include assert {
          @include output {
            @include xl\:-left-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -0.375rem;
            }
          }
        }
      }

      @include it('xl\:-inset-2') {
        @include assert {
          @include output {
            @include xl\:-inset-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: -0.5rem;
            }
          }
        }
      }

      @include it('xl\:-inset-x-2') {
        @include assert {
          @include output {
            @include xl\:-inset-x-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -0.5rem;
              right: -0.5rem;
            }
          }
        }
      }

      @include it('xl\:-inset-y-2') {
        @include assert {
          @include output {
            @include xl\:-inset-y-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -0.5rem;
              bottom: -0.5rem;
            }
          }
        }
      }

      @include it('xl\:-start-2') {
        @include assert {
          @include output {
            @include xl\:-start-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: -0.5rem;
            }
          }
        }
      }

      @include it('xl\:-end-2') {
        @include assert {
          @include output {
            @include xl\:-end-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: -0.5rem;
            }
          }
        }
      }

      @include it('xl\:-top-2') {
        @include assert {
          @include output {
            @include xl\:-top-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -0.5rem;
            }
          }
        }
      }

      @include it('xl\:-right-2') {
        @include assert {
          @include output {
            @include xl\:-right-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: -0.5rem;
            }
          }
        }
      }

      @include it('xl\:-bottom-2') {
        @include assert {
          @include output {
            @include xl\:-bottom-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: -0.5rem;
            }
          }
        }
      }

      @include it('xl\:-left-2') {
        @include assert {
          @include output {
            @include xl\:-left-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -0.5rem;
            }
          }
        }
      }

      @include it('xl\:-inset-2\.5') {
        @include assert {
          @include output {
            @include xl\:-inset-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: -0.625rem;
            }
          }
        }
      }

      @include it('xl\:-inset-x-2\.5') {
        @include assert {
          @include output {
            @include xl\:-inset-x-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -0.625rem;
              right: -0.625rem;
            }
          }
        }
      }

      @include it('xl\:-inset-y-2\.5') {
        @include assert {
          @include output {
            @include xl\:-inset-y-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -0.625rem;
              bottom: -0.625rem;
            }
          }
        }
      }

      @include it('xl\:-start-2\.5') {
        @include assert {
          @include output {
            @include xl\:-start-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: -0.625rem;
            }
          }
        }
      }

      @include it('xl\:-end-2\.5') {
        @include assert {
          @include output {
            @include xl\:-end-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: -0.625rem;
            }
          }
        }
      }

      @include it('xl\:-top-2\.5') {
        @include assert {
          @include output {
            @include xl\:-top-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -0.625rem;
            }
          }
        }
      }

      @include it('xl\:-right-2\.5') {
        @include assert {
          @include output {
            @include xl\:-right-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: -0.625rem;
            }
          }
        }
      }

      @include it('xl\:-bottom-2\.5') {
        @include assert {
          @include output {
            @include xl\:-bottom-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: -0.625rem;
            }
          }
        }
      }

      @include it('xl\:-left-2\.5') {
        @include assert {
          @include output {
            @include xl\:-left-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -0.625rem;
            }
          }
        }
      }

      @include it('xl\:-inset-3') {
        @include assert {
          @include output {
            @include xl\:-inset-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: -0.75rem;
            }
          }
        }
      }

      @include it('xl\:-inset-x-3') {
        @include assert {
          @include output {
            @include xl\:-inset-x-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -0.75rem;
              right: -0.75rem;
            }
          }
        }
      }

      @include it('xl\:-inset-y-3') {
        @include assert {
          @include output {
            @include xl\:-inset-y-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -0.75rem;
              bottom: -0.75rem;
            }
          }
        }
      }

      @include it('xl\:-start-3') {
        @include assert {
          @include output {
            @include xl\:-start-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: -0.75rem;
            }
          }
        }
      }

      @include it('xl\:-end-3') {
        @include assert {
          @include output {
            @include xl\:-end-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: -0.75rem;
            }
          }
        }
      }

      @include it('xl\:-top-3') {
        @include assert {
          @include output {
            @include xl\:-top-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -0.75rem;
            }
          }
        }
      }

      @include it('xl\:-right-3') {
        @include assert {
          @include output {
            @include xl\:-right-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: -0.75rem;
            }
          }
        }
      }

      @include it('xl\:-bottom-3') {
        @include assert {
          @include output {
            @include xl\:-bottom-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: -0.75rem;
            }
          }
        }
      }

      @include it('xl\:-left-3') {
        @include assert {
          @include output {
            @include xl\:-left-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -0.75rem;
            }
          }
        }
      }

      @include it('xl\:-inset-3\.5') {
        @include assert {
          @include output {
            @include xl\:-inset-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: -0.875rem;
            }
          }
        }
      }

      @include it('xl\:-inset-x-3\.5') {
        @include assert {
          @include output {
            @include xl\:-inset-x-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -0.875rem;
              right: -0.875rem;
            }
          }
        }
      }

      @include it('xl\:-inset-y-3\.5') {
        @include assert {
          @include output {
            @include xl\:-inset-y-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -0.875rem;
              bottom: -0.875rem;
            }
          }
        }
      }

      @include it('xl\:-start-3\.5') {
        @include assert {
          @include output {
            @include xl\:-start-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: -0.875rem;
            }
          }
        }
      }

      @include it('xl\:-end-3\.5') {
        @include assert {
          @include output {
            @include xl\:-end-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: -0.875rem;
            }
          }
        }
      }

      @include it('xl\:-top-3\.5') {
        @include assert {
          @include output {
            @include xl\:-top-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -0.875rem;
            }
          }
        }
      }

      @include it('xl\:-right-3\.5') {
        @include assert {
          @include output {
            @include xl\:-right-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: -0.875rem;
            }
          }
        }
      }

      @include it('xl\:-bottom-3\.5') {
        @include assert {
          @include output {
            @include xl\:-bottom-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: -0.875rem;
            }
          }
        }
      }

      @include it('xl\:-left-3\.5') {
        @include assert {
          @include output {
            @include xl\:-left-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -0.875rem;
            }
          }
        }
      }

      @include it('xl\:-inset-4') {
        @include assert {
          @include output {
            @include xl\:-inset-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: -1rem;
            }
          }
        }
      }

      @include it('xl\:-inset-x-4') {
        @include assert {
          @include output {
            @include xl\:-inset-x-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -1rem;
              right: -1rem;
            }
          }
        }
      }

      @include it('xl\:-inset-y-4') {
        @include assert {
          @include output {
            @include xl\:-inset-y-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -1rem;
              bottom: -1rem;
            }
          }
        }
      }

      @include it('xl\:-start-4') {
        @include assert {
          @include output {
            @include xl\:-start-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: -1rem;
            }
          }
        }
      }

      @include it('xl\:-end-4') {
        @include assert {
          @include output {
            @include xl\:-end-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: -1rem;
            }
          }
        }
      }

      @include it('xl\:-top-4') {
        @include assert {
          @include output {
            @include xl\:-top-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -1rem;
            }
          }
        }
      }

      @include it('xl\:-right-4') {
        @include assert {
          @include output {
            @include xl\:-right-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: -1rem;
            }
          }
        }
      }

      @include it('xl\:-bottom-4') {
        @include assert {
          @include output {
            @include xl\:-bottom-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: -1rem;
            }
          }
        }
      }

      @include it('xl\:-left-4') {
        @include assert {
          @include output {
            @include xl\:-left-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -1rem;
            }
          }
        }
      }

      @include it('xl\:-inset-5') {
        @include assert {
          @include output {
            @include xl\:-inset-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: -1.25rem;
            }
          }
        }
      }

      @include it('xl\:-inset-x-5') {
        @include assert {
          @include output {
            @include xl\:-inset-x-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -1.25rem;
              right: -1.25rem;
            }
          }
        }
      }

      @include it('xl\:-inset-y-5') {
        @include assert {
          @include output {
            @include xl\:-inset-y-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -1.25rem;
              bottom: -1.25rem;
            }
          }
        }
      }

      @include it('xl\:-start-5') {
        @include assert {
          @include output {
            @include xl\:-start-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: -1.25rem;
            }
          }
        }
      }

      @include it('xl\:-end-5') {
        @include assert {
          @include output {
            @include xl\:-end-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: -1.25rem;
            }
          }
        }
      }

      @include it('xl\:-top-5') {
        @include assert {
          @include output {
            @include xl\:-top-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -1.25rem;
            }
          }
        }
      }

      @include it('xl\:-right-5') {
        @include assert {
          @include output {
            @include xl\:-right-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: -1.25rem;
            }
          }
        }
      }

      @include it('xl\:-bottom-5') {
        @include assert {
          @include output {
            @include xl\:-bottom-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: -1.25rem;
            }
          }
        }
      }

      @include it('xl\:-left-5') {
        @include assert {
          @include output {
            @include xl\:-left-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -1.25rem;
            }
          }
        }
      }

      @include it('xl\:-inset-6') {
        @include assert {
          @include output {
            @include xl\:-inset-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: -1.5rem;
            }
          }
        }
      }

      @include it('xl\:-inset-x-6') {
        @include assert {
          @include output {
            @include xl\:-inset-x-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -1.5rem;
              right: -1.5rem;
            }
          }
        }
      }

      @include it('xl\:-inset-y-6') {
        @include assert {
          @include output {
            @include xl\:-inset-y-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -1.5rem;
              bottom: -1.5rem;
            }
          }
        }
      }

      @include it('xl\:-start-6') {
        @include assert {
          @include output {
            @include xl\:-start-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: -1.5rem;
            }
          }
        }
      }

      @include it('xl\:-end-6') {
        @include assert {
          @include output {
            @include xl\:-end-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: -1.5rem;
            }
          }
        }
      }

      @include it('xl\:-top-6') {
        @include assert {
          @include output {
            @include xl\:-top-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -1.5rem;
            }
          }
        }
      }

      @include it('xl\:-right-6') {
        @include assert {
          @include output {
            @include xl\:-right-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: -1.5rem;
            }
          }
        }
      }

      @include it('xl\:-bottom-6') {
        @include assert {
          @include output {
            @include xl\:-bottom-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: -1.5rem;
            }
          }
        }
      }

      @include it('xl\:-left-6') {
        @include assert {
          @include output {
            @include xl\:-left-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -1.5rem;
            }
          }
        }
      }

      @include it('xl\:-inset-7') {
        @include assert {
          @include output {
            @include xl\:-inset-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: -1.75rem;
            }
          }
        }
      }

      @include it('xl\:-inset-x-7') {
        @include assert {
          @include output {
            @include xl\:-inset-x-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -1.75rem;
              right: -1.75rem;
            }
          }
        }
      }

      @include it('xl\:-inset-y-7') {
        @include assert {
          @include output {
            @include xl\:-inset-y-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -1.75rem;
              bottom: -1.75rem;
            }
          }
        }
      }

      @include it('xl\:-start-7') {
        @include assert {
          @include output {
            @include xl\:-start-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: -1.75rem;
            }
          }
        }
      }

      @include it('xl\:-end-7') {
        @include assert {
          @include output {
            @include xl\:-end-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: -1.75rem;
            }
          }
        }
      }

      @include it('xl\:-top-7') {
        @include assert {
          @include output {
            @include xl\:-top-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -1.75rem;
            }
          }
        }
      }

      @include it('xl\:-right-7') {
        @include assert {
          @include output {
            @include xl\:-right-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: -1.75rem;
            }
          }
        }
      }

      @include it('xl\:-bottom-7') {
        @include assert {
          @include output {
            @include xl\:-bottom-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: -1.75rem;
            }
          }
        }
      }

      @include it('xl\:-left-7') {
        @include assert {
          @include output {
            @include xl\:-left-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -1.75rem;
            }
          }
        }
      }

      @include it('xl\:-inset-8') {
        @include assert {
          @include output {
            @include xl\:-inset-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: -2rem;
            }
          }
        }
      }

      @include it('xl\:-inset-x-8') {
        @include assert {
          @include output {
            @include xl\:-inset-x-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -2rem;
              right: -2rem;
            }
          }
        }
      }

      @include it('xl\:-inset-y-8') {
        @include assert {
          @include output {
            @include xl\:-inset-y-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -2rem;
              bottom: -2rem;
            }
          }
        }
      }

      @include it('xl\:-start-8') {
        @include assert {
          @include output {
            @include xl\:-start-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: -2rem;
            }
          }
        }
      }

      @include it('xl\:-end-8') {
        @include assert {
          @include output {
            @include xl\:-end-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: -2rem;
            }
          }
        }
      }

      @include it('xl\:-top-8') {
        @include assert {
          @include output {
            @include xl\:-top-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -2rem;
            }
          }
        }
      }

      @include it('xl\:-right-8') {
        @include assert {
          @include output {
            @include xl\:-right-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: -2rem;
            }
          }
        }
      }

      @include it('xl\:-bottom-8') {
        @include assert {
          @include output {
            @include xl\:-bottom-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: -2rem;
            }
          }
        }
      }

      @include it('xl\:-left-8') {
        @include assert {
          @include output {
            @include xl\:-left-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -2rem;
            }
          }
        }
      }

      @include it('xl\:-inset-9') {
        @include assert {
          @include output {
            @include xl\:-inset-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: -2.25rem;
            }
          }
        }
      }

      @include it('xl\:-inset-x-9') {
        @include assert {
          @include output {
            @include xl\:-inset-x-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -2.25rem;
              right: -2.25rem;
            }
          }
        }
      }

      @include it('xl\:-inset-y-9') {
        @include assert {
          @include output {
            @include xl\:-inset-y-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -2.25rem;
              bottom: -2.25rem;
            }
          }
        }
      }

      @include it('xl\:-start-9') {
        @include assert {
          @include output {
            @include xl\:-start-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: -2.25rem;
            }
          }
        }
      }

      @include it('xl\:-end-9') {
        @include assert {
          @include output {
            @include xl\:-end-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: -2.25rem;
            }
          }
        }
      }

      @include it('xl\:-top-9') {
        @include assert {
          @include output {
            @include xl\:-top-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -2.25rem;
            }
          }
        }
      }

      @include it('xl\:-right-9') {
        @include assert {
          @include output {
            @include xl\:-right-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: -2.25rem;
            }
          }
        }
      }

      @include it('xl\:-bottom-9') {
        @include assert {
          @include output {
            @include xl\:-bottom-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: -2.25rem;
            }
          }
        }
      }

      @include it('xl\:-left-9') {
        @include assert {
          @include output {
            @include xl\:-left-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -2.25rem;
            }
          }
        }
      }

      @include it('xl\:-inset-10') {
        @include assert {
          @include output {
            @include xl\:-inset-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: -2.5rem;
            }
          }
        }
      }

      @include it('xl\:-inset-x-10') {
        @include assert {
          @include output {
            @include xl\:-inset-x-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -2.5rem;
              right: -2.5rem;
            }
          }
        }
      }

      @include it('xl\:-inset-y-10') {
        @include assert {
          @include output {
            @include xl\:-inset-y-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -2.5rem;
              bottom: -2.5rem;
            }
          }
        }
      }

      @include it('xl\:-start-10') {
        @include assert {
          @include output {
            @include xl\:-start-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: -2.5rem;
            }
          }
        }
      }

      @include it('xl\:-end-10') {
        @include assert {
          @include output {
            @include xl\:-end-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: -2.5rem;
            }
          }
        }
      }

      @include it('xl\:-top-10') {
        @include assert {
          @include output {
            @include xl\:-top-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -2.5rem;
            }
          }
        }
      }

      @include it('xl\:-right-10') {
        @include assert {
          @include output {
            @include xl\:-right-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: -2.5rem;
            }
          }
        }
      }

      @include it('xl\:-bottom-10') {
        @include assert {
          @include output {
            @include xl\:-bottom-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: -2.5rem;
            }
          }
        }
      }

      @include it('xl\:-left-10') {
        @include assert {
          @include output {
            @include xl\:-left-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -2.5rem;
            }
          }
        }
      }

      @include it('xl\:-inset-11') {
        @include assert {
          @include output {
            @include xl\:-inset-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: -2.75rem;
            }
          }
        }
      }

      @include it('xl\:-inset-x-11') {
        @include assert {
          @include output {
            @include xl\:-inset-x-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -2.75rem;
              right: -2.75rem;
            }
          }
        }
      }

      @include it('xl\:-inset-y-11') {
        @include assert {
          @include output {
            @include xl\:-inset-y-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -2.75rem;
              bottom: -2.75rem;
            }
          }
        }
      }

      @include it('xl\:-start-11') {
        @include assert {
          @include output {
            @include xl\:-start-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: -2.75rem;
            }
          }
        }
      }

      @include it('xl\:-end-11') {
        @include assert {
          @include output {
            @include xl\:-end-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: -2.75rem;
            }
          }
        }
      }

      @include it('xl\:-top-11') {
        @include assert {
          @include output {
            @include xl\:-top-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -2.75rem;
            }
          }
        }
      }

      @include it('xl\:-right-11') {
        @include assert {
          @include output {
            @include xl\:-right-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: -2.75rem;
            }
          }
        }
      }

      @include it('xl\:-bottom-11') {
        @include assert {
          @include output {
            @include xl\:-bottom-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: -2.75rem;
            }
          }
        }
      }

      @include it('xl\:-left-11') {
        @include assert {
          @include output {
            @include xl\:-left-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -2.75rem;
            }
          }
        }
      }

      @include it('xl\:-inset-12') {
        @include assert {
          @include output {
            @include xl\:-inset-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: -3rem;
            }
          }
        }
      }

      @include it('xl\:-inset-x-12') {
        @include assert {
          @include output {
            @include xl\:-inset-x-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -3rem;
              right: -3rem;
            }
          }
        }
      }

      @include it('xl\:-inset-y-12') {
        @include assert {
          @include output {
            @include xl\:-inset-y-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -3rem;
              bottom: -3rem;
            }
          }
        }
      }

      @include it('xl\:-start-12') {
        @include assert {
          @include output {
            @include xl\:-start-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: -3rem;
            }
          }
        }
      }

      @include it('xl\:-end-12') {
        @include assert {
          @include output {
            @include xl\:-end-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: -3rem;
            }
          }
        }
      }

      @include it('xl\:-top-12') {
        @include assert {
          @include output {
            @include xl\:-top-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -3rem;
            }
          }
        }
      }

      @include it('xl\:-right-12') {
        @include assert {
          @include output {
            @include xl\:-right-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: -3rem;
            }
          }
        }
      }

      @include it('xl\:-bottom-12') {
        @include assert {
          @include output {
            @include xl\:-bottom-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: -3rem;
            }
          }
        }
      }

      @include it('xl\:-left-12') {
        @include assert {
          @include output {
            @include xl\:-left-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -3rem;
            }
          }
        }
      }

      @include it('xl\:-inset-14') {
        @include assert {
          @include output {
            @include xl\:-inset-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: -3.5rem;
            }
          }
        }
      }

      @include it('xl\:-inset-x-14') {
        @include assert {
          @include output {
            @include xl\:-inset-x-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -3.5rem;
              right: -3.5rem;
            }
          }
        }
      }

      @include it('xl\:-inset-y-14') {
        @include assert {
          @include output {
            @include xl\:-inset-y-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -3.5rem;
              bottom: -3.5rem;
            }
          }
        }
      }

      @include it('xl\:-start-14') {
        @include assert {
          @include output {
            @include xl\:-start-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: -3.5rem;
            }
          }
        }
      }

      @include it('xl\:-end-14') {
        @include assert {
          @include output {
            @include xl\:-end-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: -3.5rem;
            }
          }
        }
      }

      @include it('xl\:-top-14') {
        @include assert {
          @include output {
            @include xl\:-top-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -3.5rem;
            }
          }
        }
      }

      @include it('xl\:-right-14') {
        @include assert {
          @include output {
            @include xl\:-right-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: -3.5rem;
            }
          }
        }
      }

      @include it('xl\:-bottom-14') {
        @include assert {
          @include output {
            @include xl\:-bottom-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: -3.5rem;
            }
          }
        }
      }

      @include it('xl\:-left-14') {
        @include assert {
          @include output {
            @include xl\:-left-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -3.5rem;
            }
          }
        }
      }

      @include it('xl\:-inset-16') {
        @include assert {
          @include output {
            @include xl\:-inset-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: -4rem;
            }
          }
        }
      }

      @include it('xl\:-inset-x-16') {
        @include assert {
          @include output {
            @include xl\:-inset-x-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -4rem;
              right: -4rem;
            }
          }
        }
      }

      @include it('xl\:-inset-y-16') {
        @include assert {
          @include output {
            @include xl\:-inset-y-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -4rem;
              bottom: -4rem;
            }
          }
        }
      }

      @include it('xl\:-start-16') {
        @include assert {
          @include output {
            @include xl\:-start-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: -4rem;
            }
          }
        }
      }

      @include it('xl\:-end-16') {
        @include assert {
          @include output {
            @include xl\:-end-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: -4rem;
            }
          }
        }
      }

      @include it('xl\:-top-16') {
        @include assert {
          @include output {
            @include xl\:-top-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -4rem;
            }
          }
        }
      }

      @include it('xl\:-right-16') {
        @include assert {
          @include output {
            @include xl\:-right-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: -4rem;
            }
          }
        }
      }

      @include it('xl\:-bottom-16') {
        @include assert {
          @include output {
            @include xl\:-bottom-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: -4rem;
            }
          }
        }
      }

      @include it('xl\:-left-16') {
        @include assert {
          @include output {
            @include xl\:-left-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -4rem;
            }
          }
        }
      }

      @include it('xl\:-inset-20') {
        @include assert {
          @include output {
            @include xl\:-inset-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: -5rem;
            }
          }
        }
      }

      @include it('xl\:-inset-x-20') {
        @include assert {
          @include output {
            @include xl\:-inset-x-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -5rem;
              right: -5rem;
            }
          }
        }
      }

      @include it('xl\:-inset-y-20') {
        @include assert {
          @include output {
            @include xl\:-inset-y-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -5rem;
              bottom: -5rem;
            }
          }
        }
      }

      @include it('xl\:-start-20') {
        @include assert {
          @include output {
            @include xl\:-start-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: -5rem;
            }
          }
        }
      }

      @include it('xl\:-end-20') {
        @include assert {
          @include output {
            @include xl\:-end-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: -5rem;
            }
          }
        }
      }

      @include it('xl\:-top-20') {
        @include assert {
          @include output {
            @include xl\:-top-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -5rem;
            }
          }
        }
      }

      @include it('xl\:-right-20') {
        @include assert {
          @include output {
            @include xl\:-right-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: -5rem;
            }
          }
        }
      }

      @include it('xl\:-bottom-20') {
        @include assert {
          @include output {
            @include xl\:-bottom-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: -5rem;
            }
          }
        }
      }

      @include it('xl\:-left-20') {
        @include assert {
          @include output {
            @include xl\:-left-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -5rem;
            }
          }
        }
      }

      @include it('xl\:-inset-24') {
        @include assert {
          @include output {
            @include xl\:-inset-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: -6rem;
            }
          }
        }
      }

      @include it('xl\:-inset-x-24') {
        @include assert {
          @include output {
            @include xl\:-inset-x-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -6rem;
              right: -6rem;
            }
          }
        }
      }

      @include it('xl\:-inset-y-24') {
        @include assert {
          @include output {
            @include xl\:-inset-y-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -6rem;
              bottom: -6rem;
            }
          }
        }
      }

      @include it('xl\:-start-24') {
        @include assert {
          @include output {
            @include xl\:-start-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: -6rem;
            }
          }
        }
      }

      @include it('xl\:-end-24') {
        @include assert {
          @include output {
            @include xl\:-end-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: -6rem;
            }
          }
        }
      }

      @include it('xl\:-top-24') {
        @include assert {
          @include output {
            @include xl\:-top-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -6rem;
            }
          }
        }
      }

      @include it('xl\:-right-24') {
        @include assert {
          @include output {
            @include xl\:-right-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: -6rem;
            }
          }
        }
      }

      @include it('xl\:-bottom-24') {
        @include assert {
          @include output {
            @include xl\:-bottom-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: -6rem;
            }
          }
        }
      }

      @include it('xl\:-left-24') {
        @include assert {
          @include output {
            @include xl\:-left-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -6rem;
            }
          }
        }
      }

      @include it('xl\:-inset-28') {
        @include assert {
          @include output {
            @include xl\:-inset-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: -7rem;
            }
          }
        }
      }

      @include it('xl\:-inset-x-28') {
        @include assert {
          @include output {
            @include xl\:-inset-x-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -7rem;
              right: -7rem;
            }
          }
        }
      }

      @include it('xl\:-inset-y-28') {
        @include assert {
          @include output {
            @include xl\:-inset-y-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -7rem;
              bottom: -7rem;
            }
          }
        }
      }

      @include it('xl\:-start-28') {
        @include assert {
          @include output {
            @include xl\:-start-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: -7rem;
            }
          }
        }
      }

      @include it('xl\:-end-28') {
        @include assert {
          @include output {
            @include xl\:-end-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: -7rem;
            }
          }
        }
      }

      @include it('xl\:-top-28') {
        @include assert {
          @include output {
            @include xl\:-top-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -7rem;
            }
          }
        }
      }

      @include it('xl\:-right-28') {
        @include assert {
          @include output {
            @include xl\:-right-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: -7rem;
            }
          }
        }
      }

      @include it('xl\:-bottom-28') {
        @include assert {
          @include output {
            @include xl\:-bottom-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: -7rem;
            }
          }
        }
      }

      @include it('xl\:-left-28') {
        @include assert {
          @include output {
            @include xl\:-left-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -7rem;
            }
          }
        }
      }

      @include it('xl\:-inset-32') {
        @include assert {
          @include output {
            @include xl\:-inset-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: -8rem;
            }
          }
        }
      }

      @include it('xl\:-inset-x-32') {
        @include assert {
          @include output {
            @include xl\:-inset-x-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -8rem;
              right: -8rem;
            }
          }
        }
      }

      @include it('xl\:-inset-y-32') {
        @include assert {
          @include output {
            @include xl\:-inset-y-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -8rem;
              bottom: -8rem;
            }
          }
        }
      }

      @include it('xl\:-start-32') {
        @include assert {
          @include output {
            @include xl\:-start-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: -8rem;
            }
          }
        }
      }

      @include it('xl\:-end-32') {
        @include assert {
          @include output {
            @include xl\:-end-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: -8rem;
            }
          }
        }
      }

      @include it('xl\:-top-32') {
        @include assert {
          @include output {
            @include xl\:-top-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -8rem;
            }
          }
        }
      }

      @include it('xl\:-right-32') {
        @include assert {
          @include output {
            @include xl\:-right-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: -8rem;
            }
          }
        }
      }

      @include it('xl\:-bottom-32') {
        @include assert {
          @include output {
            @include xl\:-bottom-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: -8rem;
            }
          }
        }
      }

      @include it('xl\:-left-32') {
        @include assert {
          @include output {
            @include xl\:-left-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -8rem;
            }
          }
        }
      }

      @include it('xl\:-inset-36') {
        @include assert {
          @include output {
            @include xl\:-inset-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: -9rem;
            }
          }
        }
      }

      @include it('xl\:-inset-x-36') {
        @include assert {
          @include output {
            @include xl\:-inset-x-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -9rem;
              right: -9rem;
            }
          }
        }
      }

      @include it('xl\:-inset-y-36') {
        @include assert {
          @include output {
            @include xl\:-inset-y-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -9rem;
              bottom: -9rem;
            }
          }
        }
      }

      @include it('xl\:-start-36') {
        @include assert {
          @include output {
            @include xl\:-start-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: -9rem;
            }
          }
        }
      }

      @include it('xl\:-end-36') {
        @include assert {
          @include output {
            @include xl\:-end-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: -9rem;
            }
          }
        }
      }

      @include it('xl\:-top-36') {
        @include assert {
          @include output {
            @include xl\:-top-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -9rem;
            }
          }
        }
      }

      @include it('xl\:-right-36') {
        @include assert {
          @include output {
            @include xl\:-right-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: -9rem;
            }
          }
        }
      }

      @include it('xl\:-bottom-36') {
        @include assert {
          @include output {
            @include xl\:-bottom-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: -9rem;
            }
          }
        }
      }

      @include it('xl\:-left-36') {
        @include assert {
          @include output {
            @include xl\:-left-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -9rem;
            }
          }
        }
      }

      @include it('xl\:-inset-40') {
        @include assert {
          @include output {
            @include xl\:-inset-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: -10rem;
            }
          }
        }
      }

      @include it('xl\:-inset-x-40') {
        @include assert {
          @include output {
            @include xl\:-inset-x-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -10rem;
              right: -10rem;
            }
          }
        }
      }

      @include it('xl\:-inset-y-40') {
        @include assert {
          @include output {
            @include xl\:-inset-y-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -10rem;
              bottom: -10rem;
            }
          }
        }
      }

      @include it('xl\:-start-40') {
        @include assert {
          @include output {
            @include xl\:-start-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: -10rem;
            }
          }
        }
      }

      @include it('xl\:-end-40') {
        @include assert {
          @include output {
            @include xl\:-end-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: -10rem;
            }
          }
        }
      }

      @include it('xl\:-top-40') {
        @include assert {
          @include output {
            @include xl\:-top-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -10rem;
            }
          }
        }
      }

      @include it('xl\:-right-40') {
        @include assert {
          @include output {
            @include xl\:-right-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: -10rem;
            }
          }
        }
      }

      @include it('xl\:-bottom-40') {
        @include assert {
          @include output {
            @include xl\:-bottom-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: -10rem;
            }
          }
        }
      }

      @include it('xl\:-left-40') {
        @include assert {
          @include output {
            @include xl\:-left-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -10rem;
            }
          }
        }
      }

      @include it('xl\:-inset-44') {
        @include assert {
          @include output {
            @include xl\:-inset-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: -11rem;
            }
          }
        }
      }

      @include it('xl\:-inset-x-44') {
        @include assert {
          @include output {
            @include xl\:-inset-x-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -11rem;
              right: -11rem;
            }
          }
        }
      }

      @include it('xl\:-inset-y-44') {
        @include assert {
          @include output {
            @include xl\:-inset-y-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -11rem;
              bottom: -11rem;
            }
          }
        }
      }

      @include it('xl\:-start-44') {
        @include assert {
          @include output {
            @include xl\:-start-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: -11rem;
            }
          }
        }
      }

      @include it('xl\:-end-44') {
        @include assert {
          @include output {
            @include xl\:-end-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: -11rem;
            }
          }
        }
      }

      @include it('xl\:-top-44') {
        @include assert {
          @include output {
            @include xl\:-top-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -11rem;
            }
          }
        }
      }

      @include it('xl\:-right-44') {
        @include assert {
          @include output {
            @include xl\:-right-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: -11rem;
            }
          }
        }
      }

      @include it('xl\:-bottom-44') {
        @include assert {
          @include output {
            @include xl\:-bottom-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: -11rem;
            }
          }
        }
      }

      @include it('xl\:-left-44') {
        @include assert {
          @include output {
            @include xl\:-left-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -11rem;
            }
          }
        }
      }

      @include it('xl\:-inset-48') {
        @include assert {
          @include output {
            @include xl\:-inset-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: -12rem;
            }
          }
        }
      }

      @include it('xl\:-inset-x-48') {
        @include assert {
          @include output {
            @include xl\:-inset-x-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -12rem;
              right: -12rem;
            }
          }
        }
      }

      @include it('xl\:-inset-y-48') {
        @include assert {
          @include output {
            @include xl\:-inset-y-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -12rem;
              bottom: -12rem;
            }
          }
        }
      }

      @include it('xl\:-start-48') {
        @include assert {
          @include output {
            @include xl\:-start-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: -12rem;
            }
          }
        }
      }

      @include it('xl\:-end-48') {
        @include assert {
          @include output {
            @include xl\:-end-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: -12rem;
            }
          }
        }
      }

      @include it('xl\:-top-48') {
        @include assert {
          @include output {
            @include xl\:-top-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -12rem;
            }
          }
        }
      }

      @include it('xl\:-right-48') {
        @include assert {
          @include output {
            @include xl\:-right-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: -12rem;
            }
          }
        }
      }

      @include it('xl\:-bottom-48') {
        @include assert {
          @include output {
            @include xl\:-bottom-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: -12rem;
            }
          }
        }
      }

      @include it('xl\:-left-48') {
        @include assert {
          @include output {
            @include xl\:-left-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -12rem;
            }
          }
        }
      }

      @include it('xl\:-inset-52') {
        @include assert {
          @include output {
            @include xl\:-inset-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: -13rem;
            }
          }
        }
      }

      @include it('xl\:-inset-x-52') {
        @include assert {
          @include output {
            @include xl\:-inset-x-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -13rem;
              right: -13rem;
            }
          }
        }
      }

      @include it('xl\:-inset-y-52') {
        @include assert {
          @include output {
            @include xl\:-inset-y-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -13rem;
              bottom: -13rem;
            }
          }
        }
      }

      @include it('xl\:-start-52') {
        @include assert {
          @include output {
            @include xl\:-start-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: -13rem;
            }
          }
        }
      }

      @include it('xl\:-end-52') {
        @include assert {
          @include output {
            @include xl\:-end-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: -13rem;
            }
          }
        }
      }

      @include it('xl\:-top-52') {
        @include assert {
          @include output {
            @include xl\:-top-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -13rem;
            }
          }
        }
      }

      @include it('xl\:-right-52') {
        @include assert {
          @include output {
            @include xl\:-right-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: -13rem;
            }
          }
        }
      }

      @include it('xl\:-bottom-52') {
        @include assert {
          @include output {
            @include xl\:-bottom-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: -13rem;
            }
          }
        }
      }

      @include it('xl\:-left-52') {
        @include assert {
          @include output {
            @include xl\:-left-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -13rem;
            }
          }
        }
      }

      @include it('xl\:-inset-56') {
        @include assert {
          @include output {
            @include xl\:-inset-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: -14rem;
            }
          }
        }
      }

      @include it('xl\:-inset-x-56') {
        @include assert {
          @include output {
            @include xl\:-inset-x-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -14rem;
              right: -14rem;
            }
          }
        }
      }

      @include it('xl\:-inset-y-56') {
        @include assert {
          @include output {
            @include xl\:-inset-y-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -14rem;
              bottom: -14rem;
            }
          }
        }
      }

      @include it('xl\:-start-56') {
        @include assert {
          @include output {
            @include xl\:-start-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: -14rem;
            }
          }
        }
      }

      @include it('xl\:-end-56') {
        @include assert {
          @include output {
            @include xl\:-end-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: -14rem;
            }
          }
        }
      }

      @include it('xl\:-top-56') {
        @include assert {
          @include output {
            @include xl\:-top-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -14rem;
            }
          }
        }
      }

      @include it('xl\:-right-56') {
        @include assert {
          @include output {
            @include xl\:-right-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: -14rem;
            }
          }
        }
      }

      @include it('xl\:-bottom-56') {
        @include assert {
          @include output {
            @include xl\:-bottom-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: -14rem;
            }
          }
        }
      }

      @include it('xl\:-left-56') {
        @include assert {
          @include output {
            @include xl\:-left-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -14rem;
            }
          }
        }
      }

      @include it('xl\:-inset-60') {
        @include assert {
          @include output {
            @include xl\:-inset-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: -15rem;
            }
          }
        }
      }

      @include it('xl\:-inset-x-60') {
        @include assert {
          @include output {
            @include xl\:-inset-x-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -15rem;
              right: -15rem;
            }
          }
        }
      }

      @include it('xl\:-inset-y-60') {
        @include assert {
          @include output {
            @include xl\:-inset-y-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -15rem;
              bottom: -15rem;
            }
          }
        }
      }

      @include it('xl\:-start-60') {
        @include assert {
          @include output {
            @include xl\:-start-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: -15rem;
            }
          }
        }
      }

      @include it('xl\:-end-60') {
        @include assert {
          @include output {
            @include xl\:-end-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: -15rem;
            }
          }
        }
      }

      @include it('xl\:-top-60') {
        @include assert {
          @include output {
            @include xl\:-top-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -15rem;
            }
          }
        }
      }

      @include it('xl\:-right-60') {
        @include assert {
          @include output {
            @include xl\:-right-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: -15rem;
            }
          }
        }
      }

      @include it('xl\:-bottom-60') {
        @include assert {
          @include output {
            @include xl\:-bottom-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: -15rem;
            }
          }
        }
      }

      @include it('xl\:-left-60') {
        @include assert {
          @include output {
            @include xl\:-left-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -15rem;
            }
          }
        }
      }

      @include it('xl\:-inset-64') {
        @include assert {
          @include output {
            @include xl\:-inset-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: -16rem;
            }
          }
        }
      }

      @include it('xl\:-inset-x-64') {
        @include assert {
          @include output {
            @include xl\:-inset-x-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -16rem;
              right: -16rem;
            }
          }
        }
      }

      @include it('xl\:-inset-y-64') {
        @include assert {
          @include output {
            @include xl\:-inset-y-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -16rem;
              bottom: -16rem;
            }
          }
        }
      }

      @include it('xl\:-start-64') {
        @include assert {
          @include output {
            @include xl\:-start-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: -16rem;
            }
          }
        }
      }

      @include it('xl\:-end-64') {
        @include assert {
          @include output {
            @include xl\:-end-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: -16rem;
            }
          }
        }
      }

      @include it('xl\:-top-64') {
        @include assert {
          @include output {
            @include xl\:-top-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -16rem;
            }
          }
        }
      }

      @include it('xl\:-right-64') {
        @include assert {
          @include output {
            @include xl\:-right-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: -16rem;
            }
          }
        }
      }

      @include it('xl\:-bottom-64') {
        @include assert {
          @include output {
            @include xl\:-bottom-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: -16rem;
            }
          }
        }
      }

      @include it('xl\:-left-64') {
        @include assert {
          @include output {
            @include xl\:-left-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -16rem;
            }
          }
        }
      }

      @include it('xl\:-inset-72') {
        @include assert {
          @include output {
            @include xl\:-inset-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: -18rem;
            }
          }
        }
      }

      @include it('xl\:-inset-x-72') {
        @include assert {
          @include output {
            @include xl\:-inset-x-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -18rem;
              right: -18rem;
            }
          }
        }
      }

      @include it('xl\:-inset-y-72') {
        @include assert {
          @include output {
            @include xl\:-inset-y-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -18rem;
              bottom: -18rem;
            }
          }
        }
      }

      @include it('xl\:-start-72') {
        @include assert {
          @include output {
            @include xl\:-start-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: -18rem;
            }
          }
        }
      }

      @include it('xl\:-end-72') {
        @include assert {
          @include output {
            @include xl\:-end-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: -18rem;
            }
          }
        }
      }

      @include it('xl\:-top-72') {
        @include assert {
          @include output {
            @include xl\:-top-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -18rem;
            }
          }
        }
      }

      @include it('xl\:-right-72') {
        @include assert {
          @include output {
            @include xl\:-right-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: -18rem;
            }
          }
        }
      }

      @include it('xl\:-bottom-72') {
        @include assert {
          @include output {
            @include xl\:-bottom-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: -18rem;
            }
          }
        }
      }

      @include it('xl\:-left-72') {
        @include assert {
          @include output {
            @include xl\:-left-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -18rem;
            }
          }
        }
      }

      @include it('xl\:-inset-80') {
        @include assert {
          @include output {
            @include xl\:-inset-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: -20rem;
            }
          }
        }
      }

      @include it('xl\:-inset-x-80') {
        @include assert {
          @include output {
            @include xl\:-inset-x-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -20rem;
              right: -20rem;
            }
          }
        }
      }

      @include it('xl\:-inset-y-80') {
        @include assert {
          @include output {
            @include xl\:-inset-y-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -20rem;
              bottom: -20rem;
            }
          }
        }
      }

      @include it('xl\:-start-80') {
        @include assert {
          @include output {
            @include xl\:-start-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: -20rem;
            }
          }
        }
      }

      @include it('xl\:-end-80') {
        @include assert {
          @include output {
            @include xl\:-end-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: -20rem;
            }
          }
        }
      }

      @include it('xl\:-top-80') {
        @include assert {
          @include output {
            @include xl\:-top-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -20rem;
            }
          }
        }
      }

      @include it('xl\:-right-80') {
        @include assert {
          @include output {
            @include xl\:-right-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: -20rem;
            }
          }
        }
      }

      @include it('xl\:-bottom-80') {
        @include assert {
          @include output {
            @include xl\:-bottom-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: -20rem;
            }
          }
        }
      }

      @include it('xl\:-left-80') {
        @include assert {
          @include output {
            @include xl\:-left-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -20rem;
            }
          }
        }
      }

      @include it('xl\:-inset-96') {
        @include assert {
          @include output {
            @include xl\:-inset-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: -24rem;
            }
          }
        }
      }

      @include it('xl\:-inset-x-96') {
        @include assert {
          @include output {
            @include xl\:-inset-x-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -24rem;
              right: -24rem;
            }
          }
        }
      }

      @include it('xl\:-inset-y-96') {
        @include assert {
          @include output {
            @include xl\:-inset-y-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -24rem;
              bottom: -24rem;
            }
          }
        }
      }

      @include it('xl\:-start-96') {
        @include assert {
          @include output {
            @include xl\:-start-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: -24rem;
            }
          }
        }
      }

      @include it('xl\:-end-96') {
        @include assert {
          @include output {
            @include xl\:-end-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: -24rem;
            }
          }
        }
      }

      @include it('xl\:-top-96') {
        @include assert {
          @include output {
            @include xl\:-top-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -24rem;
            }
          }
        }
      }

      @include it('xl\:-right-96') {
        @include assert {
          @include output {
            @include xl\:-right-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: -24rem;
            }
          }
        }
      }

      @include it('xl\:-bottom-96') {
        @include assert {
          @include output {
            @include xl\:-bottom-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: -24rem;
            }
          }
        }
      }

      @include it('xl\:-left-96') {
        @include assert {
          @include output {
            @include xl\:-left-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -24rem;
            }
          }
        }
      }

      @include it('xl\:-inset-1\/2') {
        @include assert {
          @include output {
            @include xl\:-inset-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: -50%;
            }
          }
        }
      }

      @include it('xl\:-inset-1\/3') {
        @include assert {
          @include output {
            @include xl\:-inset-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: -33.333333%;
            }
          }
        }
      }

      @include it('xl\:-inset-2\/3') {
        @include assert {
          @include output {
            @include xl\:-inset-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: -66.666667%;
            }
          }
        }
      }

      @include it('xl\:-inset-1\/4') {
        @include assert {
          @include output {
            @include xl\:-inset-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: -25%;
            }
          }
        }
      }

      @include it('xl\:-inset-2\/4') {
        @include assert {
          @include output {
            @include xl\:-inset-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: -50%;
            }
          }
        }
      }

      @include it('xl\:-inset-3\/4') {
        @include assert {
          @include output {
            @include xl\:-inset-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: -75%;
            }
          }
        }
      }

      @include it('xl\:-inset-full') {
        @include assert {
          @include output {
            @include xl\:-inset-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: -100%;
            }
          }
        }
      }

      @include it('xl\:-inset-x-1\/2') {
        @include assert {
          @include output {
            @include xl\:-inset-x-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -50%;
              right: -50%;
            }
          }
        }
      }

      @include it('xl\:-inset-x-1\/3') {
        @include assert {
          @include output {
            @include xl\:-inset-x-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -33.333333%;
              right: -33.333333%;
            }
          }
        }
      }

      @include it('xl\:-inset-x-2\/3') {
        @include assert {
          @include output {
            @include xl\:-inset-x-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -66.666667%;
              right: -66.666667%;
            }
          }
        }
      }

      @include it('xl\:-inset-x-1\/4') {
        @include assert {
          @include output {
            @include xl\:-inset-x-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -25%;
              right: -25%;
            }
          }
        }
      }

      @include it('xl\:-inset-x-2\/4') {
        @include assert {
          @include output {
            @include xl\:-inset-x-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -50%;
              right: -50%;
            }
          }
        }
      }

      @include it('xl\:-inset-x-3\/4') {
        @include assert {
          @include output {
            @include xl\:-inset-x-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -75%;
              right: -75%;
            }
          }
        }
      }

      @include it('xl\:-inset-x-full') {
        @include assert {
          @include output {
            @include xl\:-inset-x-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -100%;
              right: -100%;
            }
          }
        }
      }

      @include it('xl\:-inset-y-1\/2') {
        @include assert {
          @include output {
            @include xl\:-inset-y-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -50%;
              bottom: -50%;
            }
          }
        }
      }

      @include it('xl\:-inset-y-1\/3') {
        @include assert {
          @include output {
            @include xl\:-inset-y-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -33.333333%;
              bottom: -33.333333%;
            }
          }
        }
      }

      @include it('xl\:-inset-y-2\/3') {
        @include assert {
          @include output {
            @include xl\:-inset-y-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -66.666667%;
              bottom: -66.666667%;
            }
          }
        }
      }

      @include it('xl\:-inset-y-1\/4') {
        @include assert {
          @include output {
            @include xl\:-inset-y-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -25%;
              bottom: -25%;
            }
          }
        }
      }

      @include it('xl\:-inset-y-2\/4') {
        @include assert {
          @include output {
            @include xl\:-inset-y-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -50%;
              bottom: -50%;
            }
          }
        }
      }

      @include it('xl\:-inset-y-3\/4') {
        @include assert {
          @include output {
            @include xl\:-inset-y-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -75%;
              bottom: -75%;
            }
          }
        }
      }

      @include it('xl\:-inset-y-full') {
        @include assert {
          @include output {
            @include xl\:-inset-y-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -100%;
              bottom: -100%;
            }
          }
        }
      }

      @include it('xl\:-start-1\/2') {
        @include assert {
          @include output {
            @include xl\:-start-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: -50%;
            }
          }
        }
      }

      @include it('xl\:-start-1\/3') {
        @include assert {
          @include output {
            @include xl\:-start-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: -33.333333%;
            }
          }
        }
      }

      @include it('xl\:-start-2\/3') {
        @include assert {
          @include output {
            @include xl\:-start-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: -66.666667%;
            }
          }
        }
      }

      @include it('xl\:-start-1\/4') {
        @include assert {
          @include output {
            @include xl\:-start-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: -25%;
            }
          }
        }
      }

      @include it('xl\:-start-2\/4') {
        @include assert {
          @include output {
            @include xl\:-start-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: -50%;
            }
          }
        }
      }

      @include it('xl\:-start-3\/4') {
        @include assert {
          @include output {
            @include xl\:-start-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: -75%;
            }
          }
        }
      }

      @include it('xl\:-start-full') {
        @include assert {
          @include output {
            @include xl\:-start-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: -100%;
            }
          }
        }
      }

      @include it('xl\:-end-1\/2') {
        @include assert {
          @include output {
            @include xl\:-end-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: -50%;
            }
          }
        }
      }

      @include it('xl\:-end-1\/3') {
        @include assert {
          @include output {
            @include xl\:-end-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: -33.333333%;
            }
          }
        }
      }

      @include it('xl\:-end-2\/3') {
        @include assert {
          @include output {
            @include xl\:-end-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: -66.666667%;
            }
          }
        }
      }

      @include it('xl\:-end-1\/4') {
        @include assert {
          @include output {
            @include xl\:-end-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: -25%;
            }
          }
        }
      }

      @include it('xl\:-end-2\/4') {
        @include assert {
          @include output {
            @include xl\:-end-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: -50%;
            }
          }
        }
      }

      @include it('xl\:-end-3\/4') {
        @include assert {
          @include output {
            @include xl\:-end-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: -75%;
            }
          }
        }
      }

      @include it('xl\:-end-full') {
        @include assert {
          @include output {
            @include xl\:-end-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: -100%;
            }
          }
        }
      }

      @include it('xl\:-top-1\/2') {
        @include assert {
          @include output {
            @include xl\:-top-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -50%;
            }
          }
        }
      }

      @include it('xl\:-top-1\/3') {
        @include assert {
          @include output {
            @include xl\:-top-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -33.333333%;
            }
          }
        }
      }

      @include it('xl\:-top-2\/3') {
        @include assert {
          @include output {
            @include xl\:-top-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -66.666667%;
            }
          }
        }
      }

      @include it('xl\:-top-1\/4') {
        @include assert {
          @include output {
            @include xl\:-top-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -25%;
            }
          }
        }
      }

      @include it('xl\:-top-2\/4') {
        @include assert {
          @include output {
            @include xl\:-top-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -50%;
            }
          }
        }
      }

      @include it('xl\:-top-3\/4') {
        @include assert {
          @include output {
            @include xl\:-top-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -75%;
            }
          }
        }
      }

      @include it('xl\:-top-full') {
        @include assert {
          @include output {
            @include xl\:-top-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -100%;
            }
          }
        }
      }

      @include it('xl\:-right-1\/2') {
        @include assert {
          @include output {
            @include xl\:-right-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: -50%;
            }
          }
        }
      }

      @include it('xl\:-right-1\/3') {
        @include assert {
          @include output {
            @include xl\:-right-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: -33.333333%;
            }
          }
        }
      }

      @include it('xl\:-right-2\/3') {
        @include assert {
          @include output {
            @include xl\:-right-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: -66.666667%;
            }
          }
        }
      }

      @include it('xl\:-right-1\/4') {
        @include assert {
          @include output {
            @include xl\:-right-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: -25%;
            }
          }
        }
      }

      @include it('xl\:-right-2\/4') {
        @include assert {
          @include output {
            @include xl\:-right-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: -50%;
            }
          }
        }
      }

      @include it('xl\:-right-3\/4') {
        @include assert {
          @include output {
            @include xl\:-right-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: -75%;
            }
          }
        }
      }

      @include it('xl\:-right-full') {
        @include assert {
          @include output {
            @include xl\:-right-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: -100%;
            }
          }
        }
      }

      @include it('xl\:-bottom-1\/2') {
        @include assert {
          @include output {
            @include xl\:-bottom-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: -50%;
            }
          }
        }
      }

      @include it('xl\:-bottom-1\/3') {
        @include assert {
          @include output {
            @include xl\:-bottom-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: -33.333333%;
            }
          }
        }
      }

      @include it('xl\:-bottom-2\/3') {
        @include assert {
          @include output {
            @include xl\:-bottom-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: -66.666667%;
            }
          }
        }
      }

      @include it('xl\:-bottom-1\/4') {
        @include assert {
          @include output {
            @include xl\:-bottom-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: -25%;
            }
          }
        }
      }

      @include it('xl\:-bottom-2\/4') {
        @include assert {
          @include output {
            @include xl\:-bottom-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: -50%;
            }
          }
        }
      }

      @include it('xl\:-bottom-3\/4') {
        @include assert {
          @include output {
            @include xl\:-bottom-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: -75%;
            }
          }
        }
      }

      @include it('xl\:-bottom-full') {
        @include assert {
          @include output {
            @include xl\:-bottom-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: -100%;
            }
          }
        }
      }

      @include it('xl\:-left-1\/2') {
        @include assert {
          @include output {
            @include xl\:-left-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -50%;
            }
          }
        }
      }

      @include it('xl\:-left-1\/3') {
        @include assert {
          @include output {
            @include xl\:-left-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -33.333333%;
            }
          }
        }
      }

      @include it('xl\:-left-2\/3') {
        @include assert {
          @include output {
            @include xl\:-left-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -66.666667%;
            }
          }
        }
      }

      @include it('xl\:-left-1\/4') {
        @include assert {
          @include output {
            @include xl\:-left-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -25%;
            }
          }
        }
      }

      @include it('xl\:-left-2\/4') {
        @include assert {
          @include output {
            @include xl\:-left-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -50%;
            }
          }
        }
      }

      @include it('xl\:-left-3\/4') {
        @include assert {
          @include output {
            @include xl\:-left-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -75%;
            }
          }
        }
      }

      @include it('xl\:-left-full') {
        @include assert {
          @include output {
            @include xl\:-left-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -100%;
            }
          }
        }
      }

      @include it('2xl\:inset-0') {
        @include assert {
          @include output {
            @include \2xl\:inset-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: 0px;
            }
          }
        }
      }

      @include it('2xl\:inset-x-0') {
        @include assert {
          @include output {
            @include \2xl\:inset-x-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 0px;
              right: 0px;
            }
          }
        }
      }

      @include it('2xl\:inset-y-0') {
        @include assert {
          @include output {
            @include \2xl\:inset-y-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 0px;
              bottom: 0px;
            }
          }
        }
      }

      @include it('2xl\:start-0') {
        @include assert {
          @include output {
            @include \2xl\:start-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: 0px;
            }
          }
        }
      }

      @include it('2xl\:end-0') {
        @include assert {
          @include output {
            @include \2xl\:end-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: 0px;
            }
          }
        }
      }

      @include it('2xl\:top-0') {
        @include assert {
          @include output {
            @include \2xl\:top-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 0px;
            }
          }
        }
      }

      @include it('2xl\:right-0') {
        @include assert {
          @include output {
            @include \2xl\:right-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: 0px;
            }
          }
        }
      }

      @include it('2xl\:bottom-0') {
        @include assert {
          @include output {
            @include \2xl\:bottom-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: 0px;
            }
          }
        }
      }

      @include it('2xl\:left-0') {
        @include assert {
          @include output {
            @include \2xl\:left-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 0px;
            }
          }
        }
      }

      @include it('2xl\:inset-px') {
        @include assert {
          @include output {
            @include \2xl\:inset-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: 1px;
            }
          }
        }
      }

      @include it('2xl\:inset-x-px') {
        @include assert {
          @include output {
            @include \2xl\:inset-x-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 1px;
              right: 1px;
            }
          }
        }
      }

      @include it('2xl\:inset-y-px') {
        @include assert {
          @include output {
            @include \2xl\:inset-y-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 1px;
              bottom: 1px;
            }
          }
        }
      }

      @include it('2xl\:start-px') {
        @include assert {
          @include output {
            @include \2xl\:start-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: 1px;
            }
          }
        }
      }

      @include it('2xl\:end-px') {
        @include assert {
          @include output {
            @include \2xl\:end-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: 1px;
            }
          }
        }
      }

      @include it('2xl\:top-px') {
        @include assert {
          @include output {
            @include \2xl\:top-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 1px;
            }
          }
        }
      }

      @include it('2xl\:right-px') {
        @include assert {
          @include output {
            @include \2xl\:right-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: 1px;
            }
          }
        }
      }

      @include it('2xl\:bottom-px') {
        @include assert {
          @include output {
            @include \2xl\:bottom-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: 1px;
            }
          }
        }
      }

      @include it('2xl\:left-px') {
        @include assert {
          @include output {
            @include \2xl\:left-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 1px;
            }
          }
        }
      }

      @include it('2xl\:inset-0\.5') {
        @include assert {
          @include output {
            @include \2xl\:inset-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: 0.125rem;
            }
          }
        }
      }

      @include it('2xl\:inset-x-0\.5') {
        @include assert {
          @include output {
            @include \2xl\:inset-x-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 0.125rem;
              right: 0.125rem;
            }
          }
        }
      }

      @include it('2xl\:inset-y-0\.5') {
        @include assert {
          @include output {
            @include \2xl\:inset-y-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 0.125rem;
              bottom: 0.125rem;
            }
          }
        }
      }

      @include it('2xl\:start-0\.5') {
        @include assert {
          @include output {
            @include \2xl\:start-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: 0.125rem;
            }
          }
        }
      }

      @include it('2xl\:end-0\.5') {
        @include assert {
          @include output {
            @include \2xl\:end-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: 0.125rem;
            }
          }
        }
      }

      @include it('2xl\:top-0\.5') {
        @include assert {
          @include output {
            @include \2xl\:top-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 0.125rem;
            }
          }
        }
      }

      @include it('2xl\:right-0\.5') {
        @include assert {
          @include output {
            @include \2xl\:right-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: 0.125rem;
            }
          }
        }
      }

      @include it('2xl\:bottom-0\.5') {
        @include assert {
          @include output {
            @include \2xl\:bottom-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: 0.125rem;
            }
          }
        }
      }

      @include it('2xl\:left-0\.5') {
        @include assert {
          @include output {
            @include \2xl\:left-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 0.125rem;
            }
          }
        }
      }

      @include it('2xl\:inset-1') {
        @include assert {
          @include output {
            @include \2xl\:inset-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: 0.25rem;
            }
          }
        }
      }

      @include it('2xl\:inset-x-1') {
        @include assert {
          @include output {
            @include \2xl\:inset-x-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 0.25rem;
              right: 0.25rem;
            }
          }
        }
      }

      @include it('2xl\:inset-y-1') {
        @include assert {
          @include output {
            @include \2xl\:inset-y-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 0.25rem;
              bottom: 0.25rem;
            }
          }
        }
      }

      @include it('2xl\:start-1') {
        @include assert {
          @include output {
            @include \2xl\:start-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: 0.25rem;
            }
          }
        }
      }

      @include it('2xl\:end-1') {
        @include assert {
          @include output {
            @include \2xl\:end-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: 0.25rem;
            }
          }
        }
      }

      @include it('2xl\:top-1') {
        @include assert {
          @include output {
            @include \2xl\:top-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 0.25rem;
            }
          }
        }
      }

      @include it('2xl\:right-1') {
        @include assert {
          @include output {
            @include \2xl\:right-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: 0.25rem;
            }
          }
        }
      }

      @include it('2xl\:bottom-1') {
        @include assert {
          @include output {
            @include \2xl\:bottom-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: 0.25rem;
            }
          }
        }
      }

      @include it('2xl\:left-1') {
        @include assert {
          @include output {
            @include \2xl\:left-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 0.25rem;
            }
          }
        }
      }

      @include it('2xl\:inset-1\.5') {
        @include assert {
          @include output {
            @include \2xl\:inset-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: 0.375rem;
            }
          }
        }
      }

      @include it('2xl\:inset-x-1\.5') {
        @include assert {
          @include output {
            @include \2xl\:inset-x-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 0.375rem;
              right: 0.375rem;
            }
          }
        }
      }

      @include it('2xl\:inset-y-1\.5') {
        @include assert {
          @include output {
            @include \2xl\:inset-y-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 0.375rem;
              bottom: 0.375rem;
            }
          }
        }
      }

      @include it('2xl\:start-1\.5') {
        @include assert {
          @include output {
            @include \2xl\:start-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: 0.375rem;
            }
          }
        }
      }

      @include it('2xl\:end-1\.5') {
        @include assert {
          @include output {
            @include \2xl\:end-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: 0.375rem;
            }
          }
        }
      }

      @include it('2xl\:top-1\.5') {
        @include assert {
          @include output {
            @include \2xl\:top-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 0.375rem;
            }
          }
        }
      }

      @include it('2xl\:right-1\.5') {
        @include assert {
          @include output {
            @include \2xl\:right-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: 0.375rem;
            }
          }
        }
      }

      @include it('2xl\:bottom-1\.5') {
        @include assert {
          @include output {
            @include \2xl\:bottom-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: 0.375rem;
            }
          }
        }
      }

      @include it('2xl\:left-1\.5') {
        @include assert {
          @include output {
            @include \2xl\:left-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 0.375rem;
            }
          }
        }
      }

      @include it('2xl\:inset-2') {
        @include assert {
          @include output {
            @include \2xl\:inset-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: 0.5rem;
            }
          }
        }
      }

      @include it('2xl\:inset-x-2') {
        @include assert {
          @include output {
            @include \2xl\:inset-x-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 0.5rem;
              right: 0.5rem;
            }
          }
        }
      }

      @include it('2xl\:inset-y-2') {
        @include assert {
          @include output {
            @include \2xl\:inset-y-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 0.5rem;
              bottom: 0.5rem;
            }
          }
        }
      }

      @include it('2xl\:start-2') {
        @include assert {
          @include output {
            @include \2xl\:start-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: 0.5rem;
            }
          }
        }
      }

      @include it('2xl\:end-2') {
        @include assert {
          @include output {
            @include \2xl\:end-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: 0.5rem;
            }
          }
        }
      }

      @include it('2xl\:top-2') {
        @include assert {
          @include output {
            @include \2xl\:top-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 0.5rem;
            }
          }
        }
      }

      @include it('2xl\:right-2') {
        @include assert {
          @include output {
            @include \2xl\:right-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: 0.5rem;
            }
          }
        }
      }

      @include it('2xl\:bottom-2') {
        @include assert {
          @include output {
            @include \2xl\:bottom-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: 0.5rem;
            }
          }
        }
      }

      @include it('2xl\:left-2') {
        @include assert {
          @include output {
            @include \2xl\:left-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 0.5rem;
            }
          }
        }
      }

      @include it('2xl\:inset-2\.5') {
        @include assert {
          @include output {
            @include \2xl\:inset-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: 0.625rem;
            }
          }
        }
      }

      @include it('2xl\:inset-x-2\.5') {
        @include assert {
          @include output {
            @include \2xl\:inset-x-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 0.625rem;
              right: 0.625rem;
            }
          }
        }
      }

      @include it('2xl\:inset-y-2\.5') {
        @include assert {
          @include output {
            @include \2xl\:inset-y-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 0.625rem;
              bottom: 0.625rem;
            }
          }
        }
      }

      @include it('2xl\:start-2\.5') {
        @include assert {
          @include output {
            @include \2xl\:start-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: 0.625rem;
            }
          }
        }
      }

      @include it('2xl\:end-2\.5') {
        @include assert {
          @include output {
            @include \2xl\:end-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: 0.625rem;
            }
          }
        }
      }

      @include it('2xl\:top-2\.5') {
        @include assert {
          @include output {
            @include \2xl\:top-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 0.625rem;
            }
          }
        }
      }

      @include it('2xl\:right-2\.5') {
        @include assert {
          @include output {
            @include \2xl\:right-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: 0.625rem;
            }
          }
        }
      }

      @include it('2xl\:bottom-2\.5') {
        @include assert {
          @include output {
            @include \2xl\:bottom-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: 0.625rem;
            }
          }
        }
      }

      @include it('2xl\:left-2\.5') {
        @include assert {
          @include output {
            @include \2xl\:left-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 0.625rem;
            }
          }
        }
      }

      @include it('2xl\:inset-3') {
        @include assert {
          @include output {
            @include \2xl\:inset-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: 0.75rem;
            }
          }
        }
      }

      @include it('2xl\:inset-x-3') {
        @include assert {
          @include output {
            @include \2xl\:inset-x-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 0.75rem;
              right: 0.75rem;
            }
          }
        }
      }

      @include it('2xl\:inset-y-3') {
        @include assert {
          @include output {
            @include \2xl\:inset-y-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 0.75rem;
              bottom: 0.75rem;
            }
          }
        }
      }

      @include it('2xl\:start-3') {
        @include assert {
          @include output {
            @include \2xl\:start-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: 0.75rem;
            }
          }
        }
      }

      @include it('2xl\:end-3') {
        @include assert {
          @include output {
            @include \2xl\:end-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: 0.75rem;
            }
          }
        }
      }

      @include it('2xl\:top-3') {
        @include assert {
          @include output {
            @include \2xl\:top-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 0.75rem;
            }
          }
        }
      }

      @include it('2xl\:right-3') {
        @include assert {
          @include output {
            @include \2xl\:right-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: 0.75rem;
            }
          }
        }
      }

      @include it('2xl\:bottom-3') {
        @include assert {
          @include output {
            @include \2xl\:bottom-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: 0.75rem;
            }
          }
        }
      }

      @include it('2xl\:left-3') {
        @include assert {
          @include output {
            @include \2xl\:left-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 0.75rem;
            }
          }
        }
      }

      @include it('2xl\:inset-3\.5') {
        @include assert {
          @include output {
            @include \2xl\:inset-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: 0.875rem;
            }
          }
        }
      }

      @include it('2xl\:inset-x-3\.5') {
        @include assert {
          @include output {
            @include \2xl\:inset-x-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 0.875rem;
              right: 0.875rem;
            }
          }
        }
      }

      @include it('2xl\:inset-y-3\.5') {
        @include assert {
          @include output {
            @include \2xl\:inset-y-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 0.875rem;
              bottom: 0.875rem;
            }
          }
        }
      }

      @include it('2xl\:start-3\.5') {
        @include assert {
          @include output {
            @include \2xl\:start-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: 0.875rem;
            }
          }
        }
      }

      @include it('2xl\:end-3\.5') {
        @include assert {
          @include output {
            @include \2xl\:end-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: 0.875rem;
            }
          }
        }
      }

      @include it('2xl\:top-3\.5') {
        @include assert {
          @include output {
            @include \2xl\:top-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 0.875rem;
            }
          }
        }
      }

      @include it('2xl\:right-3\.5') {
        @include assert {
          @include output {
            @include \2xl\:right-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: 0.875rem;
            }
          }
        }
      }

      @include it('2xl\:bottom-3\.5') {
        @include assert {
          @include output {
            @include \2xl\:bottom-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: 0.875rem;
            }
          }
        }
      }

      @include it('2xl\:left-3\.5') {
        @include assert {
          @include output {
            @include \2xl\:left-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 0.875rem;
            }
          }
        }
      }

      @include it('2xl\:inset-4') {
        @include assert {
          @include output {
            @include \2xl\:inset-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: 1rem;
            }
          }
        }
      }

      @include it('2xl\:inset-x-4') {
        @include assert {
          @include output {
            @include \2xl\:inset-x-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 1rem;
              right: 1rem;
            }
          }
        }
      }

      @include it('2xl\:inset-y-4') {
        @include assert {
          @include output {
            @include \2xl\:inset-y-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 1rem;
              bottom: 1rem;
            }
          }
        }
      }

      @include it('2xl\:start-4') {
        @include assert {
          @include output {
            @include \2xl\:start-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: 1rem;
            }
          }
        }
      }

      @include it('2xl\:end-4') {
        @include assert {
          @include output {
            @include \2xl\:end-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: 1rem;
            }
          }
        }
      }

      @include it('2xl\:top-4') {
        @include assert {
          @include output {
            @include \2xl\:top-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 1rem;
            }
          }
        }
      }

      @include it('2xl\:right-4') {
        @include assert {
          @include output {
            @include \2xl\:right-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: 1rem;
            }
          }
        }
      }

      @include it('2xl\:bottom-4') {
        @include assert {
          @include output {
            @include \2xl\:bottom-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: 1rem;
            }
          }
        }
      }

      @include it('2xl\:left-4') {
        @include assert {
          @include output {
            @include \2xl\:left-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 1rem;
            }
          }
        }
      }

      @include it('2xl\:inset-5') {
        @include assert {
          @include output {
            @include \2xl\:inset-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: 1.25rem;
            }
          }
        }
      }

      @include it('2xl\:inset-x-5') {
        @include assert {
          @include output {
            @include \2xl\:inset-x-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 1.25rem;
              right: 1.25rem;
            }
          }
        }
      }

      @include it('2xl\:inset-y-5') {
        @include assert {
          @include output {
            @include \2xl\:inset-y-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 1.25rem;
              bottom: 1.25rem;
            }
          }
        }
      }

      @include it('2xl\:start-5') {
        @include assert {
          @include output {
            @include \2xl\:start-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: 1.25rem;
            }
          }
        }
      }

      @include it('2xl\:end-5') {
        @include assert {
          @include output {
            @include \2xl\:end-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: 1.25rem;
            }
          }
        }
      }

      @include it('2xl\:top-5') {
        @include assert {
          @include output {
            @include \2xl\:top-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 1.25rem;
            }
          }
        }
      }

      @include it('2xl\:right-5') {
        @include assert {
          @include output {
            @include \2xl\:right-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: 1.25rem;
            }
          }
        }
      }

      @include it('2xl\:bottom-5') {
        @include assert {
          @include output {
            @include \2xl\:bottom-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: 1.25rem;
            }
          }
        }
      }

      @include it('2xl\:left-5') {
        @include assert {
          @include output {
            @include \2xl\:left-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 1.25rem;
            }
          }
        }
      }

      @include it('2xl\:inset-6') {
        @include assert {
          @include output {
            @include \2xl\:inset-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: 1.5rem;
            }
          }
        }
      }

      @include it('2xl\:inset-x-6') {
        @include assert {
          @include output {
            @include \2xl\:inset-x-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 1.5rem;
              right: 1.5rem;
            }
          }
        }
      }

      @include it('2xl\:inset-y-6') {
        @include assert {
          @include output {
            @include \2xl\:inset-y-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 1.5rem;
              bottom: 1.5rem;
            }
          }
        }
      }

      @include it('2xl\:start-6') {
        @include assert {
          @include output {
            @include \2xl\:start-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: 1.5rem;
            }
          }
        }
      }

      @include it('2xl\:end-6') {
        @include assert {
          @include output {
            @include \2xl\:end-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: 1.5rem;
            }
          }
        }
      }

      @include it('2xl\:top-6') {
        @include assert {
          @include output {
            @include \2xl\:top-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 1.5rem;
            }
          }
        }
      }

      @include it('2xl\:right-6') {
        @include assert {
          @include output {
            @include \2xl\:right-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: 1.5rem;
            }
          }
        }
      }

      @include it('2xl\:bottom-6') {
        @include assert {
          @include output {
            @include \2xl\:bottom-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: 1.5rem;
            }
          }
        }
      }

      @include it('2xl\:left-6') {
        @include assert {
          @include output {
            @include \2xl\:left-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 1.5rem;
            }
          }
        }
      }

      @include it('2xl\:inset-7') {
        @include assert {
          @include output {
            @include \2xl\:inset-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: 1.75rem;
            }
          }
        }
      }

      @include it('2xl\:inset-x-7') {
        @include assert {
          @include output {
            @include \2xl\:inset-x-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 1.75rem;
              right: 1.75rem;
            }
          }
        }
      }

      @include it('2xl\:inset-y-7') {
        @include assert {
          @include output {
            @include \2xl\:inset-y-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 1.75rem;
              bottom: 1.75rem;
            }
          }
        }
      }

      @include it('2xl\:start-7') {
        @include assert {
          @include output {
            @include \2xl\:start-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: 1.75rem;
            }
          }
        }
      }

      @include it('2xl\:end-7') {
        @include assert {
          @include output {
            @include \2xl\:end-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: 1.75rem;
            }
          }
        }
      }

      @include it('2xl\:top-7') {
        @include assert {
          @include output {
            @include \2xl\:top-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 1.75rem;
            }
          }
        }
      }

      @include it('2xl\:right-7') {
        @include assert {
          @include output {
            @include \2xl\:right-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: 1.75rem;
            }
          }
        }
      }

      @include it('2xl\:bottom-7') {
        @include assert {
          @include output {
            @include \2xl\:bottom-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: 1.75rem;
            }
          }
        }
      }

      @include it('2xl\:left-7') {
        @include assert {
          @include output {
            @include \2xl\:left-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 1.75rem;
            }
          }
        }
      }

      @include it('2xl\:inset-8') {
        @include assert {
          @include output {
            @include \2xl\:inset-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: 2rem;
            }
          }
        }
      }

      @include it('2xl\:inset-x-8') {
        @include assert {
          @include output {
            @include \2xl\:inset-x-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 2rem;
              right: 2rem;
            }
          }
        }
      }

      @include it('2xl\:inset-y-8') {
        @include assert {
          @include output {
            @include \2xl\:inset-y-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 2rem;
              bottom: 2rem;
            }
          }
        }
      }

      @include it('2xl\:start-8') {
        @include assert {
          @include output {
            @include \2xl\:start-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: 2rem;
            }
          }
        }
      }

      @include it('2xl\:end-8') {
        @include assert {
          @include output {
            @include \2xl\:end-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: 2rem;
            }
          }
        }
      }

      @include it('2xl\:top-8') {
        @include assert {
          @include output {
            @include \2xl\:top-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 2rem;
            }
          }
        }
      }

      @include it('2xl\:right-8') {
        @include assert {
          @include output {
            @include \2xl\:right-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: 2rem;
            }
          }
        }
      }

      @include it('2xl\:bottom-8') {
        @include assert {
          @include output {
            @include \2xl\:bottom-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: 2rem;
            }
          }
        }
      }

      @include it('2xl\:left-8') {
        @include assert {
          @include output {
            @include \2xl\:left-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 2rem;
            }
          }
        }
      }

      @include it('2xl\:inset-9') {
        @include assert {
          @include output {
            @include \2xl\:inset-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: 2.25rem;
            }
          }
        }
      }

      @include it('2xl\:inset-x-9') {
        @include assert {
          @include output {
            @include \2xl\:inset-x-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 2.25rem;
              right: 2.25rem;
            }
          }
        }
      }

      @include it('2xl\:inset-y-9') {
        @include assert {
          @include output {
            @include \2xl\:inset-y-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 2.25rem;
              bottom: 2.25rem;
            }
          }
        }
      }

      @include it('2xl\:start-9') {
        @include assert {
          @include output {
            @include \2xl\:start-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: 2.25rem;
            }
          }
        }
      }

      @include it('2xl\:end-9') {
        @include assert {
          @include output {
            @include \2xl\:end-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: 2.25rem;
            }
          }
        }
      }

      @include it('2xl\:top-9') {
        @include assert {
          @include output {
            @include \2xl\:top-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 2.25rem;
            }
          }
        }
      }

      @include it('2xl\:right-9') {
        @include assert {
          @include output {
            @include \2xl\:right-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: 2.25rem;
            }
          }
        }
      }

      @include it('2xl\:bottom-9') {
        @include assert {
          @include output {
            @include \2xl\:bottom-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: 2.25rem;
            }
          }
        }
      }

      @include it('2xl\:left-9') {
        @include assert {
          @include output {
            @include \2xl\:left-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 2.25rem;
            }
          }
        }
      }

      @include it('2xl\:inset-10') {
        @include assert {
          @include output {
            @include \2xl\:inset-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: 2.5rem;
            }
          }
        }
      }

      @include it('2xl\:inset-x-10') {
        @include assert {
          @include output {
            @include \2xl\:inset-x-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 2.5rem;
              right: 2.5rem;
            }
          }
        }
      }

      @include it('2xl\:inset-y-10') {
        @include assert {
          @include output {
            @include \2xl\:inset-y-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 2.5rem;
              bottom: 2.5rem;
            }
          }
        }
      }

      @include it('2xl\:start-10') {
        @include assert {
          @include output {
            @include \2xl\:start-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: 2.5rem;
            }
          }
        }
      }

      @include it('2xl\:end-10') {
        @include assert {
          @include output {
            @include \2xl\:end-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: 2.5rem;
            }
          }
        }
      }

      @include it('2xl\:top-10') {
        @include assert {
          @include output {
            @include \2xl\:top-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 2.5rem;
            }
          }
        }
      }

      @include it('2xl\:right-10') {
        @include assert {
          @include output {
            @include \2xl\:right-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: 2.5rem;
            }
          }
        }
      }

      @include it('2xl\:bottom-10') {
        @include assert {
          @include output {
            @include \2xl\:bottom-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: 2.5rem;
            }
          }
        }
      }

      @include it('2xl\:left-10') {
        @include assert {
          @include output {
            @include \2xl\:left-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 2.5rem;
            }
          }
        }
      }

      @include it('2xl\:inset-11') {
        @include assert {
          @include output {
            @include \2xl\:inset-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: 2.75rem;
            }
          }
        }
      }

      @include it('2xl\:inset-x-11') {
        @include assert {
          @include output {
            @include \2xl\:inset-x-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 2.75rem;
              right: 2.75rem;
            }
          }
        }
      }

      @include it('2xl\:inset-y-11') {
        @include assert {
          @include output {
            @include \2xl\:inset-y-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 2.75rem;
              bottom: 2.75rem;
            }
          }
        }
      }

      @include it('2xl\:start-11') {
        @include assert {
          @include output {
            @include \2xl\:start-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: 2.75rem;
            }
          }
        }
      }

      @include it('2xl\:end-11') {
        @include assert {
          @include output {
            @include \2xl\:end-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: 2.75rem;
            }
          }
        }
      }

      @include it('2xl\:top-11') {
        @include assert {
          @include output {
            @include \2xl\:top-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 2.75rem;
            }
          }
        }
      }

      @include it('2xl\:right-11') {
        @include assert {
          @include output {
            @include \2xl\:right-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: 2.75rem;
            }
          }
        }
      }

      @include it('2xl\:bottom-11') {
        @include assert {
          @include output {
            @include \2xl\:bottom-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: 2.75rem;
            }
          }
        }
      }

      @include it('2xl\:left-11') {
        @include assert {
          @include output {
            @include \2xl\:left-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 2.75rem;
            }
          }
        }
      }

      @include it('2xl\:inset-12') {
        @include assert {
          @include output {
            @include \2xl\:inset-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: 3rem;
            }
          }
        }
      }

      @include it('2xl\:inset-x-12') {
        @include assert {
          @include output {
            @include \2xl\:inset-x-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 3rem;
              right: 3rem;
            }
          }
        }
      }

      @include it('2xl\:inset-y-12') {
        @include assert {
          @include output {
            @include \2xl\:inset-y-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 3rem;
              bottom: 3rem;
            }
          }
        }
      }

      @include it('2xl\:start-12') {
        @include assert {
          @include output {
            @include \2xl\:start-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: 3rem;
            }
          }
        }
      }

      @include it('2xl\:end-12') {
        @include assert {
          @include output {
            @include \2xl\:end-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: 3rem;
            }
          }
        }
      }

      @include it('2xl\:top-12') {
        @include assert {
          @include output {
            @include \2xl\:top-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 3rem;
            }
          }
        }
      }

      @include it('2xl\:right-12') {
        @include assert {
          @include output {
            @include \2xl\:right-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: 3rem;
            }
          }
        }
      }

      @include it('2xl\:bottom-12') {
        @include assert {
          @include output {
            @include \2xl\:bottom-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: 3rem;
            }
          }
        }
      }

      @include it('2xl\:left-12') {
        @include assert {
          @include output {
            @include \2xl\:left-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 3rem;
            }
          }
        }
      }

      @include it('2xl\:inset-14') {
        @include assert {
          @include output {
            @include \2xl\:inset-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: 3.5rem;
            }
          }
        }
      }

      @include it('2xl\:inset-x-14') {
        @include assert {
          @include output {
            @include \2xl\:inset-x-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 3.5rem;
              right: 3.5rem;
            }
          }
        }
      }

      @include it('2xl\:inset-y-14') {
        @include assert {
          @include output {
            @include \2xl\:inset-y-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 3.5rem;
              bottom: 3.5rem;
            }
          }
        }
      }

      @include it('2xl\:start-14') {
        @include assert {
          @include output {
            @include \2xl\:start-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: 3.5rem;
            }
          }
        }
      }

      @include it('2xl\:end-14') {
        @include assert {
          @include output {
            @include \2xl\:end-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: 3.5rem;
            }
          }
        }
      }

      @include it('2xl\:top-14') {
        @include assert {
          @include output {
            @include \2xl\:top-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 3.5rem;
            }
          }
        }
      }

      @include it('2xl\:right-14') {
        @include assert {
          @include output {
            @include \2xl\:right-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: 3.5rem;
            }
          }
        }
      }

      @include it('2xl\:bottom-14') {
        @include assert {
          @include output {
            @include \2xl\:bottom-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: 3.5rem;
            }
          }
        }
      }

      @include it('2xl\:left-14') {
        @include assert {
          @include output {
            @include \2xl\:left-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 3.5rem;
            }
          }
        }
      }

      @include it('2xl\:inset-16') {
        @include assert {
          @include output {
            @include \2xl\:inset-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: 4rem;
            }
          }
        }
      }

      @include it('2xl\:inset-x-16') {
        @include assert {
          @include output {
            @include \2xl\:inset-x-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 4rem;
              right: 4rem;
            }
          }
        }
      }

      @include it('2xl\:inset-y-16') {
        @include assert {
          @include output {
            @include \2xl\:inset-y-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 4rem;
              bottom: 4rem;
            }
          }
        }
      }

      @include it('2xl\:start-16') {
        @include assert {
          @include output {
            @include \2xl\:start-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: 4rem;
            }
          }
        }
      }

      @include it('2xl\:end-16') {
        @include assert {
          @include output {
            @include \2xl\:end-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: 4rem;
            }
          }
        }
      }

      @include it('2xl\:top-16') {
        @include assert {
          @include output {
            @include \2xl\:top-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 4rem;
            }
          }
        }
      }

      @include it('2xl\:right-16') {
        @include assert {
          @include output {
            @include \2xl\:right-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: 4rem;
            }
          }
        }
      }

      @include it('2xl\:bottom-16') {
        @include assert {
          @include output {
            @include \2xl\:bottom-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: 4rem;
            }
          }
        }
      }

      @include it('2xl\:left-16') {
        @include assert {
          @include output {
            @include \2xl\:left-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 4rem;
            }
          }
        }
      }

      @include it('2xl\:inset-20') {
        @include assert {
          @include output {
            @include \2xl\:inset-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: 5rem;
            }
          }
        }
      }

      @include it('2xl\:inset-x-20') {
        @include assert {
          @include output {
            @include \2xl\:inset-x-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 5rem;
              right: 5rem;
            }
          }
        }
      }

      @include it('2xl\:inset-y-20') {
        @include assert {
          @include output {
            @include \2xl\:inset-y-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 5rem;
              bottom: 5rem;
            }
          }
        }
      }

      @include it('2xl\:start-20') {
        @include assert {
          @include output {
            @include \2xl\:start-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: 5rem;
            }
          }
        }
      }

      @include it('2xl\:end-20') {
        @include assert {
          @include output {
            @include \2xl\:end-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: 5rem;
            }
          }
        }
      }

      @include it('2xl\:top-20') {
        @include assert {
          @include output {
            @include \2xl\:top-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 5rem;
            }
          }
        }
      }

      @include it('2xl\:right-20') {
        @include assert {
          @include output {
            @include \2xl\:right-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: 5rem;
            }
          }
        }
      }

      @include it('2xl\:bottom-20') {
        @include assert {
          @include output {
            @include \2xl\:bottom-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: 5rem;
            }
          }
        }
      }

      @include it('2xl\:left-20') {
        @include assert {
          @include output {
            @include \2xl\:left-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 5rem;
            }
          }
        }
      }

      @include it('2xl\:inset-24') {
        @include assert {
          @include output {
            @include \2xl\:inset-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: 6rem;
            }
          }
        }
      }

      @include it('2xl\:inset-x-24') {
        @include assert {
          @include output {
            @include \2xl\:inset-x-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 6rem;
              right: 6rem;
            }
          }
        }
      }

      @include it('2xl\:inset-y-24') {
        @include assert {
          @include output {
            @include \2xl\:inset-y-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 6rem;
              bottom: 6rem;
            }
          }
        }
      }

      @include it('2xl\:start-24') {
        @include assert {
          @include output {
            @include \2xl\:start-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: 6rem;
            }
          }
        }
      }

      @include it('2xl\:end-24') {
        @include assert {
          @include output {
            @include \2xl\:end-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: 6rem;
            }
          }
        }
      }

      @include it('2xl\:top-24') {
        @include assert {
          @include output {
            @include \2xl\:top-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 6rem;
            }
          }
        }
      }

      @include it('2xl\:right-24') {
        @include assert {
          @include output {
            @include \2xl\:right-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: 6rem;
            }
          }
        }
      }

      @include it('2xl\:bottom-24') {
        @include assert {
          @include output {
            @include \2xl\:bottom-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: 6rem;
            }
          }
        }
      }

      @include it('2xl\:left-24') {
        @include assert {
          @include output {
            @include \2xl\:left-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 6rem;
            }
          }
        }
      }

      @include it('2xl\:inset-28') {
        @include assert {
          @include output {
            @include \2xl\:inset-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: 7rem;
            }
          }
        }
      }

      @include it('2xl\:inset-x-28') {
        @include assert {
          @include output {
            @include \2xl\:inset-x-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 7rem;
              right: 7rem;
            }
          }
        }
      }

      @include it('2xl\:inset-y-28') {
        @include assert {
          @include output {
            @include \2xl\:inset-y-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 7rem;
              bottom: 7rem;
            }
          }
        }
      }

      @include it('2xl\:start-28') {
        @include assert {
          @include output {
            @include \2xl\:start-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: 7rem;
            }
          }
        }
      }

      @include it('2xl\:end-28') {
        @include assert {
          @include output {
            @include \2xl\:end-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: 7rem;
            }
          }
        }
      }

      @include it('2xl\:top-28') {
        @include assert {
          @include output {
            @include \2xl\:top-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 7rem;
            }
          }
        }
      }

      @include it('2xl\:right-28') {
        @include assert {
          @include output {
            @include \2xl\:right-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: 7rem;
            }
          }
        }
      }

      @include it('2xl\:bottom-28') {
        @include assert {
          @include output {
            @include \2xl\:bottom-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: 7rem;
            }
          }
        }
      }

      @include it('2xl\:left-28') {
        @include assert {
          @include output {
            @include \2xl\:left-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 7rem;
            }
          }
        }
      }

      @include it('2xl\:inset-32') {
        @include assert {
          @include output {
            @include \2xl\:inset-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: 8rem;
            }
          }
        }
      }

      @include it('2xl\:inset-x-32') {
        @include assert {
          @include output {
            @include \2xl\:inset-x-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 8rem;
              right: 8rem;
            }
          }
        }
      }

      @include it('2xl\:inset-y-32') {
        @include assert {
          @include output {
            @include \2xl\:inset-y-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 8rem;
              bottom: 8rem;
            }
          }
        }
      }

      @include it('2xl\:start-32') {
        @include assert {
          @include output {
            @include \2xl\:start-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: 8rem;
            }
          }
        }
      }

      @include it('2xl\:end-32') {
        @include assert {
          @include output {
            @include \2xl\:end-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: 8rem;
            }
          }
        }
      }

      @include it('2xl\:top-32') {
        @include assert {
          @include output {
            @include \2xl\:top-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 8rem;
            }
          }
        }
      }

      @include it('2xl\:right-32') {
        @include assert {
          @include output {
            @include \2xl\:right-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: 8rem;
            }
          }
        }
      }

      @include it('2xl\:bottom-32') {
        @include assert {
          @include output {
            @include \2xl\:bottom-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: 8rem;
            }
          }
        }
      }

      @include it('2xl\:left-32') {
        @include assert {
          @include output {
            @include \2xl\:left-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 8rem;
            }
          }
        }
      }

      @include it('2xl\:inset-36') {
        @include assert {
          @include output {
            @include \2xl\:inset-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: 9rem;
            }
          }
        }
      }

      @include it('2xl\:inset-x-36') {
        @include assert {
          @include output {
            @include \2xl\:inset-x-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 9rem;
              right: 9rem;
            }
          }
        }
      }

      @include it('2xl\:inset-y-36') {
        @include assert {
          @include output {
            @include \2xl\:inset-y-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 9rem;
              bottom: 9rem;
            }
          }
        }
      }

      @include it('2xl\:start-36') {
        @include assert {
          @include output {
            @include \2xl\:start-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: 9rem;
            }
          }
        }
      }

      @include it('2xl\:end-36') {
        @include assert {
          @include output {
            @include \2xl\:end-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: 9rem;
            }
          }
        }
      }

      @include it('2xl\:top-36') {
        @include assert {
          @include output {
            @include \2xl\:top-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 9rem;
            }
          }
        }
      }

      @include it('2xl\:right-36') {
        @include assert {
          @include output {
            @include \2xl\:right-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: 9rem;
            }
          }
        }
      }

      @include it('2xl\:bottom-36') {
        @include assert {
          @include output {
            @include \2xl\:bottom-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: 9rem;
            }
          }
        }
      }

      @include it('2xl\:left-36') {
        @include assert {
          @include output {
            @include \2xl\:left-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 9rem;
            }
          }
        }
      }

      @include it('2xl\:inset-40') {
        @include assert {
          @include output {
            @include \2xl\:inset-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: 10rem;
            }
          }
        }
      }

      @include it('2xl\:inset-x-40') {
        @include assert {
          @include output {
            @include \2xl\:inset-x-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 10rem;
              right: 10rem;
            }
          }
        }
      }

      @include it('2xl\:inset-y-40') {
        @include assert {
          @include output {
            @include \2xl\:inset-y-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 10rem;
              bottom: 10rem;
            }
          }
        }
      }

      @include it('2xl\:start-40') {
        @include assert {
          @include output {
            @include \2xl\:start-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: 10rem;
            }
          }
        }
      }

      @include it('2xl\:end-40') {
        @include assert {
          @include output {
            @include \2xl\:end-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: 10rem;
            }
          }
        }
      }

      @include it('2xl\:top-40') {
        @include assert {
          @include output {
            @include \2xl\:top-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 10rem;
            }
          }
        }
      }

      @include it('2xl\:right-40') {
        @include assert {
          @include output {
            @include \2xl\:right-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: 10rem;
            }
          }
        }
      }

      @include it('2xl\:bottom-40') {
        @include assert {
          @include output {
            @include \2xl\:bottom-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: 10rem;
            }
          }
        }
      }

      @include it('2xl\:left-40') {
        @include assert {
          @include output {
            @include \2xl\:left-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 10rem;
            }
          }
        }
      }

      @include it('2xl\:inset-44') {
        @include assert {
          @include output {
            @include \2xl\:inset-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: 11rem;
            }
          }
        }
      }

      @include it('2xl\:inset-x-44') {
        @include assert {
          @include output {
            @include \2xl\:inset-x-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 11rem;
              right: 11rem;
            }
          }
        }
      }

      @include it('2xl\:inset-y-44') {
        @include assert {
          @include output {
            @include \2xl\:inset-y-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 11rem;
              bottom: 11rem;
            }
          }
        }
      }

      @include it('2xl\:start-44') {
        @include assert {
          @include output {
            @include \2xl\:start-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: 11rem;
            }
          }
        }
      }

      @include it('2xl\:end-44') {
        @include assert {
          @include output {
            @include \2xl\:end-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: 11rem;
            }
          }
        }
      }

      @include it('2xl\:top-44') {
        @include assert {
          @include output {
            @include \2xl\:top-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 11rem;
            }
          }
        }
      }

      @include it('2xl\:right-44') {
        @include assert {
          @include output {
            @include \2xl\:right-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: 11rem;
            }
          }
        }
      }

      @include it('2xl\:bottom-44') {
        @include assert {
          @include output {
            @include \2xl\:bottom-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: 11rem;
            }
          }
        }
      }

      @include it('2xl\:left-44') {
        @include assert {
          @include output {
            @include \2xl\:left-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 11rem;
            }
          }
        }
      }

      @include it('2xl\:inset-48') {
        @include assert {
          @include output {
            @include \2xl\:inset-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: 12rem;
            }
          }
        }
      }

      @include it('2xl\:inset-x-48') {
        @include assert {
          @include output {
            @include \2xl\:inset-x-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 12rem;
              right: 12rem;
            }
          }
        }
      }

      @include it('2xl\:inset-y-48') {
        @include assert {
          @include output {
            @include \2xl\:inset-y-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 12rem;
              bottom: 12rem;
            }
          }
        }
      }

      @include it('2xl\:start-48') {
        @include assert {
          @include output {
            @include \2xl\:start-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: 12rem;
            }
          }
        }
      }

      @include it('2xl\:end-48') {
        @include assert {
          @include output {
            @include \2xl\:end-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: 12rem;
            }
          }
        }
      }

      @include it('2xl\:top-48') {
        @include assert {
          @include output {
            @include \2xl\:top-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 12rem;
            }
          }
        }
      }

      @include it('2xl\:right-48') {
        @include assert {
          @include output {
            @include \2xl\:right-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: 12rem;
            }
          }
        }
      }

      @include it('2xl\:bottom-48') {
        @include assert {
          @include output {
            @include \2xl\:bottom-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: 12rem;
            }
          }
        }
      }

      @include it('2xl\:left-48') {
        @include assert {
          @include output {
            @include \2xl\:left-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 12rem;
            }
          }
        }
      }

      @include it('2xl\:inset-52') {
        @include assert {
          @include output {
            @include \2xl\:inset-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: 13rem;
            }
          }
        }
      }

      @include it('2xl\:inset-x-52') {
        @include assert {
          @include output {
            @include \2xl\:inset-x-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 13rem;
              right: 13rem;
            }
          }
        }
      }

      @include it('2xl\:inset-y-52') {
        @include assert {
          @include output {
            @include \2xl\:inset-y-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 13rem;
              bottom: 13rem;
            }
          }
        }
      }

      @include it('2xl\:start-52') {
        @include assert {
          @include output {
            @include \2xl\:start-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: 13rem;
            }
          }
        }
      }

      @include it('2xl\:end-52') {
        @include assert {
          @include output {
            @include \2xl\:end-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: 13rem;
            }
          }
        }
      }

      @include it('2xl\:top-52') {
        @include assert {
          @include output {
            @include \2xl\:top-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 13rem;
            }
          }
        }
      }

      @include it('2xl\:right-52') {
        @include assert {
          @include output {
            @include \2xl\:right-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: 13rem;
            }
          }
        }
      }

      @include it('2xl\:bottom-52') {
        @include assert {
          @include output {
            @include \2xl\:bottom-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: 13rem;
            }
          }
        }
      }

      @include it('2xl\:left-52') {
        @include assert {
          @include output {
            @include \2xl\:left-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 13rem;
            }
          }
        }
      }

      @include it('2xl\:inset-56') {
        @include assert {
          @include output {
            @include \2xl\:inset-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: 14rem;
            }
          }
        }
      }

      @include it('2xl\:inset-x-56') {
        @include assert {
          @include output {
            @include \2xl\:inset-x-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 14rem;
              right: 14rem;
            }
          }
        }
      }

      @include it('2xl\:inset-y-56') {
        @include assert {
          @include output {
            @include \2xl\:inset-y-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 14rem;
              bottom: 14rem;
            }
          }
        }
      }

      @include it('2xl\:start-56') {
        @include assert {
          @include output {
            @include \2xl\:start-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: 14rem;
            }
          }
        }
      }

      @include it('2xl\:end-56') {
        @include assert {
          @include output {
            @include \2xl\:end-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: 14rem;
            }
          }
        }
      }

      @include it('2xl\:top-56') {
        @include assert {
          @include output {
            @include \2xl\:top-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 14rem;
            }
          }
        }
      }

      @include it('2xl\:right-56') {
        @include assert {
          @include output {
            @include \2xl\:right-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: 14rem;
            }
          }
        }
      }

      @include it('2xl\:bottom-56') {
        @include assert {
          @include output {
            @include \2xl\:bottom-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: 14rem;
            }
          }
        }
      }

      @include it('2xl\:left-56') {
        @include assert {
          @include output {
            @include \2xl\:left-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 14rem;
            }
          }
        }
      }

      @include it('2xl\:inset-60') {
        @include assert {
          @include output {
            @include \2xl\:inset-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: 15rem;
            }
          }
        }
      }

      @include it('2xl\:inset-x-60') {
        @include assert {
          @include output {
            @include \2xl\:inset-x-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 15rem;
              right: 15rem;
            }
          }
        }
      }

      @include it('2xl\:inset-y-60') {
        @include assert {
          @include output {
            @include \2xl\:inset-y-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 15rem;
              bottom: 15rem;
            }
          }
        }
      }

      @include it('2xl\:start-60') {
        @include assert {
          @include output {
            @include \2xl\:start-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: 15rem;
            }
          }
        }
      }

      @include it('2xl\:end-60') {
        @include assert {
          @include output {
            @include \2xl\:end-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: 15rem;
            }
          }
        }
      }

      @include it('2xl\:top-60') {
        @include assert {
          @include output {
            @include \2xl\:top-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 15rem;
            }
          }
        }
      }

      @include it('2xl\:right-60') {
        @include assert {
          @include output {
            @include \2xl\:right-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: 15rem;
            }
          }
        }
      }

      @include it('2xl\:bottom-60') {
        @include assert {
          @include output {
            @include \2xl\:bottom-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: 15rem;
            }
          }
        }
      }

      @include it('2xl\:left-60') {
        @include assert {
          @include output {
            @include \2xl\:left-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 15rem;
            }
          }
        }
      }

      @include it('2xl\:inset-64') {
        @include assert {
          @include output {
            @include \2xl\:inset-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: 16rem;
            }
          }
        }
      }

      @include it('2xl\:inset-x-64') {
        @include assert {
          @include output {
            @include \2xl\:inset-x-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 16rem;
              right: 16rem;
            }
          }
        }
      }

      @include it('2xl\:inset-y-64') {
        @include assert {
          @include output {
            @include \2xl\:inset-y-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 16rem;
              bottom: 16rem;
            }
          }
        }
      }

      @include it('2xl\:start-64') {
        @include assert {
          @include output {
            @include \2xl\:start-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: 16rem;
            }
          }
        }
      }

      @include it('2xl\:end-64') {
        @include assert {
          @include output {
            @include \2xl\:end-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: 16rem;
            }
          }
        }
      }

      @include it('2xl\:top-64') {
        @include assert {
          @include output {
            @include \2xl\:top-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 16rem;
            }
          }
        }
      }

      @include it('2xl\:right-64') {
        @include assert {
          @include output {
            @include \2xl\:right-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: 16rem;
            }
          }
        }
      }

      @include it('2xl\:bottom-64') {
        @include assert {
          @include output {
            @include \2xl\:bottom-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: 16rem;
            }
          }
        }
      }

      @include it('2xl\:left-64') {
        @include assert {
          @include output {
            @include \2xl\:left-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 16rem;
            }
          }
        }
      }

      @include it('2xl\:inset-72') {
        @include assert {
          @include output {
            @include \2xl\:inset-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: 18rem;
            }
          }
        }
      }

      @include it('2xl\:inset-x-72') {
        @include assert {
          @include output {
            @include \2xl\:inset-x-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 18rem;
              right: 18rem;
            }
          }
        }
      }

      @include it('2xl\:inset-y-72') {
        @include assert {
          @include output {
            @include \2xl\:inset-y-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 18rem;
              bottom: 18rem;
            }
          }
        }
      }

      @include it('2xl\:start-72') {
        @include assert {
          @include output {
            @include \2xl\:start-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: 18rem;
            }
          }
        }
      }

      @include it('2xl\:end-72') {
        @include assert {
          @include output {
            @include \2xl\:end-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: 18rem;
            }
          }
        }
      }

      @include it('2xl\:top-72') {
        @include assert {
          @include output {
            @include \2xl\:top-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 18rem;
            }
          }
        }
      }

      @include it('2xl\:right-72') {
        @include assert {
          @include output {
            @include \2xl\:right-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: 18rem;
            }
          }
        }
      }

      @include it('2xl\:bottom-72') {
        @include assert {
          @include output {
            @include \2xl\:bottom-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: 18rem;
            }
          }
        }
      }

      @include it('2xl\:left-72') {
        @include assert {
          @include output {
            @include \2xl\:left-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 18rem;
            }
          }
        }
      }

      @include it('2xl\:inset-80') {
        @include assert {
          @include output {
            @include \2xl\:inset-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: 20rem;
            }
          }
        }
      }

      @include it('2xl\:inset-x-80') {
        @include assert {
          @include output {
            @include \2xl\:inset-x-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 20rem;
              right: 20rem;
            }
          }
        }
      }

      @include it('2xl\:inset-y-80') {
        @include assert {
          @include output {
            @include \2xl\:inset-y-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 20rem;
              bottom: 20rem;
            }
          }
        }
      }

      @include it('2xl\:start-80') {
        @include assert {
          @include output {
            @include \2xl\:start-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: 20rem;
            }
          }
        }
      }

      @include it('2xl\:end-80') {
        @include assert {
          @include output {
            @include \2xl\:end-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: 20rem;
            }
          }
        }
      }

      @include it('2xl\:top-80') {
        @include assert {
          @include output {
            @include \2xl\:top-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 20rem;
            }
          }
        }
      }

      @include it('2xl\:right-80') {
        @include assert {
          @include output {
            @include \2xl\:right-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: 20rem;
            }
          }
        }
      }

      @include it('2xl\:bottom-80') {
        @include assert {
          @include output {
            @include \2xl\:bottom-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: 20rem;
            }
          }
        }
      }

      @include it('2xl\:left-80') {
        @include assert {
          @include output {
            @include \2xl\:left-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 20rem;
            }
          }
        }
      }

      @include it('2xl\:inset-96') {
        @include assert {
          @include output {
            @include \2xl\:inset-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: 24rem;
            }
          }
        }
      }

      @include it('2xl\:inset-x-96') {
        @include assert {
          @include output {
            @include \2xl\:inset-x-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 24rem;
              right: 24rem;
            }
          }
        }
      }

      @include it('2xl\:inset-y-96') {
        @include assert {
          @include output {
            @include \2xl\:inset-y-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 24rem;
              bottom: 24rem;
            }
          }
        }
      }

      @include it('2xl\:start-96') {
        @include assert {
          @include output {
            @include \2xl\:start-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: 24rem;
            }
          }
        }
      }

      @include it('2xl\:end-96') {
        @include assert {
          @include output {
            @include \2xl\:end-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: 24rem;
            }
          }
        }
      }

      @include it('2xl\:top-96') {
        @include assert {
          @include output {
            @include \2xl\:top-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 24rem;
            }
          }
        }
      }

      @include it('2xl\:right-96') {
        @include assert {
          @include output {
            @include \2xl\:right-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: 24rem;
            }
          }
        }
      }

      @include it('2xl\:bottom-96') {
        @include assert {
          @include output {
            @include \2xl\:bottom-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: 24rem;
            }
          }
        }
      }

      @include it('2xl\:left-96') {
        @include assert {
          @include output {
            @include \2xl\:left-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 24rem;
            }
          }
        }
      }

      @include it('2xl\:inset-auto') {
        @include assert {
          @include output {
            @include \2xl\:inset-auto;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: auto;
            }
          }
        }
      }

      @include it('2xl\:inset-1\/2') {
        @include assert {
          @include output {
            @include \2xl\:inset-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: 50%;
            }
          }
        }
      }

      @include it('2xl\:inset-1\/3') {
        @include assert {
          @include output {
            @include \2xl\:inset-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: 33.333333%;
            }
          }
        }
      }

      @include it('2xl\:inset-2\/3') {
        @include assert {
          @include output {
            @include \2xl\:inset-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: 66.666667%;
            }
          }
        }
      }

      @include it('2xl\:inset-1\/4') {
        @include assert {
          @include output {
            @include \2xl\:inset-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: 25%;
            }
          }
        }
      }

      @include it('2xl\:inset-2\/4') {
        @include assert {
          @include output {
            @include \2xl\:inset-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: 50%;
            }
          }
        }
      }

      @include it('2xl\:inset-3\/4') {
        @include assert {
          @include output {
            @include \2xl\:inset-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: 75%;
            }
          }
        }
      }

      @include it('2xl\:inset-full') {
        @include assert {
          @include output {
            @include \2xl\:inset-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: 100%;
            }
          }
        }
      }

      @include it('2xl\:inset-x-auto') {
        @include assert {
          @include output {
            @include \2xl\:inset-x-auto;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: auto;
              right: auto;
            }
          }
        }
      }

      @include it('2xl\:inset-x-1\/2') {
        @include assert {
          @include output {
            @include \2xl\:inset-x-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 50%;
              right: 50%;
            }
          }
        }
      }

      @include it('2xl\:inset-x-1\/3') {
        @include assert {
          @include output {
            @include \2xl\:inset-x-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 33.333333%;
              right: 33.333333%;
            }
          }
        }
      }

      @include it('2xl\:inset-x-2\/3') {
        @include assert {
          @include output {
            @include \2xl\:inset-x-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 66.666667%;
              right: 66.666667%;
            }
          }
        }
      }

      @include it('2xl\:inset-x-1\/4') {
        @include assert {
          @include output {
            @include \2xl\:inset-x-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 25%;
              right: 25%;
            }
          }
        }
      }

      @include it('2xl\:inset-x-2\/4') {
        @include assert {
          @include output {
            @include \2xl\:inset-x-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 50%;
              right: 50%;
            }
          }
        }
      }

      @include it('2xl\:inset-x-3\/4') {
        @include assert {
          @include output {
            @include \2xl\:inset-x-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 75%;
              right: 75%;
            }
          }
        }
      }

      @include it('2xl\:inset-x-full') {
        @include assert {
          @include output {
            @include \2xl\:inset-x-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 100%;
              right: 100%;
            }
          }
        }
      }

      @include it('2xl\:inset-y-auto') {
        @include assert {
          @include output {
            @include \2xl\:inset-y-auto;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: auto;
              bottom: auto;
            }
          }
        }
      }

      @include it('2xl\:inset-y-1\/2') {
        @include assert {
          @include output {
            @include \2xl\:inset-y-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 50%;
              bottom: 50%;
            }
          }
        }
      }

      @include it('2xl\:inset-y-1\/3') {
        @include assert {
          @include output {
            @include \2xl\:inset-y-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 33.333333%;
              bottom: 33.333333%;
            }
          }
        }
      }

      @include it('2xl\:inset-y-2\/3') {
        @include assert {
          @include output {
            @include \2xl\:inset-y-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 66.666667%;
              bottom: 66.666667%;
            }
          }
        }
      }

      @include it('2xl\:inset-y-1\/4') {
        @include assert {
          @include output {
            @include \2xl\:inset-y-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 25%;
              bottom: 25%;
            }
          }
        }
      }

      @include it('2xl\:inset-y-2\/4') {
        @include assert {
          @include output {
            @include \2xl\:inset-y-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 50%;
              bottom: 50%;
            }
          }
        }
      }

      @include it('2xl\:inset-y-3\/4') {
        @include assert {
          @include output {
            @include \2xl\:inset-y-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 75%;
              bottom: 75%;
            }
          }
        }
      }

      @include it('2xl\:inset-y-full') {
        @include assert {
          @include output {
            @include \2xl\:inset-y-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 100%;
              bottom: 100%;
            }
          }
        }
      }

      @include it('2xl\:start-auto') {
        @include assert {
          @include output {
            @include \2xl\:start-auto;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: auto;
            }
          }
        }
      }

      @include it('2xl\:start-1\/2') {
        @include assert {
          @include output {
            @include \2xl\:start-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: 50%;
            }
          }
        }
      }

      @include it('2xl\:start-1\/3') {
        @include assert {
          @include output {
            @include \2xl\:start-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: 33.333333%;
            }
          }
        }
      }

      @include it('2xl\:start-2\/3') {
        @include assert {
          @include output {
            @include \2xl\:start-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: 66.666667%;
            }
          }
        }
      }

      @include it('2xl\:start-1\/4') {
        @include assert {
          @include output {
            @include \2xl\:start-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: 25%;
            }
          }
        }
      }

      @include it('2xl\:start-2\/4') {
        @include assert {
          @include output {
            @include \2xl\:start-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: 50%;
            }
          }
        }
      }

      @include it('2xl\:start-3\/4') {
        @include assert {
          @include output {
            @include \2xl\:start-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: 75%;
            }
          }
        }
      }

      @include it('2xl\:start-full') {
        @include assert {
          @include output {
            @include \2xl\:start-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: 100%;
            }
          }
        }
      }

      @include it('2xl\:end-auto') {
        @include assert {
          @include output {
            @include \2xl\:end-auto;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: auto;
            }
          }
        }
      }

      @include it('2xl\:end-1\/2') {
        @include assert {
          @include output {
            @include \2xl\:end-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: 50%;
            }
          }
        }
      }

      @include it('2xl\:end-1\/3') {
        @include assert {
          @include output {
            @include \2xl\:end-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: 33.333333%;
            }
          }
        }
      }

      @include it('2xl\:end-2\/3') {
        @include assert {
          @include output {
            @include \2xl\:end-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: 66.666667%;
            }
          }
        }
      }

      @include it('2xl\:end-1\/4') {
        @include assert {
          @include output {
            @include \2xl\:end-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: 25%;
            }
          }
        }
      }

      @include it('2xl\:end-2\/4') {
        @include assert {
          @include output {
            @include \2xl\:end-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: 50%;
            }
          }
        }
      }

      @include it('2xl\:end-3\/4') {
        @include assert {
          @include output {
            @include \2xl\:end-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: 75%;
            }
          }
        }
      }

      @include it('2xl\:end-full') {
        @include assert {
          @include output {
            @include \2xl\:end-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: 100%;
            }
          }
        }
      }

      @include it('2xl\:top-auto') {
        @include assert {
          @include output {
            @include \2xl\:top-auto;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: auto;
            }
          }
        }
      }

      @include it('2xl\:top-1\/2') {
        @include assert {
          @include output {
            @include \2xl\:top-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 50%;
            }
          }
        }
      }

      @include it('2xl\:top-1\/3') {
        @include assert {
          @include output {
            @include \2xl\:top-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 33.333333%;
            }
          }
        }
      }

      @include it('2xl\:top-2\/3') {
        @include assert {
          @include output {
            @include \2xl\:top-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 66.666667%;
            }
          }
        }
      }

      @include it('2xl\:top-1\/4') {
        @include assert {
          @include output {
            @include \2xl\:top-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 25%;
            }
          }
        }
      }

      @include it('2xl\:top-2\/4') {
        @include assert {
          @include output {
            @include \2xl\:top-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 50%;
            }
          }
        }
      }

      @include it('2xl\:top-3\/4') {
        @include assert {
          @include output {
            @include \2xl\:top-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 75%;
            }
          }
        }
      }

      @include it('2xl\:top-full') {
        @include assert {
          @include output {
            @include \2xl\:top-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 100%;
            }
          }
        }
      }

      @include it('2xl\:right-auto') {
        @include assert {
          @include output {
            @include \2xl\:right-auto;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: auto;
            }
          }
        }
      }

      @include it('2xl\:right-1\/2') {
        @include assert {
          @include output {
            @include \2xl\:right-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: 50%;
            }
          }
        }
      }

      @include it('2xl\:right-1\/3') {
        @include assert {
          @include output {
            @include \2xl\:right-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: 33.333333%;
            }
          }
        }
      }

      @include it('2xl\:right-2\/3') {
        @include assert {
          @include output {
            @include \2xl\:right-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: 66.666667%;
            }
          }
        }
      }

      @include it('2xl\:right-1\/4') {
        @include assert {
          @include output {
            @include \2xl\:right-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: 25%;
            }
          }
        }
      }

      @include it('2xl\:right-2\/4') {
        @include assert {
          @include output {
            @include \2xl\:right-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: 50%;
            }
          }
        }
      }

      @include it('2xl\:right-3\/4') {
        @include assert {
          @include output {
            @include \2xl\:right-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: 75%;
            }
          }
        }
      }

      @include it('2xl\:right-full') {
        @include assert {
          @include output {
            @include \2xl\:right-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: 100%;
            }
          }
        }
      }

      @include it('2xl\:bottom-auto') {
        @include assert {
          @include output {
            @include \2xl\:bottom-auto;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: auto;
            }
          }
        }
      }

      @include it('2xl\:bottom-1\/2') {
        @include assert {
          @include output {
            @include \2xl\:bottom-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: 50%;
            }
          }
        }
      }

      @include it('2xl\:bottom-1\/3') {
        @include assert {
          @include output {
            @include \2xl\:bottom-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: 33.333333%;
            }
          }
        }
      }

      @include it('2xl\:bottom-2\/3') {
        @include assert {
          @include output {
            @include \2xl\:bottom-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: 66.666667%;
            }
          }
        }
      }

      @include it('2xl\:bottom-1\/4') {
        @include assert {
          @include output {
            @include \2xl\:bottom-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: 25%;
            }
          }
        }
      }

      @include it('2xl\:bottom-2\/4') {
        @include assert {
          @include output {
            @include \2xl\:bottom-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: 50%;
            }
          }
        }
      }

      @include it('2xl\:bottom-3\/4') {
        @include assert {
          @include output {
            @include \2xl\:bottom-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: 75%;
            }
          }
        }
      }

      @include it('2xl\:bottom-full') {
        @include assert {
          @include output {
            @include \2xl\:bottom-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: 100%;
            }
          }
        }
      }

      @include it('2xl\:left-auto') {
        @include assert {
          @include output {
            @include \2xl\:left-auto;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: auto;
            }
          }
        }
      }

      @include it('2xl\:left-1\/2') {
        @include assert {
          @include output {
            @include \2xl\:left-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 50%;
            }
          }
        }
      }

      @include it('2xl\:left-1\/3') {
        @include assert {
          @include output {
            @include \2xl\:left-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 33.333333%;
            }
          }
        }
      }

      @include it('2xl\:left-2\/3') {
        @include assert {
          @include output {
            @include \2xl\:left-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 66.666667%;
            }
          }
        }
      }

      @include it('2xl\:left-1\/4') {
        @include assert {
          @include output {
            @include \2xl\:left-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 25%;
            }
          }
        }
      }

      @include it('2xl\:left-2\/4') {
        @include assert {
          @include output {
            @include \2xl\:left-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 50%;
            }
          }
        }
      }

      @include it('2xl\:left-3\/4') {
        @include assert {
          @include output {
            @include \2xl\:left-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 75%;
            }
          }
        }
      }

      @include it('2xl\:left-full') {
        @include assert {
          @include output {
            @include \2xl\:left-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 100%;
            }
          }
        }
      }

      @include it('2xl\:-inset-0') {
        @include assert {
          @include output {
            @include \2xl\:-inset-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: 0px;
            }
          }
        }
      }

      @include it('2xl\:-inset-x-0') {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 0px;
              right: 0px;
            }
          }
        }
      }

      @include it('2xl\:-inset-y-0') {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 0px;
              bottom: 0px;
            }
          }
        }
      }

      @include it('2xl\:-start-0') {
        @include assert {
          @include output {
            @include \2xl\:-start-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: 0px;
            }
          }
        }
      }

      @include it('2xl\:-end-0') {
        @include assert {
          @include output {
            @include \2xl\:-end-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: 0px;
            }
          }
        }
      }

      @include it('2xl\:-top-0') {
        @include assert {
          @include output {
            @include \2xl\:-top-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 0px;
            }
          }
        }
      }

      @include it('2xl\:-right-0') {
        @include assert {
          @include output {
            @include \2xl\:-right-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: 0px;
            }
          }
        }
      }

      @include it('2xl\:-bottom-0') {
        @include assert {
          @include output {
            @include \2xl\:-bottom-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: 0px;
            }
          }
        }
      }

      @include it('2xl\:-left-0') {
        @include assert {
          @include output {
            @include \2xl\:-left-0;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 0px;
            }
          }
        }
      }

      @include it('2xl\:-inset-px') {
        @include assert {
          @include output {
            @include \2xl\:-inset-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: -1px;
            }
          }
        }
      }

      @include it('2xl\:-inset-x-px') {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -1px;
              right: -1px;
            }
          }
        }
      }

      @include it('2xl\:-inset-y-px') {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -1px;
              bottom: -1px;
            }
          }
        }
      }

      @include it('2xl\:-start-px') {
        @include assert {
          @include output {
            @include \2xl\:-start-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: -1px;
            }
          }
        }
      }

      @include it('2xl\:-end-px') {
        @include assert {
          @include output {
            @include \2xl\:-end-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: -1px;
            }
          }
        }
      }

      @include it('2xl\:-top-px') {
        @include assert {
          @include output {
            @include \2xl\:-top-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -1px;
            }
          }
        }
      }

      @include it('2xl\:-right-px') {
        @include assert {
          @include output {
            @include \2xl\:-right-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: -1px;
            }
          }
        }
      }

      @include it('2xl\:-bottom-px') {
        @include assert {
          @include output {
            @include \2xl\:-bottom-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: -1px;
            }
          }
        }
      }

      @include it('2xl\:-left-px') {
        @include assert {
          @include output {
            @include \2xl\:-left-px;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -1px;
            }
          }
        }
      }

      @include it('2xl\:-inset-0\.5') {
        @include assert {
          @include output {
            @include \2xl\:-inset-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: -0.125rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-x-0\.5') {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -0.125rem;
              right: -0.125rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-y-0\.5') {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -0.125rem;
              bottom: -0.125rem;
            }
          }
        }
      }

      @include it('2xl\:-start-0\.5') {
        @include assert {
          @include output {
            @include \2xl\:-start-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: -0.125rem;
            }
          }
        }
      }

      @include it('2xl\:-end-0\.5') {
        @include assert {
          @include output {
            @include \2xl\:-end-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: -0.125rem;
            }
          }
        }
      }

      @include it('2xl\:-top-0\.5') {
        @include assert {
          @include output {
            @include \2xl\:-top-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -0.125rem;
            }
          }
        }
      }

      @include it('2xl\:-right-0\.5') {
        @include assert {
          @include output {
            @include \2xl\:-right-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: -0.125rem;
            }
          }
        }
      }

      @include it('2xl\:-bottom-0\.5') {
        @include assert {
          @include output {
            @include \2xl\:-bottom-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: -0.125rem;
            }
          }
        }
      }

      @include it('2xl\:-left-0\.5') {
        @include assert {
          @include output {
            @include \2xl\:-left-0\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -0.125rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-1') {
        @include assert {
          @include output {
            @include \2xl\:-inset-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: -0.25rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-x-1') {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -0.25rem;
              right: -0.25rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-y-1') {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -0.25rem;
              bottom: -0.25rem;
            }
          }
        }
      }

      @include it('2xl\:-start-1') {
        @include assert {
          @include output {
            @include \2xl\:-start-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: -0.25rem;
            }
          }
        }
      }

      @include it('2xl\:-end-1') {
        @include assert {
          @include output {
            @include \2xl\:-end-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: -0.25rem;
            }
          }
        }
      }

      @include it('2xl\:-top-1') {
        @include assert {
          @include output {
            @include \2xl\:-top-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -0.25rem;
            }
          }
        }
      }

      @include it('2xl\:-right-1') {
        @include assert {
          @include output {
            @include \2xl\:-right-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: -0.25rem;
            }
          }
        }
      }

      @include it('2xl\:-bottom-1') {
        @include assert {
          @include output {
            @include \2xl\:-bottom-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: -0.25rem;
            }
          }
        }
      }

      @include it('2xl\:-left-1') {
        @include assert {
          @include output {
            @include \2xl\:-left-1;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -0.25rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-1\.5') {
        @include assert {
          @include output {
            @include \2xl\:-inset-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: -0.375rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-x-1\.5') {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -0.375rem;
              right: -0.375rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-y-1\.5') {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -0.375rem;
              bottom: -0.375rem;
            }
          }
        }
      }

      @include it('2xl\:-start-1\.5') {
        @include assert {
          @include output {
            @include \2xl\:-start-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: -0.375rem;
            }
          }
        }
      }

      @include it('2xl\:-end-1\.5') {
        @include assert {
          @include output {
            @include \2xl\:-end-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: -0.375rem;
            }
          }
        }
      }

      @include it('2xl\:-top-1\.5') {
        @include assert {
          @include output {
            @include \2xl\:-top-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -0.375rem;
            }
          }
        }
      }

      @include it('2xl\:-right-1\.5') {
        @include assert {
          @include output {
            @include \2xl\:-right-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: -0.375rem;
            }
          }
        }
      }

      @include it('2xl\:-bottom-1\.5') {
        @include assert {
          @include output {
            @include \2xl\:-bottom-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: -0.375rem;
            }
          }
        }
      }

      @include it('2xl\:-left-1\.5') {
        @include assert {
          @include output {
            @include \2xl\:-left-1\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -0.375rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-2') {
        @include assert {
          @include output {
            @include \2xl\:-inset-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: -0.5rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-x-2') {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -0.5rem;
              right: -0.5rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-y-2') {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -0.5rem;
              bottom: -0.5rem;
            }
          }
        }
      }

      @include it('2xl\:-start-2') {
        @include assert {
          @include output {
            @include \2xl\:-start-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: -0.5rem;
            }
          }
        }
      }

      @include it('2xl\:-end-2') {
        @include assert {
          @include output {
            @include \2xl\:-end-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: -0.5rem;
            }
          }
        }
      }

      @include it('2xl\:-top-2') {
        @include assert {
          @include output {
            @include \2xl\:-top-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -0.5rem;
            }
          }
        }
      }

      @include it('2xl\:-right-2') {
        @include assert {
          @include output {
            @include \2xl\:-right-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: -0.5rem;
            }
          }
        }
      }

      @include it('2xl\:-bottom-2') {
        @include assert {
          @include output {
            @include \2xl\:-bottom-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: -0.5rem;
            }
          }
        }
      }

      @include it('2xl\:-left-2') {
        @include assert {
          @include output {
            @include \2xl\:-left-2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -0.5rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-2\.5') {
        @include assert {
          @include output {
            @include \2xl\:-inset-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: -0.625rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-x-2\.5') {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -0.625rem;
              right: -0.625rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-y-2\.5') {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -0.625rem;
              bottom: -0.625rem;
            }
          }
        }
      }

      @include it('2xl\:-start-2\.5') {
        @include assert {
          @include output {
            @include \2xl\:-start-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: -0.625rem;
            }
          }
        }
      }

      @include it('2xl\:-end-2\.5') {
        @include assert {
          @include output {
            @include \2xl\:-end-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: -0.625rem;
            }
          }
        }
      }

      @include it('2xl\:-top-2\.5') {
        @include assert {
          @include output {
            @include \2xl\:-top-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -0.625rem;
            }
          }
        }
      }

      @include it('2xl\:-right-2\.5') {
        @include assert {
          @include output {
            @include \2xl\:-right-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: -0.625rem;
            }
          }
        }
      }

      @include it('2xl\:-bottom-2\.5') {
        @include assert {
          @include output {
            @include \2xl\:-bottom-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: -0.625rem;
            }
          }
        }
      }

      @include it('2xl\:-left-2\.5') {
        @include assert {
          @include output {
            @include \2xl\:-left-2\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -0.625rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-3') {
        @include assert {
          @include output {
            @include \2xl\:-inset-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: -0.75rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-x-3') {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -0.75rem;
              right: -0.75rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-y-3') {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -0.75rem;
              bottom: -0.75rem;
            }
          }
        }
      }

      @include it('2xl\:-start-3') {
        @include assert {
          @include output {
            @include \2xl\:-start-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: -0.75rem;
            }
          }
        }
      }

      @include it('2xl\:-end-3') {
        @include assert {
          @include output {
            @include \2xl\:-end-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: -0.75rem;
            }
          }
        }
      }

      @include it('2xl\:-top-3') {
        @include assert {
          @include output {
            @include \2xl\:-top-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -0.75rem;
            }
          }
        }
      }

      @include it('2xl\:-right-3') {
        @include assert {
          @include output {
            @include \2xl\:-right-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: -0.75rem;
            }
          }
        }
      }

      @include it('2xl\:-bottom-3') {
        @include assert {
          @include output {
            @include \2xl\:-bottom-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: -0.75rem;
            }
          }
        }
      }

      @include it('2xl\:-left-3') {
        @include assert {
          @include output {
            @include \2xl\:-left-3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -0.75rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-3\.5') {
        @include assert {
          @include output {
            @include \2xl\:-inset-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: -0.875rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-x-3\.5') {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -0.875rem;
              right: -0.875rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-y-3\.5') {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -0.875rem;
              bottom: -0.875rem;
            }
          }
        }
      }

      @include it('2xl\:-start-3\.5') {
        @include assert {
          @include output {
            @include \2xl\:-start-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: -0.875rem;
            }
          }
        }
      }

      @include it('2xl\:-end-3\.5') {
        @include assert {
          @include output {
            @include \2xl\:-end-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: -0.875rem;
            }
          }
        }
      }

      @include it('2xl\:-top-3\.5') {
        @include assert {
          @include output {
            @include \2xl\:-top-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -0.875rem;
            }
          }
        }
      }

      @include it('2xl\:-right-3\.5') {
        @include assert {
          @include output {
            @include \2xl\:-right-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: -0.875rem;
            }
          }
        }
      }

      @include it('2xl\:-bottom-3\.5') {
        @include assert {
          @include output {
            @include \2xl\:-bottom-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: -0.875rem;
            }
          }
        }
      }

      @include it('2xl\:-left-3\.5') {
        @include assert {
          @include output {
            @include \2xl\:-left-3\.5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -0.875rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-4') {
        @include assert {
          @include output {
            @include \2xl\:-inset-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: -1rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-x-4') {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -1rem;
              right: -1rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-y-4') {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -1rem;
              bottom: -1rem;
            }
          }
        }
      }

      @include it('2xl\:-start-4') {
        @include assert {
          @include output {
            @include \2xl\:-start-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: -1rem;
            }
          }
        }
      }

      @include it('2xl\:-end-4') {
        @include assert {
          @include output {
            @include \2xl\:-end-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: -1rem;
            }
          }
        }
      }

      @include it('2xl\:-top-4') {
        @include assert {
          @include output {
            @include \2xl\:-top-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -1rem;
            }
          }
        }
      }

      @include it('2xl\:-right-4') {
        @include assert {
          @include output {
            @include \2xl\:-right-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: -1rem;
            }
          }
        }
      }

      @include it('2xl\:-bottom-4') {
        @include assert {
          @include output {
            @include \2xl\:-bottom-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: -1rem;
            }
          }
        }
      }

      @include it('2xl\:-left-4') {
        @include assert {
          @include output {
            @include \2xl\:-left-4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -1rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-5') {
        @include assert {
          @include output {
            @include \2xl\:-inset-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: -1.25rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-x-5') {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -1.25rem;
              right: -1.25rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-y-5') {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -1.25rem;
              bottom: -1.25rem;
            }
          }
        }
      }

      @include it('2xl\:-start-5') {
        @include assert {
          @include output {
            @include \2xl\:-start-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: -1.25rem;
            }
          }
        }
      }

      @include it('2xl\:-end-5') {
        @include assert {
          @include output {
            @include \2xl\:-end-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: -1.25rem;
            }
          }
        }
      }

      @include it('2xl\:-top-5') {
        @include assert {
          @include output {
            @include \2xl\:-top-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -1.25rem;
            }
          }
        }
      }

      @include it('2xl\:-right-5') {
        @include assert {
          @include output {
            @include \2xl\:-right-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: -1.25rem;
            }
          }
        }
      }

      @include it('2xl\:-bottom-5') {
        @include assert {
          @include output {
            @include \2xl\:-bottom-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: -1.25rem;
            }
          }
        }
      }

      @include it('2xl\:-left-5') {
        @include assert {
          @include output {
            @include \2xl\:-left-5;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -1.25rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-6') {
        @include assert {
          @include output {
            @include \2xl\:-inset-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: -1.5rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-x-6') {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -1.5rem;
              right: -1.5rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-y-6') {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -1.5rem;
              bottom: -1.5rem;
            }
          }
        }
      }

      @include it('2xl\:-start-6') {
        @include assert {
          @include output {
            @include \2xl\:-start-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: -1.5rem;
            }
          }
        }
      }

      @include it('2xl\:-end-6') {
        @include assert {
          @include output {
            @include \2xl\:-end-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: -1.5rem;
            }
          }
        }
      }

      @include it('2xl\:-top-6') {
        @include assert {
          @include output {
            @include \2xl\:-top-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -1.5rem;
            }
          }
        }
      }

      @include it('2xl\:-right-6') {
        @include assert {
          @include output {
            @include \2xl\:-right-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: -1.5rem;
            }
          }
        }
      }

      @include it('2xl\:-bottom-6') {
        @include assert {
          @include output {
            @include \2xl\:-bottom-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: -1.5rem;
            }
          }
        }
      }

      @include it('2xl\:-left-6') {
        @include assert {
          @include output {
            @include \2xl\:-left-6;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -1.5rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-7') {
        @include assert {
          @include output {
            @include \2xl\:-inset-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: -1.75rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-x-7') {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -1.75rem;
              right: -1.75rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-y-7') {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -1.75rem;
              bottom: -1.75rem;
            }
          }
        }
      }

      @include it('2xl\:-start-7') {
        @include assert {
          @include output {
            @include \2xl\:-start-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: -1.75rem;
            }
          }
        }
      }

      @include it('2xl\:-end-7') {
        @include assert {
          @include output {
            @include \2xl\:-end-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: -1.75rem;
            }
          }
        }
      }

      @include it('2xl\:-top-7') {
        @include assert {
          @include output {
            @include \2xl\:-top-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -1.75rem;
            }
          }
        }
      }

      @include it('2xl\:-right-7') {
        @include assert {
          @include output {
            @include \2xl\:-right-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: -1.75rem;
            }
          }
        }
      }

      @include it('2xl\:-bottom-7') {
        @include assert {
          @include output {
            @include \2xl\:-bottom-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: -1.75rem;
            }
          }
        }
      }

      @include it('2xl\:-left-7') {
        @include assert {
          @include output {
            @include \2xl\:-left-7;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -1.75rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-8') {
        @include assert {
          @include output {
            @include \2xl\:-inset-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: -2rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-x-8') {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -2rem;
              right: -2rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-y-8') {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -2rem;
              bottom: -2rem;
            }
          }
        }
      }

      @include it('2xl\:-start-8') {
        @include assert {
          @include output {
            @include \2xl\:-start-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: -2rem;
            }
          }
        }
      }

      @include it('2xl\:-end-8') {
        @include assert {
          @include output {
            @include \2xl\:-end-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: -2rem;
            }
          }
        }
      }

      @include it('2xl\:-top-8') {
        @include assert {
          @include output {
            @include \2xl\:-top-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -2rem;
            }
          }
        }
      }

      @include it('2xl\:-right-8') {
        @include assert {
          @include output {
            @include \2xl\:-right-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: -2rem;
            }
          }
        }
      }

      @include it('2xl\:-bottom-8') {
        @include assert {
          @include output {
            @include \2xl\:-bottom-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: -2rem;
            }
          }
        }
      }

      @include it('2xl\:-left-8') {
        @include assert {
          @include output {
            @include \2xl\:-left-8;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -2rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-9') {
        @include assert {
          @include output {
            @include \2xl\:-inset-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: -2.25rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-x-9') {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -2.25rem;
              right: -2.25rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-y-9') {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -2.25rem;
              bottom: -2.25rem;
            }
          }
        }
      }

      @include it('2xl\:-start-9') {
        @include assert {
          @include output {
            @include \2xl\:-start-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: -2.25rem;
            }
          }
        }
      }

      @include it('2xl\:-end-9') {
        @include assert {
          @include output {
            @include \2xl\:-end-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: -2.25rem;
            }
          }
        }
      }

      @include it('2xl\:-top-9') {
        @include assert {
          @include output {
            @include \2xl\:-top-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -2.25rem;
            }
          }
        }
      }

      @include it('2xl\:-right-9') {
        @include assert {
          @include output {
            @include \2xl\:-right-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: -2.25rem;
            }
          }
        }
      }

      @include it('2xl\:-bottom-9') {
        @include assert {
          @include output {
            @include \2xl\:-bottom-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: -2.25rem;
            }
          }
        }
      }

      @include it('2xl\:-left-9') {
        @include assert {
          @include output {
            @include \2xl\:-left-9;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -2.25rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-10') {
        @include assert {
          @include output {
            @include \2xl\:-inset-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: -2.5rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-x-10') {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -2.5rem;
              right: -2.5rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-y-10') {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -2.5rem;
              bottom: -2.5rem;
            }
          }
        }
      }

      @include it('2xl\:-start-10') {
        @include assert {
          @include output {
            @include \2xl\:-start-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: -2.5rem;
            }
          }
        }
      }

      @include it('2xl\:-end-10') {
        @include assert {
          @include output {
            @include \2xl\:-end-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: -2.5rem;
            }
          }
        }
      }

      @include it('2xl\:-top-10') {
        @include assert {
          @include output {
            @include \2xl\:-top-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -2.5rem;
            }
          }
        }
      }

      @include it('2xl\:-right-10') {
        @include assert {
          @include output {
            @include \2xl\:-right-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: -2.5rem;
            }
          }
        }
      }

      @include it('2xl\:-bottom-10') {
        @include assert {
          @include output {
            @include \2xl\:-bottom-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: -2.5rem;
            }
          }
        }
      }

      @include it('2xl\:-left-10') {
        @include assert {
          @include output {
            @include \2xl\:-left-10;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -2.5rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-11') {
        @include assert {
          @include output {
            @include \2xl\:-inset-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: -2.75rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-x-11') {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -2.75rem;
              right: -2.75rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-y-11') {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -2.75rem;
              bottom: -2.75rem;
            }
          }
        }
      }

      @include it('2xl\:-start-11') {
        @include assert {
          @include output {
            @include \2xl\:-start-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: -2.75rem;
            }
          }
        }
      }

      @include it('2xl\:-end-11') {
        @include assert {
          @include output {
            @include \2xl\:-end-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: -2.75rem;
            }
          }
        }
      }

      @include it('2xl\:-top-11') {
        @include assert {
          @include output {
            @include \2xl\:-top-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -2.75rem;
            }
          }
        }
      }

      @include it('2xl\:-right-11') {
        @include assert {
          @include output {
            @include \2xl\:-right-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: -2.75rem;
            }
          }
        }
      }

      @include it('2xl\:-bottom-11') {
        @include assert {
          @include output {
            @include \2xl\:-bottom-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: -2.75rem;
            }
          }
        }
      }

      @include it('2xl\:-left-11') {
        @include assert {
          @include output {
            @include \2xl\:-left-11;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -2.75rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-12') {
        @include assert {
          @include output {
            @include \2xl\:-inset-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: -3rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-x-12') {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -3rem;
              right: -3rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-y-12') {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -3rem;
              bottom: -3rem;
            }
          }
        }
      }

      @include it('2xl\:-start-12') {
        @include assert {
          @include output {
            @include \2xl\:-start-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: -3rem;
            }
          }
        }
      }

      @include it('2xl\:-end-12') {
        @include assert {
          @include output {
            @include \2xl\:-end-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: -3rem;
            }
          }
        }
      }

      @include it('2xl\:-top-12') {
        @include assert {
          @include output {
            @include \2xl\:-top-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -3rem;
            }
          }
        }
      }

      @include it('2xl\:-right-12') {
        @include assert {
          @include output {
            @include \2xl\:-right-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: -3rem;
            }
          }
        }
      }

      @include it('2xl\:-bottom-12') {
        @include assert {
          @include output {
            @include \2xl\:-bottom-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: -3rem;
            }
          }
        }
      }

      @include it('2xl\:-left-12') {
        @include assert {
          @include output {
            @include \2xl\:-left-12;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -3rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-14') {
        @include assert {
          @include output {
            @include \2xl\:-inset-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: -3.5rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-x-14') {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -3.5rem;
              right: -3.5rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-y-14') {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -3.5rem;
              bottom: -3.5rem;
            }
          }
        }
      }

      @include it('2xl\:-start-14') {
        @include assert {
          @include output {
            @include \2xl\:-start-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: -3.5rem;
            }
          }
        }
      }

      @include it('2xl\:-end-14') {
        @include assert {
          @include output {
            @include \2xl\:-end-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: -3.5rem;
            }
          }
        }
      }

      @include it('2xl\:-top-14') {
        @include assert {
          @include output {
            @include \2xl\:-top-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -3.5rem;
            }
          }
        }
      }

      @include it('2xl\:-right-14') {
        @include assert {
          @include output {
            @include \2xl\:-right-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: -3.5rem;
            }
          }
        }
      }

      @include it('2xl\:-bottom-14') {
        @include assert {
          @include output {
            @include \2xl\:-bottom-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: -3.5rem;
            }
          }
        }
      }

      @include it('2xl\:-left-14') {
        @include assert {
          @include output {
            @include \2xl\:-left-14;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -3.5rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-16') {
        @include assert {
          @include output {
            @include \2xl\:-inset-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: -4rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-x-16') {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -4rem;
              right: -4rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-y-16') {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -4rem;
              bottom: -4rem;
            }
          }
        }
      }

      @include it('2xl\:-start-16') {
        @include assert {
          @include output {
            @include \2xl\:-start-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: -4rem;
            }
          }
        }
      }

      @include it('2xl\:-end-16') {
        @include assert {
          @include output {
            @include \2xl\:-end-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: -4rem;
            }
          }
        }
      }

      @include it('2xl\:-top-16') {
        @include assert {
          @include output {
            @include \2xl\:-top-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -4rem;
            }
          }
        }
      }

      @include it('2xl\:-right-16') {
        @include assert {
          @include output {
            @include \2xl\:-right-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: -4rem;
            }
          }
        }
      }

      @include it('2xl\:-bottom-16') {
        @include assert {
          @include output {
            @include \2xl\:-bottom-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: -4rem;
            }
          }
        }
      }

      @include it('2xl\:-left-16') {
        @include assert {
          @include output {
            @include \2xl\:-left-16;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -4rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-20') {
        @include assert {
          @include output {
            @include \2xl\:-inset-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: -5rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-x-20') {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -5rem;
              right: -5rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-y-20') {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -5rem;
              bottom: -5rem;
            }
          }
        }
      }

      @include it('2xl\:-start-20') {
        @include assert {
          @include output {
            @include \2xl\:-start-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: -5rem;
            }
          }
        }
      }

      @include it('2xl\:-end-20') {
        @include assert {
          @include output {
            @include \2xl\:-end-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: -5rem;
            }
          }
        }
      }

      @include it('2xl\:-top-20') {
        @include assert {
          @include output {
            @include \2xl\:-top-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -5rem;
            }
          }
        }
      }

      @include it('2xl\:-right-20') {
        @include assert {
          @include output {
            @include \2xl\:-right-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: -5rem;
            }
          }
        }
      }

      @include it('2xl\:-bottom-20') {
        @include assert {
          @include output {
            @include \2xl\:-bottom-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: -5rem;
            }
          }
        }
      }

      @include it('2xl\:-left-20') {
        @include assert {
          @include output {
            @include \2xl\:-left-20;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -5rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-24') {
        @include assert {
          @include output {
            @include \2xl\:-inset-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: -6rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-x-24') {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -6rem;
              right: -6rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-y-24') {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -6rem;
              bottom: -6rem;
            }
          }
        }
      }

      @include it('2xl\:-start-24') {
        @include assert {
          @include output {
            @include \2xl\:-start-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: -6rem;
            }
          }
        }
      }

      @include it('2xl\:-end-24') {
        @include assert {
          @include output {
            @include \2xl\:-end-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: -6rem;
            }
          }
        }
      }

      @include it('2xl\:-top-24') {
        @include assert {
          @include output {
            @include \2xl\:-top-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -6rem;
            }
          }
        }
      }

      @include it('2xl\:-right-24') {
        @include assert {
          @include output {
            @include \2xl\:-right-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: -6rem;
            }
          }
        }
      }

      @include it('2xl\:-bottom-24') {
        @include assert {
          @include output {
            @include \2xl\:-bottom-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: -6rem;
            }
          }
        }
      }

      @include it('2xl\:-left-24') {
        @include assert {
          @include output {
            @include \2xl\:-left-24;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -6rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-28') {
        @include assert {
          @include output {
            @include \2xl\:-inset-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: -7rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-x-28') {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -7rem;
              right: -7rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-y-28') {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -7rem;
              bottom: -7rem;
            }
          }
        }
      }

      @include it('2xl\:-start-28') {
        @include assert {
          @include output {
            @include \2xl\:-start-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: -7rem;
            }
          }
        }
      }

      @include it('2xl\:-end-28') {
        @include assert {
          @include output {
            @include \2xl\:-end-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: -7rem;
            }
          }
        }
      }

      @include it('2xl\:-top-28') {
        @include assert {
          @include output {
            @include \2xl\:-top-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -7rem;
            }
          }
        }
      }

      @include it('2xl\:-right-28') {
        @include assert {
          @include output {
            @include \2xl\:-right-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: -7rem;
            }
          }
        }
      }

      @include it('2xl\:-bottom-28') {
        @include assert {
          @include output {
            @include \2xl\:-bottom-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: -7rem;
            }
          }
        }
      }

      @include it('2xl\:-left-28') {
        @include assert {
          @include output {
            @include \2xl\:-left-28;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -7rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-32') {
        @include assert {
          @include output {
            @include \2xl\:-inset-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: -8rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-x-32') {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -8rem;
              right: -8rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-y-32') {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -8rem;
              bottom: -8rem;
            }
          }
        }
      }

      @include it('2xl\:-start-32') {
        @include assert {
          @include output {
            @include \2xl\:-start-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: -8rem;
            }
          }
        }
      }

      @include it('2xl\:-end-32') {
        @include assert {
          @include output {
            @include \2xl\:-end-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: -8rem;
            }
          }
        }
      }

      @include it('2xl\:-top-32') {
        @include assert {
          @include output {
            @include \2xl\:-top-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -8rem;
            }
          }
        }
      }

      @include it('2xl\:-right-32') {
        @include assert {
          @include output {
            @include \2xl\:-right-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: -8rem;
            }
          }
        }
      }

      @include it('2xl\:-bottom-32') {
        @include assert {
          @include output {
            @include \2xl\:-bottom-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: -8rem;
            }
          }
        }
      }

      @include it('2xl\:-left-32') {
        @include assert {
          @include output {
            @include \2xl\:-left-32;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -8rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-36') {
        @include assert {
          @include output {
            @include \2xl\:-inset-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: -9rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-x-36') {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -9rem;
              right: -9rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-y-36') {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -9rem;
              bottom: -9rem;
            }
          }
        }
      }

      @include it('2xl\:-start-36') {
        @include assert {
          @include output {
            @include \2xl\:-start-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: -9rem;
            }
          }
        }
      }

      @include it('2xl\:-end-36') {
        @include assert {
          @include output {
            @include \2xl\:-end-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: -9rem;
            }
          }
        }
      }

      @include it('2xl\:-top-36') {
        @include assert {
          @include output {
            @include \2xl\:-top-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -9rem;
            }
          }
        }
      }

      @include it('2xl\:-right-36') {
        @include assert {
          @include output {
            @include \2xl\:-right-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: -9rem;
            }
          }
        }
      }

      @include it('2xl\:-bottom-36') {
        @include assert {
          @include output {
            @include \2xl\:-bottom-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: -9rem;
            }
          }
        }
      }

      @include it('2xl\:-left-36') {
        @include assert {
          @include output {
            @include \2xl\:-left-36;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -9rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-40') {
        @include assert {
          @include output {
            @include \2xl\:-inset-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: -10rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-x-40') {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -10rem;
              right: -10rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-y-40') {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -10rem;
              bottom: -10rem;
            }
          }
        }
      }

      @include it('2xl\:-start-40') {
        @include assert {
          @include output {
            @include \2xl\:-start-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: -10rem;
            }
          }
        }
      }

      @include it('2xl\:-end-40') {
        @include assert {
          @include output {
            @include \2xl\:-end-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: -10rem;
            }
          }
        }
      }

      @include it('2xl\:-top-40') {
        @include assert {
          @include output {
            @include \2xl\:-top-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -10rem;
            }
          }
        }
      }

      @include it('2xl\:-right-40') {
        @include assert {
          @include output {
            @include \2xl\:-right-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: -10rem;
            }
          }
        }
      }

      @include it('2xl\:-bottom-40') {
        @include assert {
          @include output {
            @include \2xl\:-bottom-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: -10rem;
            }
          }
        }
      }

      @include it('2xl\:-left-40') {
        @include assert {
          @include output {
            @include \2xl\:-left-40;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -10rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-44') {
        @include assert {
          @include output {
            @include \2xl\:-inset-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: -11rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-x-44') {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -11rem;
              right: -11rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-y-44') {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -11rem;
              bottom: -11rem;
            }
          }
        }
      }

      @include it('2xl\:-start-44') {
        @include assert {
          @include output {
            @include \2xl\:-start-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: -11rem;
            }
          }
        }
      }

      @include it('2xl\:-end-44') {
        @include assert {
          @include output {
            @include \2xl\:-end-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: -11rem;
            }
          }
        }
      }

      @include it('2xl\:-top-44') {
        @include assert {
          @include output {
            @include \2xl\:-top-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -11rem;
            }
          }
        }
      }

      @include it('2xl\:-right-44') {
        @include assert {
          @include output {
            @include \2xl\:-right-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: -11rem;
            }
          }
        }
      }

      @include it('2xl\:-bottom-44') {
        @include assert {
          @include output {
            @include \2xl\:-bottom-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: -11rem;
            }
          }
        }
      }

      @include it('2xl\:-left-44') {
        @include assert {
          @include output {
            @include \2xl\:-left-44;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -11rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-48') {
        @include assert {
          @include output {
            @include \2xl\:-inset-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: -12rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-x-48') {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -12rem;
              right: -12rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-y-48') {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -12rem;
              bottom: -12rem;
            }
          }
        }
      }

      @include it('2xl\:-start-48') {
        @include assert {
          @include output {
            @include \2xl\:-start-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: -12rem;
            }
          }
        }
      }

      @include it('2xl\:-end-48') {
        @include assert {
          @include output {
            @include \2xl\:-end-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: -12rem;
            }
          }
        }
      }

      @include it('2xl\:-top-48') {
        @include assert {
          @include output {
            @include \2xl\:-top-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -12rem;
            }
          }
        }
      }

      @include it('2xl\:-right-48') {
        @include assert {
          @include output {
            @include \2xl\:-right-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: -12rem;
            }
          }
        }
      }

      @include it('2xl\:-bottom-48') {
        @include assert {
          @include output {
            @include \2xl\:-bottom-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: -12rem;
            }
          }
        }
      }

      @include it('2xl\:-left-48') {
        @include assert {
          @include output {
            @include \2xl\:-left-48;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -12rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-52') {
        @include assert {
          @include output {
            @include \2xl\:-inset-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: -13rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-x-52') {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -13rem;
              right: -13rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-y-52') {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -13rem;
              bottom: -13rem;
            }
          }
        }
      }

      @include it('2xl\:-start-52') {
        @include assert {
          @include output {
            @include \2xl\:-start-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: -13rem;
            }
          }
        }
      }

      @include it('2xl\:-end-52') {
        @include assert {
          @include output {
            @include \2xl\:-end-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: -13rem;
            }
          }
        }
      }

      @include it('2xl\:-top-52') {
        @include assert {
          @include output {
            @include \2xl\:-top-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -13rem;
            }
          }
        }
      }

      @include it('2xl\:-right-52') {
        @include assert {
          @include output {
            @include \2xl\:-right-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: -13rem;
            }
          }
        }
      }

      @include it('2xl\:-bottom-52') {
        @include assert {
          @include output {
            @include \2xl\:-bottom-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: -13rem;
            }
          }
        }
      }

      @include it('2xl\:-left-52') {
        @include assert {
          @include output {
            @include \2xl\:-left-52;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -13rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-56') {
        @include assert {
          @include output {
            @include \2xl\:-inset-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: -14rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-x-56') {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -14rem;
              right: -14rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-y-56') {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -14rem;
              bottom: -14rem;
            }
          }
        }
      }

      @include it('2xl\:-start-56') {
        @include assert {
          @include output {
            @include \2xl\:-start-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: -14rem;
            }
          }
        }
      }

      @include it('2xl\:-end-56') {
        @include assert {
          @include output {
            @include \2xl\:-end-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: -14rem;
            }
          }
        }
      }

      @include it('2xl\:-top-56') {
        @include assert {
          @include output {
            @include \2xl\:-top-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -14rem;
            }
          }
        }
      }

      @include it('2xl\:-right-56') {
        @include assert {
          @include output {
            @include \2xl\:-right-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: -14rem;
            }
          }
        }
      }

      @include it('2xl\:-bottom-56') {
        @include assert {
          @include output {
            @include \2xl\:-bottom-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: -14rem;
            }
          }
        }
      }

      @include it('2xl\:-left-56') {
        @include assert {
          @include output {
            @include \2xl\:-left-56;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -14rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-60') {
        @include assert {
          @include output {
            @include \2xl\:-inset-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: -15rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-x-60') {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -15rem;
              right: -15rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-y-60') {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -15rem;
              bottom: -15rem;
            }
          }
        }
      }

      @include it('2xl\:-start-60') {
        @include assert {
          @include output {
            @include \2xl\:-start-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: -15rem;
            }
          }
        }
      }

      @include it('2xl\:-end-60') {
        @include assert {
          @include output {
            @include \2xl\:-end-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: -15rem;
            }
          }
        }
      }

      @include it('2xl\:-top-60') {
        @include assert {
          @include output {
            @include \2xl\:-top-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -15rem;
            }
          }
        }
      }

      @include it('2xl\:-right-60') {
        @include assert {
          @include output {
            @include \2xl\:-right-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: -15rem;
            }
          }
        }
      }

      @include it('2xl\:-bottom-60') {
        @include assert {
          @include output {
            @include \2xl\:-bottom-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: -15rem;
            }
          }
        }
      }

      @include it('2xl\:-left-60') {
        @include assert {
          @include output {
            @include \2xl\:-left-60;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -15rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-64') {
        @include assert {
          @include output {
            @include \2xl\:-inset-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: -16rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-x-64') {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -16rem;
              right: -16rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-y-64') {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -16rem;
              bottom: -16rem;
            }
          }
        }
      }

      @include it('2xl\:-start-64') {
        @include assert {
          @include output {
            @include \2xl\:-start-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: -16rem;
            }
          }
        }
      }

      @include it('2xl\:-end-64') {
        @include assert {
          @include output {
            @include \2xl\:-end-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: -16rem;
            }
          }
        }
      }

      @include it('2xl\:-top-64') {
        @include assert {
          @include output {
            @include \2xl\:-top-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -16rem;
            }
          }
        }
      }

      @include it('2xl\:-right-64') {
        @include assert {
          @include output {
            @include \2xl\:-right-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: -16rem;
            }
          }
        }
      }

      @include it('2xl\:-bottom-64') {
        @include assert {
          @include output {
            @include \2xl\:-bottom-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: -16rem;
            }
          }
        }
      }

      @include it('2xl\:-left-64') {
        @include assert {
          @include output {
            @include \2xl\:-left-64;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -16rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-72') {
        @include assert {
          @include output {
            @include \2xl\:-inset-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: -18rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-x-72') {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -18rem;
              right: -18rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-y-72') {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -18rem;
              bottom: -18rem;
            }
          }
        }
      }

      @include it('2xl\:-start-72') {
        @include assert {
          @include output {
            @include \2xl\:-start-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: -18rem;
            }
          }
        }
      }

      @include it('2xl\:-end-72') {
        @include assert {
          @include output {
            @include \2xl\:-end-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: -18rem;
            }
          }
        }
      }

      @include it('2xl\:-top-72') {
        @include assert {
          @include output {
            @include \2xl\:-top-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -18rem;
            }
          }
        }
      }

      @include it('2xl\:-right-72') {
        @include assert {
          @include output {
            @include \2xl\:-right-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: -18rem;
            }
          }
        }
      }

      @include it('2xl\:-bottom-72') {
        @include assert {
          @include output {
            @include \2xl\:-bottom-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: -18rem;
            }
          }
        }
      }

      @include it('2xl\:-left-72') {
        @include assert {
          @include output {
            @include \2xl\:-left-72;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -18rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-80') {
        @include assert {
          @include output {
            @include \2xl\:-inset-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: -20rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-x-80') {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -20rem;
              right: -20rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-y-80') {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -20rem;
              bottom: -20rem;
            }
          }
        }
      }

      @include it('2xl\:-start-80') {
        @include assert {
          @include output {
            @include \2xl\:-start-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: -20rem;
            }
          }
        }
      }

      @include it('2xl\:-end-80') {
        @include assert {
          @include output {
            @include \2xl\:-end-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: -20rem;
            }
          }
        }
      }

      @include it('2xl\:-top-80') {
        @include assert {
          @include output {
            @include \2xl\:-top-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -20rem;
            }
          }
        }
      }

      @include it('2xl\:-right-80') {
        @include assert {
          @include output {
            @include \2xl\:-right-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: -20rem;
            }
          }
        }
      }

      @include it('2xl\:-bottom-80') {
        @include assert {
          @include output {
            @include \2xl\:-bottom-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: -20rem;
            }
          }
        }
      }

      @include it('2xl\:-left-80') {
        @include assert {
          @include output {
            @include \2xl\:-left-80;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -20rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-96') {
        @include assert {
          @include output {
            @include \2xl\:-inset-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: -24rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-x-96') {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -24rem;
              right: -24rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-y-96') {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -24rem;
              bottom: -24rem;
            }
          }
        }
      }

      @include it('2xl\:-start-96') {
        @include assert {
          @include output {
            @include \2xl\:-start-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: -24rem;
            }
          }
        }
      }

      @include it('2xl\:-end-96') {
        @include assert {
          @include output {
            @include \2xl\:-end-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: -24rem;
            }
          }
        }
      }

      @include it('2xl\:-top-96') {
        @include assert {
          @include output {
            @include \2xl\:-top-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -24rem;
            }
          }
        }
      }

      @include it('2xl\:-right-96') {
        @include assert {
          @include output {
            @include \2xl\:-right-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: -24rem;
            }
          }
        }
      }

      @include it('2xl\:-bottom-96') {
        @include assert {
          @include output {
            @include \2xl\:-bottom-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: -24rem;
            }
          }
        }
      }

      @include it('2xl\:-left-96') {
        @include assert {
          @include output {
            @include \2xl\:-left-96;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -24rem;
            }
          }
        }
      }

      @include it('2xl\:-inset-1\/2') {
        @include assert {
          @include output {
            @include \2xl\:-inset-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: -50%;
            }
          }
        }
      }

      @include it('2xl\:-inset-1\/3') {
        @include assert {
          @include output {
            @include \2xl\:-inset-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: -33.333333%;
            }
          }
        }
      }

      @include it('2xl\:-inset-2\/3') {
        @include assert {
          @include output {
            @include \2xl\:-inset-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: -66.666667%;
            }
          }
        }
      }

      @include it('2xl\:-inset-1\/4') {
        @include assert {
          @include output {
            @include \2xl\:-inset-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: -25%;
            }
          }
        }
      }

      @include it('2xl\:-inset-2\/4') {
        @include assert {
          @include output {
            @include \2xl\:-inset-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: -50%;
            }
          }
        }
      }

      @include it('2xl\:-inset-3\/4') {
        @include assert {
          @include output {
            @include \2xl\:-inset-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: -75%;
            }
          }
        }
      }

      @include it('2xl\:-inset-full') {
        @include assert {
          @include output {
            @include \2xl\:-inset-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: -100%;
            }
          }
        }
      }

      @include it('2xl\:-inset-x-1\/2') {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -50%;
              right: -50%;
            }
          }
        }
      }

      @include it('2xl\:-inset-x-1\/3') {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -33.333333%;
              right: -33.333333%;
            }
          }
        }
      }

      @include it('2xl\:-inset-x-2\/3') {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -66.666667%;
              right: -66.666667%;
            }
          }
        }
      }

      @include it('2xl\:-inset-x-1\/4') {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -25%;
              right: -25%;
            }
          }
        }
      }

      @include it('2xl\:-inset-x-2\/4') {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -50%;
              right: -50%;
            }
          }
        }
      }

      @include it('2xl\:-inset-x-3\/4') {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -75%;
              right: -75%;
            }
          }
        }
      }

      @include it('2xl\:-inset-x-full') {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -100%;
              right: -100%;
            }
          }
        }
      }

      @include it('2xl\:-inset-y-1\/2') {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -50%;
              bottom: -50%;
            }
          }
        }
      }

      @include it('2xl\:-inset-y-1\/3') {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -33.333333%;
              bottom: -33.333333%;
            }
          }
        }
      }

      @include it('2xl\:-inset-y-2\/3') {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -66.666667%;
              bottom: -66.666667%;
            }
          }
        }
      }

      @include it('2xl\:-inset-y-1\/4') {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -25%;
              bottom: -25%;
            }
          }
        }
      }

      @include it('2xl\:-inset-y-2\/4') {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -50%;
              bottom: -50%;
            }
          }
        }
      }

      @include it('2xl\:-inset-y-3\/4') {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -75%;
              bottom: -75%;
            }
          }
        }
      }

      @include it('2xl\:-inset-y-full') {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -100%;
              bottom: -100%;
            }
          }
        }
      }

      @include it('2xl\:-start-1\/2') {
        @include assert {
          @include output {
            @include \2xl\:-start-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: -50%;
            }
          }
        }
      }

      @include it('2xl\:-start-1\/3') {
        @include assert {
          @include output {
            @include \2xl\:-start-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: -33.333333%;
            }
          }
        }
      }

      @include it('2xl\:-start-2\/3') {
        @include assert {
          @include output {
            @include \2xl\:-start-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: -66.666667%;
            }
          }
        }
      }

      @include it('2xl\:-start-1\/4') {
        @include assert {
          @include output {
            @include \2xl\:-start-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: -25%;
            }
          }
        }
      }

      @include it('2xl\:-start-2\/4') {
        @include assert {
          @include output {
            @include \2xl\:-start-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: -50%;
            }
          }
        }
      }

      @include it('2xl\:-start-3\/4') {
        @include assert {
          @include output {
            @include \2xl\:-start-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: -75%;
            }
          }
        }
      }

      @include it('2xl\:-start-full') {
        @include assert {
          @include output {
            @include \2xl\:-start-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: -100%;
            }
          }
        }
      }

      @include it('2xl\:-end-1\/2') {
        @include assert {
          @include output {
            @include \2xl\:-end-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: -50%;
            }
          }
        }
      }

      @include it('2xl\:-end-1\/3') {
        @include assert {
          @include output {
            @include \2xl\:-end-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: -33.333333%;
            }
          }
        }
      }

      @include it('2xl\:-end-2\/3') {
        @include assert {
          @include output {
            @include \2xl\:-end-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: -66.666667%;
            }
          }
        }
      }

      @include it('2xl\:-end-1\/4') {
        @include assert {
          @include output {
            @include \2xl\:-end-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: -25%;
            }
          }
        }
      }

      @include it('2xl\:-end-2\/4') {
        @include assert {
          @include output {
            @include \2xl\:-end-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: -50%;
            }
          }
        }
      }

      @include it('2xl\:-end-3\/4') {
        @include assert {
          @include output {
            @include \2xl\:-end-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: -75%;
            }
          }
        }
      }

      @include it('2xl\:-end-full') {
        @include assert {
          @include output {
            @include \2xl\:-end-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: -100%;
            }
          }
        }
      }

      @include it('2xl\:-top-1\/2') {
        @include assert {
          @include output {
            @include \2xl\:-top-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -50%;
            }
          }
        }
      }

      @include it('2xl\:-top-1\/3') {
        @include assert {
          @include output {
            @include \2xl\:-top-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -33.333333%;
            }
          }
        }
      }

      @include it('2xl\:-top-2\/3') {
        @include assert {
          @include output {
            @include \2xl\:-top-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -66.666667%;
            }
          }
        }
      }

      @include it('2xl\:-top-1\/4') {
        @include assert {
          @include output {
            @include \2xl\:-top-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -25%;
            }
          }
        }
      }

      @include it('2xl\:-top-2\/4') {
        @include assert {
          @include output {
            @include \2xl\:-top-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -50%;
            }
          }
        }
      }

      @include it('2xl\:-top-3\/4') {
        @include assert {
          @include output {
            @include \2xl\:-top-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -75%;
            }
          }
        }
      }

      @include it('2xl\:-top-full') {
        @include assert {
          @include output {
            @include \2xl\:-top-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -100%;
            }
          }
        }
      }

      @include it('2xl\:-right-1\/2') {
        @include assert {
          @include output {
            @include \2xl\:-right-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: -50%;
            }
          }
        }
      }

      @include it('2xl\:-right-1\/3') {
        @include assert {
          @include output {
            @include \2xl\:-right-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: -33.333333%;
            }
          }
        }
      }

      @include it('2xl\:-right-2\/3') {
        @include assert {
          @include output {
            @include \2xl\:-right-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: -66.666667%;
            }
          }
        }
      }

      @include it('2xl\:-right-1\/4') {
        @include assert {
          @include output {
            @include \2xl\:-right-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: -25%;
            }
          }
        }
      }

      @include it('2xl\:-right-2\/4') {
        @include assert {
          @include output {
            @include \2xl\:-right-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: -50%;
            }
          }
        }
      }

      @include it('2xl\:-right-3\/4') {
        @include assert {
          @include output {
            @include \2xl\:-right-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: -75%;
            }
          }
        }
      }

      @include it('2xl\:-right-full') {
        @include assert {
          @include output {
            @include \2xl\:-right-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: -100%;
            }
          }
        }
      }

      @include it('2xl\:-bottom-1\/2') {
        @include assert {
          @include output {
            @include \2xl\:-bottom-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: -50%;
            }
          }
        }
      }

      @include it('2xl\:-bottom-1\/3') {
        @include assert {
          @include output {
            @include \2xl\:-bottom-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: -33.333333%;
            }
          }
        }
      }

      @include it('2xl\:-bottom-2\/3') {
        @include assert {
          @include output {
            @include \2xl\:-bottom-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: -66.666667%;
            }
          }
        }
      }

      @include it('2xl\:-bottom-1\/4') {
        @include assert {
          @include output {
            @include \2xl\:-bottom-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: -25%;
            }
          }
        }
      }

      @include it('2xl\:-bottom-2\/4') {
        @include assert {
          @include output {
            @include \2xl\:-bottom-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: -50%;
            }
          }
        }
      }

      @include it('2xl\:-bottom-3\/4') {
        @include assert {
          @include output {
            @include \2xl\:-bottom-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: -75%;
            }
          }
        }
      }

      @include it('2xl\:-bottom-full') {
        @include assert {
          @include output {
            @include \2xl\:-bottom-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: -100%;
            }
          }
        }
      }

      @include it('2xl\:-left-1\/2') {
        @include assert {
          @include output {
            @include \2xl\:-left-1\/2;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -50%;
            }
          }
        }
      }

      @include it('2xl\:-left-1\/3') {
        @include assert {
          @include output {
            @include \2xl\:-left-1\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -33.333333%;
            }
          }
        }
      }

      @include it('2xl\:-left-2\/3') {
        @include assert {
          @include output {
            @include \2xl\:-left-2\/3;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -66.666667%;
            }
          }
        }
      }

      @include it('2xl\:-left-1\/4') {
        @include assert {
          @include output {
            @include \2xl\:-left-1\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -25%;
            }
          }
        }
      }

      @include it('2xl\:-left-2\/4') {
        @include assert {
          @include output {
            @include \2xl\:-left-2\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -50%;
            }
          }
        }
      }

      @include it('2xl\:-left-3\/4') {
        @include assert {
          @include output {
            @include \2xl\:-left-3\/4;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -75%;
            }
          }
        }
      }

      @include it('2xl\:-left-full') {
        @include assert {
          @include output {
            @include \2xl\:-left-full;
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -100%;
            }
          }
        }
      }
    }

    @include describe('Custom') {
      @include it('inset-(3px)') {
        @include assert {
          @include output {
            @include inset-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            inset: 3px;
          }
        }
      }

      @include it('inset-x-(3px)') {
        @include assert {
          @include output {
            @include inset-x-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            left: 3px;
            right: 3px;
          }
        }
      }

      @include it('inset-y-(3px)') {
        @include assert {
          @include output {
            @include inset-y-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            top: 3px;
            bottom: 3px;
          }
        }
      }

      @include it('start-(3px)') {
        @include assert {
          @include output {
            @include start-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: 3px;
          }
        }
      }

      @include it('end-(3px)') {
        @include assert {
          @include output {
            @include end-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: 3px;
          }
        }
      }

      @include it('top-(3px)') {
        @include assert {
          @include output {
            @include top-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            top: 3px;
          }
        }
      }

      @include it('right-(3px)') {
        @include assert {
          @include output {
            @include right-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            right: 3px;
          }
        }
      }

      @include it('bottom-(3px)') {
        @include assert {
          @include output {
            @include bottom-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            bottom: 3px;
          }
        }
      }

      @include it('left-(3px)') {
        @include assert {
          @include output {
            @include left-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            left: 3px;
          }
        }
      }

      @include it('-inset-(3px)') {
        @include assert {
          @include output {
            @include \-inset-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            inset: -3px;
          }
        }
      }

      @include it('-inset-x-(3px)') {
        @include assert {
          @include output {
            @include \-inset-x-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            left: -3px;
            right: -3px;
          }
        }
      }

      @include it('-inset-y-(3px)') {
        @include assert {
          @include output {
            @include \-inset-y-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            top: -3px;
            bottom: -3px;
          }
        }
      }

      @include it('-start-(3px)') {
        @include assert {
          @include output {
            @include \-start-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-start: -3px;
          }
        }
      }

      @include it('-end-(3px)') {
        @include assert {
          @include output {
            @include \-end-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            inset-inline-end: -3px;
          }
        }
      }

      @include it('-top-(3px)') {
        @include assert {
          @include output {
            @include \-top-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            top: -3px;
          }
        }
      }

      @include it('-right-(3px)') {
        @include assert {
          @include output {
            @include \-right-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            right: -3px;
          }
        }
      }

      @include it('-bottom-(3px)') {
        @include assert {
          @include output {
            @include \-bottom-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            bottom: -3px;
          }
        }
      }

      @include it('-left-(3px)') {
        @include assert {
          @include output {
            @include \-left-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            left: -3px;
          }
        }
      }

      @include it('sm\:inset-(3px)') {
        @include assert {
          @include output {
            @include sm\:inset-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: 3px;
            }
          }
        }
      }

      @include it('sm\:inset-x-(3px)') {
        @include assert {
          @include output {
            @include sm\:inset-x-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 3px;
              right: 3px;
            }
          }
        }
      }

      @include it('sm\:inset-y-(3px)') {
        @include assert {
          @include output {
            @include sm\:inset-y-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 3px;
              bottom: 3px;
            }
          }
        }
      }

      @include it('sm\:start-(3px)') {
        @include assert {
          @include output {
            @include sm\:start-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: 3px;
            }
          }
        }
      }

      @include it('sm\:end-(3px)') {
        @include assert {
          @include output {
            @include sm\:end-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: 3px;
            }
          }
        }
      }

      @include it('sm\:top-(3px)') {
        @include assert {
          @include output {
            @include sm\:top-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: 3px;
            }
          }
        }
      }

      @include it('sm\:right-(3px)') {
        @include assert {
          @include output {
            @include sm\:right-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: 3px;
            }
          }
        }
      }

      @include it('sm\:bottom-(3px)') {
        @include assert {
          @include output {
            @include sm\:bottom-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: 3px;
            }
          }
        }
      }

      @include it('sm\:left-(3px)') {
        @include assert {
          @include output {
            @include sm\:left-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: 3px;
            }
          }
        }
      }

      @include it('sm\:-inset-(3px)') {
        @include assert {
          @include output {
            @include sm\:-inset-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset: -3px;
            }
          }
        }
      }

      @include it('sm\:-inset-x-(3px)') {
        @include assert {
          @include output {
            @include sm\:-inset-x-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -3px;
              right: -3px;
            }
          }
        }
      }

      @include it('sm\:-inset-y-(3px)') {
        @include assert {
          @include output {
            @include sm\:-inset-y-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -3px;
              bottom: -3px;
            }
          }
        }
      }

      @include it('sm\:-start-(3px)') {
        @include assert {
          @include output {
            @include sm\:-start-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-start: -3px;
            }
          }
        }
      }

      @include it('sm\:-end-(3px)') {
        @include assert {
          @include output {
            @include sm\:-end-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              inset-inline-end: -3px;
            }
          }
        }
      }

      @include it('sm\:-top-(3px)') {
        @include assert {
          @include output {
            @include sm\:-top-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              top: -3px;
            }
          }
        }
      }

      @include it('sm\:-right-(3px)') {
        @include assert {
          @include output {
            @include sm\:-right-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              right: -3px;
            }
          }
        }
      }

      @include it('sm\:-bottom-(3px)') {
        @include assert {
          @include output {
            @include sm\:-bottom-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              bottom: -3px;
            }
          }
        }
      }

      @include it('sm\:-left-(3px)') {
        @include assert {
          @include output {
            @include sm\:-left-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_sm) {
              left: -3px;
            }
          }
        }
      }

      @include it('md\:inset-(3px)') {
        @include assert {
          @include output {
            @include md\:inset-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: 3px;
            }
          }
        }
      }

      @include it('md\:inset-x-(3px)') {
        @include assert {
          @include output {
            @include md\:inset-x-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 3px;
              right: 3px;
            }
          }
        }
      }

      @include it('md\:inset-y-(3px)') {
        @include assert {
          @include output {
            @include md\:inset-y-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 3px;
              bottom: 3px;
            }
          }
        }
      }

      @include it('md\:start-(3px)') {
        @include assert {
          @include output {
            @include md\:start-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: 3px;
            }
          }
        }
      }

      @include it('md\:end-(3px)') {
        @include assert {
          @include output {
            @include md\:end-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: 3px;
            }
          }
        }
      }

      @include it('md\:top-(3px)') {
        @include assert {
          @include output {
            @include md\:top-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: 3px;
            }
          }
        }
      }

      @include it('md\:right-(3px)') {
        @include assert {
          @include output {
            @include md\:right-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: 3px;
            }
          }
        }
      }

      @include it('md\:bottom-(3px)') {
        @include assert {
          @include output {
            @include md\:bottom-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: 3px;
            }
          }
        }
      }

      @include it('md\:left-(3px)') {
        @include assert {
          @include output {
            @include md\:left-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: 3px;
            }
          }
        }
      }

      @include it('md\:-inset-(3px)') {
        @include assert {
          @include output {
            @include md\:-inset-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset: -3px;
            }
          }
        }
      }

      @include it('md\:-inset-x-(3px)') {
        @include assert {
          @include output {
            @include md\:-inset-x-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -3px;
              right: -3px;
            }
          }
        }
      }

      @include it('md\:-inset-y-(3px)') {
        @include assert {
          @include output {
            @include md\:-inset-y-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -3px;
              bottom: -3px;
            }
          }
        }
      }

      @include it('md\:-start-(3px)') {
        @include assert {
          @include output {
            @include md\:-start-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-start: -3px;
            }
          }
        }
      }

      @include it('md\:-end-(3px)') {
        @include assert {
          @include output {
            @include md\:-end-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              inset-inline-end: -3px;
            }
          }
        }
      }

      @include it('md\:-top-(3px)') {
        @include assert {
          @include output {
            @include md\:-top-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              top: -3px;
            }
          }
        }
      }

      @include it('md\:-right-(3px)') {
        @include assert {
          @include output {
            @include md\:-right-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              right: -3px;
            }
          }
        }
      }

      @include it('md\:-bottom-(3px)') {
        @include assert {
          @include output {
            @include md\:-bottom-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              bottom: -3px;
            }
          }
        }
      }

      @include it('md\:-left-(3px)') {
        @include assert {
          @include output {
            @include md\:-left-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_md) {
              left: -3px;
            }
          }
        }
      }

      @include it('lg\:inset-(3px)') {
        @include assert {
          @include output {
            @include lg\:inset-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: 3px;
            }
          }
        }
      }

      @include it('lg\:inset-x-(3px)') {
        @include assert {
          @include output {
            @include lg\:inset-x-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 3px;
              right: 3px;
            }
          }
        }
      }

      @include it('lg\:inset-y-(3px)') {
        @include assert {
          @include output {
            @include lg\:inset-y-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 3px;
              bottom: 3px;
            }
          }
        }
      }

      @include it('lg\:start-(3px)') {
        @include assert {
          @include output {
            @include lg\:start-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: 3px;
            }
          }
        }
      }

      @include it('lg\:end-(3px)') {
        @include assert {
          @include output {
            @include lg\:end-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: 3px;
            }
          }
        }
      }

      @include it('lg\:top-(3px)') {
        @include assert {
          @include output {
            @include lg\:top-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: 3px;
            }
          }
        }
      }

      @include it('lg\:right-(3px)') {
        @include assert {
          @include output {
            @include lg\:right-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: 3px;
            }
          }
        }
      }

      @include it('lg\:bottom-(3px)') {
        @include assert {
          @include output {
            @include lg\:bottom-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: 3px;
            }
          }
        }
      }

      @include it('lg\:left-(3px)') {
        @include assert {
          @include output {
            @include lg\:left-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: 3px;
            }
          }
        }
      }

      @include it('lg\:-inset-(3px)') {
        @include assert {
          @include output {
            @include lg\:-inset-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset: -3px;
            }
          }
        }
      }

      @include it('lg\:-inset-x-(3px)') {
        @include assert {
          @include output {
            @include lg\:-inset-x-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -3px;
              right: -3px;
            }
          }
        }
      }

      @include it('lg\:-inset-y-(3px)') {
        @include assert {
          @include output {
            @include lg\:-inset-y-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -3px;
              bottom: -3px;
            }
          }
        }
      }

      @include it('lg\:-start-(3px)') {
        @include assert {
          @include output {
            @include lg\:-start-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-start: -3px;
            }
          }
        }
      }

      @include it('lg\:-end-(3px)') {
        @include assert {
          @include output {
            @include lg\:-end-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              inset-inline-end: -3px;
            }
          }
        }
      }

      @include it('lg\:-top-(3px)') {
        @include assert {
          @include output {
            @include lg\:-top-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              top: -3px;
            }
          }
        }
      }

      @include it('lg\:-right-(3px)') {
        @include assert {
          @include output {
            @include lg\:-right-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              right: -3px;
            }
          }
        }
      }

      @include it('lg\:-bottom-(3px)') {
        @include assert {
          @include output {
            @include lg\:-bottom-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              bottom: -3px;
            }
          }
        }
      }

      @include it('lg\:-left-(3px)') {
        @include assert {
          @include output {
            @include lg\:-left-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_lg) {
              left: -3px;
            }
          }
        }
      }

      @include it('xl\:inset-(3px)') {
        @include assert {
          @include output {
            @include xl\:inset-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: 3px;
            }
          }
        }
      }

      @include it('xl\:inset-x-(3px)') {
        @include assert {
          @include output {
            @include xl\:inset-x-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 3px;
              right: 3px;
            }
          }
        }
      }

      @include it('xl\:inset-y-(3px)') {
        @include assert {
          @include output {
            @include xl\:inset-y-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 3px;
              bottom: 3px;
            }
          }
        }
      }

      @include it('xl\:start-(3px)') {
        @include assert {
          @include output {
            @include xl\:start-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: 3px;
            }
          }
        }
      }

      @include it('xl\:end-(3px)') {
        @include assert {
          @include output {
            @include xl\:end-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: 3px;
            }
          }
        }
      }

      @include it('xl\:top-(3px)') {
        @include assert {
          @include output {
            @include xl\:top-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: 3px;
            }
          }
        }
      }

      @include it('xl\:right-(3px)') {
        @include assert {
          @include output {
            @include xl\:right-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: 3px;
            }
          }
        }
      }

      @include it('xl\:bottom-(3px)') {
        @include assert {
          @include output {
            @include xl\:bottom-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: 3px;
            }
          }
        }
      }

      @include it('xl\:left-(3px)') {
        @include assert {
          @include output {
            @include xl\:left-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: 3px;
            }
          }
        }
      }

      @include it('xl\:-inset-(3px)') {
        @include assert {
          @include output {
            @include xl\:-inset-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset: -3px;
            }
          }
        }
      }

      @include it('xl\:-inset-x-(3px)') {
        @include assert {
          @include output {
            @include xl\:-inset-x-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -3px;
              right: -3px;
            }
          }
        }
      }

      @include it('xl\:-inset-y-(3px)') {
        @include assert {
          @include output {
            @include xl\:-inset-y-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -3px;
              bottom: -3px;
            }
          }
        }
      }

      @include it('xl\:-start-(3px)') {
        @include assert {
          @include output {
            @include xl\:-start-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-start: -3px;
            }
          }
        }
      }

      @include it('xl\:-end-(3px)') {
        @include assert {
          @include output {
            @include xl\:-end-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              inset-inline-end: -3px;
            }
          }
        }
      }

      @include it('xl\:-top-(3px)') {
        @include assert {
          @include output {
            @include xl\:-top-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              top: -3px;
            }
          }
        }
      }

      @include it('xl\:-right-(3px)') {
        @include assert {
          @include output {
            @include xl\:-right-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              right: -3px;
            }
          }
        }
      }

      @include it('xl\:-bottom-(3px)') {
        @include assert {
          @include output {
            @include xl\:-bottom-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              bottom: -3px;
            }
          }
        }
      }

      @include it('xl\:-left-(3px)') {
        @include assert {
          @include output {
            @include xl\:-left-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xl) {
              left: -3px;
            }
          }
        }
      }

      @include it('2xl\:inset-(3px)') {
        @include assert {
          @include output {
            @include \2xl\:inset-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: 3px;
            }
          }
        }
      }

      @include it('2xl\:inset-x-(3px)') {
        @include assert {
          @include output {
            @include \2xl\:inset-x-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 3px;
              right: 3px;
            }
          }
        }
      }

      @include it('2xl\:inset-y-(3px)') {
        @include assert {
          @include output {
            @include \2xl\:inset-y-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 3px;
              bottom: 3px;
            }
          }
        }
      }

      @include it('2xl\:start-(3px)') {
        @include assert {
          @include output {
            @include \2xl\:start-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: 3px;
            }
          }
        }
      }

      @include it('2xl\:end-(3px)') {
        @include assert {
          @include output {
            @include \2xl\:end-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: 3px;
            }
          }
        }
      }

      @include it('2xl\:top-(3px)') {
        @include assert {
          @include output {
            @include \2xl\:top-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: 3px;
            }
          }
        }
      }

      @include it('2xl\:right-(3px)') {
        @include assert {
          @include output {
            @include \2xl\:right-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: 3px;
            }
          }
        }
      }

      @include it('2xl\:bottom-(3px)') {
        @include assert {
          @include output {
            @include \2xl\:bottom-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: 3px;
            }
          }
        }
      }

      @include it('2xl\:left-(3px)') {
        @include assert {
          @include output {
            @include \2xl\:left-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: 3px;
            }
          }
        }
      }

      @include it('2xl\:-inset-(3px)') {
        @include assert {
          @include output {
            @include \2xl\:-inset-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset: -3px;
            }
          }
        }
      }

      @include it('2xl\:-inset-x-(3px)') {
        @include assert {
          @include output {
            @include \2xl\:-inset-x-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -3px;
              right: -3px;
            }
          }
        }
      }

      @include it('2xl\:-inset-y-(3px)') {
        @include assert {
          @include output {
            @include \2xl\:-inset-y-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -3px;
              bottom: -3px;
            }
          }
        }
      }

      @include it('2xl\:-start-(3px)') {
        @include assert {
          @include output {
            @include \2xl\:-start-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-start: -3px;
            }
          }
        }
      }

      @include it('2xl\:-end-(3px)') {
        @include assert {
          @include output {
            @include \2xl\:-end-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              inset-inline-end: -3px;
            }
          }
        }
      }

      @include it('2xl\:-top-(3px)') {
        @include assert {
          @include output {
            @include \2xl\:-top-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              top: -3px;
            }
          }
        }
      }

      @include it('2xl\:-right-(3px)') {
        @include assert {
          @include output {
            @include \2xl\:-right-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              right: -3px;
            }
          }
        }
      }

      @include it('2xl\:-bottom-(3px)') {
        @include assert {
          @include output {
            @include \2xl\:-bottom-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              bottom: -3px;
            }
          }
        }
      }

      @include it('2xl\:-left-(3px)') {
        @include assert {
          @include output {
            @include \2xl\:-left-(3px);
            @include utils_reset-tw;
          }

          @include expect {
            @media (min-width: $_xxl) {
              left: -3px;
            }
          }
        }
      }
    }
  }
}
