@use 'true' as *;
@use '../awaken' as *;

@include describe('11.Transitions & Animation') {
  @include describe('Transition Property') {
    @include describe('Basic') {
      @include it('transition-none') {
        @include assert {
          @include output {
            @include transition-none;
            @include utils_reset-tw;
          }

          @include expect {
            transition-property: none;
          }
        }
      }

      @include it('transition-all') {
        @include assert {
          @include output {
            @include transition-all;
            @include utils_reset-tw;
          }

          @include expect {
            & {
              transition-property: all;
            }
            & {
              transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
            }
            & {
              transition-duration: 150ms;
            }
          }
        }
      }

      @include it('transition') {
        @include assert {
          @include output {
            @include transition;
            @include utils_reset-tw;
          }

          @include expect {
            & {
              transition-property: color, background-color, border-color, text-decoration-color,
                fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
            }
            & {
              transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
            }
            & {
              transition-duration: 150ms;
            }
          }
        }
      }

      @include it('transition-colors') {
        @include assert {
          @include output {
            @include transition-colors;
            @include utils_reset-tw;
          }

          @include expect {
            & {
              transition-property: color, background-color, border-color, text-decoration-color,
                fill, stroke;
            }
            & {
              transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
            }
            & {
              transition-duration: 150ms;
            }
          }
        }
      }

      @include it('transition-opacity') {
        @include assert {
          @include output {
            @include transition-opacity;
            @include utils_reset-tw;
          }

          @include expect {
            & {
              transition-property: opacity;
            }
            & {
              transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
            }
            & {
              transition-duration: 150ms;
            }
          }
        }
      }

      @include it('transition-shadow') {
        @include assert {
          @include output {
            @include transition-shadow;
            @include utils_reset-tw;
          }

          @include expect {
            & {
              transition-property: box-shadow;
            }
            & {
              transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
            }
            & {
              transition-duration: 150ms;
            }
          }
        }
      }

      @include it('transition-transform') {
        @include assert {
          @include output {
            @include transition-transform;
            @include utils_reset-tw;
          }

          @include expect {
            & {
              transition-property: transform;
            }
            & {
              transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
            }
            & {
              transition-duration: 150ms;
            }
          }
        }
      }
    }

    @include describe('Custom') {
      @include it('transition-(height)') {
        @include assert {
          @include output {
            @include transition-(height);
            @include utils_reset-tw;
          }

          @include expect {
            & {
              transition-property: height;
            }
            & {
              transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
            }
            & {
              transition-duration: 150ms;
            }
          }
        }
      }
    }
  }
}
