@include describe('11.Transitions & Animation') {
  @include describe('Animation') {
    @include describe('Basic') {
      @include it('animate-none') {
        @include assert {
          @include output {
            @include animate-none;
            @include utils_reset-tw;
          }

          @include expect {
            animation: none;
          }
        }
      }

      @include it('animate-spin') {
        @include assert {
          @include output {
            @include animate-spin;
            @include utils_reset-tw;
          }

          @include expect {
            animation: spin 1s linear infinite;

            @keyframes spin {
              to {
                transform: rotate(360deg);
              }
            }
          }
        }
      }

      @include it('animate-ping') {
        @include assert {
          @include output {
            @include animate-ping;
            @include utils_reset-tw;
          }

          @include expect {
            animation: ping 1s cubic-bezier(0, 0, 0.2, 1) infinite;

            @keyframes ping {
              75%,
              100% {
                transform: scale(2);
                opacity: 0;
              }
            }
          }
        }
      }

      @include it('animate-pulse') {
        @include assert {
          @include output {
            @include animate-pulse;
            @include utils_reset-tw;
          }

          @include expect {
            animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;

            @keyframes pulse {
              50% {
                opacity: 0.5;
              }
            }
          }
        }
      }

      @include it('animate-bounce') {
        @include assert {
          @include output {
            @include animate-bounce;
            @include utils_reset-tw;
          }

          @include expect {
            animation: bounce 1s infinite;

            @keyframes bounce {
              0%,
              100% {
                transform: translateY(-25%);
                animate-timing-function: cubic-bezier(0.8, 0, 1, 1);
              }

              50% {
                transform: translateY(0);
                animate-timing-function: cubic-bezier(0, 0, 0.2, 1);
              }
            }
          }
        }
      }
    }

    @include describe('Custom') {
      @include it('animate-(wiggle 1s ease-in-out infinite)') {
        @include assert {
          @include output {
            @include animate-(wiggle 1s ease-in-out infinite);
            @include utils_reset-tw;
          }

          @include expect {
            animation: wiggle 1s ease-in-out infinite;
          }
        }
      }
    }
  }
}
