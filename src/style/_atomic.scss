$atomic: (
  "accent-color",
  "align-content",
  "align-items",
  "align-self",
  "animation",
  "appearance",
  "aspect-ratio",
  "backdrop-filter",
  "background-attachment",
  "background-blend-mode",
  "background-clip",
  "background-color",
  "background-image",
  "background-origin",
  "background-position",
  "background-repeat",
  "background-size",
  "border-bottom-color",
  "border-bottom-left-radius",
  "border-bottom-right-radius",
  "border-bottom-width",
  "border-collapse",
  "border-color",
  "border-end-end-radius",
  "border-end-start-radius",
  "border-inline-end-color",
  "border-inline-end-width",
  "border-inline-start-color",
  "border-inline-start-width",
  "border-left-color",
  "border-left-width",
  "border-radius",
  "border-right-color",
  "border-right-width",
  "border-spacing",
  "border-start-end-radius",
  "border-start-start-radius",
  "border-style",
  "border-top-color",
  "border-top-left-radius",
  "border-top-right-radius",
  "border-top-width",
  "border-width",
  "bottom",
  "box-decoration-break",
  "box-shadow",
  "box-sizing",
  "break-after",
  "break-before",
  "break-inside",
  "caption-side",
  "caret-color",
  "clear",
  "clip",
  "color",
  "column-gap",
  "columns",
  "cursor",
  "display",
  "fill",
  "filter",
  "flex",
  "flex-basis",
  "flex-direction",
  "flex-grow",
  "flex-shrink",
  "flex-wrap",
  "float",
  "font-family",
  "font-size",
  "font-style",
  "font-variant-numeric",
  "font-weight",
  "forced-color-adjust",
  "gap",
  "grid-auto-columns",
  "grid-auto-flow",
  "grid-auto-rows",
  "grid-column",
  "grid-column-end",
  "grid-column-start",
  "grid-row",
  "grid-row-end",
  "grid-row-start",
  "grid-template-columns",
  "grid-template-rows",
  "height",
  "hyphens",
  "inset",
  "inset-inline-end",
  "inset-inline-start",
  "isolation",
  "justify-content",
  "justify-items",
  "justify-self",
  "left",
  "letter-spacing",
  "line-height",
  "list-style-image",
  "list-style-position",
  "list-style-type",
  "margin",
  "margin-bottom",
  "margin-inline-end",
  "margin-inline-start",
  "margin-left",
  "margin-right",
  "margin-top",
  "max-height",
  "max-width",
  "min-height",
  "min-width",
  "mix-blend-mode",
  "object-fit",
  "object-position",
  "opacity",
  "order",
  "outline",
  "outline-color",
  "outline-offset",
  "outline-style",
  "outline-width",
  "overflow",
  "overflow-wrap",
  "overflow-x",
  "overflow-y",
  "overscroll-behavior",
  "overscroll-behavior-x",
  "overscroll-behavior-y",
  "padding",
  "padding-bottom",
  "padding-inline-end",
  "padding-inline-start",
  "padding-left",
  "padding-right",
  "padding-top",
  "place-content",
  "place-items",
  "place-self",
  "pointer-events",
  "position",
  "resize",
  "right",
  "row-gap",
  "scroll-behavior",
  "scroll-margin",
  "scroll-margin-bottom",
  "scroll-margin-inline-end",
  "scroll-margin-inline-start",
  "scroll-margin-left",
  "scroll-margin-right",
  "scroll-margin-top",
  "scroll-padding",
  "scroll-padding-bottom",
  "scroll-padding-inline-end",
  "scroll-padding-inline-start",
  "scroll-padding-left",
  "scroll-padding-right",
  "scroll-padding-top",
  "scroll-snap-align",
  "scroll-snap-stop",
  "scroll-snap-type",
  "stroke",
  "stroke-width",
  "table-layout",
  "text-align",
  "text-decoration-color",
  "text-decoration-line",
  "text-decoration-style",
  "text-decoration-thickness",
  "text-indent",
  "text-overflow",
  "text-transform",
  "text-underline-offset",
  "text-wrap",
  "top",
  "touch-action",
  "transform",
  "transform-origin",
  "transition-delay",
  "transition-duration",
  "transition-property",
  "transition-timing-function",
  "user-select",
  "vertical-align",
  "visibility",
  "white-space",
  "width",
  "will-change",
  "word-break",
  "z-index"
);

/*x
@mixin \-moz-osx-font-smoothing($v) {
  & {
    -moz-osx-font-smoothing: $v;
  }
}

@mixin \-webkit-box-orient($v) {
  & {
    -webkit-box-orient: $v;
  }
}

@mixin \-webkit-font-smoothing($v) {
  & {
    -webkit-font-smoothing: $v;
  }
}

@mixin \-webkit-line-clamp($v) {
  & {
    -webkit-line-clamp: $v;
  }
}
x*/

@each $property in $atomic {
  @if $property == "flex" {
    /*x
    @mixin flex($v: flex) {
      & {
        @if $v==flex {
          display: $v;
        }

        @else {
          flex: $v;
        }
      }
    }
    x*/
  } @else if $property == "resize" {
    /*x
    @mixin resize($v: both) {
      & {
        resize: $v;
      }
    }
    x*/
  } @else if $property == "cursor" {
    /*x
    @mixin cursor($v, $v2: null) {
      & {
        cursor: $v, $v2;
      }
    }
    x*/
  } @else if $property == "outline" {
    /*x
    @mixin outline($v: solid) {
      & {
        @if $v==solid {
          outline-style: $v;
        }

        @else {
          outline: $v;
        }
      }
    }
    x*/
  } @else if $property == "transform" {
    /*x
    @mixin transform($v: null) {
      & {
        @if $v==null {
          transform: _t();
        }

        @else {
          transform: $v;
        }
      }
    }
    x*/
  } @else if $property == "flex-wrap" {
    /*x
    @mixin flex-wrap($v: wrap) {
      & {
        flex-wrap: $v;
      }
    }
    x*/
  } @else if $property == "text-wrap" {
    /*x
    @mixin text-wrap($v: wrap) {
      & {
        text-wrap: $v;
      }
    }
    x*/
  } @else if $property == "will-change" {
    /*x
    @mixin will-change($v, $v2: null) {
      & {
        will-change: $v, $v2;
      }
    }
    x*/
  } @else if $property == "border-collapse" {
    /*x
    @mixin border-collapse($v: collapse) {
      & {
        border-collapse: $v;
      }
    }
    x*/
  } @else {
    /*x
    @mixin #{$property}($v) {
      & {
        #{$property}: $v;
      }
    }
    x*/
  }
}
