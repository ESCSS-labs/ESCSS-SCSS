$data: (
  '-0': 0px,
  null: 1px,
  '-2': 2px,
  '-4': 4px,
  '-8': 8px,
);

@if $isBasic {
  /*x
  @mixin divide-x-reverse {
    $tw-divide-x-reverse: 1 !global;

    > * ~ * {
      @include border-right-width($tw-dummy-divide-x-value * $tw-divide-x-reverse);
      @include border-left-width($tw-dummy-divide-x-value * (1 - $tw-divide-x-reverse));
    }
  }

  @mixin divide-y-reverse {
    $tw-divide-y-reverse: 1 !global;

    > * ~ * {
      @include border-top-width($tw-dummy-divide-y-value * (1 - $tw-divide-y-reverse));
      @include border-bottom-width($tw-dummy-divide-y-value * $tw-divide-y-reverse);
    }
  }
  x*/
  @each $key, $value in $data {
    /*x
    @mixin divide-x#{$key} {
      $tw-dummy-divide-x-value: #{$value} !global;

      >*~* {
        @include border-right-width(#{$value} * $tw-divide-x-reverse);
        @include border-left-width(#{$value} * (1 - $tw-divide-x-reverse));
      }
    }

    @mixin divide-y#{$key} {
      $tw-dummy-divide-y-value: #{$value} !global;

      >*~* {
        @include border-top-width(#{$value} * (1 - $tw-divide-y-reverse));
        @include border-bottom-width(#{$value} * $tw-divide-y-reverse);
      }
    }
    x*/
  }
}

@if $isResponsive and (not $isAwaken) {
  @each $rwdToken, $rwd in $rwdBox {
    /*x
      @mixin #{$rwdToken}\:divide-x-reverse {
        $tw-divide-x-reverse: 1 !global;

        @include #{$rwdToken} {
          >*~* {
            @include border-right-width($tw-dummy-divide-x-value * $tw-divide-x-reverse);
            @include border-left-width($tw-dummy-divide-x-value * (1 - $tw-divide-x-reverse));
          }
        }
      }
      @mixin #{$rwdToken}\:divide-y-reverse {
        $tw-divide-y-reverse: 1 !global;

        @include #{$rwdToken} {
          >*~* {
            @include border-top-width($tw-dummy-divide-y-value * (1 - $tw-divide-y-reverse));
            @include border-bottom-width($tw-dummy-divide-y-value * $tw-divide-y-reverse);
          }
        }
      }
      x*/
    @each $key, $value in $data {
      /*x
      @mixin #{$rwdToken}\:divide-x#{$key} {
        $tw-dummy-divide-x-value: #{$value} !global; // update global value for using reverse
    
        @include #{$rwdToken} {
          >*~* {
            @include border-right-width(#{$value} * $tw-divide-x-reverse);
            @include border-left-width(#{$value} * (1 - $tw-divide-x-reverse));
          }
        }
      }

      @mixin #{$rwdToken}\:divide-y#{$key} {
        $tw-dummy-divide-y-value: #{$value} !global; // update global value for using reverse
    
        @include #{$rwdToken} {
          >*~* {
            @include border-top-width(#{$value} * (1 - $tw-divide-y-reverse));
            @include border-bottom-width(#{$value} * $tw-divide-y-reverse);
          }
        }
      }
      x*/
    }

    /*x
    @mixin #{$rwdToken}\:divide-x-($v, $isReverse: false) {
      $tw-dummy-divide-x-value: $v !global; // update global value for using reverse

      @include #{$rwdToken} {
        >*~* {
          @include border-right-width($v * $tw-divide-x-reverse);
          @include border-left-width($v * (1 - $tw-divide-x-reverse));
        }
      }
    }

    @mixin #{$rwdToken}\:divide-y-($v, $isReverse: false) {
      $tw-dummy-divide-y-value: $v !global; // update global value for using reverse

      @include #{$rwdToken} {
        >*~* {
          @include border-top-width($v * (1 - $tw-divide-y-reverse));
          @include border-bottom-width($v * $tw-divide-y-reverse);
        }
      }
    }
    x*/
  }
}

@if $isArbitrary {
  /*x
  @mixin divide-x-($v, $isReverse: false) {
    $tw-dummy-divide-x-value: $v !global; // update global value for using reverse

    >*~* {
      @include border-right-width($v * $tw-divide-x-reverse);
      @include border-left-width($v * (1 - $tw-divide-x-reverse));
    }
  }

  @mixin divide-y-($v, $isReverse: false) {
    $tw-dummy-divide-y-value: $v !global; // update global value for using reverse

    >*~* {
      @include border-top-width($v * (1 - $tw-divide-y-reverse));
      @include border-bottom-width($v * $tw-divide-y-reverse);
    }
  }
  x*/
}
