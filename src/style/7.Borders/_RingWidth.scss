// arbitrary utility same as @mixin ring-($v)
$data: (
  'ring-0': '0px + $tw-ring-offset-width',
  'ring-1': '1px + $tw-ring-offset-width',
  'ring-2': '2px + $tw-ring-offset-width',
  'ring': '3px + $tw-ring-offset-width',
  'ring-4': '4px + $tw-ring-offset-width',
  'ring-8': '8px + $tw-ring-offset-width',
);

$data-inset: (
  'ring-inset': null,
);

@if $isBasic {
  @each $key, $value in $data {
    /*x
    @mixin #{$key} {
      $tw-mismatch--ring-offset-width: true !global;
      $tw-dummy-ring-width: #{$value} !global;

      @include box-shadow(_b-s());
    }
    x*/
  }

  @each $key, $value in $data-inset {
    /*x
    @mixin #{$key} {
      $tw-mismatch--ring-offset-width: true !global;

      @include box-shadow(_b-s());
    }
    x*/
  }
}

@if $isResponsive and (not $isAwaken) {
  @each $rwdToken, $rwd in $rwdBox {
    @each $key, $value in $data {
      /*x
      @mixin #{$rwdToken}\:#{$key} {
        $tw-mismatch--ring-offset-width: true !global;
        $tw-dummy-ring-width: #{$value} !global;

        @include box-shadow(_b-s(), #{$rwd});
      }
      x*/
    }

    @each $key, $value in $data-inset {
      /*x
      @mixin #{$rwdToken}\:#{$key} {
        $tw-mismatch--ring-offset-width: true !global;

        @include box-shadow(_b-s(), #{$rwd});
      }
      x*/
    }
  }
}
